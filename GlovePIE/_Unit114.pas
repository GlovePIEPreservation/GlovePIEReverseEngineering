//***************************************
//IDR home page: http://kpnc.org/idr32/en
//Decompiled by IDR v.01.04.2017
//***************************************
unit _Unit114;

interface

uses
  SysUtils, Classes, JvHidControllerClass, PieAccelerometers, PieGuiMonitor, Contnrs, UxTheme, CommCtrl, LightstoneClassUnit, SpacePointClassUnit, WiimoteManagerUnit, ManagedHidUnit, AccelerometerClassUnit, PieWiimoteX, ExtCtrls;

type
  TLightstoneObject = class(TManagedHidObject)
  published
    function HeartRateVariance:Double;//00637134
    function SkinConductanceLevel:Double;//00637424
    procedure ReadLightstone;//0063715C
    procedure ReceiveMessage(m:string);//00637160
    constructor Create(Manager:TComponent; Device:TObject);//00637094
    destructor Destroy();//006370D4
    procedure ReceiveReport(ReportID:Integer; Report:PByteArray; Size:Integer);//0063736C
  public
    msg:string;//f90
    SerString:string;//f94
    VerString:string;//f98
    Number:Integer;//f9C
    AABB:Integer;//fA0
    CCDD:Integer;//fA4
    destructor Destroy(); virtual;//006370D4
    procedure ReceiveReport(ReportID:Integer; Report:PByteArray; Size:Integer); virtual;//v0//0063736C
  end;
  TSpacePointObject = class(TAccelerometerObject)
  published
    destructor Destroy();//00637A68
    constructor Create(Manager:TComponent; Device:TObject);//006379E4
    procedure ReceiveDataReport(ReportID:Integer; Report:PByteArray; Size:Integer);//00637D1C
    procedure SetNumber(Value:Integer);//00637EA4
    function RightButton:Boolean;//00637E98
    function LeftButton:Boolean;//00637C28
    //procedure InByteString(?:?);//00637B78
    procedure DoNullUpdate;//00637AD4
    procedure PerformNullUpdates;//00637C34
    procedure ReadSpacePoint;//00637CC4
    procedure Connect;//006379A4
    procedure ReceiveReport(ReportID:Integer; Report:PByteArray; Size:Integer);//00637D78
    procedure SwitchOff;//00637F1C
    procedure Stop;//00637EAC
  public
    FUseSpacePoint:Boolean;//f440
    FUseRawSpacePoint:Boolean;//f441
    FUseFusion:Boolean;//f442
    FUseForce:Boolean;//f443
    FUseGyros:Boolean;//f444
    InByte:?;//f445
    //f446:?;//f446
    FNumber:Integer;//f45C
    UpdateTime:Double;//f460
    f464:dword;//f464
    Buttons:Byte;//f468
    OldButtons:Byte;//f469
    destructor Destroy(); virtual;//00637A68
    procedure ReceiveReport(ReportID:Integer; Report:PByteArray; Size:Integer); virtual;//v0//00637D78
  end;
  TNumberedObjectList = class(TObjectList)
  published
    constructor Create;//006456D4
    function ValidCount:Integer;//00645778
    function Add(AObject:TObject):Integer;//0064568C
    function Remove(AObject:TObject):Integer;//0064570C
  end;
  :TWiimoteManager.:1 = array of Boolean;
//elSize = 1;
  TWiimoteManager = class(TComponent)
  published
    function AnyLeftThumbButton3(n:Integer):Boolean;//0063EB2C
    function AnyLeftThumbButton2(n:Integer):Boolean;//0063EA30
    function AnyRightThumbButton1(n:Integer):Boolean;//0063F5CC
    function AnyRightThumbButton3(n:Integer):Boolean;//0063F8D0
    function AnyRightThumbButton2(n:Integer):Boolean;//0063F7CC
    function AnyHome(n:Integer):Boolean;//0063E304
    function AnyStart(n:Integer):Boolean;//006409AC
    function AnyL3(n:Integer):Boolean;//0063E424
    function AnyLeftThumbButton1(n:Integer):Boolean;//0063E934
    function AnyR3(n:Integer):Boolean;//0063F0E4
    function AnyRightThumbButton10(n:Integer):Boolean;//0063F6E8
    function AnyRightThumbButton9(n:Integer):Boolean;//0063FE88
    function AnyLeftStickX(n:Integer):Double;//0063E674
    function AnyRightStickX(n:Integer):Double;//0063F31C
    function AnyLeftStickY(n:Integer):Double;//0063E7D4
    function AnyRightThumbButton5(n:Integer):Boolean;//0063FACC
    function AnyRightThumbButton4(n:Integer):Boolean;//0063F9D4
    function AnyRightThumbButton6(n:Integer):Boolean;//0063FBBC
    function AnyRightThumbButton8(n:Integer):Boolean;//0063FD9C
    function AnyRightThumbButton7(n:Integer):Boolean;//0063FCAC
    function AnyButton9(n:Integer):Boolean;//0063CE5C
    function AnyButton8(n:Integer):Boolean;//0063CD5C
    function AnyButton10(n:Integer):Boolean;//0063BF10
    function AnyButton12(n:Integer):Boolean;//0063C110
    function AnyButton11(n:Integer):Boolean;//0063C010
    function AnyButton4(n:Integer):Boolean;//0063C8EC
    function AnyButton3(n:Integer):Boolean;//0063C7D0
    function AnyButton5(n:Integer):Boolean;//0063CA08
    function AnyButton7(n:Integer):Boolean;//0063CC58
    function AnyButton6(n:Integer):Boolean;//0063CB30
    function AnySquare(n:Integer):Boolean;//006408A8
    function AnyTriangle(n:Integer):Boolean;//00640DC0
    function AnyCircle(n:Integer):Boolean;//0063D3C8
    function AnySelect(n:Integer):Boolean;//00640510
    function AnyCross(n:Integer):Boolean;//0063D4E8
    function AnyButton14(n:Integer):Boolean;//0063C300
    function AnyButton13(n:Integer):Boolean;//0063C208
    function AnyButton15(n:Integer):Boolean;//0063C3F0
    function AnyButton17(n:Integer):Boolean;//0063C5D0
    function AnyButton16(n:Integer):Boolean;//0063C4E0
    function AnyAnalogRightTrigger(n:Integer):Double;//0063B82C
    function AnyAnalogLeftTrigger(n:Integer):Double;//0063B6B4
    function AnyDigitalLeftTrigger(n:Integer):Boolean;//0063D5EC
    function AnyPitch(n:Integer):Double;//0063D1E8
    function AnyDigitalRightTrigger(n:Integer):Boolean;//0063D6EC
    function AnyTopLeftTrigger(n:Integer):Boolean;//00640B78
    function AnySecondBestRightTrigger(n:Integer):Boolean;//00640418
    function AnyTopRightTrigger(n:Integer):Boolean;//00640C98
    function AnyBottomRightTrigger(n:Integer):Boolean;//0063BCFC
    function AnyBottomLeftTrigger(n:Integer):Boolean;//0063BBFC
    //procedure AnySetRumble(n:Integer; amount:Double; ?:?);//00640668
    function AnyGetRumble(n:Integer):Double;//0063E19C
    function AnyWaggleGesture(n:Integer):TWaggleGesture;//00641084
    function AnyGestureState(n:Integer):TGestureState;//0063E148
    function AnyPartialGesture(n:Integer):TWaggleGesture;//0063D194
    function AnyYaw(n:Integer):Double;//006414EC
    function AnyRoll(n:Integer):Double;//00640278
    function AnySmoothPitch(n:Integer):Double;//00640768
    function AnySteeringAngle(n:Integer):Double;//00640B04
    function AnySmoothRoll(n:Integer):Double;//00640808
    function AnyDPadDown(n:Integer):Boolean;//0063D98C
    function AnyDPadUp(n:Integer):Boolean;//0063DCEC
    function AnyDPadLeft(n:Integer):Boolean;//0063DAAC
    procedure AnyDPadX(n:Integer);//0063DE0C
    function AnyDPadRight(n:Integer):Boolean;//0063DBCC
    function AnyLeftThumbX(n:Integer):Double;//0063EC28
    function AnyRightStickY(n:Integer):Double;//0063F474
    function AnyLeftThumbY(n:Integer):Double;//0063EDD8
    function AnyRightThumbY(n:Integer):Double;//006400F0
    function AnyRightThumbX(n:Integer):Double;//0063FF6C
    function AnyY(n:Integer):Double;//006412E0
    function AnyX(n:Integer):Double;//006410D8
    function AnyBestLeftTrigger(n:Integer):Boolean;//0063B9B4
    function AnySecondBestLeftTrigger(n:Integer):Boolean;//00640318
    function AnyBestRightTrigger(n:Integer):Boolean;//0063BAD4
    function AnyUp(n:Integer):Boolean;//00640EC4
    procedure AnyDPadY(n:Integer);//0063DFA8
    function AnyDown(n:Integer):Boolean;//0063D7E4
    function AnyRight(n:Integer):Boolean;//0063F174
    function AnyLeft(n:Integer):Boolean;//0063E4B4
    function AnyButton2(n:Integer):Boolean;//0063C6B4
    procedure UseAllNavs;//00644190
    procedure UseAllSpacePoints;//006441B0
    procedure UseAllMoves;//00644180
    procedure HidControllerDeviceChange(Sender:TObject);//00642308
    procedure UseAllKinects;//00644170
    procedure UseSpacePoint(i:Integer);//00644A74
    procedure UseNIA(i:Integer);//006449D4
    procedure UseKinect(i:Integer);//0064475C
    procedure UseAllBalanceBoards;//00644108
    procedure UseAllSixaxes;//006441A0
    procedure RemoveSixaxis(Sixaxis:TSixaxisObject);//00642830
    procedure RemoveWiimote(Wiimote:TWiimoteObject);//00642850
    procedure RemoveSpacePoint(SpacePoint:TSpacePointObject);//00642840
    destructor Destroy();//0064194C
    constructor Create(AOwner:TComponent);//00641774
    procedure Timer1Timer(Sender:TObject);//006440E4
    procedure HidControllerDeviceUnplug(HidDev:TJvHidDevice);//0064230C
    procedure ConnectExtraWiimotes;//006415D8
    procedure ConnectExtraSpacePoints;//006415B4
    procedure ConnectExtraLightstones;//00641590
    procedure UseAllDrums(Force:Boolean; IR:Boolean; Use3F:Boolean; Speaker:Boolean);//00644128
    procedure UseDrums(i:Integer; Force:Boolean; Use3F:Boolean; Speaker:Boolean; IR:Boolean);//0064432C
    procedure UseTurntable(i:Integer; Force:Boolean; UseMotionPlus:Boolean; Use3F:Boolean; Speaker:Boolean; IR:Boolean);//00644A7C
    procedure UseBalanceBoard(i:Integer);//0064424C
    procedure UseAllTurntables(Force:Boolean; IR:Boolean; Use3F:Boolean; Speaker:Boolean);//006441B8
    procedure UseWiimote(i:Integer; Force:Boolean; UseMotionPlus:Boolean; Use3F:Boolean; Speaker:Boolean; Expansion:Boolean; IR:Boolean);//00644C90
    procedure StartCompileTime;//00642930
    procedure UseAllWiimotes(Force:Boolean; IR:Boolean; UseMotionPlus:Boolean; Use3F:Boolean; Speaker:Boolean; Expansion:Boolean);//006441DC
    procedure UseAllGuitars(Force:Boolean; IR:Boolean; Use3F:Boolean; Speaker:Boolean);//0064414C
    procedure UseGuitar(i:Integer; Force:Boolean; UseMotionPlus:Boolean; Use3F:Boolean; Speaker:Boolean; IR:Boolean);//00644548
    procedure UseNavGyro(i:Integer);//006449CC
    procedure UseNav(i:Integer);//0064493C
    procedure UseMove(i:Integer);//00644810
    procedure UseLightstone(i:Integer);//006447EC
    procedure UseDualShock3(i:Integer);//00644540
    procedure UseMotionPlus(i:Integer);//006447F4
    procedure UseClassic(i:Integer);//0064430C
    procedure UseBladeFXOverflow(i:Integer);//00644304
    procedure UseSixaxisGyro(i:Integer);//00644A6C
    procedure UseSixaxis(i:Integer);//006449DC
    procedure StopGUI;//0064378C
    procedure StartSpacePoints;//00643584
    procedure StopRuntime;//00643794
    procedure UseWiimoteDotBalanceBoard;//00644F08
    procedure TestAllConnections;//0064381C
    procedure StartRuntime;//00642E68
    procedure StartGUI;//00642D60
    procedure StartSixaxes;//00642F1C
    procedure StartLightstones;//00642E14
    procedure StartWiimotes;//006435D8
    function AnyCancelButton(n:Integer):Boolean;//0063D288
    function AnyOKButton(n:Integer):Boolean;//0063EF88
    function AnyOtherButton1(n:Integer):Boolean;//0063CF5C
    function AnyButton1(n:Integer):Boolean;//0063BDF4
    function AnyOtherButton2(n:Integer):Boolean;//0063D078
    procedure UseWiimoteDotDrums;//006450B8
    procedure UseWiimoteDotClassic;//006450B4
    procedure UseWiimoteDotGuitar;//006453AC
    function AnyCount:Integer;//0063D4CC
    procedure UseWiimoteDotTurntable;//00645688
    function GetTurntable(n:Integer):TWiimoteObject;//00641D48
    function GetSixaxis(n:Integer):TSixaxisObject;//00641C68
    function GetWiimote(n:Integer):TWiimoteObject;//00641DD4
    function GetSpacePoint(n:Integer):TSpacePointObject;//00641CD8
    function GetLightstone(n:Integer):TLightstoneObject;//00641BF8
    function GetAny(n:Integer):TAccelerometerObject;//006419D4
    procedure ConnectBluetoothWiimotes;//0064158C
    function GetBalanceBoard(n:Integer):TWiimoteObject;//00641A54
    function GetGuitar(n:Integer):TWiimoteObject;//00641B6C
    function GetDrums(n:Integer):TWiimoteObject;//00641AE0
    procedure ReadWiimotes;//00642800
    procedure ReadSixaxes;//006427A0
    procedure ReadLightstones;//00642770
    procedure SetAllModes;//0064292C
    procedure ReadSpacePoints;//006427D0
    function HidControllerEnumerate(HidDev:TJvHidDevice; Idx:Integer):Boolean;//00642310
    procedure HidControllerArrival(HidDev:TJvHidDevice);//00641E44
    procedure HidControllerRemoval(HidDev:TJvHidDevice);//0064254C
    procedure PerformNullUpdates;//006426AC
    function Peek(n:Integer; addr:Cardinal):Integer;//00642550
  public
    HidController:TJvHidDeviceController;//f34
    FakeArrivals:TStringList;//f38
    FDiscoveredWiimotes:TObjectList;//f3C
    FDiscoveredSixaxes:TObjectList;//f40
    FDiscoveredSpacePoints:TObjectList;//f44
    FDiscoveredLightstones:TObjectList;//f48
    FConnectedWiimotes:TNumberedObjectList;//f4C
    FConnectedBoards:TNumberedObjectList;//f50
    FConnectedGuitars:TNumberedObjectList;//f54
    FConnectedDrums:TNumberedObjectList;//f58
    FConnectedTurntables:TNumberedObjectList;//f5C
    FConnectedSixaxes:TNumberedObjectList;//f60
    FConnectedSpacePoints:TNumberedObjectList;//f64
    FConnectedLightstones:TNumberedObjectList;//f68
    FMaxWiimoteUsed:Integer;//f6C
    FMaxGuitarUsed:Integer;//f70
    FMaxDrumsUsed:Integer;//f74
    FMaxTurntableUsed:Integer;//f78
    FMaxBalanceBoardUsed:Integer;//f7C
    FMaxSixaxisUsed:Integer;//f80
    FMaxNavUsed:Integer;//f84
    FMaxMoveUsed:Integer;//f88
    FMaxSpacePointUsed:Integer;//f8C
    FMaxKinectUsed:Integer;//f90
    FWiimotesUsed::1;//f94
    FGuitarsUsed::1;//f98
    FDrumsUsed::1;//f9C
    FTurntablesUsed::1;//fA0
    FBalanceBoardsUsed::1;//fA4
    FForcesUsed::1;//fA8
    FIRsUsed::1;//fAC
    FExpansionsUsed::1;//fB0
    FMotionPlusesUsed::1;//fB4
    FSpeakersUsed::1;//fB8
    F3FsUsed::1;//fBC
    FGuitarForcesUsed::1;//fC0
    FGuitarIRsUsed::1;//fC4
    FGuitarSpeakersUsed::1;//fC8
    FGuitar3FsUsed::1;//fCC
    FDrumsForcesUsed::1;//fD0
    FDrumsIRsUsed::1;//fD4
    FDrumsSpeakersUsed::1;//fD8
    FDrums3FsUsed::1;//fDC
    FTurntableForcesUsed::1;//fE0
    FTurntableIRsUsed::1;//fE4
    FTurntableSpeakersUsed::1;//fE8
    FTurntable3FsUsed::1;//fEC
    FSixaxesUsed::1;//fF0
    FNavsUsed::1;//fF4
    FMovesUsed::1;//fF8
    FKinectsUsed::1;//fFC
    FGUIMode:Boolean;//f100
    FRunning:Boolean;//f101
    FUseAllWiimotes:Boolean;//f102
    FUseAllGuitars:Boolean;//f103
    FUseAllDrums:Boolean;//f104
    FUseAllTurntables:Boolean;//f105
    FUseAllBalanceBoards:Boolean;//f106
    FUseAllSixaxes:Boolean;//f107
    FUseAllNavs:Boolean;//f108
    FUseAllMoves:Boolean;//f109
    FUseAllKinects:Boolean;//f10A
    FConnectedWiimoteCount:Integer;//f10C
    FConnectedSixaxesCount:Integer;//f110
    NumberFinished:Integer;//f114
    FUseWiimote:Boolean;//f118
    FUseGuitar:Boolean;//f119
    FUseClassic:Boolean;//f11A
    FUseBalanceBoard:Boolean;//f11B
    FUseDrums:Boolean;//f11C
    FUseTurntable:Boolean;//f11D
    FUseForce:Boolean;//f11E
    FUseIR:Boolean;//f11F
    FUseExpansion:Boolean;//f120
    FUseSpeaker:Boolean;//f121
    FUse3F:Boolean;//f122
    FUseWiimoteDotGuitar:Boolean;//f123
    FUseWiimoteDotDrums:Boolean;//f124
    FUseWiimoteDotTurntable:Boolean;//f125
    FUseWiimoteDotBalanceBoard:Boolean;//f126
    FUseMotionPlus:Boolean;//f127
    FUseBladeFXOverflow:Boolean;//f128
    FUseSixaxis:Boolean;//f129
    FUseNav:Boolean;//f12A
    FUseMove:Boolean;//f12B
    FUseSixaxisGyro:Boolean;//f12C
    FUseNavGyro:Boolean;//f12D
    FUseDualShock3:Boolean;//f12E
    FUseLightstone:Boolean;//f12F
    FUseNIA:Boolean;//f130
    FUseSpacePoint:Boolean;//f131
    FUseKinect:Boolean;//f132
    CanAddNewWiimotes:Boolean;//f133
    AutoNumberWiimotes:Boolean;//f134
    Timer1:TTimer;//f138
    AnyAxisMin:Double;//f140
    f144:dword;//f144
    destructor Destroy(); virtual;//0064194C
    constructor Create(AOwner:TComponent); virtual;//v2C//00641774
  end;
  TManagedHidObject = class(TObject)
  published
    procedure CheckIn;//00646408
    procedure CancelMessages;//006463C8
    //function ReadUsbReport(request:Integer; var report:?; length:Integer):Boolean;//00646A2C
    function SwitchToHidWrite:Boolean;//00646D4C
    constructor sub_00646544(Manager:TObject; dev:PUsb_device);//00646544
    constructor sub_00646620(Manager:TObject; dev:PUsb_device);//00646620
    constructor sub_00646450(Manager:TObject; Device:TObject);//00646450
    constructor sub_00646698(Manager:TObject; Device:TObject);//00646698
    procedure SetUsbValue(request:Integer; value:Integer);//00646D20
    procedure ReceiveReport(ReportID:Integer; Report:PByteArray; Size:Integer);//00646A7C
    //procedure SendReport(var report:?; length:Integer);//00646AF0
    procedure DevData(HidDev:TJvHidDevice; ReportID:Byte; Size:Word; Data:Pointer);//00646790
    procedure DevUnplug(HidDev:TJvHidDevice);//006467BC
    //function ReadReport(var report:?; length:Integer):Boolean;//00646938
    //procedure SendReportBothWays(var report:?);//00646C3C
    //procedure SendFeatureReport(var report:?; length:Integer);//00646A84
    //function GetFeatureReport(ReportNumber:Byte; var report:?; length:Integer):Boolean;//006467F0
  public
    FManager:TComponent;//f4
    ReportTime:Double;//f8
    fC:dword;//fC
    BluetoothAddress:string;//f10
    Serial:string;//f14
    Connected:Boolean;//f18
    Unplugged:Boolean;//f19
    OutReportLength:Integer;//f1C
    Dev:TJvHidDevice;//f20
    hEvent:Cardinal;//f24
    hInEvent:Cardinal;//f28
    Overlapped:_OVERLAPPED;//f2C
    OverlappedIn:_OVERLAPPED;//f40
    FileWriteFailed:Boolean;//f54
    HidWriteFailed:Boolean;//f55
    UseHidWrite:Boolean;//f56
    WriteSuccess:Boolean;//f57
    HungWrite:Boolean;//f58
    Written:Cardinal;//f5C
    BeenRead:Cardinal;//f60
    LibUsbDev:PUsb_device;//f64
    devh:PUsb_dev_handle;//f68
    cfg:PUsb_config_descriptor;//f6C
    itfnum:Integer;//f70
    SetConfig:Boolean;//f74
    ClaimedInterface:Boolean;//f75
    FeatureF2:?;//f76
    UseLibUsb:Boolean;//f87
    UseMotionInJoy:Boolean;//f88
    procedure ReceiveReport(ReportID:Integer; Report:PByteArray; Size:Integer); virtual;//v0//00646A7C
  end;
  TAverager = class(TObject)
  published
    function GetAvg(NumberOfFrames:Integer):Double;//0064F408
    procedure GetFrame(frame:Integer);//0064F478
    constructor Create;//0064F380
    //procedure Update(Value:Double; ?:?);//0064F4C4
    function GetAverage:Double;//0064F3AC
    procedure GetShortAverage;//0064F4AC
  public
    Frames:Integer;//f4
    ValidFrames:Integer;//f8
    OldValues:?;//f10
    index:Integer;//f1F8
  end;
  TTrackingState = (tsNormal, tsNear1G, tsGyrosOnly);
  TGestureState = (gsNone, gsStartingDownwardStroke, gsStoppingDownwardStroke, gsStoppingBackUp, gsStoppingSecondDown, gsStoppingSecondDownBackUp, gsStoppingThirdDown, gsStopCurvingBackUpRight, gsStoppingCurveDownRightUpSecondDown, gsStopCurvingBackUpLeft, gsStoppingCurveDownLeftUpSecondDown, gsStartingUpwardStroke, gsStoppingUpwardStroke, gsStoppingBackDown, gsStoppingSecondUp, gsStoppingSecondUpBackDown, gsStoppingThirdUp, gsStopCurvingBackDownRight, gsStoppingCurveUpRightDownSecondUp, gsStopCurvingBackDownLeft, gsStoppingCurveUpLeftDownSecondUp, gsStartingLeftStroke, gsStoppingLeftStroke, gsStoppingBackRight, gsStoppingSecondLeft, gsStoppingSecondLeftBackRight, gsStoppingThirdLeft, gsStopCurvingBackRightUp, gsStoppingCurveLeftUpRightSecondLeft, gsStopCurvingBackRightDown, gsStoppingCurveLeftDownRightSecondLeft, gsStartingRightStroke, gsStoppingRightStroke, gsStoppingBackLeft, gsStoppingSecondRight, gsStoppingSecondRightBackLeft, gsStoppingThirdRight, gsStopCurvingBackLeftUp, gsStoppingCurveRightUpLeftSecondRight, gsStopCurvingBackLeftDown, gsStoppingCurveRightDownLeftSecondRight);
  TWaggleGesture = (wgNone, wgSingleDown, wgDownUp, wgDownUpDown, wgDownUpDownUp, wgDownUpDownUpDown, wgCurveDownRight, wgCurveDownRightUp, wgCurveDownRightUpDown, wgCurveDownRightUpDownUp, wgCurveDownRightUpDownRight, wgCurveDownRightUpDownRightUp, wgCurveDownLeft, wgCurveDownLeftUp, wgCurveDownLeftUpDown, wgCurveDownLeftUpDownUp, wgCurveDownLeftUpDownLeft, wgCurveDownLeftUpDownLeftUp, wgSingleUp, wgUpDown, wgUpDownUp, wgUpDownUpDown, wgUpDownUpDownUp, wgCurveUpRight, wgCurveUpRightDown, wgCurveUpRightDownUp, wgCurveUpRightDownUpDown, wgCurveUpRightDownUpRight, wgCurveUpRightDownUpRightDown, wgCurveUpLeft, wgCurveUpLeftDown, wgCurveUpLeftDownUp, wgCurveUpLeftDownUpDown, wgCurveUpLeftDownUpLeft, wgCurveUpLeftDownUpLeftDown, wgSingleLeft, wgLeftRight, wgLeftRightLeft, wgLeftRightLeftRight, wgLeftRightLeftRightLeft, wgCurveLeftUp, wgCurveLeftUpRight, wgCurveLeftUpRightLeft, wgCurveLeftUpRightLeftRight, wgCurveLeftUpRightLeftUp, wgCurveLeftUpRightLeftUpRight, wgCurveLeftDown, wgCurveLeftDownRight, wgCurveLeftDownRightLeft, wgCurveLeftDownRightLeftRight, wgCurveLeftDownRightLeftDown, wgCurveLeftDownRightLeftDownRight, wgSingleRight, wgRightLeft, wgRightLeftRight, wgRightLeftRightLeft, wgRightLeftRightLeftRight, wgCurveRightUp, wgCurveRightUpLeft, wgCurveRightUpLeftRight, wgCurveRightUpLeftRightLeft, wgCurveRightUpLeftRightUp, wgCurveRightUpLeftRightUpLeft, wgCurveRightDown, wgCurveRightDownLeft, wgCurveRightDownLeftRight, wgCurveRightDownLeftRightLeft, wgCurveRightDownLeftRightDown, wgCurveRightDownLeftRightDownLeft, wgCircleAnticlockwise, wgCircleClockwise);
  TAccelerometerObject = class(TManagedHidObject)
  published
    function OnTable:Boolean;//006494C8
    function DrumBeat:Boolean;//006494A4
    function SwingHorizontally:Boolean;//006498E4
    function RelAccZ:Double;//0064963C
    procedure RelAcc;//00649568
    function RelAccX:Double;//006495DC
    function RelAccY:Double;//0064960C
    function DrumRoll:Boolean;//006494C4
    //procedure SetYaw(YawDegrees:Double; ?:?);//006496E0
    constructor sub_00649158(Manager:TObject; dev:Pointer);//00649158
    function CrossArms:Boolean;//00649420
    procedure SwingVertically;//00649A14
    function Stabbing:Boolean;//006497B4
    function Shake:Boolean;//0064974C
    function RawAccZ:Double;//00649540
    //procedure UpdateMagnets(TimeStamp:Double; RawMagnetZ:Double; ?:?; RawMagnetY:Double; ?:?; RawMagnetX:Double; ?:?);//0064EDB0
    procedure ResetGyroCalibration;//0064966C
    procedure ShowCalibrating(value:Boolean);//006497B0
    //procedure UpdateGyros(TimeStamp:Double; ?:?; RawGyroRoll:Double; ?:?; RawGyroPitch:Double; ?:?; RawGyroYaw:Double; ?:?);//0064E7DC
    procedure UpdateGestureStates(Timestamp:Double);//0064B29C
    //procedure UpdateForces(TimeStamp:Double; ?:?; RawForceZ:Double; ?:?; RawForceY:Double; ?:?; RawForceX:Double; ?:?);//00649B44
    procedure UpdateSteering;//0064F1C8
    function Shakiness:Double;//00649798
    function RawAccX:Double;//006494F0
    function RawAccY:Double;//00649518
    destructor Destroy();//00649424
    constructor sub_00648E90(Manager:TObject; Device:TObject);//00648E90
    constructor sub_00648FF4(Manager:TObject; dev:Pointer);//00648FF4
    constructor sub_006492BC(Manager:TObject; Device:TObject);//006492BC
  public
    TrackingState:TTrackingState;//f90
    HasMagnet:Boolean;//f91
    RawMagnetX:Double;//f98
    f9C:dword;//f9C
    RawMagnetY:Double;//fA0
    fA4:dword;//fA4
    RawMagnetZ:Double;//fA8
    fAC:dword;//fAC
    MinMagX:Double;//fB0
    fB4:dword;//fB4
    MaxMagX:Double;//fB8
    fBC:dword;//fBC
    MinMagY:Double;//fC0
    fC4:dword;//fC4
    MaxMagY:Double;//fC8
    fCC:dword;//fCC
    MinMagZ:Double;//fD0
    fD4:dword;//fD4
    MaxMagZ:Double;//fD8
    fDC:dword;//fDC
    gMX:Double;//fE0
    gMY:Double;//fE8
    gMZ:Double;//fF0
    lngM:Double;//fF8
    MNorthX:Double;//f100
    f104:dword;//f104
    MNorthY:Double;//f108
    f10C:dword;//f10C
    MNorthZ:Double;//f110
    f114:dword;//f114
    EastX:Double;//f118
    f11C:dword;//f11C
    EastY:Double;//f120
    f124:dword;//f124
    EastZ:Double;//f128
    f12C:dword;//f12C
    NorthX:Double;//f130
    f134:dword;//f134
    NorthY:Double;//f138
    f13C:dword;//f13C
    NorthZ:Double;//f140
    f144:dword;//f144
    HasGyros:Boolean;//f148
    HasYawGyro:Boolean;//f149
    HasStandardGyros:Boolean;//f14A
    GyrosCalibrated:Boolean;//f14B
    GyroSetCount:Integer;//f14C
    RawGyroYaw:Double;//f150
    f154:dword;//f154
    RawGyroPitch:Double;//f158
    f15C:dword;//f15C
    RawGyroRoll:Double;//f160
    f164:dword;//f164
    YawSpeed:Double;//f168
    f16C:dword;//f16C
    PitchSpeed:Double;//f170
    f174:dword;//f174
    RollSpeed:Double;//f178
    f17C:dword;//f17C
    ZeroYawSpeed:Double;//f180
    f184:dword;//f184
    ZeroPitchSpeed:Double;//f188
    f18C:dword;//f18C
    ZeroRollSpeed:Double;//f190
    f194:dword;//f194
    ZeroYawSpeedTotal:Double;//f198
    f19C:dword;//f19C
    ZeroPitchSpeedTotal:Double;//f1A0
    f1A4:dword;//f1A4
    ZeroRollSpeedTotal:Double;//f1A8
    f1AC:dword;//f1AC
    TotalGyroYaw:Double;//f1B0
    f1B4:dword;//f1B4
    TotalGyroPitch:Double;//f1B8
    f1BC:dword;//f1BC
    TotalGyroRoll:Double;//f1C0
    f1C4:dword;//f1C4
    LastGyroTime:Double;//f1C8
    f1CC:dword;//f1CC
    GyroRotMat:TRotMat;//f1D0
    FastYaw:Boolean;//f218
    FastPitch:Boolean;//f219
    FastRoll:Boolean;//f21A
    GyroPitch:Double;//f220
    f224:dword;//f224
    GyroRoll:Double;//f228
    f22C:dword;//f22C
    DegPerGyro:Double;//f230
    f234:dword;//f234
    DegPerGyroPitch:Double;//f238
    DegPerGyroRoll:Double;//f240
    RawForceX:Double;//f248
    f24C:dword;//f24C
    RawForceY:Double;//f250
    f254:dword;//f254
    RawForceZ:Double;//f258
    f25C:dword;//f25C
    cxx:Double;//f260
    f264:dword;//f264
    cxy:Double;//f268
    f26C:dword;//f26C
    cxz:Double;//f270
    f274:dword;//f274
    cyx:Double;//f278
    f27C:dword;//f27C
    cyy:Double;//f280
    f284:dword;//f284
    cyz:Double;//f288
    f28C:dword;//f28C
    czx:Double;//f290
    f294:dword;//f294
    czy:Double;//f298
    f29C:dword;//f29C
    czz:Double;//f2A0
    f2A4:dword;//f2A4
    cx1:Double;//f2A8
    f2AC:dword;//f2AC
    cx2:Double;//f2B0
    cy1:Double;//f2B8
    f2BC:dword;//f2BC
    cy2:Double;//f2C0
    cz1:Double;//f2C8
    f2CC:dword;//f2CC
    cz2:Double;//f2D0
    tolerance:Double;//f2D8
    f2DC:dword;//f2DC
    TooMuchShake:Double;//f2E0
    f2E4:dword;//f2E4
    rx:Double;//f2E8
    f2EC:dword;//f2EC
    ry:Double;//f2F0
    f2F4:dword;//f2F4
    rz:Double;//f2F8
    f2FC:dword;//f2FC
    RawZeroForceX:Double;//f300
    f304:dword;//f304
    RawZeroForceY:Double;//f308
    f30C:dword;//f30C
    RawZeroForceZ:Double;//f310
    f314:dword;//f314
    RawForcePerGX:Double;//f318
    RawForcePerGY:Double;//f320
    RawForcePerGZ:Double;//f328
    lng:Double;//f330
    gx:Double;//f338
    f33C:dword;//f33C
    gy:Double;//f340
    f344:dword;//f344
    gz:Double;//f348
    f34C:dword;//f34C
    UpX:Double;//f350
    f354:TRotMat;//f354
    UpY:Double;//f358
    f35C:TRotMat;//f35C
    UpZ:Double;//f360
    f364:TRotMat;//f364
    UpLng:Double;//f368
    f36C:dword;//f36C
    RotMat:TRotMat;//f370
    Roll:Double;//f3B8
    f3BC:dword;//f3BC
    Pitch:Double;//f3C0
    f3C4:dword;//f3C4
    Yaw:Double;//f3C8
    f3CC:dword;//f3CC
    SmoothRoll:Double;//f3D0
    f3D4:dword;//f3D4
    SmoothPitch:Double;//f3D8
    f3DC:dword;//f3DC
    SteeringAngle:Double;//f3E0
    f3E4:dword;//f3E4
    LastForceTime:Double;//f3E8
    f3EC:dword;//f3EC
    LowRelAccTime:Double;//f3F0
    f3F4:dword;//f3F4
    ShakeAverager:TAverager;//f3F8
    RawAccXAverager:TAverager;//f3FC
    RawAccYAverager:TAverager;//f400
    RawAccZAverager:TAverager;//f404
    RelAccAverager:TAverager;//f408
    RelAccXAverager:TAverager;//f40C
    RelAccYAverager:TAverager;//f410
    RelAccZAverager:TAverager;//f414
    fresh:Boolean;//f418
    UpThenUpsideDown:Boolean;//f419
    DownThenUpsideDown:Boolean;//f41A
    LeftThenUpsideDown:Boolean;//f41B
    RightThenUpsideDown:Boolean;//f41C
    NothingThenUpsideDown:Boolean;//f41D
    GestureState:TGestureState;//f41E
    Swish:Boolean;//f41F
    SwishLeft:Boolean;//f420
    SwishDown:Boolean;//f421
    UnSwish:Boolean;//f422
    UnSwishLeft:Boolean;//f423
    UnSwishDown:Boolean;//f424
    AntiSwish:Boolean;//f425
    AntiSwishLeft:Boolean;//f426
    AntiSwishDown:Boolean;//f427
    AntiUnswish:Boolean;//f428
    AntiUnswishLeft:Boolean;//f429
    AntiUnswishDown:Boolean;//f42A
    SwishReported:Boolean;//f42B
    NextWaggleGesture:TWaggleGesture;//f42C
    WaggleGesture:TWaggleGesture;//f42D
    NextPartialGesture:TWaggleGesture;//f42E
    PartialGesture:TWaggleGesture;//f42F
    LookingAtWatch:Boolean;//f430
    LookingAtWatchRH:Boolean;//f431
    LookingAtLeftPalm:Boolean;//f432
    LookingAtRightPalm:Boolean;//f433
    UpsideDownOnShoulder:Boolean;//f434
    q1:Boolean;//f435
    q2:Boolean;//f436
    q3:Boolean;//f437
    q4:Boolean;//f438
    destructor Destroy(); virtual;//00649424
    procedure UpdateSteering; virtual;//v4//0064F1C8
    procedure ShowCalibrating(value:Boolean); virtual;//v8//006497B0
    procedure SwingVertically; virtual;//vC//00649A14
    function CrossArms:Boolean; virtual;//v10//00649420
    function DrumRoll:Boolean; virtual;//v14//006494C4
  end;
  TWiimoteValueX = class(TObjectValue)
  published
    function GetPerUnits1:TUnits;//00655F70
    function GetUnits:TUnits;//00656234
    //procedure GetString(?:?);//00656144
    function GetPerUnits2:TUnits;//00655FBC
    function GetWiimote:TWiimoteObject;//0065B8FC
    procedure GetRotMat(m:TRotMat);//00655FEC
    procedure GetVector(x:Double; y:Double; z:Double);//0065B280
    //function SetValue(NewValue:Double; ?:?):Boolean;//0065B960
    function CanSet:Boolean;//0065591C
    function GetDataType:TDataType;//006559AC
    //procedure ToString(?:?);//0065C0E8
    procedure FillClone(c:TExpression);//0065598C
    procedure CreateClone;//0065597C
    procedure GetValue;//006562D4
  public
    Item:Integer;//f20
    ThingKind:Integer;//f24
    //procedure ToString(?:?); virtual;//0065C0E8
    procedure GetValue; virtual;//v2C//006562D4
    //procedure GetString(?:?); virtual;//v38//00656144
    procedure GetVector(x:Double; y:Double; z:Double); virtual;//v3C//0065B280
    procedure GetRotMat(m:TRotMat); virtual;//v40//00655FEC
    function GetDataType:TDataType; virtual;//v44//006559AC
    function GetUnits:TUnits; virtual;//v48//00656234
    function GetPerUnits1:TUnits; virtual;//v4C//00655F70
    function GetPerUnits2:TUnits; virtual;//v50//00655FBC
    //function SetValue(NewValue:Double; ?:?):Boolean; virtual;//v58//0065B960
    function CanSet:Boolean; virtual;//v68//0065591C
    procedure CreateClone; virtual;//v80//0065597C
    procedure FillClone(c:TExpression); virtual;//v84//0065598C
  end;
  TModuleWiimote = class(TPieModule)
  published
    procedure PrepareForGUI;//0066B100
    procedure PrepareForMonitoring;//0066B104
    procedure GetGoodFields;//00668C7C
    procedure GetRange(blank:Boolean; min:Integer; max:Integer);//00668C84
    procedure StartGUI;//0066B150
    procedure StopMonitoring;//0066B1B0
    procedure MonitorFrame;//00668CA0
    procedure StopGUI;//0066B1A4
    procedure StartMonitoring;//0066B15C
    procedure StartCompiletime;//0066B130
    procedure StopCompiletime;//0066B194
    procedure StartRuntime;//0066B178
    procedure StopRuntime;//0066B1B8
    constructor Create;//00668B78
    procedure ClearRead;//00668B70
    function Read:Boolean;//0066B108
    procedure AddFields;//0065C800
    function CreateValue(Identifier:string):TExpression;//00668C24
  public
    function CreateValue(Identifier:string):TExpression; virtual;//v14//00668C24
    procedure GetGoodFields; virtual;//v1C//00668C7C
    procedure AddFields; virtual;//v24//0065C800
    procedure StartCompiletime; virtual;//v28//0066B130
    procedure StopCompiletime; virtual;//v2C//0066B194
    procedure StartRuntime; virtual;//v30//0066B178
    procedure StopRuntime; virtual;//v34//0066B1B8
    procedure ClearRead; virtual;//v38//00668B70
    function Read:Boolean; virtual;//v3C//0066B108
    procedure GetRange(blank:Boolean; min:Integer; max:Integer); virtual;//v40//00668C84
    procedure PrepareForGUI; virtual;//v50//0066B100
    procedure StartGUI; virtual;//v54//0066B150
    procedure StopGUI; virtual;//v58//0066B1A4
    procedure PrepareForMonitoring; virtual;//v5C//0066B104
    procedure StartMonitoring; virtual;//v60//0066B15C
    procedure StopMonitoring; virtual;//v64//0066B1B0
    procedure MonitorFrame; virtual;//v68//00668CA0
  end;
  TModuleNunchuk = class(TPieModule)
  published
    procedure PrepareForGUI;//0066D690
    procedure PrepareForMonitoring;//0066D694
    function Read:Boolean;//0066D698
    procedure GetRange(blank:Boolean; min:Integer; max:Integer);//0066B2D0
    procedure StartGUI;//0066D6E0
    procedure StopMonitoring;//0066D734
    procedure MonitorFrame;//0066B2EC
    procedure StopGUI;//0066D728
    procedure StartMonitoring;//0066D6EC
    procedure StartCompiletime;//0066D6C0
    procedure StopCompiletime;//0066D718
    procedure StartRuntime;//0066D708
    procedure StopRuntime;//0066D73C
    constructor Create;//0066B1E4
    procedure GetGoodFields;//0066B2C8
    procedure ClearRead;//0066B1D4
    function CreateValue(Identifier:string):TExpression;//0066B268
    procedure GetFields;//0066B2C0
  public
    function CreateValue(Identifier:string):TExpression; virtual;//v14//0066B268
    procedure GetFields; virtual;//v18//0066B2C0
    procedure GetGoodFields; virtual;//v1C//0066B2C8
    procedure StartCompiletime; virtual;//v28//0066D6C0
    procedure StopCompiletime; virtual;//v2C//0066D718
    procedure StartRuntime; virtual;//v30//0066D708
    procedure StopRuntime; virtual;//v34//0066D73C
    procedure ClearRead; virtual;//v38//0066B1D4
    function Read:Boolean; virtual;//v3C//0066D698
    procedure GetRange(blank:Boolean; min:Integer; max:Integer); virtual;//v40//0066B2D0
    procedure PrepareForGUI; virtual;//v50//0066D690
    procedure StartGUI; virtual;//v54//0066D6E0
    procedure StopGUI; virtual;//v58//0066D728
    procedure PrepareForMonitoring; virtual;//v5C//0066D694
    procedure StartMonitoring; virtual;//v60//0066D6EC
    procedure StopMonitoring; virtual;//v64//0066D734
    procedure MonitorFrame; virtual;//v68//0066B2EC
  end;
  TModuleClassic = class(TPieModule)
  published
    procedure PrepareForGUI;//0066DD64
    procedure PrepareForMonitoring;//0066DD68
    function Read:Boolean;//0066DD6C
    procedure GetRange(blank:Boolean; min:Integer; max:Integer);//0066D860
    procedure StartGUI;//0066DDB4
    procedure StopMonitoring;//0066DE08
    procedure MonitorFrame;//0066D87C
    procedure StopGUI;//0066DDFC
    procedure StartMonitoring;//0066DDC0
    procedure StartCompiletime;//0066DD94
    procedure StopCompiletime;//0066DDEC
    procedure StartRuntime;//0066DDDC
    procedure StopRuntime;//0066DE10
    constructor Create;//0066D764
    procedure GetGoodFields;//0066D858
    procedure ClearRead;//0066D754
    function CreateValue(Identifier:string):TExpression;//0066D7F8
    procedure GetFields;//0066D850
  public
    function CreateValue(Identifier:string):TExpression; virtual;//v14//0066D7F8
    procedure GetFields; virtual;//v18//0066D850
    procedure GetGoodFields; virtual;//v1C//0066D858
    procedure StartCompiletime; virtual;//v28//0066DD94
    procedure StopCompiletime; virtual;//v2C//0066DDEC
    procedure StartRuntime; virtual;//v30//0066DDDC
    procedure StopRuntime; virtual;//v34//0066DE10
    procedure ClearRead; virtual;//v38//0066D754
    function Read:Boolean; virtual;//v3C//0066DD6C
    procedure GetRange(blank:Boolean; min:Integer; max:Integer); virtual;//v40//0066D860
    procedure PrepareForGUI; virtual;//v50//0066DD64
    procedure StartGUI; virtual;//v54//0066DDB4
    procedure StopGUI; virtual;//v58//0066DDFC
    procedure PrepareForMonitoring; virtual;//v5C//0066DD68
    procedure StartMonitoring; virtual;//v60//0066DDC0
    procedure StopMonitoring; virtual;//v64//0066DE08
    procedure MonitorFrame; virtual;//v68//0066D87C
  end;
  TModuleGuitar = class(TPieModule)
  published
    procedure PrepareForGUI;//0066E6B4
    procedure PrepareForMonitoring;//0066E6B8
    function Read:Boolean;//0066E6BC
    procedure GetRange(blank:Boolean; min:Integer; max:Integer);//0066DF04
    procedure StartGUI;//0066E704
    procedure StopMonitoring;//0066E758
    procedure MonitorFrame;//0066DF20
    procedure StopGUI;//0066E74C
    procedure StartMonitoring;//0066E710
    procedure StartCompiletime;//0066E6E4
    procedure StopCompiletime;//0066E73C
    procedure StartRuntime;//0066E72C
    procedure StopRuntime;//0066E760
    constructor Create;//0066DE38
    procedure GetGoodFields;//0066DEFC
    procedure ClearRead;//0066DE28
    function CreateValue(Identifier:string):TExpression;//0066DE9C
    procedure GetFields;//0066DEF4
  public
    function CreateValue(Identifier:string):TExpression; virtual;//v14//0066DE9C
    procedure GetFields; virtual;//v18//0066DEF4
    procedure GetGoodFields; virtual;//v1C//0066DEFC
    procedure StartCompiletime; virtual;//v28//0066E6E4
    procedure StopCompiletime; virtual;//v2C//0066E73C
    procedure StartRuntime; virtual;//v30//0066E72C
    procedure StopRuntime; virtual;//v34//0066E760
    procedure ClearRead; virtual;//v38//0066DE28
    function Read:Boolean; virtual;//v3C//0066E6BC
    procedure GetRange(blank:Boolean; min:Integer; max:Integer); virtual;//v40//0066DF04
    procedure PrepareForGUI; virtual;//v50//0066E6B4
    procedure StartGUI; virtual;//v54//0066E704
    procedure StopGUI; virtual;//v58//0066E74C
    procedure PrepareForMonitoring; virtual;//v5C//0066E6B8
    procedure StartMonitoring; virtual;//v60//0066E710
    procedure StopMonitoring; virtual;//v64//0066E758
    procedure MonitorFrame; virtual;//v68//0066DF20
  end;
  TModuleDrums = class(TPieModule)
  published
    procedure PrepareForGUI;//0066EE58
    procedure PrepareForMonitoring;//0066EE5C
    function Read:Boolean;//0066EE60
    procedure GetRange(blank:Boolean; min:Integer; max:Integer);//0066E87C
    procedure StartGUI;//0066EEA8
    procedure StopMonitoring;//0066EEFC
    procedure MonitorFrame;//0066E898
    procedure StopGUI;//0066EEF0
    procedure StartMonitoring;//0066EEB4
    procedure StartCompiletime;//0066EE88
    procedure StopCompiletime;//0066EEE0
    procedure StartRuntime;//0066EED0
    procedure StopRuntime;//0066EF04
    constructor Create;//0066E788
    procedure GetGoodFields;//0066E874
    procedure ClearRead;//0066E778
    function CreateValue(Identifier:string):TExpression;//0066E814
    procedure GetFields;//0066E86C
  public
    function CreateValue(Identifier:string):TExpression; virtual;//v14//0066E814
    procedure GetFields; virtual;//v18//0066E86C
    procedure GetGoodFields; virtual;//v1C//0066E874
    procedure StartCompiletime; virtual;//v28//0066EE88
    procedure StopCompiletime; virtual;//v2C//0066EEE0
    procedure StartRuntime; virtual;//v30//0066EED0
    procedure StopRuntime; virtual;//v34//0066EF04
    procedure ClearRead; virtual;//v38//0066E778
    function Read:Boolean; virtual;//v3C//0066EE60
    procedure GetRange(blank:Boolean; min:Integer; max:Integer); virtual;//v40//0066E87C
    procedure PrepareForGUI; virtual;//v50//0066EE58
    procedure StartGUI; virtual;//v54//0066EEA8
    procedure StopGUI; virtual;//v58//0066EEF0
    procedure PrepareForMonitoring; virtual;//v5C//0066EE5C
    procedure StartMonitoring; virtual;//v60//0066EEB4
    procedure StopMonitoring; virtual;//v64//0066EEFC
    procedure MonitorFrame; virtual;//v68//0066E898
  end;
  TModuleTurntable = class(TPieModule)
  published
    procedure PrepareForGUI;//0066F6A0
    procedure PrepareForMonitoring;//0066F6A4
    function Read:Boolean;//0066F6A8
    procedure GetRange(blank:Boolean; min:Integer; max:Integer);//0066F024
    procedure StartGUI;//0066F6F0
    procedure StopMonitoring;//0066F744
    procedure MonitorFrame;//0066F040
    procedure StopGUI;//0066F738
    procedure StartMonitoring;//0066F6FC
    procedure StartCompiletime;//0066F6D0
    procedure StopCompiletime;//0066F728
    procedure StartRuntime;//0066F718
    procedure StopRuntime;//0066F74C
    constructor Create;//0066EF2C
    procedure GetGoodFields;//0066F01C
    procedure ClearRead;//0066EF1C
    function CreateValue(Identifier:string):TExpression;//0066EFBC
    procedure GetFields;//0066F014
  public
    function CreateValue(Identifier:string):TExpression; virtual;//v14//0066EFBC
    procedure GetFields; virtual;//v18//0066F014
    procedure GetGoodFields; virtual;//v1C//0066F01C
    procedure StartCompiletime; virtual;//v28//0066F6D0
    procedure StopCompiletime; virtual;//v2C//0066F728
    procedure StartRuntime; virtual;//v30//0066F718
    procedure StopRuntime; virtual;//v34//0066F74C
    procedure ClearRead; virtual;//v38//0066EF1C
    function Read:Boolean; virtual;//v3C//0066F6A8
    procedure GetRange(blank:Boolean; min:Integer; max:Integer); virtual;//v40//0066F024
    procedure PrepareForGUI; virtual;//v50//0066F6A0
    procedure StartGUI; virtual;//v54//0066F6F0
    procedure StopGUI; virtual;//v58//0066F738
    procedure PrepareForMonitoring; virtual;//v5C//0066F6A4
    procedure StartMonitoring; virtual;//v60//0066F6FC
    procedure StopMonitoring; virtual;//v64//0066F744
    procedure MonitorFrame; virtual;//v68//0066F040
  end;
  TModuleBalanceBoard = class(TPieModule)
  published
    procedure PrepareForGUI;//0066FA1C
    procedure PrepareForMonitoring;//0066FA20
    function Read:Boolean;//0066FA24
    procedure GetRange(blank:Boolean; min:Integer; max:Integer);//0066F89C
    procedure StartGUI;//0066FA6C
    procedure StopMonitoring;//0066FAC0
    procedure MonitorFrame;//0066F8B8
    procedure StopGUI;//0066FAB4
    procedure StartMonitoring;//0066FA78
    procedure StartCompiletime;//0066FA4C
    procedure StopCompiletime;//0066FAA4
    procedure StartRuntime;//0066FA94
    procedure StopRuntime;//0066FAC8
    constructor Create;//0066F774
    procedure GetGoodFields;//0066F894
    procedure ClearRead;//0066F764
    function CreateValue(Identifier:string):TExpression;//0066F834
    procedure GetFields;//0066F88C
  public
    function CreateValue(Identifier:string):TExpression; virtual;//v14//0066F834
    procedure GetFields; virtual;//v18//0066F88C
    procedure GetGoodFields; virtual;//v1C//0066F894
    procedure StartCompiletime; virtual;//v28//0066FA4C
    procedure StopCompiletime; virtual;//v2C//0066FAA4
    procedure StartRuntime; virtual;//v30//0066FA94
    procedure StopRuntime; virtual;//v34//0066FAC8
    procedure ClearRead; virtual;//v38//0066F764
    function Read:Boolean; virtual;//v3C//0066FA24
    procedure GetRange(blank:Boolean; min:Integer; max:Integer); virtual;//v40//0066F89C
    procedure PrepareForGUI; virtual;//v50//0066FA1C
    procedure StartGUI; virtual;//v54//0066FA6C
    procedure StopGUI; virtual;//v58//0066FAB4
    procedure PrepareForMonitoring; virtual;//v5C//0066FA20
    procedure StartMonitoring; virtual;//v60//0066FA78
    procedure StopMonitoring; virtual;//v64//0066FAC0
    procedure MonitorFrame; virtual;//v68//0066F8B8
  end;
    procedure sub_0063797C;//0063797C
    //function sub_0064603C(?:PUsb_dev_handle; ?:Integer; ?:?; ?:?):?;//0064603C
    //function sub_006460BC(?:PUsb_dev_handle; ?:Integer; ?:?; ?:?; ?:?):Boolean;//006460BC
    //function sub_006460F0(?:PUsb_dev_handle; ?:Integer; ?:?; ?:?; ?:?):Boolean;//006460F0
    //function sub_00646124(?:PUsb_dev_handle; ?:Integer; ?:?; ?:?; ?:?):Boolean;//00646124
    //procedure sub_00646158(?:string; ?:?);//00646158
    procedure sub_00646278;//00646278
    //procedure sub_00646828(?:TManagedHidObject; ?:PUsb_device; ?:?);//00646828
    //procedure sub_00651BB4(?:Integer; ?:?);//00651BB4
    //function sub_00651BD0:?;//00651BD0
    //function sub_00652EB0:?;//00652EB0
    //function sub_0065360C:?;//0065360C
    //function sub_00653A78:?;//00653A78
    //function sub_00653DA4:?;//00653DA4
    //function sub_00654348:?;//00654348
    //function sub_00654A98:?;//00654A98
    procedure sub_00654E50;//00654E50
    //function sub_00654EA8(?:string):?;//00654EA8
    //function sub_0065C7AC(?:Integer; ?:?):?;//0065C7AC
    procedure sub_0065C7D0(?:Integer; ?:Byte);//0065C7D0

implementation

//00637094
constructor TLightstoneObject.Create(Manager:TComponent; Device:TObject);
begin
{*
 00637094    push        ebp
 00637095    mov         ebp,esp
 00637097    push        ebx
 00637098    push        esi
 00637099    test        dl,dl
>0063709B    je          006370A5
 0063709D    add         esp,0FFFFFFF0
 006370A0    call        @ClassCreate
 006370A5    mov         ebx,edx
 006370A7    mov         esi,eax
 006370A9    mov         eax,dword ptr [ebp+8]
 006370AC    push        eax
 006370AD    xor         edx,edx
 006370AF    mov         eax,esi
 006370B1    call        00646450
 006370B6    mov         eax,esi
 006370B8    test        bl,bl
>006370BA    je          006370CB
 006370BC    call        @AfterConstruction
 006370C1    pop         dword ptr fs:[0]
 006370C8    add         esp,0C
 006370CB    mov         eax,esi
 006370CD    pop         esi
 006370CE    pop         ebx
 006370CF    pop         ebp
 006370D0    ret         4
*}
end;

//006370D4
destructor TLightstoneObject.Destroy();
begin
{*
 006370D4    push        ebx
 006370D5    push        esi
 006370D6    call        @BeforeDestruction
 006370DB    mov         ebx,edx
 006370DD    mov         esi,eax
 006370DF    cmp         dword ptr [esi+20],0;TLightstoneObject.Dev:TJvHidDevice
>006370E3    je          00637118
 006370E5    mov         eax,esi
 006370E7    call        TManagedHidObject.CancelMessages
 006370EC    mov         eax,[0078D590];^Application:TApplication
 006370F1    mov         eax,dword ptr [eax]
 006370F3    call        TApplication.ProcessMessages
 006370F8    push        0
 006370FA    push        0
 006370FC    mov         eax,dword ptr [esi+20];TLightstoneObject.Dev:TJvHidDevice
 006370FF    call        005DF390
 00637104    cmp         byte ptr [esi+19],0;TLightstoneObject.Unplugged:Boolean
>00637108    jne         00637111
 0063710A    mov         eax,esi
 0063710C    call        TManagedHidObject.CancelMessages
 00637111    mov         eax,esi
 00637113    call        TManagedHidObject.CheckIn
 00637118    mov         edx,ebx
 0063711A    and         dl,0FC
 0063711D    mov         eax,esi
 0063711F    call        TObject.Destroy
 00637124    test        bl,bl
>00637126    jle         0063712F
 00637128    mov         eax,esi
 0063712A    call        @ClassDestroy
 0063712F    pop         esi
 00637130    pop         ebx
 00637131    ret
*}
end;

//00637134
function TLightstoneObject.HeartRateVariance:Double;
begin
{*
 00637134    add         esp,0FFFFFFF8
 00637137    fild        dword ptr [eax+0A0];TLightstoneObject.AABB:Integer
 0063713D    fld         tbyte ptr ds:[637150];0.001:Extended
 00637143    fmulp       st(1),st
 00637145    fstp        qword ptr [esp]
 00637148    wait
 00637149    fld         qword ptr [esp]
 0063714C    pop         ecx
 0063714D    pop         edx
 0063714E    ret
*}
end;

//0063715C
procedure TLightstoneObject.ReadLightstone;
begin
{*
 0063715C    ret
*}
end;

//00637160
procedure TLightstoneObject.ReceiveMessage(m:string);
begin
{*
 00637160    push        ebp
 00637161    mov         ebp,esp
 00637163    xor         ecx,ecx
 00637165    push        ecx
 00637166    push        ecx
 00637167    push        ecx
 00637168    push        ecx
 00637169    push        ecx
 0063716A    push        ebx
 0063716B    push        esi
 0063716C    mov         dword ptr [ebp-4],edx
 0063716F    mov         esi,eax
 00637171    mov         eax,dword ptr [ebp-4]
 00637174    call        @UStrAddRef
 00637179    xor         eax,eax
 0063717B    push        ebp
 0063717C    push        637306
 00637181    push        dword ptr fs:[eax]
 00637184    mov         dword ptr fs:[eax],esp
 00637187    lea         eax,[ebp-4]
 0063718A    mov         edx,637320;'<SER>'
 0063718F    call        004F9BD0
 00637194    test        al,al
>00637196    je          006371D2
 00637198    mov         edx,dword ptr [ebp-4]
 0063719B    mov         eax,637338;'<'
 006371A0    call        Pos
 006371A5    mov         ebx,eax
 006371A7    test        ebx,ebx
>006371A9    jle         006371BF
 006371AB    lea         eax,[ebp-4]
 006371AE    push        eax
 006371AF    mov         ecx,ebx
 006371B1    dec         ecx
 006371B2    mov         edx,1
 006371B7    mov         eax,dword ptr [ebp-4]
 006371BA    call        @UStrCopy
 006371BF    lea         eax,[esi+94];TLightstoneObject.SerString:string
 006371C5    mov         edx,dword ptr [ebp-4]
 006371C8    call        @UStrAsg
>006371CD    jmp         006372EB
 006371D2    lea         eax,[ebp-4]
 006371D5    mov         edx,637348;'<VER>'
 006371DA    call        004F9BD0
 006371DF    test        al,al
>006371E1    je          0063721D
 006371E3    mov         edx,dword ptr [ebp-4]
 006371E6    mov         eax,637338;'<'
 006371EB    call        Pos
 006371F0    mov         ebx,eax
 006371F2    test        ebx,ebx
>006371F4    jle         0063720A
 006371F6    lea         eax,[ebp-4]
 006371F9    push        eax
 006371FA    mov         ecx,ebx
 006371FC    dec         ecx
 006371FD    mov         edx,1
 00637202    mov         eax,dword ptr [ebp-4]
 00637205    call        @UStrCopy
 0063720A    lea         eax,[esi+98];TLightstoneObject.VerString:string
 00637210    mov         edx,dword ptr [ebp-4]
 00637213    call        @UStrAsg
>00637218    jmp         006372EB
 0063721D    lea         eax,[ebp-4]
 00637220    mov         edx,637360;'<RAW>'
 00637225    call        004F9BD0
 0063722A    test        al,al
>0063722C    je          006372EB
 00637232    mov         edx,dword ptr [ebp-4]
 00637235    mov         eax,637338;'<'
 0063723A    call        Pos
 0063723F    mov         ebx,eax
 00637241    test        ebx,ebx
>00637243    jle         00637259
 00637245    lea         eax,[ebp-4]
 00637248    push        eax
 00637249    mov         ecx,ebx
 0063724B    dec         ecx
 0063724C    mov         edx,1
 00637251    mov         eax,dword ptr [ebp-4]
 00637254    call        @UStrCopy
 00637259    lea         eax,[ebp-8]
 0063725C    push        eax
 0063725D    mov         ecx,2
 00637262    mov         edx,1
 00637267    mov         eax,dword ptr [ebp-4]
 0063726A    call        @UStrCopy
 0063726F    mov         eax,dword ptr [ebp-8]
 00637272    call        004F936C
 00637277    mov         ebx,eax
 00637279    lea         eax,[ebp-0C]
 0063727C    push        eax
 0063727D    mov         ecx,2
 00637282    mov         edx,3
 00637287    mov         eax,dword ptr [ebp-4]
 0063728A    call        @UStrCopy
 0063728F    mov         eax,dword ptr [ebp-0C]
 00637292    call        004F936C
 00637297    shl         ebx,8
 0063729A    or          eax,ebx
 0063729C    mov         dword ptr [esi+0A0],eax;TLightstoneObject.AABB:Integer
 006372A2    lea         eax,[ebp-10]
 006372A5    push        eax
 006372A6    mov         ecx,2
 006372AB    mov         edx,6
 006372B0    mov         eax,dword ptr [ebp-4]
 006372B3    call        @UStrCopy
 006372B8    mov         eax,dword ptr [ebp-10]
 006372BB    call        004F936C
 006372C0    mov         ebx,eax
 006372C2    lea         eax,[ebp-14]
 006372C5    push        eax
 006372C6    mov         ecx,2
 006372CB    mov         edx,8
 006372D0    mov         eax,dword ptr [ebp-4]
 006372D3    call        @UStrCopy
 006372D8    mov         eax,dword ptr [ebp-14]
 006372DB    call        004F936C
 006372E0    shl         ebx,8
 006372E3    or          eax,ebx
 006372E5    mov         dword ptr [esi+0A4],eax;TLightstoneObject.CCDD:Integer
 006372EB    xor         eax,eax
 006372ED    pop         edx
 006372EE    pop         ecx
 006372EF    pop         ecx
 006372F0    mov         dword ptr fs:[eax],edx
 006372F3    push        63730D
 006372F8    lea         eax,[ebp-14]
 006372FB    mov         edx,5
 00637300    call        @UStrArrayClr
 00637305    ret
>00637306    jmp         @HandleFinally
>0063730B    jmp         006372F8
 0063730D    pop         esi
 0063730E    pop         ebx
 0063730F    mov         esp,ebp
 00637311    pop         ebp
 00637312    ret
*}
end;

//0063736C
procedure TLightstoneObject.ReceiveReport(ReportID:Integer; Report:PByteArray; Size:Integer);
begin
{*
 0063736C    push        ebp
 0063736D    mov         ebp,esp
 0063736F    add         esp,0FFFFFFF8
 00637372    push        ebx
 00637373    push        esi
 00637374    push        edi
 00637375    xor         ebx,ebx
 00637377    mov         dword ptr [ebp-8],ebx
 0063737A    mov         dword ptr [ebp-4],ecx
 0063737D    mov         edi,eax
 0063737F    xor         eax,eax
 00637381    push        ebp
 00637382    push        637413
 00637387    push        dword ptr fs:[eax]
 0063738A    mov         dword ptr fs:[eax],esp
 0063738D    mov         eax,dword ptr [ebp-4]
 00637390    movzx       eax,byte ptr [eax]
 00637393    cmp         eax,8
>00637396    jle         0063739D
 00637398    mov         eax,8
 0063739D    mov         esi,eax
 0063739F    test        esi,esi
>006373A1    jle         006373FD
 006373A3    mov         ebx,1
 006373A8    mov         eax,dword ptr [ebp-4]
 006373AB    movzx       eax,byte ptr [eax+ebx]
 006373AF    cmp         ax,0D
>006373B3    jne         006373CF
 006373B5    mov         edx,dword ptr [edi+90];TLightstoneObject.msg:string
 006373BB    mov         eax,edi
 006373BD    call        TLightstoneObject.ReceiveMessage
 006373C2    lea         eax,[edi+90];TLightstoneObject.msg:string
 006373C8    call        @UStrClr
>006373CD    jmp         006373F9
 006373CF    mov         eax,dword ptr [ebp-4]
 006373D2    movzx       eax,byte ptr [eax+ebx]
 006373D6    cmp         ax,0A
>006373DA    je          006373F9
 006373DC    lea         eax,[ebp-8]
 006373DF    mov         edx,dword ptr [ebp-4]
 006373E2    movzx       edx,byte ptr [edx+ebx]
 006373E6    call        @UStrFromWChar
 006373EB    mov         edx,dword ptr [ebp-8]
 006373EE    lea         eax,[edi+90];TLightstoneObject.msg:string
 006373F4    call        @UStrCat
 006373F9    inc         ebx
 006373FA    dec         esi
>006373FB    jne         006373A8
 006373FD    xor         eax,eax
 006373FF    pop         edx
 00637400    pop         ecx
 00637401    pop         ecx
 00637402    mov         dword ptr fs:[eax],edx
 00637405    push        63741A
 0063740A    lea         eax,[ebp-8]
 0063740D    call        @UStrClr
 00637412    ret
>00637413    jmp         @HandleFinally
>00637418    jmp         0063740A
 0063741A    pop         edi
 0063741B    pop         esi
 0063741C    pop         ebx
 0063741D    pop         ecx
 0063741E    pop         ecx
 0063741F    pop         ebp
 00637420    ret         4
*}
end;

//00637424
function TLightstoneObject.SkinConductanceLevel:Double;
begin
{*
 00637424    add         esp,0FFFFFFF8
 00637427    fild        dword ptr [eax+0A4];TLightstoneObject.CCDD:Integer
 0063742D    fld         tbyte ptr ds:[637440];0.01:Extended
 00637433    fmulp       st(1),st
 00637435    fstp        qword ptr [esp]
 00637438    wait
 00637439    fld         qword ptr [esp]
 0063743C    pop         ecx
 0063743D    pop         edx
 0063743E    ret
*}
end;

//0063797C
procedure sub_0063797C;
begin
{*
 0063797C    push        ebp
 0063797D    mov         ebp,esp
 0063797F    xor         eax,eax
 00637981    push        ebp
 00637982    push        63799B
 00637987    push        dword ptr fs:[eax]
 0063798A    mov         dword ptr fs:[eax],esp
 0063798D    xor         eax,eax
 0063798F    pop         edx
 00637990    pop         ecx
 00637991    pop         ecx
 00637992    mov         dword ptr fs:[eax],edx
 00637995    push        6379A2
 0063799A    ret
>0063799B    jmp         @HandleFinally
>006379A0    jmp         0063799A
 006379A2    pop         ebp
 006379A3    ret
*}
end;

//006379A4
procedure TSpacePointObject.Connect;
begin
{*
 006379A4    mov         eax,6379BC;'SpacePoint.Connect'
 006379A9    call        0063797C
 006379AE    ret
*}
end;

//006379E4
constructor TSpacePointObject.Create(Manager:TComponent; Device:TObject);
begin
{*
 006379E4    push        ebp
 006379E5    mov         ebp,esp
 006379E7    push        ebx
 006379E8    push        esi
 006379E9    test        dl,dl
>006379EB    je          006379F5
 006379ED    add         esp,0FFFFFFF0
 006379F0    call        @ClassCreate
 006379F5    mov         ebx,edx
 006379F7    mov         esi,eax
 006379F9    mov         eax,dword ptr [ebp+8]
 006379FC    push        eax
 006379FD    xor         edx,edx
 006379FF    mov         eax,esi
 00637A01    call        00648E90
 00637A06    mov         eax,637A44;'SpacePoint.Create'
 00637A0B    call        0063797C
 00637A10    mov         dword ptr [esi+45C],0FFFFFFFF;TSpacePointObject.FNumber:Integer
 00637A1A    mov         eax,esi
 00637A1C    test        bl,bl
>00637A1E    je          00637A2F
 00637A20    call        @AfterConstruction
 00637A25    pop         dword ptr fs:[0]
 00637A2C    add         esp,0C
 00637A2F    mov         eax,esi
 00637A31    pop         esi
 00637A32    pop         ebx
 00637A33    pop         ebp
 00637A34    ret         4
*}
end;

//00637A68
destructor TSpacePointObject.Destroy();
begin
{*
 00637A68    push        ebx
 00637A69    push        esi
 00637A6A    call        @BeforeDestruction
 00637A6F    mov         ebx,edx
 00637A71    mov         esi,eax
 00637A73    mov         eax,637AAC;'SpacePoint.Destroy'
 00637A78    call        0063797C
 00637A7D    mov         eax,esi
 00637A7F    call        TSpacePointObject.Stop
 00637A84    mov         edx,ebx
 00637A86    and         dl,0FC
 00637A89    mov         eax,esi
 00637A8B    call        TAccelerometerObject.Destroy
 00637A90    test        bl,bl
>00637A92    jle         00637A9B
 00637A94    mov         eax,esi
 00637A96    call        @ClassDestroy
 00637A9B    pop         esi
 00637A9C    pop         ebx
 00637A9D    ret
*}
end;

//00637AD4
procedure TSpacePointObject.DoNullUpdate;
begin
{*
 00637AD4    push        ebx
 00637AD5    mov         ebx,eax
 00637AD7    fld         tbyte ptr ds:[637B6C];0.008:Extended
 00637ADD    fadd        qword ptr [ebx+460];TSpacePointObject.UpdateTime:Double
 00637AE3    fstp        qword ptr [ebx+460];TSpacePointObject.UpdateTime:Double
 00637AE9    wait
 00637AEA    cmp         byte ptr [ebx+443],0;TSpacePointObject.FUseForce:Boolean
>00637AF1    je          00637B2A
 00637AF3    push        dword ptr [ebx+24C];TSpacePointObject.?f24C:dword
 00637AF9    push        dword ptr [ebx+248];TSpacePointObject.RawForceX:Double
 00637AFF    push        dword ptr [ebx+254];TSpacePointObject.?f254:dword
 00637B05    push        dword ptr [ebx+250];TSpacePointObject.RawForceY:Double
 00637B0B    push        dword ptr [ebx+25C];TSpacePointObject.?f25C:dword
 00637B11    push        dword ptr [ebx+258];TSpacePointObject.RawForceZ:Double
 00637B17    push        dword ptr [ebx+464];TSpacePointObject.?f464:dword
 00637B1D    push        dword ptr [ebx+460];TSpacePointObject.UpdateTime:Double
 00637B23    mov         eax,ebx
 00637B25    call        TAccelerometerObject.UpdateForces
 00637B2A    cmp         byte ptr [ebx+444],0;TSpacePointObject.FUseGyros:Boolean
>00637B31    je          00637B6A
 00637B33    push        dword ptr [ebx+154];TSpacePointObject.?f154:dword
 00637B39    push        dword ptr [ebx+150];TSpacePointObject.RawGyroYaw:Double
 00637B3F    push        dword ptr [ebx+15C];TSpacePointObject.?f15C:dword
 00637B45    push        dword ptr [ebx+158];TSpacePointObject.RawGyroPitch:Double
 00637B4B    push        dword ptr [ebx+164];TSpacePointObject.?f164:dword
 00637B51    push        dword ptr [ebx+160];TSpacePointObject.RawGyroRoll:Double
 00637B57    push        dword ptr [ebx+464];TSpacePointObject.?f464:dword
 00637B5D    push        dword ptr [ebx+460];TSpacePointObject.UpdateTime:Double
 00637B63    mov         eax,ebx
 00637B65    call        TAccelerometerObject.UpdateGyros
 00637B6A    pop         ebx
 00637B6B    ret
*}
end;

//00637B78
{*procedure TSpacePointObject.InByteString(?:?);
begin
 00637B78    push        ebp
 00637B79    mov         ebp,esp
 00637B7B    add         esp,0FFFFFFF8
 00637B7E    push        ebx
 00637B7F    push        esi
 00637B80    push        edi
 00637B81    xor         ecx,ecx
 00637B83    mov         dword ptr [ebp-4],ecx
 00637B86    mov         esi,edx
 00637B88    mov         edi,eax
 00637B8A    xor         eax,eax
 00637B8C    push        ebp
 00637B8D    push        637C0A
 00637B92    push        dword ptr fs:[eax]
 00637B95    mov         dword ptr fs:[eax],esp
 00637B98    mov         eax,esi
 00637B9A    call        @UStrClr
 00637B9F    test        edi,edi
>00637BA1    je          00637BF4
 00637BA3    xor         ebx,ebx
 00637BA5    push        dword ptr [esi]
 00637BA7    lea         ecx,[ebp-4]
 00637BAA    movzx       eax,byte ptr [edi+ebx+445]
 00637BB2    mov         edx,2
 00637BB7    call        IntToHex
 00637BBC    push        dword ptr [ebp-4]
 00637BBF    push        637C24;' '
 00637BC4    mov         eax,esi
 00637BC6    mov         edx,3
 00637BCB    call        @UStrCatN
 00637BD0    inc         ebx
 00637BD1    cmp         ebx,16
>00637BD4    jne         00637BA5
 00637BD6    mov         eax,dword ptr [esi]
 00637BD8    mov         dword ptr [ebp-8],eax
 00637BDB    mov         eax,dword ptr [ebp-8]
 00637BDE    test        eax,eax
>00637BE0    je          00637BE7
 00637BE2    sub         eax,4
 00637BE5    mov         eax,dword ptr [eax]
 00637BE7    mov         edx,esi
 00637BE9    mov         ecx,1
 00637BEE    xchg        eax,edx
 00637BEF    call        @UStrDelete
 00637BF4    xor         eax,eax
 00637BF6    pop         edx
 00637BF7    pop         ecx
 00637BF8    pop         ecx
 00637BF9    mov         dword ptr fs:[eax],edx
 00637BFC    push        637C11
 00637C01    lea         eax,[ebp-4]
 00637C04    call        @UStrClr
 00637C09    ret
>00637C0A    jmp         @HandleFinally
>00637C0F    jmp         00637C01
 00637C11    pop         edi
 00637C12    pop         esi
 00637C13    pop         ebx
 00637C14    pop         ecx
 00637C15    pop         ecx
 00637C16    pop         ebp
 00637C17    ret
end;*}

//00637C28
function TSpacePointObject.LeftButton:Boolean;
begin
{*
 00637C28    test        byte ptr [eax+468],1;TSpacePointObject.Buttons:Byte
 00637C2F    setne       al
 00637C32    ret
*}
end;

//00637C34
procedure TSpacePointObject.PerformNullUpdates;
begin
{*
 00637C34    push        ebx
 00637C35    push        esi
 00637C36    add         esp,0FFFFFFF8
 00637C39    mov         esi,eax
 00637C3B    fld         qword ptr [esi+460];TSpacePointObject.UpdateTime:Double
 00637C41    fcomp       dword ptr ds:[637CB0];0:Single
 00637C47    wait
 00637C48    fnstsw      al
 00637C4A    sahf
>00637C4B    je          00637CAA
 00637C4D    call        00682F08
 00637C52    fsub        qword ptr [esi+460];TSpacePointObject.UpdateTime:Double
 00637C58    fmul        dword ptr ds:[637CB4];125:Single
 00637C5E    fstp        qword ptr [esp]
 00637C61    wait
 00637C62    fld         qword ptr [esp]
 00637C65    fcomp       dword ptr ds:[637CB4];125:Single
 00637C6B    wait
 00637C6C    fnstsw      al
 00637C6E    sahf
>00637C6F    jbe         00637C7E
 00637C71    xor         eax,eax
 00637C73    mov         dword ptr [esp],eax
 00637C76    mov         dword ptr [esp+4],405F4000
 00637C7E    fld         tbyte ptr ds:[637CB8];1.2:Extended
 00637C84    fcomp       qword ptr [esp]
 00637C87    wait
 00637C88    fnstsw      al
 00637C8A    sahf
>00637C8B    jae         00637CAA
 00637C8D    push        dword ptr [esp+4]
 00637C91    push        dword ptr [esp+4]
 00637C95    call        00454B98
 00637C9A    mov         ebx,eax
 00637C9C    test        ebx,ebx
>00637C9E    jle         00637CAA
 00637CA0    mov         eax,esi
 00637CA2    call        TSpacePointObject.DoNullUpdate
 00637CA7    dec         ebx
>00637CA8    jne         00637CA0
 00637CAA    pop         ecx
 00637CAB    pop         edx
 00637CAC    pop         esi
 00637CAD    pop         ebx
 00637CAE    ret
*}
end;

//00637CC4
procedure TSpacePointObject.ReadSpacePoint;
begin
{*
 00637CC4    push        ebx
 00637CC5    push        esi
 00637CC6    mov         ebx,eax
 00637CC8    cmp         byte ptr [ebx+18],0;TSpacePointObject.Connected:Boolean
>00637CCC    je          00637D19
 00637CCE    cmp         byte ptr [ebx+19],0;TSpacePointObject.Unplugged:Boolean
>00637CD2    je          00637CEA
 00637CD4    mov         esi,dword ptr [ebx+4];TSpacePointObject.FManager:TComponent
 00637CD7    mov         eax,ebx
 00637CD9    call        TSpacePointObject.Stop
 00637CDE    mov         edx,ebx
 00637CE0    mov         eax,esi
 00637CE2    call        TWiimoteManager.RemoveSpacePoint
 00637CE7    pop         esi
 00637CE8    pop         ebx
 00637CE9    ret
 00637CEA    mov         eax,ebx
 00637CEC    call        TSpacePointObject.PerformNullUpdates
 00637CF1    movzx       eax,byte ptr [ebx+42C];TSpacePointObject.NextWaggleGesture:TWaggleGesture
 00637CF8    mov         byte ptr [ebx+42D],al;TSpacePointObject.WaggleGesture:TWaggleGesture
 00637CFE    mov         byte ptr [ebx+42C],0;TSpacePointObject.NextWaggleGesture:TWaggleGesture
 00637D05    movzx       eax,byte ptr [ebx+42E];TSpacePointObject.NextPartialGesture:TWaggleGesture
 00637D0C    mov         byte ptr [ebx+42F],al;TSpacePointObject.PartialGesture:TWaggleGesture
 00637D12    mov         byte ptr [ebx+42E],0;TSpacePointObject.NextPartialGesture:TWaggleGesture
 00637D19    pop         esi
 00637D1A    pop         ebx
 00637D1B    ret
*}
end;

//00637D1C
procedure TSpacePointObject.ReceiveDataReport(ReportID:Integer; Report:PByteArray; Size:Integer);
begin
{*
 00637D1C    push        ebp
 00637D1D    mov         ebp,esp
 00637D1F    add         esp,0FFFFFFD0
 00637D22    push        ebx
 00637D23    mov         ebx,eax
 00637D25    call        00682F08
 00637D2A    fstp        qword ptr [ebx+460];TSpacePointObject.UpdateTime:Double
 00637D30    wait
 00637D31    push        dword ptr [ebp-4]
 00637D34    push        dword ptr [ebp-8]
 00637D37    push        dword ptr [ebp-0C]
 00637D3A    push        dword ptr [ebp-10]
 00637D3D    push        dword ptr [ebp-14]
 00637D40    push        dword ptr [ebp-18]
 00637D43    push        dword ptr [ebx+0C];TSpacePointObject.?fC:dword
 00637D46    push        dword ptr [ebx+8];TSpacePointObject.ReportTime:Double
 00637D49    mov         eax,ebx
 00637D4B    call        TAccelerometerObject.UpdateForces
 00637D50    push        dword ptr [ebp-1C]
 00637D53    push        dword ptr [ebp-20]
 00637D56    push        dword ptr [ebp-2C]
 00637D59    push        dword ptr [ebp-30]
 00637D5C    push        dword ptr [ebp-24]
 00637D5F    push        dword ptr [ebp-28]
 00637D62    push        dword ptr [ebx+0C];TSpacePointObject.?fC:dword
 00637D65    push        dword ptr [ebx+8];TSpacePointObject.ReportTime:Double
 00637D68    mov         eax,ebx
 00637D6A    call        TAccelerometerObject.UpdateGyros
 00637D6F    pop         ebx
 00637D70    mov         esp,ebp
 00637D72    pop         ebp
 00637D73    ret         4
*}
end;

//00637D78
procedure TSpacePointObject.ReceiveReport(ReportID:Integer; Report:PByteArray; Size:Integer);
begin
{*
 00637D78    push        ebp
 00637D79    mov         ebp,esp
 00637D7B    push        0
 00637D7D    push        0
 00637D7F    push        0
 00637D81    push        0
 00637D83    push        ebx
 00637D84    push        esi
 00637D85    push        edi
 00637D86    mov         dword ptr [ebp-4],ecx
 00637D89    mov         edi,edx
 00637D8B    mov         ebx,eax
 00637D8D    xor         eax,eax
 00637D8F    push        ebp
 00637D90    push        637E33
 00637D95    push        dword ptr fs:[eax]
 00637D98    mov         dword ptr fs:[eax],esp
 00637D9B    mov         esi,14
 00637DA0    push        637E50;'SpacePoint.ReceiveReport '
 00637DA5    lea         ecx,[ebp-0C]
 00637DA8    mov         edx,2
 00637DAD    mov         eax,edi
 00637DAF    call        IntToHex
 00637DB4    push        dword ptr [ebp-0C]
 00637DB7    push        637E90;'   '
 00637DBC    lea         ecx,[ebp-10]
 00637DBF    mov         eax,dword ptr [ebp-4]
 00637DC2    mov         edx,esi
 00637DC4    call        004F90D8
 00637DC9    push        dword ptr [ebp-10]
 00637DCC    lea         eax,[ebp-8]
 00637DCF    mov         edx,4
 00637DD4    call        @UStrCatN
 00637DD9    mov         eax,dword ptr [ebp-8]
 00637DDC    call        0063797C
 00637DE1    push        esi
 00637DE2    mov         ecx,dword ptr [ebp-4]
 00637DE5    mov         edx,edi
 00637DE7    mov         eax,ebx
 00637DE9    call        TSpacePointObject.ReceiveDataReport
 00637DEE    lea         eax,[ebx+445];TSpacePointObject.InByte:?
 00637DF4    xor         ecx,ecx
 00637DF6    mov         edx,16
 00637DFB    call        @FillChar
 00637E00    mov         eax,edi
 00637E02    mov         byte ptr [ebx+445],al;TSpacePointObject.InByte:?
 00637E08    lea         edx,[ebx+446];TSpacePointObject.?f446:?
 00637E0E    mov         eax,dword ptr [ebp-4]
 00637E11    mov         ecx,esi
 00637E13    call        Move
 00637E18    xor         eax,eax
 00637E1A    pop         edx
 00637E1B    pop         ecx
 00637E1C    pop         ecx
 00637E1D    mov         dword ptr fs:[eax],edx
 00637E20    push        637E3A
 00637E25    lea         eax,[ebp-10]
 00637E28    mov         edx,3
 00637E2D    call        @UStrArrayClr
 00637E32    ret
>00637E33    jmp         @HandleFinally
>00637E38    jmp         00637E25
 00637E3A    pop         edi
 00637E3B    pop         esi
 00637E3C    pop         ebx
 00637E3D    mov         esp,ebp
 00637E3F    pop         ebp
 00637E40    ret         4
*}
end;

//00637E98
function TSpacePointObject.RightButton:Boolean;
begin
{*
 00637E98    test        byte ptr [eax+468],2;TSpacePointObject.Buttons:Byte
 00637E9F    setne       al
 00637EA2    ret
*}
end;

//00637EA4
procedure TSpacePointObject.SetNumber(Value:Integer);
begin
{*
 00637EA4    mov         dword ptr [eax+45C],edx;TSpacePointObject.FNumber:Integer
 00637EAA    ret
*}
end;

//00637EAC
procedure TSpacePointObject.Stop;
begin
{*
 00637EAC    push        ebx
 00637EAD    mov         ebx,eax
 00637EAF    mov         eax,637EFC;'SpacePoint.Stop'
 00637EB4    call        0063797C
 00637EB9    cmp         dword ptr [ebx+20],0;TSpacePointObject.Dev:TJvHidDevice
>00637EBD    je          00637EEB
 00637EBF    mov         eax,[0078D590];^Application:TApplication
 00637EC4    mov         eax,dword ptr [eax]
 00637EC6    call        TApplication.ProcessMessages
 00637ECB    push        0
 00637ECD    push        0
 00637ECF    mov         eax,dword ptr [ebx+20];TSpacePointObject.Dev:TJvHidDevice
 00637ED2    call        005DF390
 00637ED7    cmp         byte ptr [ebx+19],0;TSpacePointObject.Unplugged:Boolean
>00637EDB    jne         00637EE4
 00637EDD    mov         eax,ebx
 00637EDF    call        TSpacePointObject.SwitchOff
 00637EE4    mov         eax,ebx
 00637EE6    call        TManagedHidObject.CheckIn
 00637EEB    pop         ebx
 00637EEC    ret
*}
end;

//00637F1C
procedure TSpacePointObject.SwitchOff;
begin
{*
 00637F1C    push        ebx
 00637F1D    mov         ebx,eax
 00637F1F    mov         eax,637F4C;'SpacePoint.SwitchOff'
 00637F24    call        0063797C
 00637F29    cmp         dword ptr [ebx+20],0;TSpacePointObject.Dev:TJvHidDevice
>00637F2D    je          00637F3C
 00637F2F    cmp         byte ptr [ebx+18],0;TSpacePointObject.Connected:Boolean
>00637F33    je          00637F3C
 00637F35    mov         eax,ebx
 00637F37    call        TManagedHidObject.CancelMessages
 00637F3C    pop         ebx
 00637F3D    ret
*}
end;

//0063B6B4
function TWiimoteManager.AnyAnalogLeftTrigger(n:Integer):Double;
begin
{*
 0063B6B4    push        ebx
 0063B6B5    push        esi
 0063B6B6    push        edi
 0063B6B7    add         esp,0FFFFFFF4
 0063B6BA    mov         ebx,edx
 0063B6BC    mov         edi,eax
 0063B6BE    test        ebx,ebx
>0063B6C0    jle         0063B7AE
 0063B6C6    mov         edx,ebx
 0063B6C8    mov         eax,edi
 0063B6CA    call        TWiimoteManager.GetAny
 0063B6CF    mov         ebx,eax
 0063B6D1    test        ebx,ebx
>0063B6D3    jne         0063B6E3
 0063B6D5    xor         eax,eax
 0063B6D7    mov         dword ptr [esp],eax
 0063B6DA    mov         dword ptr [esp+4],eax
>0063B6DE    jmp         0063B7DD
 0063B6E3    mov         eax,ebx
 0063B6E5    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063B6EB    call        @IsClass
 0063B6F0    test        al,al
>0063B6F2    je          0063B704
 0063B6F4    mov         eax,ebx
 0063B6F6    mov         edx,dword ptr [eax]
 0063B6F8    call        dword ptr [edx+68]
 0063B6FB    fstp        qword ptr [esp]
 0063B6FE    wait
>0063B6FF    jmp         0063B7DD
 0063B704    mov         eax,ebx
 0063B706    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063B70C    call        @IsClass
 0063B711    test        al,al
>0063B713    je          0063B7A3
 0063B719    mov         esi,dword ptr [ebx+4B4]
 0063B71F    cmp         byte ptr [esi+444],0
>0063B726    je          0063B743
 0063B728    mov         eax,esi
 0063B72A    call        TNunchukObject.Z
 0063B72F    movsx       eax,al
 0063B732    mov         dword ptr [esp+8],eax
 0063B736    fild        dword ptr [esp+8]
 0063B73A    fstp        qword ptr [esp]
 0063B73D    wait
>0063B73E    jmp         0063B7DD
 0063B743    mov         eax,dword ptr [ebx+4B8]
 0063B749    cmp         byte ptr [eax+8],0
>0063B74D    je          0063B75D
 0063B74F    call        TClassicObject.L
 0063B754    fstp        qword ptr [esp]
 0063B757    wait
>0063B758    jmp         0063B7DD
 0063B75D    mov         esi,dword ptr [ebx+4BC]
 0063B763    cmp         byte ptr [esi+8],0
>0063B767    je          0063B781
 0063B769    mov         eax,esi
 0063B76B    call        TGuitarObject.Fret1
 0063B770    movsx       eax,al
 0063B773    mov         dword ptr [esp+8],eax
 0063B777    fild        dword ptr [esp+8]
 0063B77B    fstp        qword ptr [esp]
 0063B77E    wait
>0063B77F    jmp         0063B7DD
 0063B781    mov         eax,dword ptr [ebx+4C0]
 0063B787    cmp         byte ptr [eax+8],0
>0063B78B    je          0063B798
 0063B78D    call        TDrumsObject.HiHatSpeed
 0063B792    fstp        qword ptr [esp]
 0063B795    wait
>0063B796    jmp         0063B7DD
 0063B798    xor         eax,eax
 0063B79A    mov         dword ptr [esp],eax
 0063B79D    mov         dword ptr [esp+4],eax
>0063B7A1    jmp         0063B7DD
 0063B7A3    xor         eax,eax
 0063B7A5    mov         dword ptr [esp],eax
 0063B7A8    mov         dword ptr [esp+4],eax
>0063B7AC    jmp         0063B7DD
 0063B7AE    xor         eax,eax
 0063B7B0    mov         dword ptr [esp],eax
 0063B7B3    mov         dword ptr [esp+4],eax
 0063B7B7    mov         eax,edi
 0063B7B9    call        TWiimoteManager.AnyCount
 0063B7BE    mov         esi,eax
 0063B7C0    test        esi,esi
>0063B7C2    jle         0063B7DD
 0063B7C4    mov         ebx,1
 0063B7C9    mov         edx,ebx
 0063B7CB    mov         eax,edi
 0063B7CD    call        TWiimoteManager.AnyAnalogLeftTrigger
 0063B7D2    fadd        qword ptr [esp]
 0063B7D5    fstp        qword ptr [esp]
 0063B7D8    wait
 0063B7D9    inc         ebx
 0063B7DA    dec         esi
>0063B7DB    jne         0063B7C9
 0063B7DD    fld         qword ptr [esp]
 0063B7E0    fcomp       dword ptr ds:[63B824];1:Single
 0063B7E6    wait
 0063B7E7    fnstsw      al
 0063B7E9    sahf
>0063B7EA    jbe         0063B7FB
 0063B7EC    xor         eax,eax
 0063B7EE    mov         dword ptr [esp],eax
 0063B7F1    mov         dword ptr [esp+4],3FF00000
>0063B7F9    jmp         0063B817
 0063B7FB    fld         qword ptr [esp]
 0063B7FE    fcomp       dword ptr ds:[63B828];-1:Single
 0063B804    wait
 0063B805    fnstsw      al
 0063B807    sahf
>0063B808    jae         0063B817
 0063B80A    xor         eax,eax
 0063B80C    mov         dword ptr [esp],eax
 0063B80F    mov         dword ptr [esp+4],0BFF00000
 0063B817    fld         qword ptr [esp]
 0063B81A    add         esp,0C
 0063B81D    pop         edi
 0063B81E    pop         esi
 0063B81F    pop         ebx
 0063B820    ret
*}
end;

//0063B82C
function TWiimoteManager.AnyAnalogRightTrigger(n:Integer):Double;
begin
{*
 0063B82C    push        ebx
 0063B82D    push        esi
 0063B82E    push        edi
 0063B82F    add         esp,0FFFFFFF4
 0063B832    mov         ebx,edx
 0063B834    mov         edi,eax
 0063B836    test        ebx,ebx
>0063B838    jle         0063B936
 0063B83E    mov         edx,ebx
 0063B840    mov         eax,edi
 0063B842    call        TWiimoteManager.GetAny
 0063B847    mov         ebx,eax
 0063B849    test        ebx,ebx
>0063B84B    jne         0063B85B
 0063B84D    xor         eax,eax
 0063B84F    mov         dword ptr [esp],eax
 0063B852    mov         dword ptr [esp+4],eax
>0063B856    jmp         0063B965
 0063B85B    mov         eax,ebx
 0063B85D    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063B863    call        @IsClass
 0063B868    test        al,al
>0063B86A    je          0063B87F
 0063B86C    mov         eax,ebx
 0063B86E    mov         edx,dword ptr [eax]
 0063B870    call        dword ptr [edx+80]
 0063B876    fstp        qword ptr [esp]
 0063B879    wait
>0063B87A    jmp         0063B965
 0063B87F    mov         eax,ebx
 0063B881    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063B887    call        @IsClass
 0063B88C    test        al,al
>0063B88E    je          0063B92B
 0063B894    mov         eax,dword ptr [ebx+4B4]
 0063B89A    cmp         byte ptr [eax+444],0
>0063B8A1    je          0063B8BE
 0063B8A3    mov         eax,ebx
 0063B8A5    call        TWiimoteObject.B
 0063B8AA    movsx       eax,al
 0063B8AD    mov         dword ptr [esp+8],eax
 0063B8B1    fild        dword ptr [esp+8]
 0063B8B5    fstp        qword ptr [esp]
 0063B8B8    wait
>0063B8B9    jmp         0063B965
 0063B8BE    mov         eax,dword ptr [ebx+4B8]
 0063B8C4    cmp         byte ptr [eax+8],0
>0063B8C8    je          0063B8D8
 0063B8CA    call        TClassicObject.R
 0063B8CF    fstp        qword ptr [esp]
 0063B8D2    wait
>0063B8D3    jmp         0063B965
 0063B8D8    mov         esi,dword ptr [ebx+4BC]
 0063B8DE    cmp         byte ptr [esi+8],0
>0063B8E2    je          0063B8FC
 0063B8E4    mov         eax,esi
 0063B8E6    call        TGuitarObject.StrumDown
 0063B8EB    movsx       eax,al
 0063B8EE    mov         dword ptr [esp+8],eax
 0063B8F2    fild        dword ptr [esp+8]
 0063B8F6    fstp        qword ptr [esp]
 0063B8F9    wait
>0063B8FA    jmp         0063B965
 0063B8FC    mov         eax,dword ptr [ebx+4C0]
 0063B902    cmp         byte ptr [eax+8],0
>0063B906    je          0063B913
 0063B908    call        TDrumsObject.PedalSpeed
 0063B90D    fstp        qword ptr [esp]
 0063B910    wait
>0063B911    jmp         0063B965
 0063B913    mov         eax,ebx
 0063B915    call        TWiimoteObject.B
 0063B91A    movsx       eax,al
 0063B91D    mov         dword ptr [esp+8],eax
 0063B921    fild        dword ptr [esp+8]
 0063B925    fstp        qword ptr [esp]
 0063B928    wait
>0063B929    jmp         0063B965
 0063B92B    xor         eax,eax
 0063B92D    mov         dword ptr [esp],eax
 0063B930    mov         dword ptr [esp+4],eax
>0063B934    jmp         0063B965
 0063B936    xor         eax,eax
 0063B938    mov         dword ptr [esp],eax
 0063B93B    mov         dword ptr [esp+4],eax
 0063B93F    mov         eax,edi
 0063B941    call        TWiimoteManager.AnyCount
 0063B946    mov         esi,eax
 0063B948    test        esi,esi
>0063B94A    jle         0063B965
 0063B94C    mov         ebx,1
 0063B951    mov         edx,ebx
 0063B953    mov         eax,edi
 0063B955    call        TWiimoteManager.AnyAnalogRightTrigger
 0063B95A    fadd        qword ptr [esp]
 0063B95D    fstp        qword ptr [esp]
 0063B960    wait
 0063B961    inc         ebx
 0063B962    dec         esi
>0063B963    jne         0063B951
 0063B965    fld         qword ptr [esp]
 0063B968    fcomp       dword ptr ds:[63B9AC];1:Single
 0063B96E    wait
 0063B96F    fnstsw      al
 0063B971    sahf
>0063B972    jbe         0063B983
 0063B974    xor         eax,eax
 0063B976    mov         dword ptr [esp],eax
 0063B979    mov         dword ptr [esp+4],3FF00000
>0063B981    jmp         0063B99F
 0063B983    fld         qword ptr [esp]
 0063B986    fcomp       dword ptr ds:[63B9B0];-1:Single
 0063B98C    wait
 0063B98D    fnstsw      al
 0063B98F    sahf
>0063B990    jae         0063B99F
 0063B992    xor         eax,eax
 0063B994    mov         dword ptr [esp],eax
 0063B997    mov         dword ptr [esp+4],0BFF00000
 0063B99F    fld         qword ptr [esp]
 0063B9A2    add         esp,0C
 0063B9A5    pop         edi
 0063B9A6    pop         esi
 0063B9A7    pop         ebx
 0063B9A8    ret
*}
end;

//0063B9B4
function TWiimoteManager.AnyBestLeftTrigger(n:Integer):Boolean;
begin
{*
 0063B9B4    push        ebx
 0063B9B5    push        esi
 0063B9B6    push        edi
 0063B9B7    push        ebp
 0063B9B8    mov         esi,edx
 0063B9BA    mov         ebp,eax
 0063B9BC    test        esi,esi
>0063B9BE    jle         0063BA97
 0063B9C4    mov         edx,esi
 0063B9C6    mov         eax,ebp
 0063B9C8    call        TWiimoteManager.GetAny
 0063B9CD    mov         ebx,eax
 0063B9CF    test        ebx,ebx
>0063B9D1    jne         0063B9DA
 0063B9D3    xor         ebx,ebx
>0063B9D5    jmp         0063BACC
 0063B9DA    mov         eax,ebx
 0063B9DC    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063B9E2    call        @IsClass
 0063B9E7    test        al,al
>0063B9E9    je          0063B9F9
 0063B9EB    mov         eax,ebx
 0063B9ED    call        TPS3ControllerObject.L1
 0063B9F2    mov         ebx,eax
>0063B9F4    jmp         0063BACC
 0063B9F9    mov         eax,ebx
 0063B9FB    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063BA01    call        @IsClass
 0063BA06    test        al,al
>0063BA08    je          0063BA93
 0063BA0E    mov         eax,dword ptr [ebx+4B4]
 0063BA14    cmp         byte ptr [eax+444],0
>0063BA1B    je          0063BA29
 0063BA1D    call        TNunchukObject.Z
 0063BA22    mov         ebx,eax
>0063BA24    jmp         0063BACC
 0063BA29    mov         eax,dword ptr [ebx+4B8]
 0063BA2F    cmp         byte ptr [eax+8],0
>0063BA33    je          0063BA65
 0063BA35    mov         eax,dword ptr [ebx+4B8]
 0063BA3B    call        TClassicObject.LFull
 0063BA40    test        al,al
>0063BA42    jne         0063BA5F
 0063BA44    mov         eax,dword ptr [ebx+4B8]
 0063BA4A    call        TClassicObject.L
 0063BA4F    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063BA55    wait
 0063BA56    fnstsw      al
 0063BA58    sahf
>0063BA59    ja          0063BA5F
 0063BA5B    xor         eax,eax
>0063BA5D    jmp         0063BA61
 0063BA5F    mov         al,1
 0063BA61    mov         ebx,eax
>0063BA63    jmp         0063BACC
 0063BA65    mov         eax,dword ptr [ebx+4BC]
 0063BA6B    cmp         byte ptr [eax+8],0
>0063BA6F    je          0063BA7A
 0063BA71    call        TGuitarObject.Fret1
 0063BA76    mov         ebx,eax
>0063BA78    jmp         0063BACC
 0063BA7A    mov         eax,dword ptr [ebx+4C0]
 0063BA80    cmp         byte ptr [eax+8],0
>0063BA84    je          0063BA8F
 0063BA86    call        TDrumsObject.Yellow
 0063BA8B    mov         ebx,eax
>0063BA8D    jmp         0063BACC
 0063BA8F    xor         ebx,ebx
>0063BA91    jmp         0063BACC
 0063BA93    xor         ebx,ebx
>0063BA95    jmp         0063BACC
 0063BA97    xor         ebx,ebx
 0063BA99    mov         eax,ebp
 0063BA9B    call        TWiimoteManager.AnyCount
 0063BAA0    mov         edi,eax
 0063BAA2    test        edi,edi
>0063BAA4    jle         0063BACC
 0063BAA6    mov         esi,1
 0063BAAB    test        bl,bl
>0063BAAD    jne         0063BAC0
 0063BAAF    mov         edx,esi
 0063BAB1    mov         eax,ebp
 0063BAB3    call        TWiimoteManager.AnyBestLeftTrigger
 0063BAB8    test        al,al
>0063BABA    jne         0063BAC0
 0063BABC    xor         eax,eax
>0063BABE    jmp         0063BAC2
 0063BAC0    mov         al,1
 0063BAC2    mov         ebx,eax
 0063BAC4    test        bl,bl
>0063BAC6    jne         0063BACC
 0063BAC8    inc         esi
 0063BAC9    dec         edi
>0063BACA    jne         0063BAAB
 0063BACC    mov         eax,ebx
 0063BACE    pop         ebp
 0063BACF    pop         edi
 0063BAD0    pop         esi
 0063BAD1    pop         ebx
 0063BAD2    ret
*}
end;

//0063BAD4
function TWiimoteManager.AnyBestRightTrigger(n:Integer):Boolean;
begin
{*
 0063BAD4    push        ebx
 0063BAD5    push        esi
 0063BAD6    push        edi
 0063BAD7    push        ebp
 0063BAD8    mov         esi,edx
 0063BADA    mov         ebp,eax
 0063BADC    test        esi,esi
>0063BADE    jle         0063BBC0
 0063BAE4    mov         edx,esi
 0063BAE6    mov         eax,ebp
 0063BAE8    call        TWiimoteManager.GetAny
 0063BAED    mov         ebx,eax
 0063BAEF    test        ebx,ebx
>0063BAF1    jne         0063BAFA
 0063BAF3    xor         ebx,ebx
>0063BAF5    jmp         0063BBF5
 0063BAFA    mov         eax,ebx
 0063BAFC    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063BB02    call        @IsClass
 0063BB07    test        al,al
>0063BB09    je          0063BB19
 0063BB0B    mov         eax,ebx
 0063BB0D    call        TPS3ControllerObject.R1
 0063BB12    mov         ebx,eax
>0063BB14    jmp         0063BBF5
 0063BB19    mov         eax,ebx
 0063BB1B    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063BB21    call        @IsClass
 0063BB26    test        al,al
>0063BB28    je          0063BBBC
 0063BB2E    mov         eax,dword ptr [ebx+4B4]
 0063BB34    cmp         byte ptr [eax+444],0
>0063BB3B    je          0063BB4B
 0063BB3D    mov         eax,ebx
 0063BB3F    call        TWiimoteObject.B
 0063BB44    mov         ebx,eax
>0063BB46    jmp         0063BBF5
 0063BB4B    mov         eax,dword ptr [ebx+4B8]
 0063BB51    cmp         byte ptr [eax+8],0
>0063BB55    je          0063BB87
 0063BB57    mov         eax,dword ptr [ebx+4B8]
 0063BB5D    call        TClassicObject.RFull
 0063BB62    test        al,al
>0063BB64    jne         0063BB81
 0063BB66    mov         eax,dword ptr [ebx+4B8]
 0063BB6C    call        TClassicObject.R
 0063BB71    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063BB77    wait
 0063BB78    fnstsw      al
 0063BB7A    sahf
>0063BB7B    ja          0063BB81
 0063BB7D    xor         eax,eax
>0063BB7F    jmp         0063BB83
 0063BB81    mov         al,1
 0063BB83    mov         ebx,eax
>0063BB85    jmp         0063BBF5
 0063BB87    mov         eax,dword ptr [ebx+4BC]
 0063BB8D    cmp         byte ptr [eax+8],0
>0063BB91    je          0063BB9C
 0063BB93    call        TGuitarObject.StrumDown
 0063BB98    mov         ebx,eax
>0063BB9A    jmp         0063BBF5
 0063BB9C    mov         eax,dword ptr [ebx+4C0]
 0063BBA2    cmp         byte ptr [eax+8],0
>0063BBA6    je          0063BBB1
 0063BBA8    call        TDrumsObject.Orange
 0063BBAD    mov         ebx,eax
>0063BBAF    jmp         0063BBF5
 0063BBB1    mov         eax,ebx
 0063BBB3    call        TWiimoteObject.B
 0063BBB8    mov         ebx,eax
>0063BBBA    jmp         0063BBF5
 0063BBBC    xor         ebx,ebx
>0063BBBE    jmp         0063BBF5
 0063BBC0    xor         ebx,ebx
 0063BBC2    mov         eax,ebp
 0063BBC4    call        TWiimoteManager.AnyCount
 0063BBC9    mov         edi,eax
 0063BBCB    test        edi,edi
>0063BBCD    jle         0063BBF5
 0063BBCF    mov         esi,1
 0063BBD4    test        bl,bl
>0063BBD6    jne         0063BBE9
 0063BBD8    mov         edx,esi
 0063BBDA    mov         eax,ebp
 0063BBDC    call        TWiimoteManager.AnyBestRightTrigger
 0063BBE1    test        al,al
>0063BBE3    jne         0063BBE9
 0063BBE5    xor         eax,eax
>0063BBE7    jmp         0063BBEB
 0063BBE9    mov         al,1
 0063BBEB    mov         ebx,eax
 0063BBED    test        bl,bl
>0063BBEF    jne         0063BBF5
 0063BBF1    inc         esi
 0063BBF2    dec         edi
>0063BBF3    jne         0063BBD4
 0063BBF5    mov         eax,ebx
 0063BBF7    pop         ebp
 0063BBF8    pop         edi
 0063BBF9    pop         esi
 0063BBFA    pop         ebx
 0063BBFB    ret
*}
end;

//0063BBFC
function TWiimoteManager.AnyBottomLeftTrigger(n:Integer):Boolean;
begin
{*
 0063BBFC    push        ebx
 0063BBFD    push        esi
 0063BBFE    push        edi
 0063BBFF    push        ebp
 0063BC00    mov         esi,edx
 0063BC02    mov         ebp,eax
 0063BC04    test        esi,esi
>0063BC06    jle         0063BCBE
 0063BC0C    mov         edx,esi
 0063BC0E    mov         eax,ebp
 0063BC10    call        TWiimoteManager.GetAny
 0063BC15    mov         ebx,eax
 0063BC17    test        ebx,ebx
>0063BC19    jne         0063BC22
 0063BC1B    xor         ebx,ebx
>0063BC1D    jmp         0063BCF3
 0063BC22    mov         eax,ebx
 0063BC24    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063BC2A    call        @IsClass
 0063BC2F    test        al,al
>0063BC31    je          0063BC41
 0063BC33    mov         eax,ebx
 0063BC35    call        TPS3ControllerObject.L2
 0063BC3A    mov         ebx,eax
>0063BC3C    jmp         0063BCF3
 0063BC41    mov         eax,ebx
 0063BC43    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063BC49    call        @IsClass
 0063BC4E    test        al,al
>0063BC50    je          0063BCBA
 0063BC52    mov         eax,ebx
 0063BC54    mov         edx,dword ptr [eax+4B4]
 0063BC5A    cmp         byte ptr [edx+444],0
>0063BC61    je          0063BC71
 0063BC63    mov         eax,edx
 0063BC65    call        TNunchukObject.Z
 0063BC6A    mov         ebx,eax
>0063BC6C    jmp         0063BCF3
 0063BC71    mov         edx,dword ptr [eax+4B8]
 0063BC77    cmp         byte ptr [edx+8],0
>0063BC7B    je          0063BC88
 0063BC7D    mov         eax,edx
 0063BC7F    call        TClassicObject.ZL
 0063BC84    mov         ebx,eax
>0063BC86    jmp         0063BCF3
 0063BC88    mov         edx,dword ptr [eax+4BC]
 0063BC8E    cmp         byte ptr [edx+8],0
>0063BC92    je          0063BC9F
 0063BC94    mov         eax,edx
 0063BC96    call        TGuitarObject.Fret2
 0063BC9B    mov         ebx,eax
>0063BC9D    jmp         0063BCF3
 0063BC9F    mov         edx,dword ptr [eax+4C0]
 0063BCA5    cmp         byte ptr [edx+8],0
>0063BCA9    je          0063BCB6
 0063BCAB    mov         eax,edx
 0063BCAD    call        TDrumsObject.HiHat
 0063BCB2    mov         ebx,eax
>0063BCB4    jmp         0063BCF3
 0063BCB6    xor         ebx,ebx
>0063BCB8    jmp         0063BCF3
 0063BCBA    xor         ebx,ebx
>0063BCBC    jmp         0063BCF3
 0063BCBE    xor         ebx,ebx
 0063BCC0    mov         eax,ebp
 0063BCC2    call        TWiimoteManager.AnyCount
 0063BCC7    mov         edi,eax
 0063BCC9    test        edi,edi
>0063BCCB    jle         0063BCF3
 0063BCCD    mov         esi,1
 0063BCD2    test        bl,bl
>0063BCD4    jne         0063BCE7
 0063BCD6    mov         edx,esi
 0063BCD8    mov         eax,ebp
 0063BCDA    call        TWiimoteManager.AnyBottomLeftTrigger
 0063BCDF    test        al,al
>0063BCE1    jne         0063BCE7
 0063BCE3    xor         eax,eax
>0063BCE5    jmp         0063BCE9
 0063BCE7    mov         al,1
 0063BCE9    mov         ebx,eax
 0063BCEB    test        bl,bl
>0063BCED    jne         0063BCF3
 0063BCEF    inc         esi
 0063BCF0    dec         edi
>0063BCF1    jne         0063BCD2
 0063BCF3    mov         eax,ebx
 0063BCF5    pop         ebp
 0063BCF6    pop         edi
 0063BCF7    pop         esi
 0063BCF8    pop         ebx
 0063BCF9    ret
*}
end;

//0063BCFC
function TWiimoteManager.AnyBottomRightTrigger(n:Integer):Boolean;
begin
{*
 0063BCFC    push        ebx
 0063BCFD    push        esi
 0063BCFE    push        edi
 0063BCFF    push        ebp
 0063BD00    mov         esi,edx
 0063BD02    mov         ebp,eax
 0063BD04    test        esi,esi
>0063BD06    jle         0063BDB7
 0063BD0C    mov         edx,esi
 0063BD0E    mov         eax,ebp
 0063BD10    call        TWiimoteManager.GetAny
 0063BD15    mov         ebx,eax
 0063BD17    test        ebx,ebx
>0063BD19    jne         0063BD22
 0063BD1B    xor         ebx,ebx
>0063BD1D    jmp         0063BDEC
 0063BD22    mov         eax,ebx
 0063BD24    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063BD2A    call        @IsClass
 0063BD2F    test        al,al
>0063BD31    je          0063BD41
 0063BD33    mov         eax,ebx
 0063BD35    call        TPS3ControllerObject.R2
 0063BD3A    mov         ebx,eax
>0063BD3C    jmp         0063BDEC
 0063BD41    mov         eax,ebx
 0063BD43    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063BD49    call        @IsClass
 0063BD4E    test        al,al
>0063BD50    je          0063BDB3
 0063BD52    mov         eax,ebx
 0063BD54    mov         edx,dword ptr [eax+4B4]
 0063BD5A    cmp         byte ptr [edx+444],0
>0063BD61    je          0063BD6A
 0063BD63    xor         ebx,ebx
>0063BD65    jmp         0063BDEC
 0063BD6A    mov         edx,dword ptr [eax+4B8]
 0063BD70    cmp         byte ptr [edx+8],0
>0063BD74    je          0063BD81
 0063BD76    mov         eax,edx
 0063BD78    call        TClassicObject.ZR
 0063BD7D    mov         ebx,eax
>0063BD7F    jmp         0063BDEC
 0063BD81    mov         edx,dword ptr [eax+4BC]
 0063BD87    cmp         byte ptr [edx+8],0
>0063BD8B    je          0063BD98
 0063BD8D    mov         eax,edx
 0063BD8F    call        TGuitarObject.StrumDown
 0063BD94    mov         ebx,eax
>0063BD96    jmp         0063BDEC
 0063BD98    mov         edx,dword ptr [eax+4C0]
 0063BD9E    cmp         byte ptr [edx+8],0
>0063BDA2    je          0063BDAF
 0063BDA4    mov         eax,edx
 0063BDA6    call        TDrumsObject.Bass
 0063BDAB    mov         ebx,eax
>0063BDAD    jmp         0063BDEC
 0063BDAF    xor         ebx,ebx
>0063BDB1    jmp         0063BDEC
 0063BDB3    xor         ebx,ebx
>0063BDB5    jmp         0063BDEC
 0063BDB7    xor         ebx,ebx
 0063BDB9    mov         eax,ebp
 0063BDBB    call        TWiimoteManager.AnyCount
 0063BDC0    mov         edi,eax
 0063BDC2    test        edi,edi
>0063BDC4    jle         0063BDEC
 0063BDC6    mov         esi,1
 0063BDCB    test        bl,bl
>0063BDCD    jne         0063BDE0
 0063BDCF    mov         edx,esi
 0063BDD1    mov         eax,ebp
 0063BDD3    call        TWiimoteManager.AnyBottomRightTrigger
 0063BDD8    test        al,al
>0063BDDA    jne         0063BDE0
 0063BDDC    xor         eax,eax
>0063BDDE    jmp         0063BDE2
 0063BDE0    mov         al,1
 0063BDE2    mov         ebx,eax
 0063BDE4    test        bl,bl
>0063BDE6    jne         0063BDEC
 0063BDE8    inc         esi
 0063BDE9    dec         edi
>0063BDEA    jne         0063BDCB
 0063BDEC    mov         eax,ebx
 0063BDEE    pop         ebp
 0063BDEF    pop         edi
 0063BDF0    pop         esi
 0063BDF1    pop         ebx
 0063BDF2    ret
*}
end;

//0063BDF4
function TWiimoteManager.AnyButton1(n:Integer):Boolean;
begin
{*
 0063BDF4    push        ebx
 0063BDF5    push        esi
 0063BDF6    push        edi
 0063BDF7    push        ebp
 0063BDF8    mov         esi,edx
 0063BDFA    mov         ebp,eax
 0063BDFC    test        esi,esi
>0063BDFE    jle         0063BED4
 0063BE04    mov         edx,esi
 0063BE06    mov         eax,ebp
 0063BE08    call        TWiimoteManager.GetAny
 0063BE0D    mov         ebx,eax
 0063BE0F    test        ebx,ebx
>0063BE11    jne         0063BE1A
 0063BE13    xor         ebx,ebx
>0063BE15    jmp         0063BF09
 0063BE1A    mov         eax,ebx
 0063BE1C    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063BE22    call        @IsClass
 0063BE27    test        al,al
>0063BE29    je          0063BE39
 0063BE2B    mov         eax,ebx
 0063BE2D    call        TPS3ControllerObject.Circle
 0063BE32    mov         ebx,eax
>0063BE34    jmp         0063BF09
 0063BE39    mov         eax,ebx
 0063BE3B    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063BE41    call        @IsClass
 0063BE46    test        al,al
>0063BE48    je          0063BED0
 0063BE4E    mov         eax,dword ptr [ebx+4B4]
 0063BE54    cmp         byte ptr [eax+444],0
>0063BE5B    je          0063BE6B
 0063BE5D    mov         eax,ebx
 0063BE5F    call        TWiimoteObject.A
 0063BE64    mov         ebx,eax
>0063BE66    jmp         0063BF09
 0063BE6B    mov         eax,dword ptr [ebx+4B8]
 0063BE71    cmp         byte ptr [eax+8],0
>0063BE75    je          0063BE9B
 0063BE77    mov         eax,dword ptr [ebx+4B8]
 0063BE7D    call        TClassicObject.A
 0063BE82    test        al,al
>0063BE84    jne         0063BE95
 0063BE86    mov         eax,ebx
 0063BE88    call        TWiimoteObject.A
 0063BE8D    test        al,al
>0063BE8F    jne         0063BE95
 0063BE91    xor         eax,eax
>0063BE93    jmp         0063BE97
 0063BE95    mov         al,1
 0063BE97    mov         ebx,eax
>0063BE99    jmp         0063BF09
 0063BE9B    mov         eax,dword ptr [ebx+4BC]
 0063BEA1    cmp         byte ptr [eax+8],0
>0063BEA5    je          0063BEB0
 0063BEA7    call        TGuitarObject.Fret1
 0063BEAC    mov         ebx,eax
>0063BEAE    jmp         0063BF09
 0063BEB0    mov         eax,dword ptr [ebx+4C0]
 0063BEB6    cmp         byte ptr [eax+8],0
>0063BEBA    je          0063BEC5
 0063BEBC    call        TDrumsObject.Red
 0063BEC1    mov         ebx,eax
>0063BEC3    jmp         0063BF09
 0063BEC5    mov         eax,ebx
 0063BEC7    call        TWiimoteObject.A
 0063BECC    mov         ebx,eax
>0063BECE    jmp         0063BF09
 0063BED0    xor         ebx,ebx
>0063BED2    jmp         0063BF09
 0063BED4    xor         ebx,ebx
 0063BED6    mov         eax,ebp
 0063BED8    call        TWiimoteManager.AnyCount
 0063BEDD    mov         edi,eax
 0063BEDF    test        edi,edi
>0063BEE1    jle         0063BF09
 0063BEE3    mov         esi,1
 0063BEE8    test        bl,bl
>0063BEEA    jne         0063BEFD
 0063BEEC    mov         edx,esi
 0063BEEE    mov         eax,ebp
 0063BEF0    call        TWiimoteManager.AnyButton1
 0063BEF5    test        al,al
>0063BEF7    jne         0063BEFD
 0063BEF9    xor         eax,eax
>0063BEFB    jmp         0063BEFF
 0063BEFD    mov         al,1
 0063BEFF    mov         ebx,eax
 0063BF01    test        bl,bl
>0063BF03    jne         0063BF09
 0063BF05    inc         esi
 0063BF06    dec         edi
>0063BF07    jne         0063BEE8
 0063BF09    mov         eax,ebx
 0063BF0B    pop         ebp
 0063BF0C    pop         edi
 0063BF0D    pop         esi
 0063BF0E    pop         ebx
 0063BF0F    ret
*}
end;

//0063BF10
function TWiimoteManager.AnyButton10(n:Integer):Boolean;
begin
{*
 0063BF10    push        ebx
 0063BF11    push        esi
 0063BF12    push        edi
 0063BF13    push        ebp
 0063BF14    mov         esi,edx
 0063BF16    mov         ebp,eax
 0063BF18    test        esi,esi
>0063BF1A    jle         0063BFD1
 0063BF20    mov         edx,esi
 0063BF22    mov         eax,ebp
 0063BF24    call        TWiimoteManager.GetAny
 0063BF29    mov         ebx,eax
 0063BF2B    test        ebx,ebx
>0063BF2D    jne         0063BF36
 0063BF2F    xor         ebx,ebx
>0063BF31    jmp         0063C006
 0063BF36    mov         eax,ebx
 0063BF38    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063BF3E    call        @IsClass
 0063BF43    test        al,al
>0063BF45    je          0063BF55
 0063BF47    mov         eax,ebx
 0063BF49    call        TPS3ControllerObject.Start
 0063BF4E    mov         ebx,eax
>0063BF50    jmp         0063C006
 0063BF55    mov         eax,ebx
 0063BF57    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063BF5D    call        @IsClass
 0063BF62    test        al,al
>0063BF64    je          0063BFCD
 0063BF66    mov         eax,ebx
 0063BF68    mov         edx,dword ptr [eax+4B4]
 0063BF6E    cmp         byte ptr [edx+444],0
>0063BF75    je          0063BF83
 0063BF77    call        TWiimoteObject.Down
 0063BF7C    mov         ebx,eax
>0063BF7E    jmp         0063C006
 0063BF83    mov         edx,dword ptr [eax+4B8]
 0063BF89    cmp         byte ptr [edx+8],0
>0063BF8D    je          0063BF9A
 0063BF8F    mov         eax,edx
 0063BF91    call        TClassicObject.Plus
 0063BF96    mov         ebx,eax
>0063BF98    jmp         0063C006
 0063BF9A    mov         edx,dword ptr [eax+4BC]
 0063BFA0    cmp         byte ptr [edx+8],0
>0063BFA4    je          0063BFAF
 0063BFA6    call        TWiimoteObject.A
 0063BFAB    mov         ebx,eax
>0063BFAD    jmp         0063C006
 0063BFAF    mov         edx,dword ptr [eax+4C0]
 0063BFB5    cmp         byte ptr [edx+8],0
>0063BFB9    je          0063BFC4
 0063BFBB    call        TWiimoteObject.Two
 0063BFC0    mov         ebx,eax
>0063BFC2    jmp         0063C006
 0063BFC4    call        TWiimoteObject.Left
 0063BFC9    mov         ebx,eax
>0063BFCB    jmp         0063C006
 0063BFCD    xor         ebx,ebx
>0063BFCF    jmp         0063C006
 0063BFD1    xor         ebx,ebx
 0063BFD3    mov         eax,ebp
 0063BFD5    call        TWiimoteManager.AnyCount
 0063BFDA    mov         edi,eax
 0063BFDC    test        edi,edi
>0063BFDE    jle         0063C006
 0063BFE0    mov         esi,1
 0063BFE5    test        bl,bl
>0063BFE7    jne         0063BFFA
 0063BFE9    mov         edx,esi
 0063BFEB    mov         eax,ebp
 0063BFED    call        TWiimoteManager.AnyButton10
 0063BFF2    test        al,al
>0063BFF4    jne         0063BFFA
 0063BFF6    xor         eax,eax
>0063BFF8    jmp         0063BFFC
 0063BFFA    mov         al,1
 0063BFFC    mov         ebx,eax
 0063BFFE    test        bl,bl
>0063C000    jne         0063C006
 0063C002    inc         esi
 0063C003    dec         edi
>0063C004    jne         0063BFE5
 0063C006    mov         eax,ebx
 0063C008    pop         ebp
 0063C009    pop         edi
 0063C00A    pop         esi
 0063C00B    pop         ebx
 0063C00C    ret
*}
end;

//0063C010
function TWiimoteManager.AnyButton11(n:Integer):Boolean;
begin
{*
 0063C010    push        ebx
 0063C011    push        esi
 0063C012    push        edi
 0063C013    push        ebp
 0063C014    mov         esi,edx
 0063C016    mov         ebp,eax
 0063C018    test        esi,esi
>0063C01A    jle         0063C0D1
 0063C020    mov         edx,esi
 0063C022    mov         eax,ebp
 0063C024    call        TWiimoteManager.GetAny
 0063C029    mov         ebx,eax
 0063C02B    test        ebx,ebx
>0063C02D    jne         0063C036
 0063C02F    xor         ebx,ebx
>0063C031    jmp         0063C106
 0063C036    mov         eax,ebx
 0063C038    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063C03E    call        @IsClass
 0063C043    test        al,al
>0063C045    je          0063C055
 0063C047    mov         eax,ebx
 0063C049    call        TPS3ControllerObject.PS
 0063C04E    mov         ebx,eax
>0063C050    jmp         0063C106
 0063C055    mov         eax,ebx
 0063C057    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063C05D    call        @IsClass
 0063C062    test        al,al
>0063C064    je          0063C0CD
 0063C066    mov         eax,ebx
 0063C068    mov         edx,dword ptr [eax+4B4]
 0063C06E    cmp         byte ptr [edx+444],0
>0063C075    je          0063C083
 0063C077    call        TWiimoteObject.Right
 0063C07C    mov         ebx,eax
>0063C07E    jmp         0063C106
 0063C083    mov         edx,dword ptr [eax+4B8]
 0063C089    cmp         byte ptr [edx+8],0
>0063C08D    je          0063C09A
 0063C08F    mov         eax,edx
 0063C091    call        TClassicObject.HOME
 0063C096    mov         ebx,eax
>0063C098    jmp         0063C106
 0063C09A    mov         edx,dword ptr [eax+4BC]
 0063C0A0    cmp         byte ptr [edx+8],0
>0063C0A4    je          0063C0AF
 0063C0A6    call        TWiimoteObject.One
 0063C0AB    mov         ebx,eax
>0063C0AD    jmp         0063C106
 0063C0AF    mov         edx,dword ptr [eax+4C0]
 0063C0B5    cmp         byte ptr [edx+8],0
>0063C0B9    je          0063C0C4
 0063C0BB    call        TWiimoteObject.Minus
 0063C0C0    mov         ebx,eax
>0063C0C2    jmp         0063C106
 0063C0C4    call        TWiimoteObject.Up
 0063C0C9    mov         ebx,eax
>0063C0CB    jmp         0063C106
 0063C0CD    xor         ebx,ebx
>0063C0CF    jmp         0063C106
 0063C0D1    xor         ebx,ebx
 0063C0D3    mov         eax,ebp
 0063C0D5    call        TWiimoteManager.AnyCount
 0063C0DA    mov         edi,eax
 0063C0DC    test        edi,edi
>0063C0DE    jle         0063C106
 0063C0E0    mov         esi,1
 0063C0E5    test        bl,bl
>0063C0E7    jne         0063C0FA
 0063C0E9    mov         edx,esi
 0063C0EB    mov         eax,ebp
 0063C0ED    call        TWiimoteManager.AnyButton11
 0063C0F2    test        al,al
>0063C0F4    jne         0063C0FA
 0063C0F6    xor         eax,eax
>0063C0F8    jmp         0063C0FC
 0063C0FA    mov         al,1
 0063C0FC    mov         ebx,eax
 0063C0FE    test        bl,bl
>0063C100    jne         0063C106
 0063C102    inc         esi
 0063C103    dec         edi
>0063C104    jne         0063C0E5
 0063C106    mov         eax,ebx
 0063C108    pop         ebp
 0063C109    pop         edi
 0063C10A    pop         esi
 0063C10B    pop         ebx
 0063C10C    ret
*}
end;

//0063C110
function TWiimoteManager.AnyButton12(n:Integer):Boolean;
begin
{*
 0063C110    push        ebx
 0063C111    push        esi
 0063C112    push        edi
 0063C113    push        ebp
 0063C114    mov         esi,edx
 0063C116    mov         ebp,eax
 0063C118    test        esi,esi
>0063C11A    jle         0063C1C9
 0063C120    mov         edx,esi
 0063C122    mov         eax,ebp
 0063C124    call        TWiimoteManager.GetAny
 0063C129    mov         ebx,eax
 0063C12B    test        ebx,ebx
>0063C12D    jne         0063C136
 0063C12F    xor         ebx,ebx
>0063C131    jmp         0063C1FE
 0063C136    mov         eax,ebx
 0063C138    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063C13E    call        @IsClass
 0063C143    test        al,al
>0063C145    je          0063C155
 0063C147    mov         eax,ebx
 0063C149    call        TPS3ControllerObject.L3
 0063C14E    mov         ebx,eax
>0063C150    jmp         0063C1FE
 0063C155    mov         eax,ebx
 0063C157    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063C15D    call        @IsClass
 0063C162    test        al,al
>0063C164    je          0063C1C5
 0063C166    mov         eax,ebx
 0063C168    mov         edx,dword ptr [eax+4B4]
 0063C16E    cmp         byte ptr [edx+444],0
>0063C175    je          0063C180
 0063C177    call        TWiimoteObject.Left
 0063C17C    mov         ebx,eax
>0063C17E    jmp         0063C1FE
 0063C180    mov         edx,dword ptr [eax+4B8]
 0063C186    cmp         byte ptr [edx+8],0
>0063C18A    je          0063C197
 0063C18C    mov         eax,edx
 0063C18E    call        TClassicObject.Down
 0063C193    mov         ebx,eax
>0063C195    jmp         0063C1FE
 0063C197    mov         edx,dword ptr [eax+4BC]
 0063C19D    cmp         byte ptr [edx+8],0
>0063C1A1    je          0063C1AC
 0063C1A3    call        TWiimoteObject.Two
 0063C1A8    mov         ebx,eax
>0063C1AA    jmp         0063C1FE
 0063C1AC    mov         edx,dword ptr [eax+4C0]
 0063C1B2    cmp         byte ptr [edx+8],0
>0063C1B6    je          0063C1C1
 0063C1B8    call        TWiimoteObject.Plus
 0063C1BD    mov         ebx,eax
>0063C1BF    jmp         0063C1FE
 0063C1C1    xor         ebx,ebx
>0063C1C3    jmp         0063C1FE
 0063C1C5    xor         ebx,ebx
>0063C1C7    jmp         0063C1FE
 0063C1C9    xor         ebx,ebx
 0063C1CB    mov         eax,ebp
 0063C1CD    call        TWiimoteManager.AnyCount
 0063C1D2    mov         edi,eax
 0063C1D4    test        edi,edi
>0063C1D6    jle         0063C1FE
 0063C1D8    mov         esi,1
 0063C1DD    test        bl,bl
>0063C1DF    jne         0063C1F2
 0063C1E1    mov         edx,esi
 0063C1E3    mov         eax,ebp
 0063C1E5    call        TWiimoteManager.AnyButton12
 0063C1EA    test        al,al
>0063C1EC    jne         0063C1F2
 0063C1EE    xor         eax,eax
>0063C1F0    jmp         0063C1F4
 0063C1F2    mov         al,1
 0063C1F4    mov         ebx,eax
 0063C1F6    test        bl,bl
>0063C1F8    jne         0063C1FE
 0063C1FA    inc         esi
 0063C1FB    dec         edi
>0063C1FC    jne         0063C1DD
 0063C1FE    mov         eax,ebx
 0063C200    pop         ebp
 0063C201    pop         edi
 0063C202    pop         esi
 0063C203    pop         ebx
 0063C204    ret
*}
end;

//0063C208
function TWiimoteManager.AnyButton13(n:Integer):Boolean;
begin
{*
 0063C208    push        ebx
 0063C209    push        esi
 0063C20A    push        edi
 0063C20B    push        ebp
 0063C20C    mov         esi,edx
 0063C20E    mov         ebp,eax
 0063C210    test        esi,esi
>0063C212    jle         0063C2C1
 0063C218    mov         edx,esi
 0063C21A    mov         eax,ebp
 0063C21C    call        TWiimoteManager.GetAny
 0063C221    mov         ebx,eax
 0063C223    test        ebx,ebx
>0063C225    jne         0063C22E
 0063C227    xor         ebx,ebx
>0063C229    jmp         0063C2F6
 0063C22E    mov         eax,ebx
 0063C230    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063C236    call        @IsClass
 0063C23B    test        al,al
>0063C23D    je          0063C24D
 0063C23F    mov         eax,ebx
 0063C241    call        TPS3ControllerObject.R3
 0063C246    mov         ebx,eax
>0063C248    jmp         0063C2F6
 0063C24D    mov         eax,ebx
 0063C24F    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063C255    call        @IsClass
 0063C25A    test        al,al
>0063C25C    je          0063C2BD
 0063C25E    mov         eax,ebx
 0063C260    mov         edx,dword ptr [eax+4B4]
 0063C266    cmp         byte ptr [edx+444],0
>0063C26D    je          0063C278
 0063C26F    call        TWiimoteObject.Up
 0063C274    mov         ebx,eax
>0063C276    jmp         0063C2F6
 0063C278    mov         edx,dword ptr [eax+4B8]
 0063C27E    cmp         byte ptr [edx+8],0
>0063C282    je          0063C28F
 0063C284    mov         eax,edx
 0063C286    call        TClassicObject.Right
 0063C28B    mov         ebx,eax
>0063C28D    jmp         0063C2F6
 0063C28F    mov         edx,dword ptr [eax+4BC]
 0063C295    cmp         byte ptr [edx+8],0
>0063C299    je          0063C2A4
 0063C29B    call        TWiimoteObject.Down
 0063C2A0    mov         ebx,eax
>0063C2A2    jmp         0063C2F6
 0063C2A4    mov         edx,dword ptr [eax+4C0]
 0063C2AA    cmp         byte ptr [edx+8],0
>0063C2AE    je          0063C2B9
 0063C2B0    call        TWiimoteObject.HOME
 0063C2B5    mov         ebx,eax
>0063C2B7    jmp         0063C2F6
 0063C2B9    xor         ebx,ebx
>0063C2BB    jmp         0063C2F6
 0063C2BD    xor         ebx,ebx
>0063C2BF    jmp         0063C2F6
 0063C2C1    xor         ebx,ebx
 0063C2C3    mov         eax,ebp
 0063C2C5    call        TWiimoteManager.AnyCount
 0063C2CA    mov         edi,eax
 0063C2CC    test        edi,edi
>0063C2CE    jle         0063C2F6
 0063C2D0    mov         esi,1
 0063C2D5    test        bl,bl
>0063C2D7    jne         0063C2EA
 0063C2D9    mov         edx,esi
 0063C2DB    mov         eax,ebp
 0063C2DD    call        TWiimoteManager.AnyButton13
 0063C2E2    test        al,al
>0063C2E4    jne         0063C2EA
 0063C2E6    xor         eax,eax
>0063C2E8    jmp         0063C2EC
 0063C2EA    mov         al,1
 0063C2EC    mov         ebx,eax
 0063C2EE    test        bl,bl
>0063C2F0    jne         0063C2F6
 0063C2F2    inc         esi
 0063C2F3    dec         edi
>0063C2F4    jne         0063C2D5
 0063C2F6    mov         eax,ebx
 0063C2F8    pop         ebp
 0063C2F9    pop         edi
 0063C2FA    pop         esi
 0063C2FB    pop         ebx
 0063C2FC    ret
*}
end;

//0063C300
function TWiimoteManager.AnyButton14(n:Integer):Boolean;
begin
{*
 0063C300    push        ebx
 0063C301    push        esi
 0063C302    push        edi
 0063C303    push        ebp
 0063C304    mov         esi,edx
 0063C306    mov         ebp,eax
 0063C308    test        esi,esi
>0063C30A    jle         0063C3B4
 0063C310    mov         edx,esi
 0063C312    mov         eax,ebp
 0063C314    call        TWiimoteManager.GetAny
 0063C319    mov         ebx,eax
 0063C31B    test        ebx,ebx
>0063C31D    jne         0063C326
 0063C31F    xor         ebx,ebx
>0063C321    jmp         0063C3E9
 0063C326    mov         eax,ebx
 0063C328    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063C32E    call        @IsClass
 0063C333    test        al,al
>0063C335    je          0063C345
 0063C337    mov         eax,ebx
 0063C339    call        TPS3ControllerObject.Up
 0063C33E    mov         ebx,eax
>0063C340    jmp         0063C3E9
 0063C345    mov         eax,ebx
 0063C347    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063C34D    call        @IsClass
 0063C352    test        al,al
>0063C354    je          0063C3B0
 0063C356    mov         eax,ebx
 0063C358    mov         edx,dword ptr [eax+4B4]
 0063C35E    cmp         byte ptr [edx+444],0
>0063C365    je          0063C36B
 0063C367    xor         ebx,ebx
>0063C369    jmp         0063C3E9
 0063C36B    mov         edx,dword ptr [eax+4B8]
 0063C371    cmp         byte ptr [edx+8],0
>0063C375    je          0063C382
 0063C377    mov         eax,edx
 0063C379    call        TClassicObject.Left
 0063C37E    mov         ebx,eax
>0063C380    jmp         0063C3E9
 0063C382    mov         edx,dword ptr [eax+4BC]
 0063C388    cmp         byte ptr [edx+8],0
>0063C38C    je          0063C397
 0063C38E    call        TWiimoteObject.Right
 0063C393    mov         ebx,eax
>0063C395    jmp         0063C3E9
 0063C397    mov         edx,dword ptr [eax+4C0]
 0063C39D    cmp         byte ptr [edx+8],0
>0063C3A1    je          0063C3AC
 0063C3A3    call        TWiimoteObject.Down
 0063C3A8    mov         ebx,eax
>0063C3AA    jmp         0063C3E9
 0063C3AC    xor         ebx,ebx
>0063C3AE    jmp         0063C3E9
 0063C3B0    xor         ebx,ebx
>0063C3B2    jmp         0063C3E9
 0063C3B4    xor         ebx,ebx
 0063C3B6    mov         eax,ebp
 0063C3B8    call        TWiimoteManager.AnyCount
 0063C3BD    mov         edi,eax
 0063C3BF    test        edi,edi
>0063C3C1    jle         0063C3E9
 0063C3C3    mov         esi,1
 0063C3C8    test        bl,bl
>0063C3CA    jne         0063C3DD
 0063C3CC    mov         edx,esi
 0063C3CE    mov         eax,ebp
 0063C3D0    call        TWiimoteManager.AnyButton14
 0063C3D5    test        al,al
>0063C3D7    jne         0063C3DD
 0063C3D9    xor         eax,eax
>0063C3DB    jmp         0063C3DF
 0063C3DD    mov         al,1
 0063C3DF    mov         ebx,eax
 0063C3E1    test        bl,bl
>0063C3E3    jne         0063C3E9
 0063C3E5    inc         esi
 0063C3E6    dec         edi
>0063C3E7    jne         0063C3C8
 0063C3E9    mov         eax,ebx
 0063C3EB    pop         ebp
 0063C3EC    pop         edi
 0063C3ED    pop         esi
 0063C3EE    pop         ebx
 0063C3EF    ret
*}
end;

//0063C3F0
function TWiimoteManager.AnyButton15(n:Integer):Boolean;
begin
{*
 0063C3F0    push        ebx
 0063C3F1    push        esi
 0063C3F2    push        edi
 0063C3F3    push        ebp
 0063C3F4    mov         esi,edx
 0063C3F6    mov         ebp,eax
 0063C3F8    test        esi,esi
>0063C3FA    jle         0063C4A4
 0063C400    mov         edx,esi
 0063C402    mov         eax,ebp
 0063C404    call        TWiimoteManager.GetAny
 0063C409    mov         ebx,eax
 0063C40B    test        ebx,ebx
>0063C40D    jne         0063C416
 0063C40F    xor         ebx,ebx
>0063C411    jmp         0063C4D9
 0063C416    mov         eax,ebx
 0063C418    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063C41E    call        @IsClass
 0063C423    test        al,al
>0063C425    je          0063C435
 0063C427    mov         eax,ebx
 0063C429    call        TPS3ControllerObject.Down
 0063C42E    mov         ebx,eax
>0063C430    jmp         0063C4D9
 0063C435    mov         eax,ebx
 0063C437    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063C43D    call        @IsClass
 0063C442    test        al,al
>0063C444    je          0063C4A0
 0063C446    mov         eax,ebx
 0063C448    mov         edx,dword ptr [eax+4B4]
 0063C44E    cmp         byte ptr [edx+444],0
>0063C455    je          0063C45B
 0063C457    xor         ebx,ebx
>0063C459    jmp         0063C4D9
 0063C45B    mov         edx,dword ptr [eax+4B8]
 0063C461    cmp         byte ptr [edx+8],0
>0063C465    je          0063C472
 0063C467    mov         eax,edx
 0063C469    call        TClassicObject.Up
 0063C46E    mov         ebx,eax
>0063C470    jmp         0063C4D9
 0063C472    mov         edx,dword ptr [eax+4BC]
 0063C478    cmp         byte ptr [edx+8],0
>0063C47C    je          0063C487
 0063C47E    call        TWiimoteObject.Left
 0063C483    mov         ebx,eax
>0063C485    jmp         0063C4D9
 0063C487    mov         edx,dword ptr [eax+4C0]
 0063C48D    cmp         byte ptr [edx+8],0
>0063C491    je          0063C49C
 0063C493    call        TWiimoteObject.Right
 0063C498    mov         ebx,eax
>0063C49A    jmp         0063C4D9
 0063C49C    xor         ebx,ebx
>0063C49E    jmp         0063C4D9
 0063C4A0    xor         ebx,ebx
>0063C4A2    jmp         0063C4D9
 0063C4A4    xor         ebx,ebx
 0063C4A6    mov         eax,ebp
 0063C4A8    call        TWiimoteManager.AnyCount
 0063C4AD    mov         edi,eax
 0063C4AF    test        edi,edi
>0063C4B1    jle         0063C4D9
 0063C4B3    mov         esi,1
 0063C4B8    test        bl,bl
>0063C4BA    jne         0063C4CD
 0063C4BC    mov         edx,esi
 0063C4BE    mov         eax,ebp
 0063C4C0    call        TWiimoteManager.AnyButton15
 0063C4C5    test        al,al
>0063C4C7    jne         0063C4CD
 0063C4C9    xor         eax,eax
>0063C4CB    jmp         0063C4CF
 0063C4CD    mov         al,1
 0063C4CF    mov         ebx,eax
 0063C4D1    test        bl,bl
>0063C4D3    jne         0063C4D9
 0063C4D5    inc         esi
 0063C4D6    dec         edi
>0063C4D7    jne         0063C4B8
 0063C4D9    mov         eax,ebx
 0063C4DB    pop         ebp
 0063C4DC    pop         edi
 0063C4DD    pop         esi
 0063C4DE    pop         ebx
 0063C4DF    ret
*}
end;

//0063C4E0
function TWiimoteManager.AnyButton16(n:Integer):Boolean;
begin
{*
 0063C4E0    push        ebx
 0063C4E1    push        esi
 0063C4E2    push        edi
 0063C4E3    push        ebp
 0063C4E4    mov         esi,edx
 0063C4E6    mov         ebp,eax
 0063C4E8    test        esi,esi
>0063C4EA    jle         0063C594
 0063C4F0    mov         edx,esi
 0063C4F2    mov         eax,ebp
 0063C4F4    call        TWiimoteManager.GetAny
 0063C4F9    mov         ebx,eax
 0063C4FB    test        ebx,ebx
>0063C4FD    jne         0063C506
 0063C4FF    xor         ebx,ebx
>0063C501    jmp         0063C5C9
 0063C506    mov         eax,ebx
 0063C508    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063C50E    call        @IsClass
 0063C513    test        al,al
>0063C515    je          0063C525
 0063C517    mov         eax,ebx
 0063C519    call        TPS3ControllerObject.Left
 0063C51E    mov         ebx,eax
>0063C520    jmp         0063C5C9
 0063C525    mov         eax,ebx
 0063C527    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063C52D    call        @IsClass
 0063C532    test        al,al
>0063C534    je          0063C590
 0063C536    mov         eax,ebx
 0063C538    mov         edx,dword ptr [eax+4B4]
 0063C53E    cmp         byte ptr [edx+444],0
>0063C545    je          0063C54B
 0063C547    xor         ebx,ebx
>0063C549    jmp         0063C5C9
 0063C54B    mov         edx,dword ptr [eax+4B8]
 0063C551    cmp         byte ptr [edx+8],0
>0063C555    je          0063C562
 0063C557    mov         eax,edx
 0063C559    call        TClassicObject.Unused
 0063C55E    mov         ebx,eax
>0063C560    jmp         0063C5C9
 0063C562    mov         edx,dword ptr [eax+4BC]
 0063C568    cmp         byte ptr [edx+8],0
>0063C56C    je          0063C577
 0063C56E    call        TWiimoteObject.Up
 0063C573    mov         ebx,eax
>0063C575    jmp         0063C5C9
 0063C577    mov         edx,dword ptr [eax+4C0]
 0063C57D    cmp         byte ptr [edx+8],0
>0063C581    je          0063C58C
 0063C583    call        TWiimoteObject.Left
 0063C588    mov         ebx,eax
>0063C58A    jmp         0063C5C9
 0063C58C    xor         ebx,ebx
>0063C58E    jmp         0063C5C9
 0063C590    xor         ebx,ebx
>0063C592    jmp         0063C5C9
 0063C594    xor         ebx,ebx
 0063C596    mov         eax,ebp
 0063C598    call        TWiimoteManager.AnyCount
 0063C59D    mov         edi,eax
 0063C59F    test        edi,edi
>0063C5A1    jle         0063C5C9
 0063C5A3    mov         esi,1
 0063C5A8    test        bl,bl
>0063C5AA    jne         0063C5BD
 0063C5AC    mov         edx,esi
 0063C5AE    mov         eax,ebp
 0063C5B0    call        TWiimoteManager.AnyButton16
 0063C5B5    test        al,al
>0063C5B7    jne         0063C5BD
 0063C5B9    xor         eax,eax
>0063C5BB    jmp         0063C5BF
 0063C5BD    mov         al,1
 0063C5BF    mov         ebx,eax
 0063C5C1    test        bl,bl
>0063C5C3    jne         0063C5C9
 0063C5C5    inc         esi
 0063C5C6    dec         edi
>0063C5C7    jne         0063C5A8
 0063C5C9    mov         eax,ebx
 0063C5CB    pop         ebp
 0063C5CC    pop         edi
 0063C5CD    pop         esi
 0063C5CE    pop         ebx
 0063C5CF    ret
*}
end;

//0063C5D0
function TWiimoteManager.AnyButton17(n:Integer):Boolean;
begin
{*
 0063C5D0    push        ebx
 0063C5D1    push        esi
 0063C5D2    push        edi
 0063C5D3    push        ebp
 0063C5D4    mov         esi,edx
 0063C5D6    mov         ebp,eax
 0063C5D8    test        esi,esi
>0063C5DA    jle         0063C678
 0063C5E0    mov         edx,esi
 0063C5E2    mov         eax,ebp
 0063C5E4    call        TWiimoteManager.GetAny
 0063C5E9    mov         ebx,eax
 0063C5EB    test        ebx,ebx
>0063C5ED    jne         0063C5F6
 0063C5EF    xor         ebx,ebx
>0063C5F1    jmp         0063C6AD
 0063C5F6    mov         eax,ebx
 0063C5F8    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063C5FE    call        @IsClass
 0063C603    test        al,al
>0063C605    je          0063C615
 0063C607    mov         eax,ebx
 0063C609    call        TPS3ControllerObject.Right
 0063C60E    mov         ebx,eax
>0063C610    jmp         0063C6AD
 0063C615    mov         eax,ebx
 0063C617    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063C61D    call        @IsClass
 0063C622    test        al,al
>0063C624    je          0063C674
 0063C626    mov         eax,ebx
 0063C628    mov         edx,dword ptr [eax+4B4]
 0063C62E    cmp         byte ptr [edx+444],0
>0063C635    je          0063C63B
 0063C637    xor         ebx,ebx
>0063C639    jmp         0063C6AD
 0063C63B    mov         edx,dword ptr [eax+4B8]
 0063C641    cmp         byte ptr [edx+8],0
>0063C645    je          0063C64B
 0063C647    xor         ebx,ebx
>0063C649    jmp         0063C6AD
 0063C64B    mov         edx,dword ptr [eax+4BC]
 0063C651    cmp         byte ptr [edx+8],0
>0063C655    je          0063C65B
 0063C657    xor         ebx,ebx
>0063C659    jmp         0063C6AD
 0063C65B    mov         edx,dword ptr [eax+4C0]
 0063C661    cmp         byte ptr [edx+8],0
>0063C665    je          0063C670
 0063C667    call        TWiimoteObject.Up
 0063C66C    mov         ebx,eax
>0063C66E    jmp         0063C6AD
 0063C670    xor         ebx,ebx
>0063C672    jmp         0063C6AD
 0063C674    xor         ebx,ebx
>0063C676    jmp         0063C6AD
 0063C678    xor         ebx,ebx
 0063C67A    mov         eax,ebp
 0063C67C    call        TWiimoteManager.AnyCount
 0063C681    mov         edi,eax
 0063C683    test        edi,edi
>0063C685    jle         0063C6AD
 0063C687    mov         esi,1
 0063C68C    test        bl,bl
>0063C68E    jne         0063C6A1
 0063C690    mov         edx,esi
 0063C692    mov         eax,ebp
 0063C694    call        TWiimoteManager.AnyButton17
 0063C699    test        al,al
>0063C69B    jne         0063C6A1
 0063C69D    xor         eax,eax
>0063C69F    jmp         0063C6A3
 0063C6A1    mov         al,1
 0063C6A3    mov         ebx,eax
 0063C6A5    test        bl,bl
>0063C6A7    jne         0063C6AD
 0063C6A9    inc         esi
 0063C6AA    dec         edi
>0063C6AB    jne         0063C68C
 0063C6AD    mov         eax,ebx
 0063C6AF    pop         ebp
 0063C6B0    pop         edi
 0063C6B1    pop         esi
 0063C6B2    pop         ebx
 0063C6B3    ret
*}
end;

//0063C6B4
function TWiimoteManager.AnyButton2(n:Integer):Boolean;
begin
{*
 0063C6B4    push        ebx
 0063C6B5    push        esi
 0063C6B6    push        edi
 0063C6B7    push        ebp
 0063C6B8    mov         esi,edx
 0063C6BA    mov         ebp,eax
 0063C6BC    test        esi,esi
>0063C6BE    jle         0063C794
 0063C6C4    mov         edx,esi
 0063C6C6    mov         eax,ebp
 0063C6C8    call        TWiimoteManager.GetAny
 0063C6CD    mov         ebx,eax
 0063C6CF    test        ebx,ebx
>0063C6D1    jne         0063C6DA
 0063C6D3    xor         ebx,ebx
>0063C6D5    jmp         0063C7C9
 0063C6DA    mov         eax,ebx
 0063C6DC    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063C6E2    call        @IsClass
 0063C6E7    test        al,al
>0063C6E9    je          0063C6F9
 0063C6EB    mov         eax,ebx
 0063C6ED    call        TPS3ControllerObject.Cross
 0063C6F2    mov         ebx,eax
>0063C6F4    jmp         0063C7C9
 0063C6F9    mov         eax,ebx
 0063C6FB    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063C701    call        @IsClass
 0063C706    test        al,al
>0063C708    je          0063C790
 0063C70E    mov         eax,dword ptr [ebx+4B4]
 0063C714    cmp         byte ptr [eax+444],0
>0063C71B    je          0063C72B
 0063C71D    mov         eax,ebx
 0063C71F    call        TWiimoteObject.B
 0063C724    mov         ebx,eax
>0063C726    jmp         0063C7C9
 0063C72B    mov         eax,dword ptr [ebx+4B8]
 0063C731    cmp         byte ptr [eax+8],0
>0063C735    je          0063C75B
 0063C737    mov         eax,dword ptr [ebx+4B8]
 0063C73D    call        TClassicObject.B
 0063C742    test        al,al
>0063C744    jne         0063C755
 0063C746    mov         eax,ebx
 0063C748    call        TWiimoteObject.B
 0063C74D    test        al,al
>0063C74F    jne         0063C755
 0063C751    xor         eax,eax
>0063C753    jmp         0063C757
 0063C755    mov         al,1
 0063C757    mov         ebx,eax
>0063C759    jmp         0063C7C9
 0063C75B    mov         eax,dword ptr [ebx+4BC]
 0063C761    cmp         byte ptr [eax+8],0
>0063C765    je          0063C770
 0063C767    call        TGuitarObject.Fret2
 0063C76C    mov         ebx,eax
>0063C76E    jmp         0063C7C9
 0063C770    mov         eax,dword ptr [ebx+4C0]
 0063C776    cmp         byte ptr [eax+8],0
>0063C77A    je          0063C785
 0063C77C    call        TDrumsObject.Blue
 0063C781    mov         ebx,eax
>0063C783    jmp         0063C7C9
 0063C785    mov         eax,ebx
 0063C787    call        TWiimoteObject.B
 0063C78C    mov         ebx,eax
>0063C78E    jmp         0063C7C9
 0063C790    xor         ebx,ebx
>0063C792    jmp         0063C7C9
 0063C794    xor         ebx,ebx
 0063C796    mov         eax,ebp
 0063C798    call        TWiimoteManager.AnyCount
 0063C79D    mov         edi,eax
 0063C79F    test        edi,edi
>0063C7A1    jle         0063C7C9
 0063C7A3    mov         esi,1
 0063C7A8    test        bl,bl
>0063C7AA    jne         0063C7BD
 0063C7AC    mov         edx,esi
 0063C7AE    mov         eax,ebp
 0063C7B0    call        TWiimoteManager.AnyButton2
 0063C7B5    test        al,al
>0063C7B7    jne         0063C7BD
 0063C7B9    xor         eax,eax
>0063C7BB    jmp         0063C7BF
 0063C7BD    mov         al,1
 0063C7BF    mov         ebx,eax
 0063C7C1    test        bl,bl
>0063C7C3    jne         0063C7C9
 0063C7C5    inc         esi
 0063C7C6    dec         edi
>0063C7C7    jne         0063C7A8
 0063C7C9    mov         eax,ebx
 0063C7CB    pop         ebp
 0063C7CC    pop         edi
 0063C7CD    pop         esi
 0063C7CE    pop         ebx
 0063C7CF    ret
*}
end;

//0063C7D0
function TWiimoteManager.AnyButton3(n:Integer):Boolean;
begin
{*
 0063C7D0    push        ebx
 0063C7D1    push        esi
 0063C7D2    push        edi
 0063C7D3    push        ebp
 0063C7D4    mov         esi,edx
 0063C7D6    mov         ebp,eax
 0063C7D8    test        esi,esi
>0063C7DA    jle         0063C8AE
 0063C7E0    mov         edx,esi
 0063C7E2    mov         eax,ebp
 0063C7E4    call        TWiimoteManager.GetAny
 0063C7E9    mov         ebx,eax
 0063C7EB    test        ebx,ebx
>0063C7ED    jne         0063C7F6
 0063C7EF    xor         ebx,ebx
>0063C7F1    jmp         0063C8E3
 0063C7F6    mov         eax,ebx
 0063C7F8    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063C7FE    call        @IsClass
 0063C803    test        al,al
>0063C805    je          0063C815
 0063C807    mov         eax,ebx
 0063C809    call        TPS3ControllerObject.Triangle
 0063C80E    mov         ebx,eax
>0063C810    jmp         0063C8E3
 0063C815    mov         eax,ebx
 0063C817    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063C81D    call        @IsClass
 0063C822    test        al,al
>0063C824    je          0063C8AA
 0063C82A    mov         eax,dword ptr [ebx+4B4]
 0063C830    cmp         byte ptr [eax+444],0
>0063C837    je          0063C845
 0063C839    call        TNunchukObject.Z
 0063C83E    mov         ebx,eax
>0063C840    jmp         0063C8E3
 0063C845    mov         eax,dword ptr [ebx+4B8]
 0063C84B    cmp         byte ptr [eax+8],0
>0063C84F    je          0063C875
 0063C851    mov         eax,dword ptr [ebx+4B8]
 0063C857    call        TClassicObject.X
 0063C85C    test        al,al
>0063C85E    jne         0063C86F
 0063C860    mov         eax,ebx
 0063C862    call        TWiimoteObject.One
 0063C867    test        al,al
>0063C869    jne         0063C86F
 0063C86B    xor         eax,eax
>0063C86D    jmp         0063C871
 0063C86F    mov         al,1
 0063C871    mov         ebx,eax
>0063C873    jmp         0063C8E3
 0063C875    mov         eax,dword ptr [ebx+4BC]
 0063C87B    cmp         byte ptr [eax+8],0
>0063C87F    je          0063C88A
 0063C881    call        TGuitarObject.Fret3
 0063C886    mov         ebx,eax
>0063C888    jmp         0063C8E3
 0063C88A    mov         eax,dword ptr [ebx+4C0]
 0063C890    cmp         byte ptr [eax+8],0
>0063C894    je          0063C89F
 0063C896    call        TDrumsObject.Green
 0063C89B    mov         ebx,eax
>0063C89D    jmp         0063C8E3
 0063C89F    mov         eax,ebx
 0063C8A1    call        TWiimoteObject.One
 0063C8A6    mov         ebx,eax
>0063C8A8    jmp         0063C8E3
 0063C8AA    xor         ebx,ebx
>0063C8AC    jmp         0063C8E3
 0063C8AE    xor         ebx,ebx
 0063C8B0    mov         eax,ebp
 0063C8B2    call        TWiimoteManager.AnyCount
 0063C8B7    mov         edi,eax
 0063C8B9    test        edi,edi
>0063C8BB    jle         0063C8E3
 0063C8BD    mov         esi,1
 0063C8C2    test        bl,bl
>0063C8C4    jne         0063C8D7
 0063C8C6    mov         edx,esi
 0063C8C8    mov         eax,ebp
 0063C8CA    call        TWiimoteManager.AnyButton3
 0063C8CF    test        al,al
>0063C8D1    jne         0063C8D7
 0063C8D3    xor         eax,eax
>0063C8D5    jmp         0063C8D9
 0063C8D7    mov         al,1
 0063C8D9    mov         ebx,eax
 0063C8DB    test        bl,bl
>0063C8DD    jne         0063C8E3
 0063C8DF    inc         esi
 0063C8E0    dec         edi
>0063C8E1    jne         0063C8C2
 0063C8E3    mov         eax,ebx
 0063C8E5    pop         ebp
 0063C8E6    pop         edi
 0063C8E7    pop         esi
 0063C8E8    pop         ebx
 0063C8E9    ret
*}
end;

//0063C8EC
function TWiimoteManager.AnyButton4(n:Integer):Boolean;
begin
{*
 0063C8EC    push        ebx
 0063C8ED    push        esi
 0063C8EE    push        edi
 0063C8EF    push        ebp
 0063C8F0    mov         esi,edx
 0063C8F2    mov         ebp,eax
 0063C8F4    test        esi,esi
>0063C8F6    jle         0063C9CA
 0063C8FC    mov         edx,esi
 0063C8FE    mov         eax,ebp
 0063C900    call        TWiimoteManager.GetAny
 0063C905    mov         ebx,eax
 0063C907    test        ebx,ebx
>0063C909    jne         0063C912
 0063C90B    xor         ebx,ebx
>0063C90D    jmp         0063C9FF
 0063C912    mov         eax,ebx
 0063C914    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063C91A    call        @IsClass
 0063C91F    test        al,al
>0063C921    je          0063C931
 0063C923    mov         eax,ebx
 0063C925    call        TPS3ControllerObject.Square
 0063C92A    mov         ebx,eax
>0063C92C    jmp         0063C9FF
 0063C931    mov         eax,ebx
 0063C933    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063C939    call        @IsClass
 0063C93E    test        al,al
>0063C940    je          0063C9C6
 0063C946    mov         eax,dword ptr [ebx+4B4]
 0063C94C    cmp         byte ptr [eax+444],0
>0063C953    je          0063C961
 0063C955    call        TNunchukObject.C
 0063C95A    mov         ebx,eax
>0063C95C    jmp         0063C9FF
 0063C961    mov         eax,dword ptr [ebx+4B8]
 0063C967    cmp         byte ptr [eax+8],0
>0063C96B    je          0063C991
 0063C96D    mov         eax,dword ptr [ebx+4B8]
 0063C973    call        TClassicObject.Y
 0063C978    test        al,al
>0063C97A    jne         0063C98B
 0063C97C    mov         eax,ebx
 0063C97E    call        TWiimoteObject.Two
 0063C983    test        al,al
>0063C985    jne         0063C98B
 0063C987    xor         eax,eax
>0063C989    jmp         0063C98D
 0063C98B    mov         al,1
 0063C98D    mov         ebx,eax
>0063C98F    jmp         0063C9FF
 0063C991    mov         eax,dword ptr [ebx+4BC]
 0063C997    cmp         byte ptr [eax+8],0
>0063C99B    je          0063C9A6
 0063C99D    call        TGuitarObject.Fret4
 0063C9A2    mov         ebx,eax
>0063C9A4    jmp         0063C9FF
 0063C9A6    mov         eax,dword ptr [ebx+4C0]
 0063C9AC    cmp         byte ptr [eax+8],0
>0063C9B0    je          0063C9BB
 0063C9B2    call        TDrumsObject.Yellow
 0063C9B7    mov         ebx,eax
>0063C9B9    jmp         0063C9FF
 0063C9BB    mov         eax,ebx
 0063C9BD    call        TWiimoteObject.Two
 0063C9C2    mov         ebx,eax
>0063C9C4    jmp         0063C9FF
 0063C9C6    xor         ebx,ebx
>0063C9C8    jmp         0063C9FF
 0063C9CA    xor         ebx,ebx
 0063C9CC    mov         eax,ebp
 0063C9CE    call        TWiimoteManager.AnyCount
 0063C9D3    mov         edi,eax
 0063C9D5    test        edi,edi
>0063C9D7    jle         0063C9FF
 0063C9D9    mov         esi,1
 0063C9DE    test        bl,bl
>0063C9E0    jne         0063C9F3
 0063C9E2    mov         edx,esi
 0063C9E4    mov         eax,ebp
 0063C9E6    call        TWiimoteManager.AnyButton4
 0063C9EB    test        al,al
>0063C9ED    jne         0063C9F3
 0063C9EF    xor         eax,eax
>0063C9F1    jmp         0063C9F5
 0063C9F3    mov         al,1
 0063C9F5    mov         ebx,eax
 0063C9F7    test        bl,bl
>0063C9F9    jne         0063C9FF
 0063C9FB    inc         esi
 0063C9FC    dec         edi
>0063C9FD    jne         0063C9DE
 0063C9FF    mov         eax,ebx
 0063CA01    pop         ebp
 0063CA02    pop         edi
 0063CA03    pop         esi
 0063CA04    pop         ebx
 0063CA05    ret
*}
end;

//0063CA08
function TWiimoteManager.AnyButton5(n:Integer):Boolean;
begin
{*
 0063CA08    push        ebx
 0063CA09    push        esi
 0063CA0A    push        edi
 0063CA0B    push        ebp
 0063CA0C    mov         esi,edx
 0063CA0E    mov         ebp,eax
 0063CA10    test        esi,esi
>0063CA12    jle         0063CAF4
 0063CA18    mov         edx,esi
 0063CA1A    mov         eax,ebp
 0063CA1C    call        TWiimoteManager.GetAny
 0063CA21    mov         ebx,eax
 0063CA23    test        ebx,ebx
>0063CA25    jne         0063CA2E
 0063CA27    xor         ebx,ebx
>0063CA29    jmp         0063CB29
 0063CA2E    mov         eax,ebx
 0063CA30    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063CA36    call        @IsClass
 0063CA3B    test        al,al
>0063CA3D    je          0063CA4D
 0063CA3F    mov         eax,ebx
 0063CA41    call        TPS3ControllerObject.R1
 0063CA46    mov         ebx,eax
>0063CA48    jmp         0063CB29
 0063CA4D    mov         eax,ebx
 0063CA4F    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063CA55    call        @IsClass
 0063CA5A    test        al,al
>0063CA5C    je          0063CAF0
 0063CA62    mov         eax,dword ptr [ebx+4B4]
 0063CA68    cmp         byte ptr [eax+444],0
>0063CA6F    je          0063CA7F
 0063CA71    mov         eax,ebx
 0063CA73    call        TWiimoteObject.One
 0063CA78    mov         ebx,eax
>0063CA7A    jmp         0063CB29
 0063CA7F    mov         eax,dword ptr [ebx+4B8]
 0063CA85    cmp         byte ptr [eax+8],0
>0063CA89    je          0063CABB
 0063CA8B    mov         eax,dword ptr [ebx+4B8]
 0063CA91    call        TClassicObject.RFull
 0063CA96    test        al,al
>0063CA98    jne         0063CAB5
 0063CA9A    mov         eax,dword ptr [ebx+4B8]
 0063CAA0    call        TClassicObject.R
 0063CAA5    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063CAAB    wait
 0063CAAC    fnstsw      al
 0063CAAE    sahf
>0063CAAF    ja          0063CAB5
 0063CAB1    xor         eax,eax
>0063CAB3    jmp         0063CAB7
 0063CAB5    mov         al,1
 0063CAB7    mov         ebx,eax
>0063CAB9    jmp         0063CB29
 0063CABB    mov         eax,dword ptr [ebx+4BC]
 0063CAC1    cmp         byte ptr [eax+8],0
>0063CAC5    je          0063CAD0
 0063CAC7    call        TGuitarObject.Fret5
 0063CACC    mov         ebx,eax
>0063CACE    jmp         0063CB29
 0063CAD0    mov         eax,dword ptr [ebx+4C0]
 0063CAD6    cmp         byte ptr [eax+8],0
>0063CADA    je          0063CAE5
 0063CADC    call        TDrumsObject.Yellow
 0063CAE1    mov         ebx,eax
>0063CAE3    jmp         0063CB29
 0063CAE5    mov         eax,ebx
 0063CAE7    call        TWiimoteObject.Minus
 0063CAEC    mov         ebx,eax
>0063CAEE    jmp         0063CB29
 0063CAF0    xor         ebx,ebx
>0063CAF2    jmp         0063CB29
 0063CAF4    xor         ebx,ebx
 0063CAF6    mov         eax,ebp
 0063CAF8    call        TWiimoteManager.AnyCount
 0063CAFD    mov         edi,eax
 0063CAFF    test        edi,edi
>0063CB01    jle         0063CB29
 0063CB03    mov         esi,1
 0063CB08    test        bl,bl
>0063CB0A    jne         0063CB1D
 0063CB0C    mov         edx,esi
 0063CB0E    mov         eax,ebp
 0063CB10    call        TWiimoteManager.AnyButton5
 0063CB15    test        al,al
>0063CB17    jne         0063CB1D
 0063CB19    xor         eax,eax
>0063CB1B    jmp         0063CB1F
 0063CB1D    mov         al,1
 0063CB1F    mov         ebx,eax
 0063CB21    test        bl,bl
>0063CB23    jne         0063CB29
 0063CB25    inc         esi
 0063CB26    dec         edi
>0063CB27    jne         0063CB08
 0063CB29    mov         eax,ebx
 0063CB2B    pop         ebp
 0063CB2C    pop         edi
 0063CB2D    pop         esi
 0063CB2E    pop         ebx
 0063CB2F    ret
*}
end;

//0063CB30
function TWiimoteManager.AnyButton6(n:Integer):Boolean;
begin
{*
 0063CB30    push        ebx
 0063CB31    push        esi
 0063CB32    push        edi
 0063CB33    push        ebp
 0063CB34    mov         esi,edx
 0063CB36    mov         ebp,eax
 0063CB38    test        esi,esi
>0063CB3A    jle         0063CC1C
 0063CB40    mov         edx,esi
 0063CB42    mov         eax,ebp
 0063CB44    call        TWiimoteManager.GetAny
 0063CB49    mov         ebx,eax
 0063CB4B    test        ebx,ebx
>0063CB4D    jne         0063CB56
 0063CB4F    xor         ebx,ebx
>0063CB51    jmp         0063CC51
 0063CB56    mov         eax,ebx
 0063CB58    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063CB5E    call        @IsClass
 0063CB63    test        al,al
>0063CB65    je          0063CB75
 0063CB67    mov         eax,ebx
 0063CB69    call        TPS3ControllerObject.L1
 0063CB6E    mov         ebx,eax
>0063CB70    jmp         0063CC51
 0063CB75    mov         eax,ebx
 0063CB77    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063CB7D    call        @IsClass
 0063CB82    test        al,al
>0063CB84    je          0063CC18
 0063CB8A    mov         eax,dword ptr [ebx+4B4]
 0063CB90    cmp         byte ptr [eax+444],0
>0063CB97    je          0063CBA7
 0063CB99    mov         eax,ebx
 0063CB9B    call        TWiimoteObject.Two
 0063CBA0    mov         ebx,eax
>0063CBA2    jmp         0063CC51
 0063CBA7    mov         eax,dword ptr [ebx+4B8]
 0063CBAD    cmp         byte ptr [eax+8],0
>0063CBB1    je          0063CBE3
 0063CBB3    mov         eax,dword ptr [ebx+4B8]
 0063CBB9    call        TClassicObject.LFull
 0063CBBE    test        al,al
>0063CBC0    jne         0063CBDD
 0063CBC2    mov         eax,dword ptr [ebx+4B8]
 0063CBC8    call        TClassicObject.L
 0063CBCD    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063CBD3    wait
 0063CBD4    fnstsw      al
 0063CBD6    sahf
>0063CBD7    ja          0063CBDD
 0063CBD9    xor         eax,eax
>0063CBDB    jmp         0063CBDF
 0063CBDD    mov         al,1
 0063CBDF    mov         ebx,eax
>0063CBE1    jmp         0063CC51
 0063CBE3    mov         eax,dword ptr [ebx+4BC]
 0063CBE9    cmp         byte ptr [eax+8],0
>0063CBED    je          0063CBF8
 0063CBEF    call        TGuitarObject.Minus
 0063CBF4    mov         ebx,eax
>0063CBF6    jmp         0063CC51
 0063CBF8    mov         eax,dword ptr [ebx+4C0]
 0063CBFE    cmp         byte ptr [eax+8],0
>0063CC02    je          0063CC0D
 0063CC04    call        TDrumsObject.Minus
 0063CC09    mov         ebx,eax
>0063CC0B    jmp         0063CC51
 0063CC0D    mov         eax,ebx
 0063CC0F    call        TWiimoteObject.Plus
 0063CC14    mov         ebx,eax
>0063CC16    jmp         0063CC51
 0063CC18    xor         ebx,ebx
>0063CC1A    jmp         0063CC51
 0063CC1C    xor         ebx,ebx
 0063CC1E    mov         eax,ebp
 0063CC20    call        TWiimoteManager.AnyCount
 0063CC25    mov         edi,eax
 0063CC27    test        edi,edi
>0063CC29    jle         0063CC51
 0063CC2B    mov         esi,1
 0063CC30    test        bl,bl
>0063CC32    jne         0063CC45
 0063CC34    mov         edx,esi
 0063CC36    mov         eax,ebp
 0063CC38    call        TWiimoteManager.AnyButton6
 0063CC3D    test        al,al
>0063CC3F    jne         0063CC45
 0063CC41    xor         eax,eax
>0063CC43    jmp         0063CC47
 0063CC45    mov         al,1
 0063CC47    mov         ebx,eax
 0063CC49    test        bl,bl
>0063CC4B    jne         0063CC51
 0063CC4D    inc         esi
 0063CC4E    dec         edi
>0063CC4F    jne         0063CC30
 0063CC51    mov         eax,ebx
 0063CC53    pop         ebp
 0063CC54    pop         edi
 0063CC55    pop         esi
 0063CC56    pop         ebx
 0063CC57    ret
*}
end;

//0063CC58
function TWiimoteManager.AnyButton7(n:Integer):Boolean;
begin
{*
 0063CC58    push        ebx
 0063CC59    push        esi
 0063CC5A    push        edi
 0063CC5B    push        ebp
 0063CC5C    mov         esi,edx
 0063CC5E    mov         ebp,eax
 0063CC60    test        esi,esi
>0063CC62    jle         0063CD1D
 0063CC68    mov         edx,esi
 0063CC6A    mov         eax,ebp
 0063CC6C    call        TWiimoteManager.GetAny
 0063CC71    mov         ebx,eax
 0063CC73    test        ebx,ebx
>0063CC75    jne         0063CC7E
 0063CC77    xor         ebx,ebx
>0063CC79    jmp         0063CD52
 0063CC7E    mov         eax,ebx
 0063CC80    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063CC86    call        @IsClass
 0063CC8B    test        al,al
>0063CC8D    je          0063CC9D
 0063CC8F    mov         eax,ebx
 0063CC91    call        TPS3ControllerObject.R2
 0063CC96    mov         ebx,eax
>0063CC98    jmp         0063CD52
 0063CC9D    mov         eax,ebx
 0063CC9F    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063CCA5    call        @IsClass
 0063CCAA    test        al,al
>0063CCAC    je          0063CD19
 0063CCAE    mov         eax,ebx
 0063CCB0    mov         edx,dword ptr [eax+4B4]
 0063CCB6    cmp         byte ptr [edx+444],0
>0063CCBD    je          0063CCCB
 0063CCBF    call        TWiimoteObject.Minus
 0063CCC4    mov         ebx,eax
>0063CCC6    jmp         0063CD52
 0063CCCB    mov         edx,dword ptr [eax+4B8]
 0063CCD1    cmp         byte ptr [edx+8],0
>0063CCD5    je          0063CCE2
 0063CCD7    mov         eax,edx
 0063CCD9    call        TClassicObject.ZR
 0063CCDE    mov         ebx,eax
>0063CCE0    jmp         0063CD52
 0063CCE2    mov         edx,dword ptr [eax+4BC]
 0063CCE8    cmp         byte ptr [edx+8],0
>0063CCEC    je          0063CCF9
 0063CCEE    mov         eax,edx
 0063CCF0    call        TGuitarObject.Plus
 0063CCF5    mov         ebx,eax
>0063CCF7    jmp         0063CD52
 0063CCF9    mov         edx,dword ptr [eax+4C0]
 0063CCFF    cmp         byte ptr [edx+8],0
>0063CD03    je          0063CD10
 0063CD05    mov         eax,edx
 0063CD07    call        TDrumsObject.Plus
 0063CD0C    mov         ebx,eax
>0063CD0E    jmp         0063CD52
 0063CD10    call        TWiimoteObject.HOME
 0063CD15    mov         ebx,eax
>0063CD17    jmp         0063CD52
 0063CD19    xor         ebx,ebx
>0063CD1B    jmp         0063CD52
 0063CD1D    xor         ebx,ebx
 0063CD1F    mov         eax,ebp
 0063CD21    call        TWiimoteManager.AnyCount
 0063CD26    mov         edi,eax
 0063CD28    test        edi,edi
>0063CD2A    jle         0063CD52
 0063CD2C    mov         esi,1
 0063CD31    test        bl,bl
>0063CD33    jne         0063CD46
 0063CD35    mov         edx,esi
 0063CD37    mov         eax,ebp
 0063CD39    call        TWiimoteManager.AnyButton7
 0063CD3E    test        al,al
>0063CD40    jne         0063CD46
 0063CD42    xor         eax,eax
>0063CD44    jmp         0063CD48
 0063CD46    mov         al,1
 0063CD48    mov         ebx,eax
 0063CD4A    test        bl,bl
>0063CD4C    jne         0063CD52
 0063CD4E    inc         esi
 0063CD4F    dec         edi
>0063CD50    jne         0063CD31
 0063CD52    mov         eax,ebx
 0063CD54    pop         ebp
 0063CD55    pop         edi
 0063CD56    pop         esi
 0063CD57    pop         ebx
 0063CD58    ret
*}
end;

//0063CD5C
function TWiimoteManager.AnyButton8(n:Integer):Boolean;
begin
{*
 0063CD5C    push        ebx
 0063CD5D    push        esi
 0063CD5E    push        edi
 0063CD5F    push        ebp
 0063CD60    mov         esi,edx
 0063CD62    mov         ebp,eax
 0063CD64    test        esi,esi
>0063CD66    jle         0063CE1F
 0063CD6C    mov         edx,esi
 0063CD6E    mov         eax,ebp
 0063CD70    call        TWiimoteManager.GetAny
 0063CD75    mov         ebx,eax
 0063CD77    test        ebx,ebx
>0063CD79    jne         0063CD82
 0063CD7B    xor         ebx,ebx
>0063CD7D    jmp         0063CE54
 0063CD82    mov         eax,ebx
 0063CD84    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063CD8A    call        @IsClass
 0063CD8F    test        al,al
>0063CD91    je          0063CDA1
 0063CD93    mov         eax,ebx
 0063CD95    call        TPS3ControllerObject.L2
 0063CD9A    mov         ebx,eax
>0063CD9C    jmp         0063CE54
 0063CDA1    mov         eax,ebx
 0063CDA3    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063CDA9    call        @IsClass
 0063CDAE    test        al,al
>0063CDB0    je          0063CE1B
 0063CDB2    mov         eax,ebx
 0063CDB4    mov         edx,dword ptr [eax+4B4]
 0063CDBA    cmp         byte ptr [edx+444],0
>0063CDC1    je          0063CDCF
 0063CDC3    call        TWiimoteObject.Plus
 0063CDC8    mov         ebx,eax
>0063CDCA    jmp         0063CE54
 0063CDCF    mov         edx,dword ptr [eax+4B8]
 0063CDD5    cmp         byte ptr [edx+8],0
>0063CDD9    je          0063CDE6
 0063CDDB    mov         eax,edx
 0063CDDD    call        TClassicObject.ZL
 0063CDE2    mov         ebx,eax
>0063CDE4    jmp         0063CE54
 0063CDE6    mov         edx,dword ptr [eax+4BC]
 0063CDEC    cmp         byte ptr [edx+8],0
>0063CDF0    je          0063CDFD
 0063CDF2    mov         eax,edx
 0063CDF4    call        TGuitarObject.StrumDown
 0063CDF9    mov         ebx,eax
>0063CDFB    jmp         0063CE54
 0063CDFD    mov         edx,dword ptr [eax+4C0]
 0063CE03    cmp         byte ptr [edx+8],0
>0063CE07    je          0063CE12
 0063CE09    call        TWiimoteObject.A
 0063CE0E    mov         ebx,eax
>0063CE10    jmp         0063CE54
 0063CE12    call        TWiimoteObject.Down
 0063CE17    mov         ebx,eax
>0063CE19    jmp         0063CE54
 0063CE1B    xor         ebx,ebx
>0063CE1D    jmp         0063CE54
 0063CE1F    xor         ebx,ebx
 0063CE21    mov         eax,ebp
 0063CE23    call        TWiimoteManager.AnyCount
 0063CE28    mov         edi,eax
 0063CE2A    test        edi,edi
>0063CE2C    jle         0063CE54
 0063CE2E    mov         esi,1
 0063CE33    test        bl,bl
>0063CE35    jne         0063CE48
 0063CE37    mov         edx,esi
 0063CE39    mov         eax,ebp
 0063CE3B    call        TWiimoteManager.AnyButton8
 0063CE40    test        al,al
>0063CE42    jne         0063CE48
 0063CE44    xor         eax,eax
>0063CE46    jmp         0063CE4A
 0063CE48    mov         al,1
 0063CE4A    mov         ebx,eax
 0063CE4C    test        bl,bl
>0063CE4E    jne         0063CE54
 0063CE50    inc         esi
 0063CE51    dec         edi
>0063CE52    jne         0063CE33
 0063CE54    mov         eax,ebx
 0063CE56    pop         ebp
 0063CE57    pop         edi
 0063CE58    pop         esi
 0063CE59    pop         ebx
 0063CE5A    ret
*}
end;

//0063CE5C
function TWiimoteManager.AnyButton9(n:Integer):Boolean;
begin
{*
 0063CE5C    push        ebx
 0063CE5D    push        esi
 0063CE5E    push        edi
 0063CE5F    push        ebp
 0063CE60    mov         esi,edx
 0063CE62    mov         ebp,eax
 0063CE64    test        esi,esi
>0063CE66    jle         0063CF1F
 0063CE6C    mov         edx,esi
 0063CE6E    mov         eax,ebp
 0063CE70    call        TWiimoteManager.GetAny
 0063CE75    mov         ebx,eax
 0063CE77    test        ebx,ebx
>0063CE79    jne         0063CE82
 0063CE7B    xor         ebx,ebx
>0063CE7D    jmp         0063CF54
 0063CE82    mov         eax,ebx
 0063CE84    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063CE8A    call        @IsClass
 0063CE8F    test        al,al
>0063CE91    je          0063CEA1
 0063CE93    mov         eax,ebx
 0063CE95    call        TPS3ControllerObject.Select
 0063CE9A    mov         ebx,eax
>0063CE9C    jmp         0063CF54
 0063CEA1    mov         eax,ebx
 0063CEA3    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063CEA9    call        @IsClass
 0063CEAE    test        al,al
>0063CEB0    je          0063CF1B
 0063CEB2    mov         eax,ebx
 0063CEB4    mov         edx,dword ptr [eax+4B4]
 0063CEBA    cmp         byte ptr [edx+444],0
>0063CEC1    je          0063CECF
 0063CEC3    call        TWiimoteObject.HOME
 0063CEC8    mov         ebx,eax
>0063CECA    jmp         0063CF54
 0063CECF    mov         edx,dword ptr [eax+4B8]
 0063CED5    cmp         byte ptr [edx+8],0
>0063CED9    je          0063CEE6
 0063CEDB    mov         eax,edx
 0063CEDD    call        TClassicObject.Minus
 0063CEE2    mov         ebx,eax
>0063CEE4    jmp         0063CF54
 0063CEE6    mov         edx,dword ptr [eax+4BC]
 0063CEEC    cmp         byte ptr [edx+8],0
>0063CEF0    je          0063CEFD
 0063CEF2    mov         eax,edx
 0063CEF4    call        TGuitarObject.StrumUp
 0063CEF9    mov         ebx,eax
>0063CEFB    jmp         0063CF54
 0063CEFD    mov         edx,dword ptr [eax+4C0]
 0063CF03    cmp         byte ptr [edx+8],0
>0063CF07    je          0063CF12
 0063CF09    call        TWiimoteObject.One
 0063CF0E    mov         ebx,eax
>0063CF10    jmp         0063CF54
 0063CF12    call        TWiimoteObject.Right
 0063CF17    mov         ebx,eax
>0063CF19    jmp         0063CF54
 0063CF1B    xor         ebx,ebx
>0063CF1D    jmp         0063CF54
 0063CF1F    xor         ebx,ebx
 0063CF21    mov         eax,ebp
 0063CF23    call        TWiimoteManager.AnyCount
 0063CF28    mov         edi,eax
 0063CF2A    test        edi,edi
>0063CF2C    jle         0063CF54
 0063CF2E    mov         esi,1
 0063CF33    test        bl,bl
>0063CF35    jne         0063CF48
 0063CF37    mov         edx,esi
 0063CF39    mov         eax,ebp
 0063CF3B    call        TWiimoteManager.AnyButton9
 0063CF40    test        al,al
>0063CF42    jne         0063CF48
 0063CF44    xor         eax,eax
>0063CF46    jmp         0063CF4A
 0063CF48    mov         al,1
 0063CF4A    mov         ebx,eax
 0063CF4C    test        bl,bl
>0063CF4E    jne         0063CF54
 0063CF50    inc         esi
 0063CF51    dec         edi
>0063CF52    jne         0063CF33
 0063CF54    mov         eax,ebx
 0063CF56    pop         ebp
 0063CF57    pop         edi
 0063CF58    pop         esi
 0063CF59    pop         ebx
 0063CF5A    ret
*}
end;

//0063CF5C
function TWiimoteManager.AnyOtherButton1(n:Integer):Boolean;
begin
{*
 0063CF5C    push        ebx
 0063CF5D    push        esi
 0063CF5E    push        edi
 0063CF5F    push        ebp
 0063CF60    mov         esi,edx
 0063CF62    mov         ebp,eax
 0063CF64    test        esi,esi
>0063CF66    jle         0063D03C
 0063CF6C    mov         edx,esi
 0063CF6E    mov         eax,ebp
 0063CF70    call        TWiimoteManager.GetAny
 0063CF75    mov         ebx,eax
 0063CF77    test        ebx,ebx
>0063CF79    jne         0063CF82
 0063CF7B    xor         ebx,ebx
>0063CF7D    jmp         0063D071
 0063CF82    mov         eax,ebx
 0063CF84    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063CF8A    call        @IsClass
 0063CF8F    test        al,al
>0063CF91    je          0063CFA1
 0063CF93    mov         eax,ebx
 0063CF95    call        TPS3ControllerObject.Triangle
 0063CF9A    mov         ebx,eax
>0063CF9C    jmp         0063D071
 0063CFA1    mov         eax,ebx
 0063CFA3    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063CFA9    call        @IsClass
 0063CFAE    test        al,al
>0063CFB0    je          0063D038
 0063CFB6    mov         eax,dword ptr [ebx+4B4]
 0063CFBC    cmp         byte ptr [eax+444],0
>0063CFC3    je          0063CFD3
 0063CFC5    mov         eax,ebx
 0063CFC7    call        TWiimoteObject.One
 0063CFCC    mov         ebx,eax
>0063CFCE    jmp         0063D071
 0063CFD3    mov         eax,dword ptr [ebx+4B8]
 0063CFD9    cmp         byte ptr [eax+8],0
>0063CFDD    je          0063D003
 0063CFDF    mov         eax,dword ptr [ebx+4B8]
 0063CFE5    call        TClassicObject.X
 0063CFEA    test        al,al
>0063CFEC    jne         0063CFFD
 0063CFEE    mov         eax,ebx
 0063CFF0    call        TWiimoteObject.One
 0063CFF5    test        al,al
>0063CFF7    jne         0063CFFD
 0063CFF9    xor         eax,eax
>0063CFFB    jmp         0063CFFF
 0063CFFD    mov         al,1
 0063CFFF    mov         ebx,eax
>0063D001    jmp         0063D071
 0063D003    mov         eax,dword ptr [ebx+4BC]
 0063D009    cmp         byte ptr [eax+8],0
>0063D00D    je          0063D018
 0063D00F    call        TGuitarObject.Fret3
 0063D014    mov         ebx,eax
>0063D016    jmp         0063D071
 0063D018    mov         eax,dword ptr [ebx+4C0]
 0063D01E    cmp         byte ptr [eax+8],0
>0063D022    je          0063D02D
 0063D024    call        TDrumsObject.Blue
 0063D029    mov         ebx,eax
>0063D02B    jmp         0063D071
 0063D02D    mov         eax,ebx
 0063D02F    call        TWiimoteObject.One
 0063D034    mov         ebx,eax
>0063D036    jmp         0063D071
 0063D038    xor         ebx,ebx
>0063D03A    jmp         0063D071
 0063D03C    xor         ebx,ebx
 0063D03E    mov         eax,ebp
 0063D040    call        TWiimoteManager.AnyCount
 0063D045    mov         edi,eax
 0063D047    test        edi,edi
>0063D049    jle         0063D071
 0063D04B    mov         esi,1
 0063D050    test        bl,bl
>0063D052    jne         0063D065
 0063D054    mov         edx,esi
 0063D056    mov         eax,ebp
 0063D058    call        TWiimoteManager.AnyOtherButton1
 0063D05D    test        al,al
>0063D05F    jne         0063D065
 0063D061    xor         eax,eax
>0063D063    jmp         0063D067
 0063D065    mov         al,1
 0063D067    mov         ebx,eax
 0063D069    test        bl,bl
>0063D06B    jne         0063D071
 0063D06D    inc         esi
 0063D06E    dec         edi
>0063D06F    jne         0063D050
 0063D071    mov         eax,ebx
 0063D073    pop         ebp
 0063D074    pop         edi
 0063D075    pop         esi
 0063D076    pop         ebx
 0063D077    ret
*}
end;

//0063D078
function TWiimoteManager.AnyOtherButton2(n:Integer):Boolean;
begin
{*
 0063D078    push        ebx
 0063D079    push        esi
 0063D07A    push        edi
 0063D07B    push        ebp
 0063D07C    mov         esi,edx
 0063D07E    mov         ebp,eax
 0063D080    test        esi,esi
>0063D082    jle         0063D158
 0063D088    mov         edx,esi
 0063D08A    mov         eax,ebp
 0063D08C    call        TWiimoteManager.GetAny
 0063D091    mov         ebx,eax
 0063D093    test        ebx,ebx
>0063D095    jne         0063D09E
 0063D097    xor         ebx,ebx
>0063D099    jmp         0063D18D
 0063D09E    mov         eax,ebx
 0063D0A0    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063D0A6    call        @IsClass
 0063D0AB    test        al,al
>0063D0AD    je          0063D0BD
 0063D0AF    mov         eax,ebx
 0063D0B1    call        TPS3ControllerObject.Square
 0063D0B6    mov         ebx,eax
>0063D0B8    jmp         0063D18D
 0063D0BD    mov         eax,ebx
 0063D0BF    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063D0C5    call        @IsClass
 0063D0CA    test        al,al
>0063D0CC    je          0063D154
 0063D0D2    mov         eax,dword ptr [ebx+4B4]
 0063D0D8    cmp         byte ptr [eax+444],0
>0063D0DF    je          0063D0EF
 0063D0E1    mov         eax,ebx
 0063D0E3    call        TWiimoteObject.Two
 0063D0E8    mov         ebx,eax
>0063D0EA    jmp         0063D18D
 0063D0EF    mov         eax,dword ptr [ebx+4B8]
 0063D0F5    cmp         byte ptr [eax+8],0
>0063D0F9    je          0063D11F
 0063D0FB    mov         eax,dword ptr [ebx+4B8]
 0063D101    call        TClassicObject.Y
 0063D106    test        al,al
>0063D108    jne         0063D119
 0063D10A    mov         eax,ebx
 0063D10C    call        TWiimoteObject.Two
 0063D111    test        al,al
>0063D113    jne         0063D119
 0063D115    xor         eax,eax
>0063D117    jmp         0063D11B
 0063D119    mov         al,1
 0063D11B    mov         ebx,eax
>0063D11D    jmp         0063D18D
 0063D11F    mov         eax,dword ptr [ebx+4BC]
 0063D125    cmp         byte ptr [eax+8],0
>0063D129    je          0063D134
 0063D12B    call        TGuitarObject.Fret4
 0063D130    mov         ebx,eax
>0063D132    jmp         0063D18D
 0063D134    mov         eax,dword ptr [ebx+4C0]
 0063D13A    cmp         byte ptr [eax+8],0
>0063D13E    je          0063D149
 0063D140    call        TDrumsObject.Yellow
 0063D145    mov         ebx,eax
>0063D147    jmp         0063D18D
 0063D149    mov         eax,ebx
 0063D14B    call        TWiimoteObject.One
 0063D150    mov         ebx,eax
>0063D152    jmp         0063D18D
 0063D154    xor         ebx,ebx
>0063D156    jmp         0063D18D
 0063D158    xor         ebx,ebx
 0063D15A    mov         eax,ebp
 0063D15C    call        TWiimoteManager.AnyCount
 0063D161    mov         edi,eax
 0063D163    test        edi,edi
>0063D165    jle         0063D18D
 0063D167    mov         esi,1
 0063D16C    test        bl,bl
>0063D16E    jne         0063D181
 0063D170    mov         edx,esi
 0063D172    mov         eax,ebp
 0063D174    call        TWiimoteManager.AnyOtherButton2
 0063D179    test        al,al
>0063D17B    jne         0063D181
 0063D17D    xor         eax,eax
>0063D17F    jmp         0063D183
 0063D181    mov         al,1
 0063D183    mov         ebx,eax
 0063D185    test        bl,bl
>0063D187    jne         0063D18D
 0063D189    inc         esi
 0063D18A    dec         edi
>0063D18B    jne         0063D16C
 0063D18D    mov         eax,ebx
 0063D18F    pop         ebp
 0063D190    pop         edi
 0063D191    pop         esi
 0063D192    pop         ebx
 0063D193    ret
*}
end;

//0063D194
function TWiimoteManager.AnyPartialGesture(n:Integer):TWaggleGesture;
begin
{*
 0063D194    push        ebx
 0063D195    push        esi
 0063D196    push        edi
 0063D197    push        ebp
 0063D198    mov         esi,edx
 0063D19A    mov         ebp,eax
 0063D19C    test        esi,esi
>0063D19E    jle         0063D1BA
 0063D1A0    mov         edx,esi
 0063D1A2    mov         eax,ebp
 0063D1A4    call        TWiimoteManager.GetAny
 0063D1A9    test        eax,eax
>0063D1AB    jne         0063D1B1
 0063D1AD    xor         ebx,ebx
>0063D1AF    jmp         0063D1E1
 0063D1B1    movzx       ebx,byte ptr [eax+42F];TAccelerometerObject.PartialGesture:TWaggleGesture
>0063D1B8    jmp         0063D1E1
 0063D1BA    xor         ebx,ebx
 0063D1BC    mov         eax,ebp
 0063D1BE    call        TWiimoteManager.AnyCount
 0063D1C3    mov         edi,eax
 0063D1C5    test        edi,edi
>0063D1C7    jle         0063D1E1
 0063D1C9    mov         esi,1
 0063D1CE    mov         edx,esi
 0063D1D0    mov         eax,ebp
 0063D1D2    call        TWiimoteManager.AnyPartialGesture
 0063D1D7    mov         ebx,eax
 0063D1D9    test        bl,bl
>0063D1DB    jne         0063D1E1
 0063D1DD    inc         esi
 0063D1DE    dec         edi
>0063D1DF    jne         0063D1CE
 0063D1E1    mov         eax,ebx
 0063D1E3    pop         ebp
 0063D1E4    pop         edi
 0063D1E5    pop         esi
 0063D1E6    pop         ebx
 0063D1E7    ret
*}
end;

//0063D1E8
function TWiimoteManager.AnyPitch(n:Integer):Double;
begin
{*
 0063D1E8    push        ebx
 0063D1E9    push        esi
 0063D1EA    push        edi
 0063D1EB    add         esp,0FFFFFFE4
 0063D1EE    mov         ebx,edx
 0063D1F0    mov         edi,eax
 0063D1F2    test        ebx,ebx
>0063D1F4    jle         0063D223
 0063D1F6    mov         edx,ebx
 0063D1F8    mov         eax,edi
 0063D1FA    call        TWiimoteManager.GetAny
 0063D1FF    test        eax,eax
>0063D201    jne         0063D20E
 0063D203    xor         eax,eax
 0063D205    mov         dword ptr [esp],eax
 0063D208    mov         dword ptr [esp+4],eax
>0063D20C    jmp         0063D27B
 0063D20E    mov         edx,dword ptr [eax+3C0];TAccelerometerObject.Pitch:Double
 0063D214    mov         dword ptr [esp],edx
 0063D217    mov         edx,dword ptr [eax+3C4];TAccelerometerObject.?f3C4:dword
 0063D21D    mov         dword ptr [esp+4],edx
>0063D221    jmp         0063D27B
 0063D223    xor         eax,eax
 0063D225    mov         dword ptr [esp],eax
 0063D228    mov         dword ptr [esp+4],eax
 0063D22C    mov         eax,edi
 0063D22E    call        TWiimoteManager.AnyCount
 0063D233    mov         esi,eax
 0063D235    test        esi,esi
>0063D237    jle         0063D27B
 0063D239    mov         ebx,1
 0063D23E    mov         edx,ebx
 0063D240    mov         eax,edi
 0063D242    call        TWiimoteManager.AnyPitch
 0063D247    fstp        qword ptr [esp+8]
 0063D24B    wait
 0063D24C    fld         qword ptr [esp+8]
 0063D250    fabs
 0063D252    fstp        tbyte ptr [esp+10]
 0063D256    wait
 0063D257    fld         qword ptr [esp]
 0063D25A    fabs
 0063D25C    fld         tbyte ptr [esp+10]
 0063D260    fcompp
 0063D262    wait
 0063D263    fnstsw      al
 0063D265    sahf
>0063D266    jbe         0063D277
 0063D268    mov         eax,dword ptr [esp+8]
 0063D26C    mov         dword ptr [esp],eax
 0063D26F    mov         eax,dword ptr [esp+0C]
 0063D273    mov         dword ptr [esp+4],eax
 0063D277    inc         ebx
 0063D278    dec         esi
>0063D279    jne         0063D23E
 0063D27B    fld         qword ptr [esp]
 0063D27E    add         esp,1C
 0063D281    pop         edi
 0063D282    pop         esi
 0063D283    pop         ebx
 0063D284    ret
*}
end;

//0063D288
function TWiimoteManager.AnyCancelButton(n:Integer):Boolean;
begin
{*
 0063D288    push        ebx
 0063D289    push        esi
 0063D28A    push        edi
 0063D28B    push        ebp
 0063D28C    mov         esi,edx
 0063D28E    mov         ebp,eax
 0063D290    test        esi,esi
>0063D292    jle         0063D38A
 0063D298    mov         edx,esi
 0063D29A    mov         eax,ebp
 0063D29C    call        TWiimoteManager.GetAny
 0063D2A1    mov         ebx,eax
 0063D2A3    test        ebx,ebx
>0063D2A5    jne         0063D2AE
 0063D2A7    xor         ebx,ebx
>0063D2A9    jmp         0063D3BF
 0063D2AE    mov         eax,ebx
 0063D2B0    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063D2B6    call        @IsClass
 0063D2BB    test        al,al
>0063D2BD    je          0063D2CD
 0063D2BF    mov         eax,ebx
 0063D2C1    call        TPS3ControllerObject.Cross
 0063D2C6    mov         ebx,eax
>0063D2C8    jmp         0063D3BF
 0063D2CD    mov         eax,ebx
 0063D2CF    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063D2D5    call        @IsClass
 0063D2DA    test        al,al
>0063D2DC    je          0063D386
 0063D2E2    mov         eax,dword ptr [ebx+4B4]
 0063D2E8    cmp         byte ptr [eax+444],0
>0063D2EF    je          0063D2FF
 0063D2F1    mov         eax,ebx
 0063D2F3    call        TWiimoteObject.B
 0063D2F8    mov         ebx,eax
>0063D2FA    jmp         0063D3BF
 0063D2FF    mov         eax,dword ptr [ebx+4B8]
 0063D305    cmp         byte ptr [eax+8],0
>0063D309    je          0063D332
 0063D30B    mov         eax,dword ptr [ebx+4B8]
 0063D311    call        TClassicObject.B
 0063D316    test        al,al
>0063D318    jne         0063D329
 0063D31A    mov         eax,ebx
 0063D31C    call        TWiimoteObject.B
 0063D321    test        al,al
>0063D323    jne         0063D329
 0063D325    xor         eax,eax
>0063D327    jmp         0063D32B
 0063D329    mov         al,1
 0063D32B    mov         ebx,eax
>0063D32D    jmp         0063D3BF
 0063D332    mov         eax,dword ptr [ebx+4BC]
 0063D338    cmp         byte ptr [eax+8],0
>0063D33C    je          0063D366
 0063D33E    mov         eax,dword ptr [ebx+4BC]
 0063D344    call        TGuitarObject.StrumUp
 0063D349    test        al,al
>0063D34B    jne         0063D360
 0063D34D    mov         eax,dword ptr [ebx+4BC]
 0063D353    call        TGuitarObject.Fret2
 0063D358    test        al,al
>0063D35A    jne         0063D360
 0063D35C    xor         eax,eax
>0063D35E    jmp         0063D362
 0063D360    mov         al,1
 0063D362    mov         ebx,eax
>0063D364    jmp         0063D3BF
 0063D366    mov         eax,dword ptr [ebx+4C0]
 0063D36C    cmp         byte ptr [eax+8],0
>0063D370    je          0063D37B
 0063D372    call        TDrumsObject.Red
 0063D377    mov         ebx,eax
>0063D379    jmp         0063D3BF
 0063D37B    mov         eax,ebx
 0063D37D    call        TWiimoteObject.B
 0063D382    mov         ebx,eax
>0063D384    jmp         0063D3BF
 0063D386    xor         ebx,ebx
>0063D388    jmp         0063D3BF
 0063D38A    xor         ebx,ebx
 0063D38C    mov         eax,ebp
 0063D38E    call        TWiimoteManager.AnyCount
 0063D393    mov         edi,eax
 0063D395    test        edi,edi
>0063D397    jle         0063D3BF
 0063D399    mov         esi,1
 0063D39E    test        bl,bl
>0063D3A0    jne         0063D3B3
 0063D3A2    mov         edx,esi
 0063D3A4    mov         eax,ebp
 0063D3A6    call        TWiimoteManager.AnyCancelButton
 0063D3AB    test        al,al
>0063D3AD    jne         0063D3B3
 0063D3AF    xor         eax,eax
>0063D3B1    jmp         0063D3B5
 0063D3B3    mov         al,1
 0063D3B5    mov         ebx,eax
 0063D3B7    test        bl,bl
>0063D3B9    jne         0063D3BF
 0063D3BB    inc         esi
 0063D3BC    dec         edi
>0063D3BD    jne         0063D39E
 0063D3BF    mov         eax,ebx
 0063D3C1    pop         ebp
 0063D3C2    pop         edi
 0063D3C3    pop         esi
 0063D3C4    pop         ebx
 0063D3C5    ret
*}
end;

//0063D3C8
function TWiimoteManager.AnyCircle(n:Integer):Boolean;
begin
{*
 0063D3C8    push        ebx
 0063D3C9    push        esi
 0063D3CA    push        edi
 0063D3CB    push        ebp
 0063D3CC    mov         esi,edx
 0063D3CE    mov         ebp,eax
 0063D3D0    test        esi,esi
>0063D3D2    jle         0063D48D
 0063D3D8    mov         edx,esi
 0063D3DA    mov         eax,ebp
 0063D3DC    call        TWiimoteManager.GetAny
 0063D3E1    mov         ebx,eax
 0063D3E3    test        ebx,ebx
>0063D3E5    jne         0063D3EE
 0063D3E7    xor         ebx,ebx
>0063D3E9    jmp         0063D4C2
 0063D3EE    mov         eax,ebx
 0063D3F0    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063D3F6    call        @IsClass
 0063D3FB    test        al,al
>0063D3FD    je          0063D40D
 0063D3FF    mov         eax,ebx
 0063D401    call        TPS3ControllerObject.Circle
 0063D406    mov         ebx,eax
>0063D408    jmp         0063D4C2
 0063D40D    mov         eax,ebx
 0063D40F    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063D415    call        @IsClass
 0063D41A    test        al,al
>0063D41C    je          0063D489
 0063D41E    mov         eax,ebx
 0063D420    mov         edx,dword ptr [eax+4B4]
 0063D426    cmp         byte ptr [edx+444],0
>0063D42D    je          0063D43B
 0063D42F    call        TWiimoteObject.Up
 0063D434    mov         ebx,eax
>0063D436    jmp         0063D4C2
 0063D43B    mov         edx,dword ptr [eax+4B8]
 0063D441    cmp         byte ptr [edx+8],0
>0063D445    je          0063D452
 0063D447    mov         eax,edx
 0063D449    call        TClassicObject.A
 0063D44E    mov         ebx,eax
>0063D450    jmp         0063D4C2
 0063D452    mov         edx,dword ptr [eax+4BC]
 0063D458    cmp         byte ptr [edx+8],0
>0063D45C    je          0063D469
 0063D45E    mov         eax,edx
 0063D460    call        TGuitarObject.Fret4
 0063D465    mov         ebx,eax
>0063D467    jmp         0063D4C2
 0063D469    mov         edx,dword ptr [eax+4C0]
 0063D46F    cmp         byte ptr [edx+8],0
>0063D473    je          0063D480
 0063D475    mov         eax,edx
 0063D477    call        TDrumsObject.Green
 0063D47C    mov         ebx,eax
>0063D47E    jmp         0063D4C2
 0063D480    call        TWiimoteObject.Right
 0063D485    mov         ebx,eax
>0063D487    jmp         0063D4C2
 0063D489    xor         ebx,ebx
>0063D48B    jmp         0063D4C2
 0063D48D    xor         ebx,ebx
 0063D48F    mov         eax,ebp
 0063D491    call        TWiimoteManager.AnyCount
 0063D496    mov         edi,eax
 0063D498    test        edi,edi
>0063D49A    jle         0063D4C2
 0063D49C    mov         esi,1
 0063D4A1    test        bl,bl
>0063D4A3    jne         0063D4B6
 0063D4A5    mov         edx,esi
 0063D4A7    mov         eax,ebp
 0063D4A9    call        TWiimoteManager.AnyCircle
 0063D4AE    test        al,al
>0063D4B0    jne         0063D4B6
 0063D4B2    xor         eax,eax
>0063D4B4    jmp         0063D4B8
 0063D4B6    mov         al,1
 0063D4B8    mov         ebx,eax
 0063D4BA    test        bl,bl
>0063D4BC    jne         0063D4C2
 0063D4BE    inc         esi
 0063D4BF    dec         edi
>0063D4C0    jne         0063D4A1
 0063D4C2    mov         eax,ebx
 0063D4C4    pop         ebp
 0063D4C5    pop         edi
 0063D4C6    pop         esi
 0063D4C7    pop         ebx
 0063D4C8    ret
*}
end;

//0063D4CC
function TWiimoteManager.AnyCount:Integer;
begin
{*
 0063D4CC    mov         edx,dword ptr [eax+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 0063D4CF    mov         edx,dword ptr [edx+8];TNumberedObjectList.FCount:Integer
 0063D4D2    mov         ecx,dword ptr [eax+60];TWiimoteManager.FConnectedSixaxes:TNumberedObjectList
 0063D4D5    add         edx,dword ptr [ecx+8];TNumberedObjectList.FCount:Integer
 0063D4D8    mov         ecx,dword ptr [eax+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 0063D4DB    add         edx,dword ptr [ecx+8];TNumberedObjectList.FCount:Integer
 0063D4DE    mov         eax,dword ptr [eax+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 0063D4E1    add         edx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 0063D4E4    mov         eax,edx
 0063D4E6    ret
*}
end;

//0063D4E8
function TWiimoteManager.AnyCross(n:Integer):Boolean;
begin
{*
 0063D4E8    push        ebx
 0063D4E9    push        esi
 0063D4EA    push        edi
 0063D4EB    push        ebp
 0063D4EC    mov         esi,edx
 0063D4EE    mov         ebp,eax
 0063D4F0    test        esi,esi
>0063D4F2    jle         0063D5AD
 0063D4F8    mov         edx,esi
 0063D4FA    mov         eax,ebp
 0063D4FC    call        TWiimoteManager.GetAny
 0063D501    mov         ebx,eax
 0063D503    test        ebx,ebx
>0063D505    jne         0063D50E
 0063D507    xor         ebx,ebx
>0063D509    jmp         0063D5E2
 0063D50E    mov         eax,ebx
 0063D510    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063D516    call        @IsClass
 0063D51B    test        al,al
>0063D51D    je          0063D52D
 0063D51F    mov         eax,ebx
 0063D521    call        TPS3ControllerObject.Cross
 0063D526    mov         ebx,eax
>0063D528    jmp         0063D5E2
 0063D52D    mov         eax,ebx
 0063D52F    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063D535    call        @IsClass
 0063D53A    test        al,al
>0063D53C    je          0063D5A9
 0063D53E    mov         eax,ebx
 0063D540    mov         edx,dword ptr [eax+4B4]
 0063D546    cmp         byte ptr [edx+444],0
>0063D54D    je          0063D55B
 0063D54F    call        TWiimoteObject.Down
 0063D554    mov         ebx,eax
>0063D556    jmp         0063D5E2
 0063D55B    mov         edx,dword ptr [eax+4B8]
 0063D561    cmp         byte ptr [edx+8],0
>0063D565    je          0063D572
 0063D567    mov         eax,edx
 0063D569    call        TClassicObject.B
 0063D56E    mov         ebx,eax
>0063D570    jmp         0063D5E2
 0063D572    mov         edx,dword ptr [eax+4BC]
 0063D578    cmp         byte ptr [edx+8],0
>0063D57C    je          0063D589
 0063D57E    mov         eax,edx
 0063D580    call        TGuitarObject.Fret3
 0063D585    mov         ebx,eax
>0063D587    jmp         0063D5E2
 0063D589    mov         edx,dword ptr [eax+4C0]
 0063D58F    cmp         byte ptr [edx+8],0
>0063D593    je          0063D5A0
 0063D595    mov         eax,edx
 0063D597    call        TDrumsObject.Blue
 0063D59C    mov         ebx,eax
>0063D59E    jmp         0063D5E2
 0063D5A0    call        TWiimoteObject.Down
 0063D5A5    mov         ebx,eax
>0063D5A7    jmp         0063D5E2
 0063D5A9    xor         ebx,ebx
>0063D5AB    jmp         0063D5E2
 0063D5AD    xor         ebx,ebx
 0063D5AF    mov         eax,ebp
 0063D5B1    call        TWiimoteManager.AnyCount
 0063D5B6    mov         edi,eax
 0063D5B8    test        edi,edi
>0063D5BA    jle         0063D5E2
 0063D5BC    mov         esi,1
 0063D5C1    test        bl,bl
>0063D5C3    jne         0063D5D6
 0063D5C5    mov         edx,esi
 0063D5C7    mov         eax,ebp
 0063D5C9    call        TWiimoteManager.AnyCross
 0063D5CE    test        al,al
>0063D5D0    jne         0063D5D6
 0063D5D2    xor         eax,eax
>0063D5D4    jmp         0063D5D8
 0063D5D6    mov         al,1
 0063D5D8    mov         ebx,eax
 0063D5DA    test        bl,bl
>0063D5DC    jne         0063D5E2
 0063D5DE    inc         esi
 0063D5DF    dec         edi
>0063D5E0    jne         0063D5C1
 0063D5E2    mov         eax,ebx
 0063D5E4    pop         ebp
 0063D5E5    pop         edi
 0063D5E6    pop         esi
 0063D5E7    pop         ebx
 0063D5E8    ret
*}
end;

//0063D5EC
function TWiimoteManager.AnyDigitalLeftTrigger(n:Integer):Boolean;
begin
{*
 0063D5EC    push        ebx
 0063D5ED    push        esi
 0063D5EE    push        edi
 0063D5EF    push        ebp
 0063D5F0    mov         esi,edx
 0063D5F2    mov         ebp,eax
 0063D5F4    test        esi,esi
>0063D5F6    jle         0063D6AE
 0063D5FC    mov         edx,esi
 0063D5FE    mov         eax,ebp
 0063D600    call        TWiimoteManager.GetAny
 0063D605    mov         ebx,eax
 0063D607    test        ebx,ebx
>0063D609    jne         0063D612
 0063D60B    xor         ebx,ebx
>0063D60D    jmp         0063D6E3
 0063D612    mov         eax,ebx
 0063D614    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063D61A    call        @IsClass
 0063D61F    test        al,al
>0063D621    je          0063D631
 0063D623    mov         eax,ebx
 0063D625    call        TPS3ControllerObject.L1
 0063D62A    mov         ebx,eax
>0063D62C    jmp         0063D6E3
 0063D631    mov         eax,ebx
 0063D633    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063D639    call        @IsClass
 0063D63E    test        al,al
>0063D640    je          0063D6AA
 0063D642    mov         eax,ebx
 0063D644    mov         edx,dword ptr [eax+4B4]
 0063D64A    cmp         byte ptr [edx+444],0
>0063D651    je          0063D661
 0063D653    mov         eax,edx
 0063D655    call        TNunchukObject.C
 0063D65A    mov         ebx,eax
>0063D65C    jmp         0063D6E3
 0063D661    mov         edx,dword ptr [eax+4B8]
 0063D667    cmp         byte ptr [edx+8],0
>0063D66B    je          0063D678
 0063D66D    mov         eax,edx
 0063D66F    call        TClassicObject.ZL
 0063D674    mov         ebx,eax
>0063D676    jmp         0063D6E3
 0063D678    mov         edx,dword ptr [eax+4BC]
 0063D67E    cmp         byte ptr [edx+8],0
>0063D682    je          0063D68F
 0063D684    mov         eax,edx
 0063D686    call        TGuitarObject.Fret2
 0063D68B    mov         ebx,eax
>0063D68D    jmp         0063D6E3
 0063D68F    mov         edx,dword ptr [eax+4C0]
 0063D695    cmp         byte ptr [edx+8],0
>0063D699    je          0063D6A6
 0063D69B    mov         eax,edx
 0063D69D    call        TDrumsObject.Yellow
 0063D6A2    mov         ebx,eax
>0063D6A4    jmp         0063D6E3
 0063D6A6    xor         ebx,ebx
>0063D6A8    jmp         0063D6E3
 0063D6AA    xor         ebx,ebx
>0063D6AC    jmp         0063D6E3
 0063D6AE    xor         ebx,ebx
 0063D6B0    mov         eax,ebp
 0063D6B2    call        TWiimoteManager.AnyCount
 0063D6B7    mov         edi,eax
 0063D6B9    test        edi,edi
>0063D6BB    jle         0063D6E3
 0063D6BD    mov         esi,1
 0063D6C2    test        bl,bl
>0063D6C4    jne         0063D6D7
 0063D6C6    mov         edx,esi
 0063D6C8    mov         eax,ebp
 0063D6CA    call        TWiimoteManager.AnyDigitalLeftTrigger
 0063D6CF    test        al,al
>0063D6D1    jne         0063D6D7
 0063D6D3    xor         eax,eax
>0063D6D5    jmp         0063D6D9
 0063D6D7    mov         al,1
 0063D6D9    mov         ebx,eax
 0063D6DB    test        bl,bl
>0063D6DD    jne         0063D6E3
 0063D6DF    inc         esi
 0063D6E0    dec         edi
>0063D6E1    jne         0063D6C2
 0063D6E3    mov         eax,ebx
 0063D6E5    pop         ebp
 0063D6E6    pop         edi
 0063D6E7    pop         esi
 0063D6E8    pop         ebx
 0063D6E9    ret
*}
end;

//0063D6EC
function TWiimoteManager.AnyDigitalRightTrigger(n:Integer):Boolean;
begin
{*
 0063D6EC    push        ebx
 0063D6ED    push        esi
 0063D6EE    push        edi
 0063D6EF    push        ebp
 0063D6F0    mov         esi,edx
 0063D6F2    mov         ebp,eax
 0063D6F4    test        esi,esi
>0063D6F6    jle         0063D7A7
 0063D6FC    mov         edx,esi
 0063D6FE    mov         eax,ebp
 0063D700    call        TWiimoteManager.GetAny
 0063D705    mov         ebx,eax
 0063D707    test        ebx,ebx
>0063D709    jne         0063D712
 0063D70B    xor         ebx,ebx
>0063D70D    jmp         0063D7DC
 0063D712    mov         eax,ebx
 0063D714    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063D71A    call        @IsClass
 0063D71F    test        al,al
>0063D721    je          0063D731
 0063D723    mov         eax,ebx
 0063D725    call        TPS3ControllerObject.R1
 0063D72A    mov         ebx,eax
>0063D72C    jmp         0063D7DC
 0063D731    mov         eax,ebx
 0063D733    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063D739    call        @IsClass
 0063D73E    test        al,al
>0063D740    je          0063D7A3
 0063D742    mov         eax,ebx
 0063D744    mov         edx,dword ptr [eax+4B4]
 0063D74A    cmp         byte ptr [edx+444],0
>0063D751    je          0063D75A
 0063D753    xor         ebx,ebx
>0063D755    jmp         0063D7DC
 0063D75A    mov         edx,dword ptr [eax+4B8]
 0063D760    cmp         byte ptr [edx+8],0
>0063D764    je          0063D771
 0063D766    mov         eax,edx
 0063D768    call        TClassicObject.ZR
 0063D76D    mov         ebx,eax
>0063D76F    jmp         0063D7DC
 0063D771    mov         edx,dword ptr [eax+4BC]
 0063D777    cmp         byte ptr [edx+8],0
>0063D77B    je          0063D788
 0063D77D    mov         eax,edx
 0063D77F    call        TGuitarObject.StrumUp
 0063D784    mov         ebx,eax
>0063D786    jmp         0063D7DC
 0063D788    mov         edx,dword ptr [eax+4C0]
 0063D78E    cmp         byte ptr [edx+8],0
>0063D792    je          0063D79F
 0063D794    mov         eax,edx
 0063D796    call        TDrumsObject.Orange
 0063D79B    mov         ebx,eax
>0063D79D    jmp         0063D7DC
 0063D79F    xor         ebx,ebx
>0063D7A1    jmp         0063D7DC
 0063D7A3    xor         ebx,ebx
>0063D7A5    jmp         0063D7DC
 0063D7A7    xor         ebx,ebx
 0063D7A9    mov         eax,ebp
 0063D7AB    call        TWiimoteManager.AnyCount
 0063D7B0    mov         edi,eax
 0063D7B2    test        edi,edi
>0063D7B4    jle         0063D7DC
 0063D7B6    mov         esi,1
 0063D7BB    test        bl,bl
>0063D7BD    jne         0063D7D0
 0063D7BF    mov         edx,esi
 0063D7C1    mov         eax,ebp
 0063D7C3    call        TWiimoteManager.AnyDigitalRightTrigger
 0063D7C8    test        al,al
>0063D7CA    jne         0063D7D0
 0063D7CC    xor         eax,eax
>0063D7CE    jmp         0063D7D2
 0063D7D0    mov         al,1
 0063D7D2    mov         ebx,eax
 0063D7D4    test        bl,bl
>0063D7D6    jne         0063D7DC
 0063D7D8    inc         esi
 0063D7D9    dec         edi
>0063D7DA    jne         0063D7BB
 0063D7DC    mov         eax,ebx
 0063D7DE    pop         ebp
 0063D7DF    pop         edi
 0063D7E0    pop         esi
 0063D7E1    pop         ebx
 0063D7E2    ret
*}
end;

//0063D7E4
function TWiimoteManager.AnyDown(n:Integer):Boolean;
begin
{*
 0063D7E4    push        ebx
 0063D7E5    push        esi
 0063D7E6    push        edi
 0063D7E7    push        ebp
 0063D7E8    mov         esi,edx
 0063D7EA    mov         ebp,eax
 0063D7EC    test        esi,esi
>0063D7EE    jle         0063D94E
 0063D7F4    mov         edx,esi
 0063D7F6    mov         eax,ebp
 0063D7F8    call        TWiimoteManager.GetAny
 0063D7FD    mov         ebx,eax
 0063D7FF    test        ebx,ebx
>0063D801    jne         0063D80A
 0063D803    xor         ebx,ebx
>0063D805    jmp         0063D983
 0063D80A    mov         eax,ebx
 0063D80C    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063D812    call        @IsClass
 0063D817    test        al,al
>0063D819    je          0063D846
 0063D81B    mov         eax,ebx
 0063D81D    call        TPS3ControllerObject.Down
 0063D822    test        al,al
>0063D824    jne         0063D83D
 0063D826    mov         eax,ebx
 0063D828    call        TPS3ControllerObject.LeftStickY
 0063D82D    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063D833    wait
 0063D834    fnstsw      al
 0063D836    sahf
>0063D837    ja          0063D83D
 0063D839    xor         eax,eax
>0063D83B    jmp         0063D83F
 0063D83D    mov         al,1
 0063D83F    mov         ebx,eax
>0063D841    jmp         0063D983
 0063D846    mov         eax,ebx
 0063D848    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063D84E    call        @IsClass
 0063D853    test        al,al
>0063D855    je          0063D94A
 0063D85B    mov         eax,dword ptr [ebx+4B4]
 0063D861    cmp         byte ptr [eax+444],0
>0063D868    je          0063D899
 0063D86A    mov         eax,ebx
 0063D86C    call        TWiimoteObject.Down
 0063D871    test        al,al
>0063D873    jne         0063D890
 0063D875    mov         eax,dword ptr [ebx+4B4]
 0063D87B    call        TNunchukObject.StickY
 0063D880    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063D886    wait
 0063D887    fnstsw      al
 0063D889    sahf
>0063D88A    ja          0063D890
 0063D88C    xor         eax,eax
>0063D88E    jmp         0063D892
 0063D890    mov         al,1
 0063D892    mov         ebx,eax
>0063D894    jmp         0063D983
 0063D899    mov         eax,dword ptr [ebx+4B8]
 0063D89F    cmp         byte ptr [eax+8],0
>0063D8A3    je          0063D8E3
 0063D8A5    mov         eax,dword ptr [ebx+4B8]
 0063D8AB    call        TClassicObject.Down
 0063D8B0    test        al,al
>0063D8B2    jne         0063D8DA
 0063D8B4    mov         eax,ebx
 0063D8B6    call        TWiimoteObject.Down
 0063D8BB    test        al,al
>0063D8BD    jne         0063D8DA
 0063D8BF    mov         eax,dword ptr [ebx+4B8]
 0063D8C5    call        TClassicObject.LeftStickY
 0063D8CA    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063D8D0    wait
 0063D8D1    fnstsw      al
 0063D8D3    sahf
>0063D8D4    ja          0063D8DA
 0063D8D6    xor         eax,eax
>0063D8D8    jmp         0063D8DC
 0063D8DA    mov         al,1
 0063D8DC    mov         ebx,eax
>0063D8DE    jmp         0063D983
 0063D8E3    mov         esi,dword ptr [ebx+4BC]
 0063D8E9    cmp         byte ptr [esi+8],0
>0063D8ED    je          0063D907
 0063D8EF    mov         eax,esi
 0063D8F1    call        TGuitarObject.StickY
 0063D8F6    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063D8FC    wait
 0063D8FD    fnstsw      al
 0063D8FF    sahf
 0063D900    seta        al
 0063D903    mov         ebx,eax
>0063D905    jmp         0063D983
 0063D907    mov         eax,dword ptr [ebx+4C0]
 0063D90D    cmp         byte ptr [eax+8],0
>0063D911    je          0063D93F
 0063D913    mov         eax,ebx
 0063D915    call        TWiimoteObject.Left
 0063D91A    test        al,al
>0063D91C    jne         0063D939
 0063D91E    mov         eax,dword ptr [ebx+4C0]
 0063D924    call        TDrumsObject.StickY
 0063D929    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063D92F    wait
 0063D930    fnstsw      al
 0063D932    sahf
>0063D933    ja          0063D939
 0063D935    xor         eax,eax
>0063D937    jmp         0063D93B
 0063D939    mov         al,1
 0063D93B    mov         ebx,eax
>0063D93D    jmp         0063D983
 0063D93F    mov         eax,ebx
 0063D941    call        TWiimoteObject.Down
 0063D946    mov         ebx,eax
>0063D948    jmp         0063D983
 0063D94A    xor         ebx,ebx
>0063D94C    jmp         0063D983
 0063D94E    xor         ebx,ebx
 0063D950    mov         eax,ebp
 0063D952    call        TWiimoteManager.AnyCount
 0063D957    mov         edi,eax
 0063D959    test        edi,edi
>0063D95B    jle         0063D983
 0063D95D    mov         esi,1
 0063D962    test        bl,bl
>0063D964    jne         0063D977
 0063D966    mov         edx,esi
 0063D968    mov         eax,ebp
 0063D96A    call        TWiimoteManager.AnyDown
 0063D96F    test        al,al
>0063D971    jne         0063D977
 0063D973    xor         eax,eax
>0063D975    jmp         0063D979
 0063D977    mov         al,1
 0063D979    mov         ebx,eax
 0063D97B    test        bl,bl
>0063D97D    jne         0063D983
 0063D97F    inc         esi
 0063D980    dec         edi
>0063D981    jne         0063D962
 0063D983    mov         eax,ebx
 0063D985    pop         ebp
 0063D986    pop         edi
 0063D987    pop         esi
 0063D988    pop         ebx
 0063D989    ret
*}
end;

//0063D98C
function TWiimoteManager.AnyDPadDown(n:Integer):Boolean;
begin
{*
 0063D98C    push        ebx
 0063D98D    push        esi
 0063D98E    push        edi
 0063D98F    push        ebp
 0063D990    mov         esi,edx
 0063D992    mov         ebp,eax
 0063D994    test        esi,esi
>0063D996    jle         0063DA70
 0063D99C    mov         edx,esi
 0063D99E    mov         eax,ebp
 0063D9A0    call        TWiimoteManager.GetAny
 0063D9A5    mov         ebx,eax
 0063D9A7    test        ebx,ebx
>0063D9A9    jne         0063D9B2
 0063D9AB    xor         ebx,ebx
>0063D9AD    jmp         0063DAA5
 0063D9B2    mov         eax,ebx
 0063D9B4    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063D9BA    call        @IsClass
 0063D9BF    test        al,al
>0063D9C1    je          0063D9D1
 0063D9C3    mov         eax,ebx
 0063D9C5    call        TPS3ControllerObject.Down
 0063D9CA    mov         ebx,eax
>0063D9CC    jmp         0063DAA5
 0063D9D1    mov         eax,ebx
 0063D9D3    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063D9D9    call        @IsClass
 0063D9DE    test        al,al
>0063D9E0    je          0063DA6C
 0063D9E6    mov         eax,dword ptr [ebx+4B4]
 0063D9EC    cmp         byte ptr [eax+444],0
>0063D9F3    je          0063DA03
 0063D9F5    mov         eax,ebx
 0063D9F7    call        TWiimoteObject.Down
 0063D9FC    mov         ebx,eax
>0063D9FE    jmp         0063DAA5
 0063DA03    mov         eax,dword ptr [ebx+4B8]
 0063DA09    cmp         byte ptr [eax+8],0
>0063DA0D    je          0063DA33
 0063DA0F    mov         eax,dword ptr [ebx+4B8]
 0063DA15    call        TClassicObject.Down
 0063DA1A    test        al,al
>0063DA1C    jne         0063DA2D
 0063DA1E    mov         eax,ebx
 0063DA20    call        TWiimoteObject.Down
 0063DA25    test        al,al
>0063DA27    jne         0063DA2D
 0063DA29    xor         eax,eax
>0063DA2B    jmp         0063DA2F
 0063DA2D    mov         al,1
 0063DA2F    mov         ebx,eax
>0063DA31    jmp         0063DAA5
 0063DA33    mov         eax,dword ptr [ebx+4BC]
 0063DA39    cmp         byte ptr [eax+8],0
>0063DA3D    je          0063DA4A
 0063DA3F    mov         eax,ebx
 0063DA41    call        TWiimoteObject.Left
 0063DA46    mov         ebx,eax
>0063DA48    jmp         0063DAA5
 0063DA4A    mov         eax,dword ptr [ebx+4C0]
 0063DA50    cmp         byte ptr [eax+8],0
>0063DA54    je          0063DA61
 0063DA56    mov         eax,ebx
 0063DA58    call        TWiimoteObject.Left
 0063DA5D    mov         ebx,eax
>0063DA5F    jmp         0063DAA5
 0063DA61    mov         eax,ebx
 0063DA63    call        TWiimoteObject.Down
 0063DA68    mov         ebx,eax
>0063DA6A    jmp         0063DAA5
 0063DA6C    xor         ebx,ebx
>0063DA6E    jmp         0063DAA5
 0063DA70    xor         ebx,ebx
 0063DA72    mov         eax,ebp
 0063DA74    call        TWiimoteManager.AnyCount
 0063DA79    mov         edi,eax
 0063DA7B    test        edi,edi
>0063DA7D    jle         0063DAA5
 0063DA7F    mov         esi,1
 0063DA84    test        bl,bl
>0063DA86    jne         0063DA99
 0063DA88    mov         edx,esi
 0063DA8A    mov         eax,ebp
 0063DA8C    call        TWiimoteManager.AnyDPadDown
 0063DA91    test        al,al
>0063DA93    jne         0063DA99
 0063DA95    xor         eax,eax
>0063DA97    jmp         0063DA9B
 0063DA99    mov         al,1
 0063DA9B    mov         ebx,eax
 0063DA9D    test        bl,bl
>0063DA9F    jne         0063DAA5
 0063DAA1    inc         esi
 0063DAA2    dec         edi
>0063DAA3    jne         0063DA84
 0063DAA5    mov         eax,ebx
 0063DAA7    pop         ebp
 0063DAA8    pop         edi
 0063DAA9    pop         esi
 0063DAAA    pop         ebx
 0063DAAB    ret
*}
end;

//0063DAAC
function TWiimoteManager.AnyDPadLeft(n:Integer):Boolean;
begin
{*
 0063DAAC    push        ebx
 0063DAAD    push        esi
 0063DAAE    push        edi
 0063DAAF    push        ebp
 0063DAB0    mov         esi,edx
 0063DAB2    mov         ebp,eax
 0063DAB4    test        esi,esi
>0063DAB6    jle         0063DB90
 0063DABC    mov         edx,esi
 0063DABE    mov         eax,ebp
 0063DAC0    call        TWiimoteManager.GetAny
 0063DAC5    mov         ebx,eax
 0063DAC7    test        ebx,ebx
>0063DAC9    jne         0063DAD2
 0063DACB    xor         ebx,ebx
>0063DACD    jmp         0063DBC5
 0063DAD2    mov         eax,ebx
 0063DAD4    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063DADA    call        @IsClass
 0063DADF    test        al,al
>0063DAE1    je          0063DAF1
 0063DAE3    mov         eax,ebx
 0063DAE5    call        TPS3ControllerObject.Left
 0063DAEA    mov         ebx,eax
>0063DAEC    jmp         0063DBC5
 0063DAF1    mov         eax,ebx
 0063DAF3    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063DAF9    call        @IsClass
 0063DAFE    test        al,al
>0063DB00    je          0063DB8C
 0063DB06    mov         eax,dword ptr [ebx+4B4]
 0063DB0C    cmp         byte ptr [eax+444],0
>0063DB13    je          0063DB23
 0063DB15    mov         eax,ebx
 0063DB17    call        TWiimoteObject.Left
 0063DB1C    mov         ebx,eax
>0063DB1E    jmp         0063DBC5
 0063DB23    mov         eax,dword ptr [ebx+4B8]
 0063DB29    cmp         byte ptr [eax+8],0
>0063DB2D    je          0063DB53
 0063DB2F    mov         eax,dword ptr [ebx+4B8]
 0063DB35    call        TClassicObject.Left
 0063DB3A    test        al,al
>0063DB3C    jne         0063DB4D
 0063DB3E    mov         eax,ebx
 0063DB40    call        TWiimoteObject.Left
 0063DB45    test        al,al
>0063DB47    jne         0063DB4D
 0063DB49    xor         eax,eax
>0063DB4B    jmp         0063DB4F
 0063DB4D    mov         al,1
 0063DB4F    mov         ebx,eax
>0063DB51    jmp         0063DBC5
 0063DB53    mov         eax,dword ptr [ebx+4BC]
 0063DB59    cmp         byte ptr [eax+8],0
>0063DB5D    je          0063DB6A
 0063DB5F    mov         eax,ebx
 0063DB61    call        TWiimoteObject.Up
 0063DB66    mov         ebx,eax
>0063DB68    jmp         0063DBC5
 0063DB6A    mov         eax,dword ptr [ebx+4C0]
 0063DB70    cmp         byte ptr [eax+8],0
>0063DB74    je          0063DB81
 0063DB76    mov         eax,ebx
 0063DB78    call        TWiimoteObject.Up
 0063DB7D    mov         ebx,eax
>0063DB7F    jmp         0063DBC5
 0063DB81    mov         eax,ebx
 0063DB83    call        TWiimoteObject.Left
 0063DB88    mov         ebx,eax
>0063DB8A    jmp         0063DBC5
 0063DB8C    xor         ebx,ebx
>0063DB8E    jmp         0063DBC5
 0063DB90    xor         ebx,ebx
 0063DB92    mov         eax,ebp
 0063DB94    call        TWiimoteManager.AnyCount
 0063DB99    mov         edi,eax
 0063DB9B    test        edi,edi
>0063DB9D    jle         0063DBC5
 0063DB9F    mov         esi,1
 0063DBA4    test        bl,bl
>0063DBA6    jne         0063DBB9
 0063DBA8    mov         edx,esi
 0063DBAA    mov         eax,ebp
 0063DBAC    call        TWiimoteManager.AnyDPadLeft
 0063DBB1    test        al,al
>0063DBB3    jne         0063DBB9
 0063DBB5    xor         eax,eax
>0063DBB7    jmp         0063DBBB
 0063DBB9    mov         al,1
 0063DBBB    mov         ebx,eax
 0063DBBD    test        bl,bl
>0063DBBF    jne         0063DBC5
 0063DBC1    inc         esi
 0063DBC2    dec         edi
>0063DBC3    jne         0063DBA4
 0063DBC5    mov         eax,ebx
 0063DBC7    pop         ebp
 0063DBC8    pop         edi
 0063DBC9    pop         esi
 0063DBCA    pop         ebx
 0063DBCB    ret
*}
end;

//0063DBCC
function TWiimoteManager.AnyDPadRight(n:Integer):Boolean;
begin
{*
 0063DBCC    push        ebx
 0063DBCD    push        esi
 0063DBCE    push        edi
 0063DBCF    push        ebp
 0063DBD0    mov         esi,edx
 0063DBD2    mov         ebp,eax
 0063DBD4    test        esi,esi
>0063DBD6    jle         0063DCB0
 0063DBDC    mov         edx,esi
 0063DBDE    mov         eax,ebp
 0063DBE0    call        TWiimoteManager.GetAny
 0063DBE5    mov         ebx,eax
 0063DBE7    test        ebx,ebx
>0063DBE9    jne         0063DBF2
 0063DBEB    xor         ebx,ebx
>0063DBED    jmp         0063DCE5
 0063DBF2    mov         eax,ebx
 0063DBF4    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063DBFA    call        @IsClass
 0063DBFF    test        al,al
>0063DC01    je          0063DC11
 0063DC03    mov         eax,ebx
 0063DC05    call        TPS3ControllerObject.Right
 0063DC0A    mov         ebx,eax
>0063DC0C    jmp         0063DCE5
 0063DC11    mov         eax,ebx
 0063DC13    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063DC19    call        @IsClass
 0063DC1E    test        al,al
>0063DC20    je          0063DCAC
 0063DC26    mov         eax,dword ptr [ebx+4B4]
 0063DC2C    cmp         byte ptr [eax+444],0
>0063DC33    je          0063DC43
 0063DC35    mov         eax,ebx
 0063DC37    call        TWiimoteObject.Right
 0063DC3C    mov         ebx,eax
>0063DC3E    jmp         0063DCE5
 0063DC43    mov         eax,dword ptr [ebx+4B8]
 0063DC49    cmp         byte ptr [eax+8],0
>0063DC4D    je          0063DC73
 0063DC4F    mov         eax,dword ptr [ebx+4B8]
 0063DC55    call        TClassicObject.Right
 0063DC5A    test        al,al
>0063DC5C    jne         0063DC6D
 0063DC5E    mov         eax,ebx
 0063DC60    call        TWiimoteObject.Right
 0063DC65    test        al,al
>0063DC67    jne         0063DC6D
 0063DC69    xor         eax,eax
>0063DC6B    jmp         0063DC6F
 0063DC6D    mov         al,1
 0063DC6F    mov         ebx,eax
>0063DC71    jmp         0063DCE5
 0063DC73    mov         eax,dword ptr [ebx+4BC]
 0063DC79    cmp         byte ptr [eax+8],0
>0063DC7D    je          0063DC8A
 0063DC7F    mov         eax,ebx
 0063DC81    call        TWiimoteObject.Down
 0063DC86    mov         ebx,eax
>0063DC88    jmp         0063DCE5
 0063DC8A    mov         eax,dword ptr [ebx+4C0]
 0063DC90    cmp         byte ptr [eax+8],0
>0063DC94    je          0063DCA1
 0063DC96    mov         eax,ebx
 0063DC98    call        TWiimoteObject.Down
 0063DC9D    mov         ebx,eax
>0063DC9F    jmp         0063DCE5
 0063DCA1    mov         eax,ebx
 0063DCA3    call        TWiimoteObject.Right
 0063DCA8    mov         ebx,eax
>0063DCAA    jmp         0063DCE5
 0063DCAC    xor         ebx,ebx
>0063DCAE    jmp         0063DCE5
 0063DCB0    xor         ebx,ebx
 0063DCB2    mov         eax,ebp
 0063DCB4    call        TWiimoteManager.AnyCount
 0063DCB9    mov         edi,eax
 0063DCBB    test        edi,edi
>0063DCBD    jle         0063DCE5
 0063DCBF    mov         esi,1
 0063DCC4    test        bl,bl
>0063DCC6    jne         0063DCD9
 0063DCC8    mov         edx,esi
 0063DCCA    mov         eax,ebp
 0063DCCC    call        TWiimoteManager.AnyDPadRight
 0063DCD1    test        al,al
>0063DCD3    jne         0063DCD9
 0063DCD5    xor         eax,eax
>0063DCD7    jmp         0063DCDB
 0063DCD9    mov         al,1
 0063DCDB    mov         ebx,eax
 0063DCDD    test        bl,bl
>0063DCDF    jne         0063DCE5
 0063DCE1    inc         esi
 0063DCE2    dec         edi
>0063DCE3    jne         0063DCC4
 0063DCE5    mov         eax,ebx
 0063DCE7    pop         ebp
 0063DCE8    pop         edi
 0063DCE9    pop         esi
 0063DCEA    pop         ebx
 0063DCEB    ret
*}
end;

//0063DCEC
function TWiimoteManager.AnyDPadUp(n:Integer):Boolean;
begin
{*
 0063DCEC    push        ebx
 0063DCED    push        esi
 0063DCEE    push        edi
 0063DCEF    push        ebp
 0063DCF0    mov         esi,edx
 0063DCF2    mov         ebp,eax
 0063DCF4    test        esi,esi
>0063DCF6    jle         0063DDD0
 0063DCFC    mov         edx,esi
 0063DCFE    mov         eax,ebp
 0063DD00    call        TWiimoteManager.GetAny
 0063DD05    mov         ebx,eax
 0063DD07    test        ebx,ebx
>0063DD09    jne         0063DD12
 0063DD0B    xor         ebx,ebx
>0063DD0D    jmp         0063DE05
 0063DD12    mov         eax,ebx
 0063DD14    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063DD1A    call        @IsClass
 0063DD1F    test        al,al
>0063DD21    je          0063DD31
 0063DD23    mov         eax,ebx
 0063DD25    call        TPS3ControllerObject.Up
 0063DD2A    mov         ebx,eax
>0063DD2C    jmp         0063DE05
 0063DD31    mov         eax,ebx
 0063DD33    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063DD39    call        @IsClass
 0063DD3E    test        al,al
>0063DD40    je          0063DDCC
 0063DD46    mov         eax,dword ptr [ebx+4B4]
 0063DD4C    cmp         byte ptr [eax+444],0
>0063DD53    je          0063DD63
 0063DD55    mov         eax,ebx
 0063DD57    call        TWiimoteObject.Up
 0063DD5C    mov         ebx,eax
>0063DD5E    jmp         0063DE05
 0063DD63    mov         eax,dword ptr [ebx+4B8]
 0063DD69    cmp         byte ptr [eax+8],0
>0063DD6D    je          0063DD93
 0063DD6F    mov         eax,dword ptr [ebx+4B8]
 0063DD75    call        TClassicObject.Up
 0063DD7A    test        al,al
>0063DD7C    jne         0063DD8D
 0063DD7E    mov         eax,ebx
 0063DD80    call        TWiimoteObject.Up
 0063DD85    test        al,al
>0063DD87    jne         0063DD8D
 0063DD89    xor         eax,eax
>0063DD8B    jmp         0063DD8F
 0063DD8D    mov         al,1
 0063DD8F    mov         ebx,eax
>0063DD91    jmp         0063DE05
 0063DD93    mov         eax,dword ptr [ebx+4BC]
 0063DD99    cmp         byte ptr [eax+8],0
>0063DD9D    je          0063DDAA
 0063DD9F    mov         eax,ebx
 0063DDA1    call        TWiimoteObject.Right
 0063DDA6    mov         ebx,eax
>0063DDA8    jmp         0063DE05
 0063DDAA    mov         eax,dword ptr [ebx+4C0]
 0063DDB0    cmp         byte ptr [eax+8],0
>0063DDB4    je          0063DDC1
 0063DDB6    mov         eax,ebx
 0063DDB8    call        TWiimoteObject.Right
 0063DDBD    mov         ebx,eax
>0063DDBF    jmp         0063DE05
 0063DDC1    mov         eax,ebx
 0063DDC3    call        TWiimoteObject.Up
 0063DDC8    mov         ebx,eax
>0063DDCA    jmp         0063DE05
 0063DDCC    xor         ebx,ebx
>0063DDCE    jmp         0063DE05
 0063DDD0    xor         ebx,ebx
 0063DDD2    mov         eax,ebp
 0063DDD4    call        TWiimoteManager.AnyCount
 0063DDD9    mov         edi,eax
 0063DDDB    test        edi,edi
>0063DDDD    jle         0063DE05
 0063DDDF    mov         esi,1
 0063DDE4    test        bl,bl
>0063DDE6    jne         0063DDF9
 0063DDE8    mov         edx,esi
 0063DDEA    mov         eax,ebp
 0063DDEC    call        TWiimoteManager.AnyDPadUp
 0063DDF1    test        al,al
>0063DDF3    jne         0063DDF9
 0063DDF5    xor         eax,eax
>0063DDF7    jmp         0063DDFB
 0063DDF9    mov         al,1
 0063DDFB    mov         ebx,eax
 0063DDFD    test        bl,bl
>0063DDFF    jne         0063DE05
 0063DE01    inc         esi
 0063DE02    dec         edi
>0063DE03    jne         0063DDE4
 0063DE05    mov         eax,ebx
 0063DE07    pop         ebp
 0063DE08    pop         edi
 0063DE09    pop         esi
 0063DE0A    pop         ebx
 0063DE0B    ret
*}
end;

//0063DE0C
procedure TWiimoteManager.AnyDPadX(n:Integer);
begin
{*
 0063DE0C    push        ebx
 0063DE0D    push        esi
 0063DE0E    push        edi
 0063DE0F    add         esp,0FFFFFFF4
 0063DE12    mov         ebx,edx
 0063DE14    mov         edi,eax
 0063DE16    test        ebx,ebx
>0063DE18    jle         0063DF2C
 0063DE1E    mov         edx,ebx
 0063DE20    mov         eax,edi
 0063DE22    call        TWiimoteManager.GetAny
 0063DE27    mov         ebx,eax
 0063DE29    test        ebx,ebx
>0063DE2B    jne         0063DE3B
 0063DE2D    xor         eax,eax
 0063DE2F    mov         dword ptr [esp],eax
 0063DE32    mov         dword ptr [esp+4],eax
>0063DE36    jmp         0063DF5B
 0063DE3B    mov         eax,ebx
 0063DE3D    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063DE43    call        @IsClass
 0063DE48    test        al,al
>0063DE4A    je          0063DE5F
 0063DE4C    mov         eax,ebx
 0063DE4E    mov         edx,dword ptr [eax]
 0063DE50    call        dword ptr [edx+88]
 0063DE56    fstp        qword ptr [esp]
 0063DE59    wait
>0063DE5A    jmp         0063DF5B
 0063DE5F    mov         eax,ebx
 0063DE61    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063DE67    call        @IsClass
 0063DE6C    test        al,al
>0063DE6E    je          0063DF21
 0063DE74    mov         eax,dword ptr [ebx+4B4]
 0063DE7A    cmp         byte ptr [eax+444],0
>0063DE81    je          0063DE9B
 0063DE83    mov         eax,ebx
 0063DE85    call        TWiimoteObject.DPadX
 0063DE8A    mov         dword ptr [esp+8],eax
 0063DE8E    fild        dword ptr [esp+8]
 0063DE92    fstp        qword ptr [esp]
 0063DE95    wait
>0063DE96    jmp         0063DF5B
 0063DE9B    mov         esi,dword ptr [ebx+4B8]
 0063DEA1    cmp         byte ptr [esi+8],0
>0063DEA5    je          0063DECA
 0063DEA7    mov         eax,esi
 0063DEA9    call        TClassicObject.DPadX
 0063DEAE    mov         esi,eax
 0063DEB0    mov         eax,ebx
 0063DEB2    call        TWiimoteObject.DPadX
 0063DEB7    add         esi,eax
 0063DEB9    mov         dword ptr [esp+8],esi
 0063DEBD    fild        dword ptr [esp+8]
 0063DEC1    fstp        qword ptr [esp]
 0063DEC4    wait
>0063DEC5    jmp         0063DF5B
 0063DECA    mov         eax,dword ptr [ebx+4BC]
 0063DED0    cmp         byte ptr [eax+8],0
>0063DED4    je          0063DEEB
 0063DED6    mov         eax,ebx
 0063DED8    call        TWiimoteObject.DPadY
 0063DEDD    mov         dword ptr [esp+8],eax
 0063DEE1    fild        dword ptr [esp+8]
 0063DEE5    fstp        qword ptr [esp]
 0063DEE8    wait
>0063DEE9    jmp         0063DF5B
 0063DEEB    mov         eax,dword ptr [ebx+4C0]
 0063DEF1    cmp         byte ptr [eax+8],0
>0063DEF5    je          0063DF0C
 0063DEF7    mov         eax,ebx
 0063DEF9    call        TWiimoteObject.DPadY
 0063DEFE    mov         dword ptr [esp+8],eax
 0063DF02    fild        dword ptr [esp+8]
 0063DF06    fstp        qword ptr [esp]
 0063DF09    wait
>0063DF0A    jmp         0063DF5B
 0063DF0C    mov         eax,ebx
 0063DF0E    call        TWiimoteObject.DPadX
 0063DF13    mov         dword ptr [esp+8],eax
 0063DF17    fild        dword ptr [esp+8]
 0063DF1B    fstp        qword ptr [esp]
 0063DF1E    wait
>0063DF1F    jmp         0063DF5B
 0063DF21    xor         eax,eax
 0063DF23    mov         dword ptr [esp],eax
 0063DF26    mov         dword ptr [esp+4],eax
>0063DF2A    jmp         0063DF5B
 0063DF2C    xor         eax,eax
 0063DF2E    mov         dword ptr [esp],eax
 0063DF31    mov         dword ptr [esp+4],eax
 0063DF35    mov         eax,edi
 0063DF37    call        TWiimoteManager.AnyCount
 0063DF3C    mov         esi,eax
 0063DF3E    test        esi,esi
>0063DF40    jle         0063DF5B
 0063DF42    mov         ebx,1
 0063DF47    mov         edx,ebx
 0063DF49    mov         eax,edi
 0063DF4B    call        TWiimoteManager.AnyDPadX
 0063DF50    fadd        qword ptr [esp]
 0063DF53    fstp        qword ptr [esp]
 0063DF56    wait
 0063DF57    inc         ebx
 0063DF58    dec         esi
>0063DF59    jne         0063DF47
 0063DF5B    fld         qword ptr [esp]
 0063DF5E    fcomp       dword ptr ds:[63DFA0];1:Single
 0063DF64    wait
 0063DF65    fnstsw      al
 0063DF67    sahf
>0063DF68    jbe         0063DF79
 0063DF6A    xor         eax,eax
 0063DF6C    mov         dword ptr [esp],eax
 0063DF6F    mov         dword ptr [esp+4],3FF00000
>0063DF77    jmp         0063DF95
 0063DF79    fld         qword ptr [esp]
 0063DF7C    fcomp       dword ptr ds:[63DFA4];-1:Single
 0063DF82    wait
 0063DF83    fnstsw      al
 0063DF85    sahf
>0063DF86    jae         0063DF95
 0063DF88    xor         eax,eax
 0063DF8A    mov         dword ptr [esp],eax
 0063DF8D    mov         dword ptr [esp+4],0BFF00000
 0063DF95    fld         qword ptr [esp]
 0063DF98    add         esp,0C
 0063DF9B    pop         edi
 0063DF9C    pop         esi
 0063DF9D    pop         ebx
 0063DF9E    ret
*}
end;

//0063DFA8
procedure TWiimoteManager.AnyDPadY(n:Integer);
begin
{*
 0063DFA8    push        ebx
 0063DFA9    push        esi
 0063DFAA    push        edi
 0063DFAB    add         esp,0FFFFFFF4
 0063DFAE    mov         ebx,edx
 0063DFB0    mov         edi,eax
 0063DFB2    test        ebx,ebx
>0063DFB4    jle         0063E0CC
 0063DFBA    mov         edx,ebx
 0063DFBC    mov         eax,edi
 0063DFBE    call        TWiimoteManager.GetAny
 0063DFC3    mov         ebx,eax
 0063DFC5    test        ebx,ebx
>0063DFC7    jne         0063DFD7
 0063DFC9    xor         eax,eax
 0063DFCB    mov         dword ptr [esp],eax
 0063DFCE    mov         dword ptr [esp+4],eax
>0063DFD2    jmp         0063E0FB
 0063DFD7    mov         eax,ebx
 0063DFD9    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063DFDF    call        @IsClass
 0063DFE4    test        al,al
>0063DFE6    je          0063DFFB
 0063DFE8    mov         eax,ebx
 0063DFEA    mov         edx,dword ptr [eax]
 0063DFEC    call        dword ptr [edx+8C]
 0063DFF2    fstp        qword ptr [esp]
 0063DFF5    wait
>0063DFF6    jmp         0063E0FB
 0063DFFB    mov         eax,ebx
 0063DFFD    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063E003    call        @IsClass
 0063E008    test        al,al
>0063E00A    je          0063E0C1
 0063E010    mov         eax,dword ptr [ebx+4B4]
 0063E016    cmp         byte ptr [eax+444],0
>0063E01D    je          0063E037
 0063E01F    mov         eax,ebx
 0063E021    call        TWiimoteObject.DPadY
 0063E026    mov         dword ptr [esp+8],eax
 0063E02A    fild        dword ptr [esp+8]
 0063E02E    fstp        qword ptr [esp]
 0063E031    wait
>0063E032    jmp         0063E0FB
 0063E037    mov         esi,dword ptr [ebx+4B8]
 0063E03D    cmp         byte ptr [esi+8],0
>0063E041    je          0063E066
 0063E043    mov         eax,esi
 0063E045    call        TClassicObject.DPadY
 0063E04A    mov         esi,eax
 0063E04C    mov         eax,ebx
 0063E04E    call        TWiimoteObject.DPadY
 0063E053    add         esi,eax
 0063E055    mov         dword ptr [esp+8],esi
 0063E059    fild        dword ptr [esp+8]
 0063E05D    fstp        qword ptr [esp]
 0063E060    wait
>0063E061    jmp         0063E0FB
 0063E066    mov         eax,dword ptr [ebx+4BC]
 0063E06C    cmp         byte ptr [eax+8],0
>0063E070    je          0063E089
 0063E072    mov         eax,ebx
 0063E074    call        TWiimoteObject.DPadX
 0063E079    neg         eax
 0063E07B    mov         dword ptr [esp+8],eax
 0063E07F    fild        dword ptr [esp+8]
 0063E083    fstp        qword ptr [esp]
 0063E086    wait
>0063E087    jmp         0063E0FB
 0063E089    mov         eax,dword ptr [ebx+4C0]
 0063E08F    cmp         byte ptr [eax+8],0
>0063E093    je          0063E0AC
 0063E095    mov         eax,ebx
 0063E097    call        TWiimoteObject.DPadX
 0063E09C    neg         eax
 0063E09E    mov         dword ptr [esp+8],eax
 0063E0A2    fild        dword ptr [esp+8]
 0063E0A6    fstp        qword ptr [esp]
 0063E0A9    wait
>0063E0AA    jmp         0063E0FB
 0063E0AC    mov         eax,ebx
 0063E0AE    call        TWiimoteObject.DPadY
 0063E0B3    mov         dword ptr [esp+8],eax
 0063E0B7    fild        dword ptr [esp+8]
 0063E0BB    fstp        qword ptr [esp]
 0063E0BE    wait
>0063E0BF    jmp         0063E0FB
 0063E0C1    xor         eax,eax
 0063E0C3    mov         dword ptr [esp],eax
 0063E0C6    mov         dword ptr [esp+4],eax
>0063E0CA    jmp         0063E0FB
 0063E0CC    xor         eax,eax
 0063E0CE    mov         dword ptr [esp],eax
 0063E0D1    mov         dword ptr [esp+4],eax
 0063E0D5    mov         eax,edi
 0063E0D7    call        TWiimoteManager.AnyCount
 0063E0DC    mov         esi,eax
 0063E0DE    test        esi,esi
>0063E0E0    jle         0063E0FB
 0063E0E2    mov         ebx,1
 0063E0E7    mov         edx,ebx
 0063E0E9    mov         eax,edi
 0063E0EB    call        TWiimoteManager.AnyDPadY
 0063E0F0    fadd        qword ptr [esp]
 0063E0F3    fstp        qword ptr [esp]
 0063E0F6    wait
 0063E0F7    inc         ebx
 0063E0F8    dec         esi
>0063E0F9    jne         0063E0E7
 0063E0FB    fld         qword ptr [esp]
 0063E0FE    fcomp       dword ptr ds:[63E140];1:Single
 0063E104    wait
 0063E105    fnstsw      al
 0063E107    sahf
>0063E108    jbe         0063E119
 0063E10A    xor         eax,eax
 0063E10C    mov         dword ptr [esp],eax
 0063E10F    mov         dword ptr [esp+4],3FF00000
>0063E117    jmp         0063E135
 0063E119    fld         qword ptr [esp]
 0063E11C    fcomp       dword ptr ds:[63E144];-1:Single
 0063E122    wait
 0063E123    fnstsw      al
 0063E125    sahf
>0063E126    jae         0063E135
 0063E128    xor         eax,eax
 0063E12A    mov         dword ptr [esp],eax
 0063E12D    mov         dword ptr [esp+4],0BFF00000
 0063E135    fld         qword ptr [esp]
 0063E138    add         esp,0C
 0063E13B    pop         edi
 0063E13C    pop         esi
 0063E13D    pop         ebx
 0063E13E    ret
*}
end;

//0063E148
function TWiimoteManager.AnyGestureState(n:Integer):TGestureState;
begin
{*
 0063E148    push        ebx
 0063E149    push        esi
 0063E14A    push        edi
 0063E14B    push        ebp
 0063E14C    mov         esi,edx
 0063E14E    mov         ebp,eax
 0063E150    test        esi,esi
>0063E152    jle         0063E16E
 0063E154    mov         edx,esi
 0063E156    mov         eax,ebp
 0063E158    call        TWiimoteManager.GetAny
 0063E15D    test        eax,eax
>0063E15F    jne         0063E165
 0063E161    xor         ebx,ebx
>0063E163    jmp         0063E195
 0063E165    movzx       ebx,byte ptr [eax+41E];TAccelerometerObject.GestureState:TGestureState
>0063E16C    jmp         0063E195
 0063E16E    xor         ebx,ebx
 0063E170    mov         eax,ebp
 0063E172    call        TWiimoteManager.AnyCount
 0063E177    mov         edi,eax
 0063E179    test        edi,edi
>0063E17B    jle         0063E195
 0063E17D    mov         esi,1
 0063E182    mov         edx,esi
 0063E184    mov         eax,ebp
 0063E186    call        TWiimoteManager.AnyGestureState
 0063E18B    mov         ebx,eax
 0063E18D    test        bl,bl
>0063E18F    jne         0063E195
 0063E191    inc         esi
 0063E192    dec         edi
>0063E193    jne         0063E182
 0063E195    mov         eax,ebx
 0063E197    pop         ebp
 0063E198    pop         edi
 0063E199    pop         esi
 0063E19A    pop         ebx
 0063E19B    ret
*}
end;

//0063E19C
function TWiimoteManager.AnyGetRumble(n:Integer):Double;
begin
{*
 0063E19C    push        ebx
 0063E19D    push        esi
 0063E19E    push        edi
 0063E19F    push        ebp
 0063E1A0    add         esp,0FFFFFFE0
 0063E1A3    mov         esi,edx
 0063E1A5    mov         ebp,eax
 0063E1A7    test        esi,esi
>0063E1A9    jle         0063E22F
 0063E1AF    mov         edx,esi
 0063E1B1    mov         eax,ebp
 0063E1B3    call        TWiimoteManager.GetAny
 0063E1B8    mov         ebx,eax
 0063E1BA    test        ebx,ebx
>0063E1BC    jne         0063E1CC
 0063E1BE    xor         eax,eax
 0063E1C0    mov         dword ptr [esp],eax
 0063E1C3    mov         dword ptr [esp+4],eax
>0063E1C7    jmp         0063E2F7
 0063E1CC    mov         eax,ebx
 0063E1CE    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063E1D4    call        @IsClass
 0063E1D9    test        al,al
>0063E1DB    je          0063E1F8
 0063E1DD    movzx       eax,byte ptr [ebx+48C]
 0063E1E4    movsx       eax,al
 0063E1E7    mov         dword ptr [esp+10],eax
 0063E1EB    fild        dword ptr [esp+10]
 0063E1EF    fstp        qword ptr [esp]
 0063E1F2    wait
>0063E1F3    jmp         0063E2F7
 0063E1F8    mov         eax,ebx
 0063E1FA    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063E200    call        @IsClass
 0063E205    test        al,al
>0063E207    je          0063E221
 0063E209    mov         eax,dword ptr [ebx+480]
 0063E20F    mov         dword ptr [esp],eax
 0063E212    mov         eax,dword ptr [ebx+484]
 0063E218    mov         dword ptr [esp+4],eax
>0063E21C    jmp         0063E2F7
 0063E221    xor         eax,eax
 0063E223    mov         dword ptr [esp],eax
 0063E226    mov         dword ptr [esp+4],eax
>0063E22A    jmp         0063E2F7
 0063E22F    xor         eax,eax
 0063E231    mov         dword ptr [esp],eax
 0063E234    mov         dword ptr [esp+4],eax
 0063E238    mov         eax,ebp
 0063E23A    call        TWiimoteManager.AnyCount
 0063E23F    mov         edi,eax
 0063E241    test        edi,edi
>0063E243    jle         0063E2F7
 0063E249    mov         esi,1
 0063E24E    mov         edx,esi
 0063E250    mov         eax,ebp
 0063E252    call        TWiimoteManager.GetAny
 0063E257    mov         ebx,eax
 0063E259    test        ebx,ebx
>0063E25B    jne         0063E269
 0063E25D    xor         eax,eax
 0063E25F    mov         dword ptr [esp+8],eax
 0063E263    mov         dword ptr [esp+0C],eax
>0063E267    jmp         0063E2C4
 0063E269    mov         eax,ebx
 0063E26B    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063E271    call        @IsClass
 0063E276    test        al,al
>0063E278    je          0063E293
 0063E27A    movzx       eax,byte ptr [ebx+48C]
 0063E281    movsx       eax,al
 0063E284    mov         dword ptr [esp+10],eax
 0063E288    fild        dword ptr [esp+10]
 0063E28C    fstp        qword ptr [esp+8]
 0063E290    wait
>0063E291    jmp         0063E2C4
 0063E293    mov         eax,ebx
 0063E295    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063E29B    call        @IsClass
 0063E2A0    test        al,al
>0063E2A2    je          0063E2BA
 0063E2A4    mov         eax,dword ptr [ebx+480]
 0063E2AA    mov         dword ptr [esp+8],eax
 0063E2AE    mov         eax,dword ptr [ebx+484]
 0063E2B4    mov         dword ptr [esp+0C],eax
>0063E2B8    jmp         0063E2C4
 0063E2BA    xor         eax,eax
 0063E2BC    mov         dword ptr [esp+8],eax
 0063E2C0    mov         dword ptr [esp+0C],eax
 0063E2C4    fld         qword ptr [esp+8]
 0063E2C8    fabs
 0063E2CA    fstp        tbyte ptr [esp+14]
 0063E2CE    wait
 0063E2CF    fld         qword ptr [esp]
 0063E2D2    fabs
 0063E2D4    fld         tbyte ptr [esp+14]
 0063E2D8    fcompp
 0063E2DA    wait
 0063E2DB    fnstsw      al
 0063E2DD    sahf
>0063E2DE    jbe         0063E2EF
 0063E2E0    mov         eax,dword ptr [esp+8]
 0063E2E4    mov         dword ptr [esp],eax
 0063E2E7    mov         eax,dword ptr [esp+0C]
 0063E2EB    mov         dword ptr [esp+4],eax
 0063E2EF    inc         esi
 0063E2F0    dec         edi
>0063E2F1    jne         0063E24E
 0063E2F7    fld         qword ptr [esp]
 0063E2FA    add         esp,20
 0063E2FD    pop         ebp
 0063E2FE    pop         edi
 0063E2FF    pop         esi
 0063E300    pop         ebx
 0063E301    ret
*}
end;

//0063E304
function TWiimoteManager.AnyHome(n:Integer):Boolean;
begin
{*
 0063E304    push        ebx
 0063E305    push        esi
 0063E306    push        edi
 0063E307    push        ebp
 0063E308    mov         esi,edx
 0063E30A    mov         ebp,eax
 0063E30C    test        esi,esi
>0063E30E    jle         0063E3E8
 0063E314    mov         edx,esi
 0063E316    mov         eax,ebp
 0063E318    call        TWiimoteManager.GetAny
 0063E31D    mov         ebx,eax
 0063E31F    test        ebx,ebx
>0063E321    jne         0063E32A
 0063E323    xor         ebx,ebx
>0063E325    jmp         0063E41D
 0063E32A    mov         eax,ebx
 0063E32C    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063E332    call        @IsClass
 0063E337    test        al,al
>0063E339    je          0063E349
 0063E33B    mov         eax,ebx
 0063E33D    call        TPS3ControllerObject.PS
 0063E342    mov         ebx,eax
>0063E344    jmp         0063E41D
 0063E349    mov         eax,ebx
 0063E34B    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063E351    call        @IsClass
 0063E356    test        al,al
>0063E358    je          0063E3E4
 0063E35E    mov         eax,dword ptr [ebx+4B4]
 0063E364    cmp         byte ptr [eax+444],0
>0063E36B    je          0063E37B
 0063E36D    mov         eax,ebx
 0063E36F    call        TWiimoteObject.HOME
 0063E374    mov         ebx,eax
>0063E376    jmp         0063E41D
 0063E37B    mov         eax,dword ptr [ebx+4B8]
 0063E381    cmp         byte ptr [eax+8],0
>0063E385    je          0063E3AB
 0063E387    mov         eax,dword ptr [ebx+4B8]
 0063E38D    call        TClassicObject.HOME
 0063E392    test        al,al
>0063E394    jne         0063E3A5
 0063E396    mov         eax,ebx
 0063E398    call        TWiimoteObject.HOME
 0063E39D    test        al,al
>0063E39F    jne         0063E3A5
 0063E3A1    xor         eax,eax
>0063E3A3    jmp         0063E3A7
 0063E3A5    mov         al,1
 0063E3A7    mov         ebx,eax
>0063E3A9    jmp         0063E41D
 0063E3AB    mov         eax,dword ptr [ebx+4BC]
 0063E3B1    cmp         byte ptr [eax+8],0
>0063E3B5    je          0063E3C2
 0063E3B7    mov         eax,ebx
 0063E3B9    call        TWiimoteObject.HOME
 0063E3BE    mov         ebx,eax
>0063E3C0    jmp         0063E41D
 0063E3C2    mov         eax,dword ptr [ebx+4C0]
 0063E3C8    cmp         byte ptr [eax+8],0
>0063E3CC    je          0063E3D9
 0063E3CE    mov         eax,ebx
 0063E3D0    call        TWiimoteObject.HOME
 0063E3D5    mov         ebx,eax
>0063E3D7    jmp         0063E41D
 0063E3D9    mov         eax,ebx
 0063E3DB    call        TWiimoteObject.HOME
 0063E3E0    mov         ebx,eax
>0063E3E2    jmp         0063E41D
 0063E3E4    xor         ebx,ebx
>0063E3E6    jmp         0063E41D
 0063E3E8    xor         ebx,ebx
 0063E3EA    mov         eax,ebp
 0063E3EC    call        TWiimoteManager.AnyCount
 0063E3F1    mov         edi,eax
 0063E3F3    test        edi,edi
>0063E3F5    jle         0063E41D
 0063E3F7    mov         esi,1
 0063E3FC    test        bl,bl
>0063E3FE    jne         0063E411
 0063E400    mov         edx,esi
 0063E402    mov         eax,ebp
 0063E404    call        TWiimoteManager.AnyHome
 0063E409    test        al,al
>0063E40B    jne         0063E411
 0063E40D    xor         eax,eax
>0063E40F    jmp         0063E413
 0063E411    mov         al,1
 0063E413    mov         ebx,eax
 0063E415    test        bl,bl
>0063E417    jne         0063E41D
 0063E419    inc         esi
 0063E41A    dec         edi
>0063E41B    jne         0063E3FC
 0063E41D    mov         eax,ebx
 0063E41F    pop         ebp
 0063E420    pop         edi
 0063E421    pop         esi
 0063E422    pop         ebx
 0063E423    ret
*}
end;

//0063E424
function TWiimoteManager.AnyL3(n:Integer):Boolean;
begin
{*
 0063E424    push        ebx
 0063E425    push        esi
 0063E426    push        edi
 0063E427    push        ebp
 0063E428    mov         esi,edx
 0063E42A    mov         ebp,eax
 0063E42C    test        esi,esi
>0063E42E    jle         0063E478
 0063E430    mov         edx,esi
 0063E432    mov         eax,ebp
 0063E434    call        TWiimoteManager.GetAny
 0063E439    mov         ebx,eax
 0063E43B    test        ebx,ebx
>0063E43D    jne         0063E443
 0063E43F    xor         ebx,ebx
>0063E441    jmp         0063E4AD
 0063E443    mov         eax,ebx
 0063E445    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063E44B    call        @IsClass
 0063E450    test        al,al
>0063E452    je          0063E45F
 0063E454    mov         eax,ebx
 0063E456    call        TPS3ControllerObject.L3
 0063E45B    mov         ebx,eax
>0063E45D    jmp         0063E4AD
 0063E45F    mov         eax,ebx
 0063E461    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063E467    call        @IsClass
 0063E46C    test        al,al
>0063E46E    je          0063E474
 0063E470    xor         ebx,ebx
>0063E472    jmp         0063E4AD
 0063E474    xor         ebx,ebx
>0063E476    jmp         0063E4AD
 0063E478    xor         ebx,ebx
 0063E47A    mov         eax,ebp
 0063E47C    call        TWiimoteManager.AnyCount
 0063E481    mov         edi,eax
 0063E483    test        edi,edi
>0063E485    jle         0063E4AD
 0063E487    mov         esi,1
 0063E48C    test        bl,bl
>0063E48E    jne         0063E4A1
 0063E490    mov         edx,esi
 0063E492    mov         eax,ebp
 0063E494    call        TWiimoteManager.AnyL3
 0063E499    test        al,al
>0063E49B    jne         0063E4A1
 0063E49D    xor         eax,eax
>0063E49F    jmp         0063E4A3
 0063E4A1    mov         al,1
 0063E4A3    mov         ebx,eax
 0063E4A5    test        bl,bl
>0063E4A7    jne         0063E4AD
 0063E4A9    inc         esi
 0063E4AA    dec         edi
>0063E4AB    jne         0063E48C
 0063E4AD    mov         eax,ebx
 0063E4AF    pop         ebp
 0063E4B0    pop         edi
 0063E4B1    pop         esi
 0063E4B2    pop         ebx
 0063E4B3    ret
*}
end;

//0063E4B4
function TWiimoteManager.AnyLeft(n:Integer):Boolean;
begin
{*
 0063E4B4    push        ebx
 0063E4B5    push        esi
 0063E4B6    push        edi
 0063E4B7    push        ebp
 0063E4B8    mov         esi,edx
 0063E4BA    mov         ebp,eax
 0063E4BC    test        esi,esi
>0063E4BE    jle         0063E635
 0063E4C4    mov         edx,esi
 0063E4C6    mov         eax,ebp
 0063E4C8    call        TWiimoteManager.GetAny
 0063E4CD    mov         ebx,eax
 0063E4CF    test        ebx,ebx
>0063E4D1    jne         0063E4DA
 0063E4D3    xor         ebx,ebx
>0063E4D5    jmp         0063E66A
 0063E4DA    mov         eax,ebx
 0063E4DC    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063E4E2    call        @IsClass
 0063E4E7    test        al,al
>0063E4E9    je          0063E51A
 0063E4EB    mov         eax,ebx
 0063E4ED    call        TPS3ControllerObject.Left
 0063E4F2    test        al,al
>0063E4F4    jne         0063E511
 0063E4F6    mov         eax,ebx
 0063E4F8    call        TPS3ControllerObject.LeftStickX
 0063E4FD    fld         qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063E503    fchs
 0063E505    fcompp
 0063E507    wait
 0063E508    fnstsw      al
 0063E50A    sahf
>0063E50B    ja          0063E511
 0063E50D    xor         eax,eax
>0063E50F    jmp         0063E513
 0063E511    mov         al,1
 0063E513    mov         ebx,eax
>0063E515    jmp         0063E66A
 0063E51A    mov         eax,ebx
 0063E51C    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063E522    call        @IsClass
 0063E527    test        al,al
>0063E529    je          0063E631
 0063E52F    mov         eax,dword ptr [ebx+4B4]
 0063E535    cmp         byte ptr [eax+444],0
>0063E53C    je          0063E571
 0063E53E    mov         eax,ebx
 0063E540    call        TWiimoteObject.Left
 0063E545    test        al,al
>0063E547    jne         0063E568
 0063E549    mov         eax,dword ptr [ebx+4B4]
 0063E54F    call        TNunchukObject.StickX
 0063E554    fld         qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063E55A    fchs
 0063E55C    fcompp
 0063E55E    wait
 0063E55F    fnstsw      al
 0063E561    sahf
>0063E562    ja          0063E568
 0063E564    xor         eax,eax
>0063E566    jmp         0063E56A
 0063E568    mov         al,1
 0063E56A    mov         ebx,eax
>0063E56C    jmp         0063E66A
 0063E571    mov         eax,dword ptr [ebx+4B8]
 0063E577    cmp         byte ptr [eax+8],0
>0063E57B    je          0063E5BF
 0063E57D    mov         eax,dword ptr [ebx+4B8]
 0063E583    call        TClassicObject.Left
 0063E588    test        al,al
>0063E58A    jne         0063E5B6
 0063E58C    mov         eax,ebx
 0063E58E    call        TWiimoteObject.Left
 0063E593    test        al,al
>0063E595    jne         0063E5B6
 0063E597    mov         eax,dword ptr [ebx+4B8]
 0063E59D    call        TClassicObject.LeftStickX
 0063E5A2    fld         qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063E5A8    fchs
 0063E5AA    fcompp
 0063E5AC    wait
 0063E5AD    fnstsw      al
 0063E5AF    sahf
>0063E5B0    ja          0063E5B6
 0063E5B2    xor         eax,eax
>0063E5B4    jmp         0063E5B8
 0063E5B6    mov         al,1
 0063E5B8    mov         ebx,eax
>0063E5BA    jmp         0063E66A
 0063E5BF    mov         esi,dword ptr [ebx+4BC]
 0063E5C5    cmp         byte ptr [esi+8],0
>0063E5C9    je          0063E5EA
 0063E5CB    mov         eax,esi
 0063E5CD    call        TGuitarObject.StickX
 0063E5D2    fld         qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063E5D8    fchs
 0063E5DA    fcompp
 0063E5DC    wait
 0063E5DD    fnstsw      al
 0063E5DF    sahf
 0063E5E0    seta        al
 0063E5E3    mov         ebx,eax
>0063E5E5    jmp         0063E66A
 0063E5EA    mov         eax,dword ptr [ebx+4C0]
 0063E5F0    cmp         byte ptr [eax+8],0
>0063E5F4    je          0063E626
 0063E5F6    mov         eax,ebx
 0063E5F8    call        TWiimoteObject.Up
 0063E5FD    test        al,al
>0063E5FF    jne         0063E620
 0063E601    mov         eax,dword ptr [ebx+4C0]
 0063E607    call        TDrumsObject.StickX
 0063E60C    fld         qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063E612    fchs
 0063E614    fcompp
 0063E616    wait
 0063E617    fnstsw      al
 0063E619    sahf
>0063E61A    ja          0063E620
 0063E61C    xor         eax,eax
>0063E61E    jmp         0063E622
 0063E620    mov         al,1
 0063E622    mov         ebx,eax
>0063E624    jmp         0063E66A
 0063E626    mov         eax,ebx
 0063E628    call        TWiimoteObject.Left
 0063E62D    mov         ebx,eax
>0063E62F    jmp         0063E66A
 0063E631    xor         ebx,ebx
>0063E633    jmp         0063E66A
 0063E635    xor         ebx,ebx
 0063E637    mov         eax,ebp
 0063E639    call        TWiimoteManager.AnyCount
 0063E63E    mov         edi,eax
 0063E640    test        edi,edi
>0063E642    jle         0063E66A
 0063E644    mov         esi,1
 0063E649    test        bl,bl
>0063E64B    jne         0063E65E
 0063E64D    mov         edx,esi
 0063E64F    mov         eax,ebp
 0063E651    call        TWiimoteManager.AnyLeft
 0063E656    test        al,al
>0063E658    jne         0063E65E
 0063E65A    xor         eax,eax
>0063E65C    jmp         0063E660
 0063E65E    mov         al,1
 0063E660    mov         ebx,eax
 0063E662    test        bl,bl
>0063E664    jne         0063E66A
 0063E666    inc         esi
 0063E667    dec         edi
>0063E668    jne         0063E649
 0063E66A    mov         eax,ebx
 0063E66C    pop         ebp
 0063E66D    pop         edi
 0063E66E    pop         esi
 0063E66F    pop         ebx
 0063E670    ret
*}
end;

//0063E674
function TWiimoteManager.AnyLeftStickX(n:Integer):Double;
begin
{*
 0063E674    push        ebx
 0063E675    push        esi
 0063E676    push        edi
 0063E677    add         esp,0FFFFFFF4
 0063E67A    mov         ebx,edx
 0063E67C    mov         edi,eax
 0063E67E    test        ebx,ebx
>0063E680    jle         0063E757
 0063E686    mov         edx,ebx
 0063E688    mov         eax,edi
 0063E68A    call        TWiimoteManager.GetAny
 0063E68F    mov         ebx,eax
 0063E691    test        ebx,ebx
>0063E693    jne         0063E6A3
 0063E695    xor         eax,eax
 0063E697    mov         dword ptr [esp],eax
 0063E69A    mov         dword ptr [esp+4],eax
>0063E69E    jmp         0063E786
 0063E6A3    mov         eax,ebx
 0063E6A5    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063E6AB    call        @IsClass
 0063E6B0    test        al,al
>0063E6B2    je          0063E6C4
 0063E6B4    mov         eax,ebx
 0063E6B6    call        TPS3ControllerObject.LeftStickX
 0063E6BB    fstp        qword ptr [esp]
 0063E6BE    wait
>0063E6BF    jmp         0063E786
 0063E6C4    mov         eax,ebx
 0063E6C6    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063E6CC    call        @IsClass
 0063E6D1    test        al,al
>0063E6D3    je          0063E74C
 0063E6D5    mov         eax,dword ptr [ebx+4B4]
 0063E6DB    cmp         byte ptr [eax+444],0
>0063E6E2    je          0063E6F2
 0063E6E4    call        TNunchukObject.StickX
 0063E6E9    fstp        qword ptr [esp]
 0063E6EC    wait
>0063E6ED    jmp         0063E786
 0063E6F2    mov         eax,dword ptr [ebx+4B8]
 0063E6F8    cmp         byte ptr [eax+8],0
>0063E6FC    je          0063E709
 0063E6FE    call        TClassicObject.LeftStickX
 0063E703    fstp        qword ptr [esp]
 0063E706    wait
>0063E707    jmp         0063E786
 0063E709    mov         eax,dword ptr [ebx+4BC]
 0063E70F    cmp         byte ptr [eax+8],0
>0063E713    je          0063E720
 0063E715    call        TGuitarObject.StickX
 0063E71A    fstp        qword ptr [esp]
 0063E71D    wait
>0063E71E    jmp         0063E786
 0063E720    mov         eax,dword ptr [ebx+4C0]
 0063E726    cmp         byte ptr [eax+8],0
>0063E72A    je          0063E737
 0063E72C    call        TDrumsObject.StickX
 0063E731    fstp        qword ptr [esp]
 0063E734    wait
>0063E735    jmp         0063E786
 0063E737    mov         eax,ebx
 0063E739    call        TWiimoteObject.DPadX
 0063E73E    mov         dword ptr [esp+8],eax
 0063E742    fild        dword ptr [esp+8]
 0063E746    fstp        qword ptr [esp]
 0063E749    wait
>0063E74A    jmp         0063E786
 0063E74C    xor         eax,eax
 0063E74E    mov         dword ptr [esp],eax
 0063E751    mov         dword ptr [esp+4],eax
>0063E755    jmp         0063E786
 0063E757    xor         eax,eax
 0063E759    mov         dword ptr [esp],eax
 0063E75C    mov         dword ptr [esp+4],eax
 0063E760    mov         eax,edi
 0063E762    call        TWiimoteManager.AnyCount
 0063E767    mov         esi,eax
 0063E769    test        esi,esi
>0063E76B    jle         0063E786
 0063E76D    mov         ebx,1
 0063E772    mov         edx,ebx
 0063E774    mov         eax,edi
 0063E776    call        TWiimoteManager.AnyLeftStickX
 0063E77B    fadd        qword ptr [esp]
 0063E77E    fstp        qword ptr [esp]
 0063E781    wait
 0063E782    inc         ebx
 0063E783    dec         esi
>0063E784    jne         0063E772
 0063E786    fld         qword ptr [esp]
 0063E789    fcomp       dword ptr ds:[63E7CC];1:Single
 0063E78F    wait
 0063E790    fnstsw      al
 0063E792    sahf
>0063E793    jbe         0063E7A4
 0063E795    xor         eax,eax
 0063E797    mov         dword ptr [esp],eax
 0063E79A    mov         dword ptr [esp+4],3FF00000
>0063E7A2    jmp         0063E7C0
 0063E7A4    fld         qword ptr [esp]
 0063E7A7    fcomp       dword ptr ds:[63E7D0];-1:Single
 0063E7AD    wait
 0063E7AE    fnstsw      al
 0063E7B0    sahf
>0063E7B1    jae         0063E7C0
 0063E7B3    xor         eax,eax
 0063E7B5    mov         dword ptr [esp],eax
 0063E7B8    mov         dword ptr [esp+4],0BFF00000
 0063E7C0    fld         qword ptr [esp]
 0063E7C3    add         esp,0C
 0063E7C6    pop         edi
 0063E7C7    pop         esi
 0063E7C8    pop         ebx
 0063E7C9    ret
*}
end;

//0063E7D4
function TWiimoteManager.AnyLeftStickY(n:Integer):Double;
begin
{*
 0063E7D4    push        ebx
 0063E7D5    push        esi
 0063E7D6    push        edi
 0063E7D7    add         esp,0FFFFFFF4
 0063E7DA    mov         ebx,edx
 0063E7DC    mov         edi,eax
 0063E7DE    test        ebx,ebx
>0063E7E0    jle         0063E8B7
 0063E7E6    mov         edx,ebx
 0063E7E8    mov         eax,edi
 0063E7EA    call        TWiimoteManager.GetAny
 0063E7EF    mov         ebx,eax
 0063E7F1    test        ebx,ebx
>0063E7F3    jne         0063E803
 0063E7F5    xor         eax,eax
 0063E7F7    mov         dword ptr [esp],eax
 0063E7FA    mov         dword ptr [esp+4],eax
>0063E7FE    jmp         0063E8E6
 0063E803    mov         eax,ebx
 0063E805    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063E80B    call        @IsClass
 0063E810    test        al,al
>0063E812    je          0063E824
 0063E814    mov         eax,ebx
 0063E816    call        TPS3ControllerObject.LeftStickY
 0063E81B    fstp        qword ptr [esp]
 0063E81E    wait
>0063E81F    jmp         0063E8E6
 0063E824    mov         eax,ebx
 0063E826    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063E82C    call        @IsClass
 0063E831    test        al,al
>0063E833    je          0063E8AC
 0063E835    mov         eax,dword ptr [ebx+4B4]
 0063E83B    cmp         byte ptr [eax+444],0
>0063E842    je          0063E852
 0063E844    call        TNunchukObject.StickY
 0063E849    fstp        qword ptr [esp]
 0063E84C    wait
>0063E84D    jmp         0063E8E6
 0063E852    mov         eax,dword ptr [ebx+4B8]
 0063E858    cmp         byte ptr [eax+8],0
>0063E85C    je          0063E869
 0063E85E    call        TClassicObject.LeftStickY
 0063E863    fstp        qword ptr [esp]
 0063E866    wait
>0063E867    jmp         0063E8E6
 0063E869    mov         eax,dword ptr [ebx+4BC]
 0063E86F    cmp         byte ptr [eax+8],0
>0063E873    je          0063E880
 0063E875    call        TGuitarObject.StickY
 0063E87A    fstp        qword ptr [esp]
 0063E87D    wait
>0063E87E    jmp         0063E8E6
 0063E880    mov         eax,dword ptr [ebx+4C0]
 0063E886    cmp         byte ptr [eax+8],0
>0063E88A    je          0063E897
 0063E88C    call        TDrumsObject.StickY
 0063E891    fstp        qword ptr [esp]
 0063E894    wait
>0063E895    jmp         0063E8E6
 0063E897    mov         eax,ebx
 0063E899    call        TWiimoteObject.DPadY
 0063E89E    mov         dword ptr [esp+8],eax
 0063E8A2    fild        dword ptr [esp+8]
 0063E8A6    fstp        qword ptr [esp]
 0063E8A9    wait
>0063E8AA    jmp         0063E8E6
 0063E8AC    xor         eax,eax
 0063E8AE    mov         dword ptr [esp],eax
 0063E8B1    mov         dword ptr [esp+4],eax
>0063E8B5    jmp         0063E8E6
 0063E8B7    xor         eax,eax
 0063E8B9    mov         dword ptr [esp],eax
 0063E8BC    mov         dword ptr [esp+4],eax
 0063E8C0    mov         eax,edi
 0063E8C2    call        TWiimoteManager.AnyCount
 0063E8C7    mov         esi,eax
 0063E8C9    test        esi,esi
>0063E8CB    jle         0063E8E6
 0063E8CD    mov         ebx,1
 0063E8D2    mov         edx,ebx
 0063E8D4    mov         eax,edi
 0063E8D6    call        TWiimoteManager.AnyLeftStickY
 0063E8DB    fadd        qword ptr [esp]
 0063E8DE    fstp        qword ptr [esp]
 0063E8E1    wait
 0063E8E2    inc         ebx
 0063E8E3    dec         esi
>0063E8E4    jne         0063E8D2
 0063E8E6    fld         qword ptr [esp]
 0063E8E9    fcomp       dword ptr ds:[63E92C];1:Single
 0063E8EF    wait
 0063E8F0    fnstsw      al
 0063E8F2    sahf
>0063E8F3    jbe         0063E904
 0063E8F5    xor         eax,eax
 0063E8F7    mov         dword ptr [esp],eax
 0063E8FA    mov         dword ptr [esp+4],3FF00000
>0063E902    jmp         0063E920
 0063E904    fld         qword ptr [esp]
 0063E907    fcomp       dword ptr ds:[63E930];-1:Single
 0063E90D    wait
 0063E90E    fnstsw      al
 0063E910    sahf
>0063E911    jae         0063E920
 0063E913    xor         eax,eax
 0063E915    mov         dword ptr [esp],eax
 0063E918    mov         dword ptr [esp+4],0BFF00000
 0063E920    fld         qword ptr [esp]
 0063E923    add         esp,0C
 0063E926    pop         edi
 0063E927    pop         esi
 0063E928    pop         ebx
 0063E929    ret
*}
end;

//0063E934
function TWiimoteManager.AnyLeftThumbButton1(n:Integer):Boolean;
begin
{*
 0063E934    push        ebx
 0063E935    push        esi
 0063E936    push        edi
 0063E937    push        ebp
 0063E938    mov         esi,edx
 0063E93A    mov         ebp,eax
 0063E93C    test        esi,esi
>0063E93E    jle         0063E9F2
 0063E944    mov         edx,esi
 0063E946    mov         eax,ebp
 0063E948    call        TWiimoteManager.GetAny
 0063E94D    mov         ebx,eax
 0063E94F    test        ebx,ebx
>0063E951    jne         0063E95A
 0063E953    xor         ebx,ebx
>0063E955    jmp         0063EA27
 0063E95A    mov         eax,ebx
 0063E95C    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063E962    call        @IsClass
 0063E967    test        al,al
>0063E969    je          0063E979
 0063E96B    mov         eax,ebx
 0063E96D    call        TPS3ControllerObject.Select
 0063E972    mov         ebx,eax
>0063E974    jmp         0063EA27
 0063E979    mov         eax,ebx
 0063E97B    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063E981    call        @IsClass
 0063E986    test        al,al
>0063E988    je          0063E9EE
 0063E98A    mov         eax,ebx
 0063E98C    mov         edx,dword ptr [eax+4B4]
 0063E992    cmp         byte ptr [edx+444],0
>0063E999    je          0063E9A7
 0063E99B    call        TWiimoteObject.One
 0063E9A0    mov         ebx,eax
>0063E9A2    jmp         0063EA27
 0063E9A7    mov         edx,dword ptr [eax+4B8]
 0063E9AD    cmp         byte ptr [edx+8],0
>0063E9B1    je          0063E9BE
 0063E9B3    mov         eax,edx
 0063E9B5    call        TClassicObject.Minus
 0063E9BA    mov         ebx,eax
>0063E9BC    jmp         0063EA27
 0063E9BE    mov         edx,dword ptr [eax+4BC]
 0063E9C4    cmp         byte ptr [edx+8],0
>0063E9C8    je          0063E9CE
 0063E9CA    xor         ebx,ebx
>0063E9CC    jmp         0063EA27
 0063E9CE    mov         edx,dword ptr [eax+4C0]
 0063E9D4    cmp         byte ptr [edx+8],0
>0063E9D8    je          0063E9E5
 0063E9DA    mov         eax,edx
 0063E9DC    call        TDrumsObject.Red
 0063E9E1    mov         ebx,eax
>0063E9E3    jmp         0063EA27
 0063E9E5    call        TWiimoteObject.One
 0063E9EA    mov         ebx,eax
>0063E9EC    jmp         0063EA27
 0063E9EE    xor         ebx,ebx
>0063E9F0    jmp         0063EA27
 0063E9F2    xor         ebx,ebx
 0063E9F4    mov         eax,ebp
 0063E9F6    call        TWiimoteManager.AnyCount
 0063E9FB    mov         edi,eax
 0063E9FD    test        edi,edi
>0063E9FF    jle         0063EA27
 0063EA01    mov         esi,1
 0063EA06    test        bl,bl
>0063EA08    jne         0063EA1B
 0063EA0A    mov         edx,esi
 0063EA0C    mov         eax,ebp
 0063EA0E    call        TWiimoteManager.AnyLeftThumbButton1
 0063EA13    test        al,al
>0063EA15    jne         0063EA1B
 0063EA17    xor         eax,eax
>0063EA19    jmp         0063EA1D
 0063EA1B    mov         al,1
 0063EA1D    mov         ebx,eax
 0063EA1F    test        bl,bl
>0063EA21    jne         0063EA27
 0063EA23    inc         esi
 0063EA24    dec         edi
>0063EA25    jne         0063EA06
 0063EA27    mov         eax,ebx
 0063EA29    pop         ebp
 0063EA2A    pop         edi
 0063EA2B    pop         esi
 0063EA2C    pop         ebx
 0063EA2D    ret
*}
end;

//0063EA30
function TWiimoteManager.AnyLeftThumbButton2(n:Integer):Boolean;
begin
{*
 0063EA30    push        ebx
 0063EA31    push        esi
 0063EA32    push        edi
 0063EA33    push        ebp
 0063EA34    mov         esi,edx
 0063EA36    mov         ebp,eax
 0063EA38    test        esi,esi
>0063EA3A    jle         0063EAEE
 0063EA40    mov         edx,esi
 0063EA42    mov         eax,ebp
 0063EA44    call        TWiimoteManager.GetAny
 0063EA49    mov         ebx,eax
 0063EA4B    test        ebx,ebx
>0063EA4D    jne         0063EA56
 0063EA4F    xor         ebx,ebx
>0063EA51    jmp         0063EB23
 0063EA56    mov         eax,ebx
 0063EA58    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063EA5E    call        @IsClass
 0063EA63    test        al,al
>0063EA65    je          0063EA75
 0063EA67    mov         eax,ebx
 0063EA69    call        TPS3ControllerObject.L3
 0063EA6E    mov         ebx,eax
>0063EA70    jmp         0063EB23
 0063EA75    mov         eax,ebx
 0063EA77    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063EA7D    call        @IsClass
 0063EA82    test        al,al
>0063EA84    je          0063EAEA
 0063EA86    mov         eax,ebx
 0063EA88    mov         edx,dword ptr [eax+4B4]
 0063EA8E    cmp         byte ptr [edx+444],0
>0063EA95    je          0063EAA3
 0063EA97    call        TWiimoteObject.Two
 0063EA9C    mov         ebx,eax
>0063EA9E    jmp         0063EB23
 0063EAA3    mov         edx,dword ptr [eax+4B8]
 0063EAA9    cmp         byte ptr [edx+8],0
>0063EAAD    je          0063EABA
 0063EAAF    mov         eax,edx
 0063EAB1    call        TClassicObject.HOME
 0063EAB6    mov         ebx,eax
>0063EAB8    jmp         0063EB23
 0063EABA    mov         edx,dword ptr [eax+4BC]
 0063EAC0    cmp         byte ptr [edx+8],0
>0063EAC4    je          0063EACA
 0063EAC6    xor         ebx,ebx
>0063EAC8    jmp         0063EB23
 0063EACA    mov         edx,dword ptr [eax+4C0]
 0063EAD0    cmp         byte ptr [edx+8],0
>0063EAD4    je          0063EAE1
 0063EAD6    mov         eax,edx
 0063EAD8    call        TDrumsObject.Yellow
 0063EADD    mov         ebx,eax
>0063EADF    jmp         0063EB23
 0063EAE1    call        TWiimoteObject.Two
 0063EAE6    mov         ebx,eax
>0063EAE8    jmp         0063EB23
 0063EAEA    xor         ebx,ebx
>0063EAEC    jmp         0063EB23
 0063EAEE    xor         ebx,ebx
 0063EAF0    mov         eax,ebp
 0063EAF2    call        TWiimoteManager.AnyCount
 0063EAF7    mov         edi,eax
 0063EAF9    test        edi,edi
>0063EAFB    jle         0063EB23
 0063EAFD    mov         esi,1
 0063EB02    test        bl,bl
>0063EB04    jne         0063EB17
 0063EB06    mov         edx,esi
 0063EB08    mov         eax,ebp
 0063EB0A    call        TWiimoteManager.AnyLeftThumbButton2
 0063EB0F    test        al,al
>0063EB11    jne         0063EB17
 0063EB13    xor         eax,eax
>0063EB15    jmp         0063EB19
 0063EB17    mov         al,1
 0063EB19    mov         ebx,eax
 0063EB1B    test        bl,bl
>0063EB1D    jne         0063EB23
 0063EB1F    inc         esi
 0063EB20    dec         edi
>0063EB21    jne         0063EB02
 0063EB23    mov         eax,ebx
 0063EB25    pop         ebp
 0063EB26    pop         edi
 0063EB27    pop         esi
 0063EB28    pop         ebx
 0063EB29    ret
*}
end;

//0063EB2C
function TWiimoteManager.AnyLeftThumbButton3(n:Integer):Boolean;
begin
{*
 0063EB2C    push        ebx
 0063EB2D    push        esi
 0063EB2E    push        edi
 0063EB2F    push        ebp
 0063EB30    mov         esi,edx
 0063EB32    mov         ebp,eax
 0063EB34    test        esi,esi
>0063EB36    jle         0063EBEA
 0063EB3C    mov         edx,esi
 0063EB3E    mov         eax,ebp
 0063EB40    call        TWiimoteManager.GetAny
 0063EB45    mov         ebx,eax
 0063EB47    test        ebx,ebx
>0063EB49    jne         0063EB52
 0063EB4B    xor         ebx,ebx
>0063EB4D    jmp         0063EC1F
 0063EB52    mov         eax,ebx
 0063EB54    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063EB5A    call        @IsClass
 0063EB5F    test        al,al
>0063EB61    je          0063EB71
 0063EB63    mov         eax,ebx
 0063EB65    call        TPS3ControllerObject.PS
 0063EB6A    mov         ebx,eax
>0063EB6C    jmp         0063EC1F
 0063EB71    mov         eax,ebx
 0063EB73    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063EB79    call        @IsClass
 0063EB7E    test        al,al
>0063EB80    je          0063EBE6
 0063EB82    mov         eax,ebx
 0063EB84    mov         edx,dword ptr [eax+4B4]
 0063EB8A    cmp         byte ptr [edx+444],0
>0063EB91    je          0063EB9F
 0063EB93    call        TWiimoteObject.Minus
 0063EB98    mov         ebx,eax
>0063EB9A    jmp         0063EC1F
 0063EB9F    mov         edx,dword ptr [eax+4B8]
 0063EBA5    cmp         byte ptr [edx+8],0
>0063EBA9    je          0063EBB6
 0063EBAB    mov         eax,edx
 0063EBAD    call        TClassicObject.Plus
 0063EBB2    mov         ebx,eax
>0063EBB4    jmp         0063EC1F
 0063EBB6    mov         edx,dword ptr [eax+4BC]
 0063EBBC    cmp         byte ptr [edx+8],0
>0063EBC0    je          0063EBC6
 0063EBC2    xor         ebx,ebx
>0063EBC4    jmp         0063EC1F
 0063EBC6    mov         edx,dword ptr [eax+4C0]
 0063EBCC    cmp         byte ptr [edx+8],0
>0063EBD0    je          0063EBDD
 0063EBD2    mov         eax,edx
 0063EBD4    call        TDrumsObject.Blue
 0063EBD9    mov         ebx,eax
>0063EBDB    jmp         0063EC1F
 0063EBDD    call        TWiimoteObject.Minus
 0063EBE2    mov         ebx,eax
>0063EBE4    jmp         0063EC1F
 0063EBE6    xor         ebx,ebx
>0063EBE8    jmp         0063EC1F
 0063EBEA    xor         ebx,ebx
 0063EBEC    mov         eax,ebp
 0063EBEE    call        TWiimoteManager.AnyCount
 0063EBF3    mov         edi,eax
 0063EBF5    test        edi,edi
>0063EBF7    jle         0063EC1F
 0063EBF9    mov         esi,1
 0063EBFE    test        bl,bl
>0063EC00    jne         0063EC13
 0063EC02    mov         edx,esi
 0063EC04    mov         eax,ebp
 0063EC06    call        TWiimoteManager.AnyLeftThumbButton3
 0063EC0B    test        al,al
>0063EC0D    jne         0063EC13
 0063EC0F    xor         eax,eax
>0063EC11    jmp         0063EC15
 0063EC13    mov         al,1
 0063EC15    mov         ebx,eax
 0063EC17    test        bl,bl
>0063EC19    jne         0063EC1F
 0063EC1B    inc         esi
 0063EC1C    dec         edi
>0063EC1D    jne         0063EBFE
 0063EC1F    mov         eax,ebx
 0063EC21    pop         ebp
 0063EC22    pop         edi
 0063EC23    pop         esi
 0063EC24    pop         ebx
 0063EC25    ret
*}
end;

//0063EC28
function TWiimoteManager.AnyLeftThumbX(n:Integer):Double;
begin
{*
 0063EC28    push        ebx
 0063EC29    push        esi
 0063EC2A    push        edi
 0063EC2B    add         esp,0FFFFFFE0
 0063EC2E    mov         ebx,edx
 0063EC30    mov         edi,eax
 0063EC32    test        ebx,ebx
>0063EC34    jle         0063ED5B
 0063EC3A    mov         edx,ebx
 0063EC3C    mov         eax,edi
 0063EC3E    call        TWiimoteManager.GetAny
 0063EC43    mov         ebx,eax
 0063EC45    test        ebx,ebx
>0063EC47    jne         0063EC57
 0063EC49    xor         eax,eax
 0063EC4B    mov         dword ptr [esp],eax
 0063EC4E    mov         dword ptr [esp+4],eax
>0063EC52    jmp         0063ED8A
 0063EC57    mov         eax,ebx
 0063EC59    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063EC5F    call        @IsClass
 0063EC64    test        al,al
>0063EC66    je          0063EC8B
 0063EC68    mov         eax,ebx
 0063EC6A    mov         edx,dword ptr [eax]
 0063EC6C    call        dword ptr [edx+88]
 0063EC72    fstp        qword ptr [esp+8]
 0063EC76    wait
 0063EC77    mov         eax,ebx
 0063EC79    call        TPS3ControllerObject.LeftStickX
 0063EC7E    fadd        qword ptr [esp+8]
 0063EC82    fstp        qword ptr [esp]
 0063EC85    wait
>0063EC86    jmp         0063ED8A
 0063EC8B    mov         eax,ebx
 0063EC8D    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063EC93    call        @IsClass
 0063EC98    test        al,al
>0063EC9A    je          0063ED50
 0063ECA0    mov         eax,dword ptr [ebx+4B4]
 0063ECA6    cmp         byte ptr [eax+444],0
>0063ECAD    je          0063ECBD
 0063ECAF    call        TNunchukObject.StickX
 0063ECB4    fstp        qword ptr [esp]
 0063ECB7    wait
>0063ECB8    jmp         0063ED8A
 0063ECBD    mov         esi,dword ptr [ebx+4B8]
 0063ECC3    cmp         byte ptr [esi+8],0
>0063ECC7    je          0063ECF7
 0063ECC9    mov         eax,esi
 0063ECCB    call        TClassicObject.DPadX
 0063ECD0    mov         dword ptr [esp+10],eax
 0063ECD4    fild        dword ptr [esp+10]
 0063ECD8    fstp        tbyte ptr [esp+14]
 0063ECDC    wait
 0063ECDD    mov         eax,dword ptr [ebx+4B8]
 0063ECE3    call        TClassicObject.LeftStickX
 0063ECE8    fld         tbyte ptr [esp+14]
 0063ECEC    faddp       st(1),st
 0063ECEE    fstp        qword ptr [esp]
 0063ECF1    wait
>0063ECF2    jmp         0063ED8A
 0063ECF7    mov         eax,dword ptr [ebx+4BC]
 0063ECFD    cmp         byte ptr [eax+8],0
>0063ED01    je          0063ED0E
 0063ED03    xor         eax,eax
 0063ED05    mov         dword ptr [esp],eax
 0063ED08    mov         dword ptr [esp+4],eax
>0063ED0C    jmp         0063ED8A
 0063ED0E    mov         eax,dword ptr [ebx+4C0]
 0063ED14    cmp         byte ptr [eax+8],0
>0063ED18    je          0063ED45
 0063ED1A    mov         eax,ebx
 0063ED1C    call        TWiimoteObject.DPadY
 0063ED21    mov         dword ptr [esp+10],eax
 0063ED25    fild        dword ptr [esp+10]
 0063ED29    fstp        tbyte ptr [esp+14]
 0063ED2D    wait
 0063ED2E    mov         eax,dword ptr [ebx+4C0]
 0063ED34    call        TDrumsObject.StickX
 0063ED39    fld         tbyte ptr [esp+14]
 0063ED3D    faddp       st(1),st
 0063ED3F    fstp        qword ptr [esp]
 0063ED42    wait
>0063ED43    jmp         0063ED8A
 0063ED45    xor         eax,eax
 0063ED47    mov         dword ptr [esp],eax
 0063ED4A    mov         dword ptr [esp+4],eax
>0063ED4E    jmp         0063ED8A
 0063ED50    xor         eax,eax
 0063ED52    mov         dword ptr [esp],eax
 0063ED55    mov         dword ptr [esp+4],eax
>0063ED59    jmp         0063ED8A
 0063ED5B    xor         eax,eax
 0063ED5D    mov         dword ptr [esp],eax
 0063ED60    mov         dword ptr [esp+4],eax
 0063ED64    mov         eax,edi
 0063ED66    call        TWiimoteManager.AnyCount
 0063ED6B    mov         esi,eax
 0063ED6D    test        esi,esi
>0063ED6F    jle         0063ED8A
 0063ED71    mov         ebx,1
 0063ED76    mov         edx,ebx
 0063ED78    mov         eax,edi
 0063ED7A    call        TWiimoteManager.AnyLeftThumbX
 0063ED7F    fadd        qword ptr [esp]
 0063ED82    fstp        qword ptr [esp]
 0063ED85    wait
 0063ED86    inc         ebx
 0063ED87    dec         esi
>0063ED88    jne         0063ED76
 0063ED8A    fld         qword ptr [esp]
 0063ED8D    fcomp       dword ptr ds:[63EDD0];1:Single
 0063ED93    wait
 0063ED94    fnstsw      al
 0063ED96    sahf
>0063ED97    jbe         0063EDA8
 0063ED99    xor         eax,eax
 0063ED9B    mov         dword ptr [esp],eax
 0063ED9E    mov         dword ptr [esp+4],3FF00000
>0063EDA6    jmp         0063EDC4
 0063EDA8    fld         qword ptr [esp]
 0063EDAB    fcomp       dword ptr ds:[63EDD4];-1:Single
 0063EDB1    wait
 0063EDB2    fnstsw      al
 0063EDB4    sahf
>0063EDB5    jae         0063EDC4
 0063EDB7    xor         eax,eax
 0063EDB9    mov         dword ptr [esp],eax
 0063EDBC    mov         dword ptr [esp+4],0BFF00000
 0063EDC4    fld         qword ptr [esp]
 0063EDC7    add         esp,20
 0063EDCA    pop         edi
 0063EDCB    pop         esi
 0063EDCC    pop         ebx
 0063EDCD    ret
*}
end;

//0063EDD8
function TWiimoteManager.AnyLeftThumbY(n:Integer):Double;
begin
{*
 0063EDD8    push        ebx
 0063EDD9    push        esi
 0063EDDA    push        edi
 0063EDDB    add         esp,0FFFFFFE0
 0063EDDE    mov         ebx,edx
 0063EDE0    mov         edi,eax
 0063EDE2    test        ebx,ebx
>0063EDE4    jle         0063EF0D
 0063EDEA    mov         edx,ebx
 0063EDEC    mov         eax,edi
 0063EDEE    call        TWiimoteManager.GetAny
 0063EDF3    mov         ebx,eax
 0063EDF5    test        ebx,ebx
>0063EDF7    jne         0063EE07
 0063EDF9    xor         eax,eax
 0063EDFB    mov         dword ptr [esp],eax
 0063EDFE    mov         dword ptr [esp+4],eax
>0063EE02    jmp         0063EF3C
 0063EE07    mov         eax,ebx
 0063EE09    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063EE0F    call        @IsClass
 0063EE14    test        al,al
>0063EE16    je          0063EE3B
 0063EE18    mov         eax,ebx
 0063EE1A    mov         edx,dword ptr [eax]
 0063EE1C    call        dword ptr [edx+8C]
 0063EE22    fstp        qword ptr [esp+8]
 0063EE26    wait
 0063EE27    mov         eax,ebx
 0063EE29    call        TPS3ControllerObject.LeftStickY
 0063EE2E    fadd        qword ptr [esp+8]
 0063EE32    fstp        qword ptr [esp]
 0063EE35    wait
>0063EE36    jmp         0063EF3C
 0063EE3B    mov         eax,ebx
 0063EE3D    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063EE43    call        @IsClass
 0063EE48    test        al,al
>0063EE4A    je          0063EF02
 0063EE50    mov         eax,dword ptr [ebx+4B4]
 0063EE56    cmp         byte ptr [eax+444],0
>0063EE5D    je          0063EE6D
 0063EE5F    call        TNunchukObject.StickY
 0063EE64    fstp        qword ptr [esp]
 0063EE67    wait
>0063EE68    jmp         0063EF3C
 0063EE6D    mov         esi,dword ptr [ebx+4B8]
 0063EE73    cmp         byte ptr [esi+8],0
>0063EE77    je          0063EEA7
 0063EE79    mov         eax,esi
 0063EE7B    call        TClassicObject.DPadY
 0063EE80    mov         dword ptr [esp+10],eax
 0063EE84    fild        dword ptr [esp+10]
 0063EE88    fstp        tbyte ptr [esp+14]
 0063EE8C    wait
 0063EE8D    mov         eax,dword ptr [ebx+4B8]
 0063EE93    call        TClassicObject.LeftStickY
 0063EE98    fld         tbyte ptr [esp+14]
 0063EE9C    faddp       st(1),st
 0063EE9E    fstp        qword ptr [esp]
 0063EEA1    wait
>0063EEA2    jmp         0063EF3C
 0063EEA7    mov         eax,dword ptr [ebx+4BC]
 0063EEAD    cmp         byte ptr [eax+8],0
>0063EEB1    je          0063EEBE
 0063EEB3    xor         eax,eax
 0063EEB5    mov         dword ptr [esp],eax
 0063EEB8    mov         dword ptr [esp+4],eax
>0063EEBC    jmp         0063EF3C
 0063EEBE    mov         eax,dword ptr [ebx+4C0]
 0063EEC4    cmp         byte ptr [eax+8],0
>0063EEC8    je          0063EEF7
 0063EECA    mov         eax,ebx
 0063EECC    call        TWiimoteObject.DPadX
 0063EED1    neg         eax
 0063EED3    mov         dword ptr [esp+10],eax
 0063EED7    fild        dword ptr [esp+10]
 0063EEDB    fstp        tbyte ptr [esp+14]
 0063EEDF    wait
 0063EEE0    mov         eax,dword ptr [ebx+4C0]
 0063EEE6    call        TDrumsObject.StickY
 0063EEEB    fld         tbyte ptr [esp+14]
 0063EEEF    faddp       st(1),st
 0063EEF1    fstp        qword ptr [esp]
 0063EEF4    wait
>0063EEF5    jmp         0063EF3C
 0063EEF7    xor         eax,eax
 0063EEF9    mov         dword ptr [esp],eax
 0063EEFC    mov         dword ptr [esp+4],eax
>0063EF00    jmp         0063EF3C
 0063EF02    xor         eax,eax
 0063EF04    mov         dword ptr [esp],eax
 0063EF07    mov         dword ptr [esp+4],eax
>0063EF0B    jmp         0063EF3C
 0063EF0D    xor         eax,eax
 0063EF0F    mov         dword ptr [esp],eax
 0063EF12    mov         dword ptr [esp+4],eax
 0063EF16    mov         eax,edi
 0063EF18    call        TWiimoteManager.AnyCount
 0063EF1D    mov         esi,eax
 0063EF1F    test        esi,esi
>0063EF21    jle         0063EF3C
 0063EF23    mov         ebx,1
 0063EF28    mov         edx,ebx
 0063EF2A    mov         eax,edi
 0063EF2C    call        TWiimoteManager.AnyLeftThumbY
 0063EF31    fadd        qword ptr [esp]
 0063EF34    fstp        qword ptr [esp]
 0063EF37    wait
 0063EF38    inc         ebx
 0063EF39    dec         esi
>0063EF3A    jne         0063EF28
 0063EF3C    fld         qword ptr [esp]
 0063EF3F    fcomp       dword ptr ds:[63EF80];1:Single
 0063EF45    wait
 0063EF46    fnstsw      al
 0063EF48    sahf
>0063EF49    jbe         0063EF5A
 0063EF4B    xor         eax,eax
 0063EF4D    mov         dword ptr [esp],eax
 0063EF50    mov         dword ptr [esp+4],3FF00000
>0063EF58    jmp         0063EF76
 0063EF5A    fld         qword ptr [esp]
 0063EF5D    fcomp       dword ptr ds:[63EF84];-1:Single
 0063EF63    wait
 0063EF64    fnstsw      al
 0063EF66    sahf
>0063EF67    jae         0063EF76
 0063EF69    xor         eax,eax
 0063EF6B    mov         dword ptr [esp],eax
 0063EF6E    mov         dword ptr [esp+4],0BFF00000
 0063EF76    fld         qword ptr [esp]
 0063EF79    add         esp,20
 0063EF7C    pop         edi
 0063EF7D    pop         esi
 0063EF7E    pop         ebx
 0063EF7F    ret
*}
end;

//0063EF88
function TWiimoteManager.AnyOKButton(n:Integer):Boolean;
begin
{*
 0063EF88    push        ebx
 0063EF89    push        esi
 0063EF8A    push        edi
 0063EF8B    push        ebp
 0063EF8C    mov         esi,edx
 0063EF8E    mov         ebp,eax
 0063EF90    test        esi,esi
>0063EF92    jle         0063F0A5
 0063EF98    mov         edx,esi
 0063EF9A    mov         eax,ebp
 0063EF9C    call        TWiimoteManager.GetAny
 0063EFA1    mov         ebx,eax
 0063EFA3    test        ebx,ebx
>0063EFA5    jne         0063EFAE
 0063EFA7    xor         ebx,ebx
>0063EFA9    jmp         0063F0DA
 0063EFAE    mov         eax,ebx
 0063EFB0    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063EFB6    call        @IsClass
 0063EFBB    test        al,al
>0063EFBD    je          0063EFCD
 0063EFBF    mov         eax,ebx
 0063EFC1    call        TPS3ControllerObject.Circle
 0063EFC6    mov         ebx,eax
>0063EFC8    jmp         0063F0DA
 0063EFCD    mov         eax,ebx
 0063EFCF    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063EFD5    call        @IsClass
 0063EFDA    test        al,al
>0063EFDC    je          0063F0A1
 0063EFE2    mov         eax,dword ptr [ebx+4B4]
 0063EFE8    cmp         byte ptr [eax+444],0
>0063EFEF    je          0063EFFF
 0063EFF1    mov         eax,ebx
 0063EFF3    call        TWiimoteObject.A
 0063EFF8    mov         ebx,eax
>0063EFFA    jmp         0063F0DA
 0063EFFF    mov         eax,dword ptr [ebx+4B8]
 0063F005    cmp         byte ptr [eax+8],0
>0063F009    je          0063F032
 0063F00B    mov         eax,dword ptr [ebx+4B8]
 0063F011    call        TClassicObject.A
 0063F016    test        al,al
>0063F018    jne         0063F029
 0063F01A    mov         eax,ebx
 0063F01C    call        TWiimoteObject.A
 0063F021    test        al,al
>0063F023    jne         0063F029
 0063F025    xor         eax,eax
>0063F027    jmp         0063F02B
 0063F029    mov         al,1
 0063F02B    mov         ebx,eax
>0063F02D    jmp         0063F0DA
 0063F032    mov         eax,dword ptr [ebx+4BC]
 0063F038    cmp         byte ptr [eax+8],0
>0063F03C    je          0063F066
 0063F03E    mov         eax,dword ptr [ebx+4BC]
 0063F044    call        TGuitarObject.StrumDown
 0063F049    test        al,al
>0063F04B    jne         0063F060
 0063F04D    mov         eax,dword ptr [ebx+4BC]
 0063F053    call        TGuitarObject.Fret1
 0063F058    test        al,al
>0063F05A    jne         0063F060
 0063F05C    xor         eax,eax
>0063F05E    jmp         0063F062
 0063F060    mov         al,1
 0063F062    mov         ebx,eax
>0063F064    jmp         0063F0DA
 0063F066    mov         eax,dword ptr [ebx+4C0]
 0063F06C    cmp         byte ptr [eax+8],0
>0063F070    je          0063F096
 0063F072    mov         eax,dword ptr [ebx+4C0]
 0063F078    call        TDrumsObject.Green
 0063F07D    test        al,al
>0063F07F    jne         0063F090
 0063F081    mov         eax,ebx
 0063F083    call        TWiimoteObject.A
 0063F088    test        al,al
>0063F08A    jne         0063F090
 0063F08C    xor         eax,eax
>0063F08E    jmp         0063F092
 0063F090    mov         al,1
 0063F092    mov         ebx,eax
>0063F094    jmp         0063F0DA
 0063F096    mov         eax,ebx
 0063F098    call        TWiimoteObject.A
 0063F09D    mov         ebx,eax
>0063F09F    jmp         0063F0DA
 0063F0A1    xor         ebx,ebx
>0063F0A3    jmp         0063F0DA
 0063F0A5    xor         ebx,ebx
 0063F0A7    mov         eax,ebp
 0063F0A9    call        TWiimoteManager.AnyCount
 0063F0AE    mov         edi,eax
 0063F0B0    test        edi,edi
>0063F0B2    jle         0063F0DA
 0063F0B4    mov         esi,1
 0063F0B9    test        bl,bl
>0063F0BB    jne         0063F0CE
 0063F0BD    mov         edx,esi
 0063F0BF    mov         eax,ebp
 0063F0C1    call        TWiimoteManager.AnyOKButton
 0063F0C6    test        al,al
>0063F0C8    jne         0063F0CE
 0063F0CA    xor         eax,eax
>0063F0CC    jmp         0063F0D0
 0063F0CE    mov         al,1
 0063F0D0    mov         ebx,eax
 0063F0D2    test        bl,bl
>0063F0D4    jne         0063F0DA
 0063F0D6    inc         esi
 0063F0D7    dec         edi
>0063F0D8    jne         0063F0B9
 0063F0DA    mov         eax,ebx
 0063F0DC    pop         ebp
 0063F0DD    pop         edi
 0063F0DE    pop         esi
 0063F0DF    pop         ebx
 0063F0E0    ret
*}
end;

//0063F0E4
function TWiimoteManager.AnyR3(n:Integer):Boolean;
begin
{*
 0063F0E4    push        ebx
 0063F0E5    push        esi
 0063F0E6    push        edi
 0063F0E7    push        ebp
 0063F0E8    mov         esi,edx
 0063F0EA    mov         ebp,eax
 0063F0EC    test        esi,esi
>0063F0EE    jle         0063F138
 0063F0F0    mov         edx,esi
 0063F0F2    mov         eax,ebp
 0063F0F4    call        TWiimoteManager.GetAny
 0063F0F9    mov         ebx,eax
 0063F0FB    test        ebx,ebx
>0063F0FD    jne         0063F103
 0063F0FF    xor         ebx,ebx
>0063F101    jmp         0063F16D
 0063F103    mov         eax,ebx
 0063F105    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063F10B    call        @IsClass
 0063F110    test        al,al
>0063F112    je          0063F11F
 0063F114    mov         eax,ebx
 0063F116    call        TPS3ControllerObject.R3
 0063F11B    mov         ebx,eax
>0063F11D    jmp         0063F16D
 0063F11F    mov         eax,ebx
 0063F121    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063F127    call        @IsClass
 0063F12C    test        al,al
>0063F12E    je          0063F134
 0063F130    xor         ebx,ebx
>0063F132    jmp         0063F16D
 0063F134    xor         ebx,ebx
>0063F136    jmp         0063F16D
 0063F138    xor         ebx,ebx
 0063F13A    mov         eax,ebp
 0063F13C    call        TWiimoteManager.AnyCount
 0063F141    mov         edi,eax
 0063F143    test        edi,edi
>0063F145    jle         0063F16D
 0063F147    mov         esi,1
 0063F14C    test        bl,bl
>0063F14E    jne         0063F161
 0063F150    mov         edx,esi
 0063F152    mov         eax,ebp
 0063F154    call        TWiimoteManager.AnyR3
 0063F159    test        al,al
>0063F15B    jne         0063F161
 0063F15D    xor         eax,eax
>0063F15F    jmp         0063F163
 0063F161    mov         al,1
 0063F163    mov         ebx,eax
 0063F165    test        bl,bl
>0063F167    jne         0063F16D
 0063F169    inc         esi
 0063F16A    dec         edi
>0063F16B    jne         0063F14C
 0063F16D    mov         eax,ebx
 0063F16F    pop         ebp
 0063F170    pop         edi
 0063F171    pop         esi
 0063F172    pop         ebx
 0063F173    ret
*}
end;

//0063F174
function TWiimoteManager.AnyRight(n:Integer):Boolean;
begin
{*
 0063F174    push        ebx
 0063F175    push        esi
 0063F176    push        edi
 0063F177    push        ebp
 0063F178    mov         esi,edx
 0063F17A    mov         ebp,eax
 0063F17C    test        esi,esi
>0063F17E    jle         0063F2DE
 0063F184    mov         edx,esi
 0063F186    mov         eax,ebp
 0063F188    call        TWiimoteManager.GetAny
 0063F18D    mov         ebx,eax
 0063F18F    test        ebx,ebx
>0063F191    jne         0063F19A
 0063F193    xor         ebx,ebx
>0063F195    jmp         0063F313
 0063F19A    mov         eax,ebx
 0063F19C    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063F1A2    call        @IsClass
 0063F1A7    test        al,al
>0063F1A9    je          0063F1D6
 0063F1AB    mov         eax,ebx
 0063F1AD    call        TPS3ControllerObject.Right
 0063F1B2    test        al,al
>0063F1B4    jne         0063F1CD
 0063F1B6    mov         eax,ebx
 0063F1B8    call        TPS3ControllerObject.LeftStickX
 0063F1BD    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063F1C3    wait
 0063F1C4    fnstsw      al
 0063F1C6    sahf
>0063F1C7    ja          0063F1CD
 0063F1C9    xor         eax,eax
>0063F1CB    jmp         0063F1CF
 0063F1CD    mov         al,1
 0063F1CF    mov         ebx,eax
>0063F1D1    jmp         0063F313
 0063F1D6    mov         eax,ebx
 0063F1D8    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063F1DE    call        @IsClass
 0063F1E3    test        al,al
>0063F1E5    je          0063F2DA
 0063F1EB    mov         eax,dword ptr [ebx+4B4]
 0063F1F1    cmp         byte ptr [eax+444],0
>0063F1F8    je          0063F229
 0063F1FA    mov         eax,ebx
 0063F1FC    call        TWiimoteObject.Right
 0063F201    test        al,al
>0063F203    jne         0063F220
 0063F205    mov         eax,dword ptr [ebx+4B4]
 0063F20B    call        TNunchukObject.StickX
 0063F210    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063F216    wait
 0063F217    fnstsw      al
 0063F219    sahf
>0063F21A    ja          0063F220
 0063F21C    xor         eax,eax
>0063F21E    jmp         0063F222
 0063F220    mov         al,1
 0063F222    mov         ebx,eax
>0063F224    jmp         0063F313
 0063F229    mov         eax,dword ptr [ebx+4B8]
 0063F22F    cmp         byte ptr [eax+8],0
>0063F233    je          0063F273
 0063F235    mov         eax,dword ptr [ebx+4B8]
 0063F23B    call        TClassicObject.Right
 0063F240    test        al,al
>0063F242    jne         0063F26A
 0063F244    mov         eax,ebx
 0063F246    call        TWiimoteObject.Right
 0063F24B    test        al,al
>0063F24D    jne         0063F26A
 0063F24F    mov         eax,dword ptr [ebx+4B8]
 0063F255    call        TClassicObject.LeftStickX
 0063F25A    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063F260    wait
 0063F261    fnstsw      al
 0063F263    sahf
>0063F264    ja          0063F26A
 0063F266    xor         eax,eax
>0063F268    jmp         0063F26C
 0063F26A    mov         al,1
 0063F26C    mov         ebx,eax
>0063F26E    jmp         0063F313
 0063F273    mov         esi,dword ptr [ebx+4BC]
 0063F279    cmp         byte ptr [esi+8],0
>0063F27D    je          0063F297
 0063F27F    mov         eax,esi
 0063F281    call        TGuitarObject.StickX
 0063F286    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063F28C    wait
 0063F28D    fnstsw      al
 0063F28F    sahf
 0063F290    seta        al
 0063F293    mov         ebx,eax
>0063F295    jmp         0063F313
 0063F297    mov         eax,dword ptr [ebx+4C0]
 0063F29D    cmp         byte ptr [eax+8],0
>0063F2A1    je          0063F2CF
 0063F2A3    mov         eax,ebx
 0063F2A5    call        TWiimoteObject.Down
 0063F2AA    test        al,al
>0063F2AC    jne         0063F2C9
 0063F2AE    mov         eax,dword ptr [ebx+4C0]
 0063F2B4    call        TDrumsObject.StickX
 0063F2B9    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 0063F2BF    wait
 0063F2C0    fnstsw      al
 0063F2C2    sahf
>0063F2C3    ja          0063F2C9
 0063F2C5    xor         eax,eax
>0063F2C7    jmp         0063F2CB
 0063F2C9    mov         al,1
 0063F2CB    mov         ebx,eax
>0063F2CD    jmp         0063F313
 0063F2CF    mov         eax,ebx
 0063F2D1    call        TWiimoteObject.Right
 0063F2D6    mov         ebx,eax
>0063F2D8    jmp         0063F313
 0063F2DA    xor         ebx,ebx
>0063F2DC    jmp         0063F313
 0063F2DE    xor         ebx,ebx
 0063F2E0    mov         eax,ebp
 0063F2E2    call        TWiimoteManager.AnyCount
 0063F2E7    mov         edi,eax
 0063F2E9    test        edi,edi
>0063F2EB    jle         0063F313
 0063F2ED    mov         esi,1
 0063F2F2    test        bl,bl
>0063F2F4    jne         0063F307
 0063F2F6    mov         edx,esi
 0063F2F8    mov         eax,ebp
 0063F2FA    call        TWiimoteManager.AnyRight
 0063F2FF    test        al,al
>0063F301    jne         0063F307
 0063F303    xor         eax,eax
>0063F305    jmp         0063F309
 0063F307    mov         al,1
 0063F309    mov         ebx,eax
 0063F30B    test        bl,bl
>0063F30D    jne         0063F313
 0063F30F    inc         esi
 0063F310    dec         edi
>0063F311    jne         0063F2F2
 0063F313    mov         eax,ebx
 0063F315    pop         ebp
 0063F316    pop         edi
 0063F317    pop         esi
 0063F318    pop         ebx
 0063F319    ret
*}
end;

//0063F31C
function TWiimoteManager.AnyRightStickX(n:Integer):Double;
begin
{*
 0063F31C    push        ebx
 0063F31D    push        esi
 0063F31E    push        edi
 0063F31F    add         esp,0FFFFFFF8
 0063F322    mov         ebx,edx
 0063F324    mov         edi,eax
 0063F326    test        ebx,ebx
>0063F328    jle         0063F3F9
 0063F32E    mov         edx,ebx
 0063F330    mov         eax,edi
 0063F332    call        TWiimoteManager.GetAny
 0063F337    mov         ebx,eax
 0063F339    test        ebx,ebx
>0063F33B    jne         0063F34B
 0063F33D    xor         eax,eax
 0063F33F    mov         dword ptr [esp],eax
 0063F342    mov         dword ptr [esp+4],eax
>0063F346    jmp         0063F428
 0063F34B    mov         eax,ebx
 0063F34D    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063F353    call        @IsClass
 0063F358    test        al,al
>0063F35A    je          0063F36C
 0063F35C    mov         eax,ebx
 0063F35E    call        TPS3ControllerObject.RightStickX
 0063F363    fstp        qword ptr [esp]
 0063F366    wait
>0063F367    jmp         0063F428
 0063F36C    mov         eax,ebx
 0063F36E    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063F374    call        @IsClass
 0063F379    test        al,al
>0063F37B    je          0063F3EE
 0063F37D    mov         eax,ebx
 0063F37F    mov         edx,dword ptr [eax+4B4]
 0063F385    cmp         byte ptr [edx+444],0
>0063F38C    je          0063F39C
 0063F38E    xor         eax,eax
 0063F390    mov         dword ptr [esp],eax
 0063F393    mov         dword ptr [esp+4],eax
>0063F397    jmp         0063F428
 0063F39C    mov         edx,dword ptr [eax+4B8]
 0063F3A2    cmp         byte ptr [edx+8],0
>0063F3A6    je          0063F3B5
 0063F3A8    mov         eax,edx
 0063F3AA    call        TClassicObject.RightStickX
 0063F3AF    fstp        qword ptr [esp]
 0063F3B2    wait
>0063F3B3    jmp         0063F428
 0063F3B5    mov         edx,dword ptr [eax+4BC]
 0063F3BB    cmp         byte ptr [edx+8],0
>0063F3BF    je          0063F3CC
 0063F3C1    xor         eax,eax
 0063F3C3    mov         dword ptr [esp],eax
 0063F3C6    mov         dword ptr [esp+4],eax
>0063F3CA    jmp         0063F428
 0063F3CC    mov         eax,dword ptr [eax+4C0]
 0063F3D2    cmp         byte ptr [eax+8],0
>0063F3D6    je          0063F3E3
 0063F3D8    xor         eax,eax
 0063F3DA    mov         dword ptr [esp],eax
 0063F3DD    mov         dword ptr [esp+4],eax
>0063F3E1    jmp         0063F428
 0063F3E3    xor         eax,eax
 0063F3E5    mov         dword ptr [esp],eax
 0063F3E8    mov         dword ptr [esp+4],eax
>0063F3EC    jmp         0063F428
 0063F3EE    xor         eax,eax
 0063F3F0    mov         dword ptr [esp],eax
 0063F3F3    mov         dword ptr [esp+4],eax
>0063F3F7    jmp         0063F428
 0063F3F9    xor         eax,eax
 0063F3FB    mov         dword ptr [esp],eax
 0063F3FE    mov         dword ptr [esp+4],eax
 0063F402    mov         eax,edi
 0063F404    call        TWiimoteManager.AnyCount
 0063F409    mov         esi,eax
 0063F40B    test        esi,esi
>0063F40D    jle         0063F428
 0063F40F    mov         ebx,1
 0063F414    mov         edx,ebx
 0063F416    mov         eax,edi
 0063F418    call        TWiimoteManager.AnyRightStickX
 0063F41D    fadd        qword ptr [esp]
 0063F420    fstp        qword ptr [esp]
 0063F423    wait
 0063F424    inc         ebx
 0063F425    dec         esi
>0063F426    jne         0063F414
 0063F428    fld         qword ptr [esp]
 0063F42B    fcomp       dword ptr ds:[63F46C];1:Single
 0063F431    wait
 0063F432    fnstsw      al
 0063F434    sahf
>0063F435    jbe         0063F446
 0063F437    xor         eax,eax
 0063F439    mov         dword ptr [esp],eax
 0063F43C    mov         dword ptr [esp+4],3FF00000
>0063F444    jmp         0063F462
 0063F446    fld         qword ptr [esp]
 0063F449    fcomp       dword ptr ds:[63F470];-1:Single
 0063F44F    wait
 0063F450    fnstsw      al
 0063F452    sahf
>0063F453    jae         0063F462
 0063F455    xor         eax,eax
 0063F457    mov         dword ptr [esp],eax
 0063F45A    mov         dword ptr [esp+4],0BFF00000
 0063F462    fld         qword ptr [esp]
 0063F465    pop         ecx
 0063F466    pop         edx
 0063F467    pop         edi
 0063F468    pop         esi
 0063F469    pop         ebx
 0063F46A    ret
*}
end;

//0063F474
function TWiimoteManager.AnyRightStickY(n:Integer):Double;
begin
{*
 0063F474    push        ebx
 0063F475    push        esi
 0063F476    push        edi
 0063F477    add         esp,0FFFFFFF8
 0063F47A    mov         ebx,edx
 0063F47C    mov         edi,eax
 0063F47E    test        ebx,ebx
>0063F480    jle         0063F551
 0063F486    mov         edx,ebx
 0063F488    mov         eax,edi
 0063F48A    call        TWiimoteManager.GetAny
 0063F48F    mov         ebx,eax
 0063F491    test        ebx,ebx
>0063F493    jne         0063F4A3
 0063F495    xor         eax,eax
 0063F497    mov         dword ptr [esp],eax
 0063F49A    mov         dword ptr [esp+4],eax
>0063F49E    jmp         0063F580
 0063F4A3    mov         eax,ebx
 0063F4A5    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063F4AB    call        @IsClass
 0063F4B0    test        al,al
>0063F4B2    je          0063F4C4
 0063F4B4    mov         eax,ebx
 0063F4B6    call        TPS3ControllerObject.RightStickY
 0063F4BB    fstp        qword ptr [esp]
 0063F4BE    wait
>0063F4BF    jmp         0063F580
 0063F4C4    mov         eax,ebx
 0063F4C6    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063F4CC    call        @IsClass
 0063F4D1    test        al,al
>0063F4D3    je          0063F546
 0063F4D5    mov         eax,ebx
 0063F4D7    mov         edx,dword ptr [eax+4B4]
 0063F4DD    cmp         byte ptr [edx+444],0
>0063F4E4    je          0063F4F4
 0063F4E6    xor         eax,eax
 0063F4E8    mov         dword ptr [esp],eax
 0063F4EB    mov         dword ptr [esp+4],eax
>0063F4EF    jmp         0063F580
 0063F4F4    mov         edx,dword ptr [eax+4B8]
 0063F4FA    cmp         byte ptr [edx+8],0
>0063F4FE    je          0063F50D
 0063F500    mov         eax,edx
 0063F502    call        TClassicObject.RightStickY
 0063F507    fstp        qword ptr [esp]
 0063F50A    wait
>0063F50B    jmp         0063F580
 0063F50D    mov         edx,dword ptr [eax+4BC]
 0063F513    cmp         byte ptr [edx+8],0
>0063F517    je          0063F524
 0063F519    xor         eax,eax
 0063F51B    mov         dword ptr [esp],eax
 0063F51E    mov         dword ptr [esp+4],eax
>0063F522    jmp         0063F580
 0063F524    mov         eax,dword ptr [eax+4C0]
 0063F52A    cmp         byte ptr [eax+8],0
>0063F52E    je          0063F53B
 0063F530    xor         eax,eax
 0063F532    mov         dword ptr [esp],eax
 0063F535    mov         dword ptr [esp+4],eax
>0063F539    jmp         0063F580
 0063F53B    xor         eax,eax
 0063F53D    mov         dword ptr [esp],eax
 0063F540    mov         dword ptr [esp+4],eax
>0063F544    jmp         0063F580
 0063F546    xor         eax,eax
 0063F548    mov         dword ptr [esp],eax
 0063F54B    mov         dword ptr [esp+4],eax
>0063F54F    jmp         0063F580
 0063F551    xor         eax,eax
 0063F553    mov         dword ptr [esp],eax
 0063F556    mov         dword ptr [esp+4],eax
 0063F55A    mov         eax,edi
 0063F55C    call        TWiimoteManager.AnyCount
 0063F561    mov         esi,eax
 0063F563    test        esi,esi
>0063F565    jle         0063F580
 0063F567    mov         ebx,1
 0063F56C    mov         edx,ebx
 0063F56E    mov         eax,edi
 0063F570    call        TWiimoteManager.AnyRightStickY
 0063F575    fadd        qword ptr [esp]
 0063F578    fstp        qword ptr [esp]
 0063F57B    wait
 0063F57C    inc         ebx
 0063F57D    dec         esi
>0063F57E    jne         0063F56C
 0063F580    fld         qword ptr [esp]
 0063F583    fcomp       dword ptr ds:[63F5C4];1:Single
 0063F589    wait
 0063F58A    fnstsw      al
 0063F58C    sahf
>0063F58D    jbe         0063F59E
 0063F58F    xor         eax,eax
 0063F591    mov         dword ptr [esp],eax
 0063F594    mov         dword ptr [esp+4],3FF00000
>0063F59C    jmp         0063F5BA
 0063F59E    fld         qword ptr [esp]
 0063F5A1    fcomp       dword ptr ds:[63F5C8];-1:Single
 0063F5A7    wait
 0063F5A8    fnstsw      al
 0063F5AA    sahf
>0063F5AB    jae         0063F5BA
 0063F5AD    xor         eax,eax
 0063F5AF    mov         dword ptr [esp],eax
 0063F5B2    mov         dword ptr [esp+4],0BFF00000
 0063F5BA    fld         qword ptr [esp]
 0063F5BD    pop         ecx
 0063F5BE    pop         edx
 0063F5BF    pop         edi
 0063F5C0    pop         esi
 0063F5C1    pop         ebx
 0063F5C2    ret
*}
end;

//0063F5CC
function TWiimoteManager.AnyRightThumbButton1(n:Integer):Boolean;
begin
{*
 0063F5CC    push        ebx
 0063F5CD    push        esi
 0063F5CE    push        edi
 0063F5CF    push        ebp
 0063F5D0    mov         esi,edx
 0063F5D2    mov         ebp,eax
 0063F5D4    test        esi,esi
>0063F5D6    jle         0063F6AC
 0063F5DC    mov         edx,esi
 0063F5DE    mov         eax,ebp
 0063F5E0    call        TWiimoteManager.GetAny
 0063F5E5    mov         ebx,eax
 0063F5E7    test        ebx,ebx
>0063F5E9    jne         0063F5F2
 0063F5EB    xor         ebx,ebx
>0063F5ED    jmp         0063F6E1
 0063F5F2    mov         eax,ebx
 0063F5F4    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063F5FA    call        @IsClass
 0063F5FF    test        al,al
>0063F601    je          0063F611
 0063F603    mov         eax,ebx
 0063F605    call        TPS3ControllerObject.Circle
 0063F60A    mov         ebx,eax
>0063F60C    jmp         0063F6E1
 0063F611    mov         eax,ebx
 0063F613    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063F619    call        @IsClass
 0063F61E    test        al,al
>0063F620    je          0063F6A8
 0063F626    mov         eax,dword ptr [ebx+4B4]
 0063F62C    cmp         byte ptr [eax+444],0
>0063F633    je          0063F643
 0063F635    mov         eax,ebx
 0063F637    call        TWiimoteObject.A
 0063F63C    mov         ebx,eax
>0063F63E    jmp         0063F6E1
 0063F643    mov         eax,dword ptr [ebx+4B8]
 0063F649    cmp         byte ptr [eax+8],0
>0063F64D    je          0063F673
 0063F64F    mov         eax,dword ptr [ebx+4B8]
 0063F655    call        TClassicObject.A
 0063F65A    test        al,al
>0063F65C    jne         0063F66D
 0063F65E    mov         eax,ebx
 0063F660    call        TWiimoteObject.A
 0063F665    test        al,al
>0063F667    jne         0063F66D
 0063F669    xor         eax,eax
>0063F66B    jmp         0063F66F
 0063F66D    mov         al,1
 0063F66F    mov         ebx,eax
>0063F671    jmp         0063F6E1
 0063F673    mov         eax,dword ptr [ebx+4BC]
 0063F679    cmp         byte ptr [eax+8],0
>0063F67D    je          0063F688
 0063F67F    call        TGuitarObject.StrumDown
 0063F684    mov         ebx,eax
>0063F686    jmp         0063F6E1
 0063F688    mov         eax,dword ptr [ebx+4C0]
 0063F68E    cmp         byte ptr [eax+8],0
>0063F692    je          0063F69D
 0063F694    call        TDrumsObject.Green
 0063F699    mov         ebx,eax
>0063F69B    jmp         0063F6E1
 0063F69D    mov         eax,ebx
 0063F69F    call        TWiimoteObject.A
 0063F6A4    mov         ebx,eax
>0063F6A6    jmp         0063F6E1
 0063F6A8    xor         ebx,ebx
>0063F6AA    jmp         0063F6E1
 0063F6AC    xor         ebx,ebx
 0063F6AE    mov         eax,ebp
 0063F6B0    call        TWiimoteManager.AnyCount
 0063F6B5    mov         edi,eax
 0063F6B7    test        edi,edi
>0063F6B9    jle         0063F6E1
 0063F6BB    mov         esi,1
 0063F6C0    test        bl,bl
>0063F6C2    jne         0063F6D5
 0063F6C4    mov         edx,esi
 0063F6C6    mov         eax,ebp
 0063F6C8    call        TWiimoteManager.AnyRightThumbButton1
 0063F6CD    test        al,al
>0063F6CF    jne         0063F6D5
 0063F6D1    xor         eax,eax
>0063F6D3    jmp         0063F6D7
 0063F6D5    mov         al,1
 0063F6D7    mov         ebx,eax
 0063F6D9    test        bl,bl
>0063F6DB    jne         0063F6E1
 0063F6DD    inc         esi
 0063F6DE    dec         edi
>0063F6DF    jne         0063F6C0
 0063F6E1    mov         eax,ebx
 0063F6E3    pop         ebp
 0063F6E4    pop         edi
 0063F6E5    pop         esi
 0063F6E6    pop         ebx
 0063F6E7    ret
*}
end;

//0063F6E8
function TWiimoteManager.AnyRightThumbButton10(n:Integer):Boolean;
begin
{*
 0063F6E8    push        ebx
 0063F6E9    push        esi
 0063F6EA    push        edi
 0063F6EB    push        ebp
 0063F6EC    mov         esi,edx
 0063F6EE    mov         ebp,eax
 0063F6F0    test        esi,esi
>0063F6F2    jle         0063F78E
 0063F6F8    mov         edx,esi
 0063F6FA    mov         eax,ebp
 0063F6FC    call        TWiimoteManager.GetAny
 0063F701    mov         ebx,eax
 0063F703    test        ebx,ebx
>0063F705    jne         0063F70E
 0063F707    xor         ebx,ebx
>0063F709    jmp         0063F7C3
 0063F70E    mov         eax,ebx
 0063F710    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063F716    call        @IsClass
 0063F71B    test        al,al
>0063F71D    je          0063F726
 0063F71F    xor         ebx,ebx
>0063F721    jmp         0063F7C3
 0063F726    mov         eax,ebx
 0063F728    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063F72E    call        @IsClass
 0063F733    test        al,al
>0063F735    je          0063F78A
 0063F737    mov         eax,ebx
 0063F739    mov         edx,dword ptr [eax+4B4]
 0063F73F    cmp         byte ptr [edx+444],0
>0063F746    je          0063F751
 0063F748    call        TWiimoteObject.Up
 0063F74D    mov         ebx,eax
>0063F74F    jmp         0063F7C3
 0063F751    mov         edx,dword ptr [eax+4B8]
 0063F757    cmp         byte ptr [edx+8],0
>0063F75B    je          0063F761
 0063F75D    xor         ebx,ebx
>0063F75F    jmp         0063F7C3
 0063F761    mov         edx,dword ptr [eax+4BC]
 0063F767    cmp         byte ptr [edx+8],0
>0063F76B    je          0063F771
 0063F76D    xor         ebx,ebx
>0063F76F    jmp         0063F7C3
 0063F771    mov         edx,dword ptr [eax+4C0]
 0063F777    cmp         byte ptr [edx+8],0
>0063F77B    je          0063F781
 0063F77D    xor         ebx,ebx
>0063F77F    jmp         0063F7C3
 0063F781    call        TWiimoteObject.Up
 0063F786    mov         ebx,eax
>0063F788    jmp         0063F7C3
 0063F78A    xor         ebx,ebx
>0063F78C    jmp         0063F7C3
 0063F78E    xor         ebx,ebx
 0063F790    mov         eax,ebp
 0063F792    call        TWiimoteManager.AnyCount
 0063F797    mov         edi,eax
 0063F799    test        edi,edi
>0063F79B    jle         0063F7C3
 0063F79D    mov         esi,1
 0063F7A2    test        bl,bl
>0063F7A4    jne         0063F7B7
 0063F7A6    mov         edx,esi
 0063F7A8    mov         eax,ebp
 0063F7AA    call        TWiimoteManager.AnyRightThumbButton10
 0063F7AF    test        al,al
>0063F7B1    jne         0063F7B7
 0063F7B3    xor         eax,eax
>0063F7B5    jmp         0063F7B9
 0063F7B7    mov         al,1
 0063F7B9    mov         ebx,eax
 0063F7BB    test        bl,bl
>0063F7BD    jne         0063F7C3
 0063F7BF    inc         esi
 0063F7C0    dec         edi
>0063F7C1    jne         0063F7A2
 0063F7C3    mov         eax,ebx
 0063F7C5    pop         ebp
 0063F7C6    pop         edi
 0063F7C7    pop         esi
 0063F7C8    pop         ebx
 0063F7C9    ret
*}
end;

//0063F7CC
function TWiimoteManager.AnyRightThumbButton2(n:Integer):Boolean;
begin
{*
 0063F7CC    push        ebx
 0063F7CD    push        esi
 0063F7CE    push        edi
 0063F7CF    push        ebp
 0063F7D0    mov         esi,edx
 0063F7D2    mov         ebp,eax
 0063F7D4    test        esi,esi
>0063F7D6    jle         0063F891
 0063F7DC    mov         edx,esi
 0063F7DE    mov         eax,ebp
 0063F7E0    call        TWiimoteManager.GetAny
 0063F7E5    mov         ebx,eax
 0063F7E7    test        ebx,ebx
>0063F7E9    jne         0063F7F2
 0063F7EB    xor         ebx,ebx
>0063F7ED    jmp         0063F8C6
 0063F7F2    mov         eax,ebx
 0063F7F4    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063F7FA    call        @IsClass
 0063F7FF    test        al,al
>0063F801    je          0063F811
 0063F803    mov         eax,ebx
 0063F805    call        TPS3ControllerObject.Cross
 0063F80A    mov         ebx,eax
>0063F80C    jmp         0063F8C6
 0063F811    mov         eax,ebx
 0063F813    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063F819    call        @IsClass
 0063F81E    test        al,al
>0063F820    je          0063F88D
 0063F822    mov         eax,ebx
 0063F824    mov         edx,dword ptr [eax+4B4]
 0063F82A    cmp         byte ptr [edx+444],0
>0063F831    je          0063F83F
 0063F833    call        TWiimoteObject.Minus
 0063F838    mov         ebx,eax
>0063F83A    jmp         0063F8C6
 0063F83F    mov         edx,dword ptr [eax+4B8]
 0063F845    cmp         byte ptr [edx+8],0
>0063F849    je          0063F856
 0063F84B    mov         eax,edx
 0063F84D    call        TClassicObject.B
 0063F852    mov         ebx,eax
>0063F854    jmp         0063F8C6
 0063F856    mov         edx,dword ptr [eax+4BC]
 0063F85C    cmp         byte ptr [edx+8],0
>0063F860    je          0063F86D
 0063F862    mov         eax,edx
 0063F864    call        TGuitarObject.Minus
 0063F869    mov         ebx,eax
>0063F86B    jmp         0063F8C6
 0063F86D    mov         edx,dword ptr [eax+4C0]
 0063F873    cmp         byte ptr [edx+8],0
>0063F877    je          0063F884
 0063F879    mov         eax,edx
 0063F87B    call        TDrumsObject.Blue
 0063F880    mov         ebx,eax
>0063F882    jmp         0063F8C6
 0063F884    call        TWiimoteObject.Minus
 0063F889    mov         ebx,eax
>0063F88B    jmp         0063F8C6
 0063F88D    xor         ebx,ebx
>0063F88F    jmp         0063F8C6
 0063F891    xor         ebx,ebx
 0063F893    mov         eax,ebp
 0063F895    call        TWiimoteManager.AnyCount
 0063F89A    mov         edi,eax
 0063F89C    test        edi,edi
>0063F89E    jle         0063F8C6
 0063F8A0    mov         esi,1
 0063F8A5    test        bl,bl
>0063F8A7    jne         0063F8BA
 0063F8A9    mov         edx,esi
 0063F8AB    mov         eax,ebp
 0063F8AD    call        TWiimoteManager.AnyRightThumbButton2
 0063F8B2    test        al,al
>0063F8B4    jne         0063F8BA
 0063F8B6    xor         eax,eax
>0063F8B8    jmp         0063F8BC
 0063F8BA    mov         al,1
 0063F8BC    mov         ebx,eax
 0063F8BE    test        bl,bl
>0063F8C0    jne         0063F8C6
 0063F8C2    inc         esi
 0063F8C3    dec         edi
>0063F8C4    jne         0063F8A5
 0063F8C6    mov         eax,ebx
 0063F8C8    pop         ebp
 0063F8C9    pop         edi
 0063F8CA    pop         esi
 0063F8CB    pop         ebx
 0063F8CC    ret
*}
end;

//0063F8D0
function TWiimoteManager.AnyRightThumbButton3(n:Integer):Boolean;
begin
{*
 0063F8D0    push        ebx
 0063F8D1    push        esi
 0063F8D2    push        edi
 0063F8D3    push        ebp
 0063F8D4    mov         esi,edx
 0063F8D6    mov         ebp,eax
 0063F8D8    test        esi,esi
>0063F8DA    jle         0063F995
 0063F8E0    mov         edx,esi
 0063F8E2    mov         eax,ebp
 0063F8E4    call        TWiimoteManager.GetAny
 0063F8E9    mov         ebx,eax
 0063F8EB    test        ebx,ebx
>0063F8ED    jne         0063F8F6
 0063F8EF    xor         ebx,ebx
>0063F8F1    jmp         0063F9CA
 0063F8F6    mov         eax,ebx
 0063F8F8    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063F8FE    call        @IsClass
 0063F903    test        al,al
>0063F905    je          0063F915
 0063F907    mov         eax,ebx
 0063F909    call        TPS3ControllerObject.Triangle
 0063F90E    mov         ebx,eax
>0063F910    jmp         0063F9CA
 0063F915    mov         eax,ebx
 0063F917    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063F91D    call        @IsClass
 0063F922    test        al,al
>0063F924    je          0063F991
 0063F926    mov         eax,ebx
 0063F928    mov         edx,dword ptr [eax+4B4]
 0063F92E    cmp         byte ptr [edx+444],0
>0063F935    je          0063F943
 0063F937    call        TWiimoteObject.Plus
 0063F93C    mov         ebx,eax
>0063F93E    jmp         0063F9CA
 0063F943    mov         edx,dword ptr [eax+4B8]
 0063F949    cmp         byte ptr [edx+8],0
>0063F94D    je          0063F95A
 0063F94F    mov         eax,edx
 0063F951    call        TClassicObject.X
 0063F956    mov         ebx,eax
>0063F958    jmp         0063F9CA
 0063F95A    mov         edx,dword ptr [eax+4BC]
 0063F960    cmp         byte ptr [edx+8],0
>0063F964    je          0063F971
 0063F966    mov         eax,edx
 0063F968    call        TGuitarObject.Plus
 0063F96D    mov         ebx,eax
>0063F96F    jmp         0063F9CA
 0063F971    mov         edx,dword ptr [eax+4C0]
 0063F977    cmp         byte ptr [edx+8],0
>0063F97B    je          0063F988
 0063F97D    mov         eax,edx
 0063F97F    call        TDrumsObject.Orange
 0063F984    mov         ebx,eax
>0063F986    jmp         0063F9CA
 0063F988    call        TWiimoteObject.Plus
 0063F98D    mov         ebx,eax
>0063F98F    jmp         0063F9CA
 0063F991    xor         ebx,ebx
>0063F993    jmp         0063F9CA
 0063F995    xor         ebx,ebx
 0063F997    mov         eax,ebp
 0063F999    call        TWiimoteManager.AnyCount
 0063F99E    mov         edi,eax
 0063F9A0    test        edi,edi
>0063F9A2    jle         0063F9CA
 0063F9A4    mov         esi,1
 0063F9A9    test        bl,bl
>0063F9AB    jne         0063F9BE
 0063F9AD    mov         edx,esi
 0063F9AF    mov         eax,ebp
 0063F9B1    call        TWiimoteManager.AnyRightThumbButton3
 0063F9B6    test        al,al
>0063F9B8    jne         0063F9BE
 0063F9BA    xor         eax,eax
>0063F9BC    jmp         0063F9C0
 0063F9BE    mov         al,1
 0063F9C0    mov         ebx,eax
 0063F9C2    test        bl,bl
>0063F9C4    jne         0063F9CA
 0063F9C6    inc         esi
 0063F9C7    dec         edi
>0063F9C8    jne         0063F9A9
 0063F9CA    mov         eax,ebx
 0063F9CC    pop         ebp
 0063F9CD    pop         edi
 0063F9CE    pop         esi
 0063F9CF    pop         ebx
 0063F9D0    ret
*}
end;

//0063F9D4
function TWiimoteManager.AnyRightThumbButton4(n:Integer):Boolean;
begin
{*
 0063F9D4    push        ebx
 0063F9D5    push        esi
 0063F9D6    push        edi
 0063F9D7    push        ebp
 0063F9D8    mov         esi,edx
 0063F9DA    mov         ebp,eax
 0063F9DC    test        esi,esi
>0063F9DE    jle         0063FA8D
 0063F9E4    mov         edx,esi
 0063F9E6    mov         eax,ebp
 0063F9E8    call        TWiimoteManager.GetAny
 0063F9ED    mov         ebx,eax
 0063F9EF    test        ebx,ebx
>0063F9F1    jne         0063F9FA
 0063F9F3    xor         ebx,ebx
>0063F9F5    jmp         0063FAC2
 0063F9FA    mov         eax,ebx
 0063F9FC    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063FA02    call        @IsClass
 0063FA07    test        al,al
>0063FA09    je          0063FA19
 0063FA0B    mov         eax,ebx
 0063FA0D    call        TPS3ControllerObject.Square
 0063FA12    mov         ebx,eax
>0063FA14    jmp         0063FAC2
 0063FA19    mov         eax,ebx
 0063FA1B    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063FA21    call        @IsClass
 0063FA26    test        al,al
>0063FA28    je          0063FA89
 0063FA2A    mov         eax,ebx
 0063FA2C    mov         edx,dword ptr [eax+4B4]
 0063FA32    cmp         byte ptr [edx+444],0
>0063FA39    je          0063FA44
 0063FA3B    call        TWiimoteObject.HOME
 0063FA40    mov         ebx,eax
>0063FA42    jmp         0063FAC2
 0063FA44    mov         edx,dword ptr [eax+4B8]
 0063FA4A    cmp         byte ptr [edx+8],0
>0063FA4E    je          0063FA5B
 0063FA50    mov         eax,edx
 0063FA52    call        TClassicObject.Y
 0063FA57    mov         ebx,eax
>0063FA59    jmp         0063FAC2
 0063FA5B    mov         edx,dword ptr [eax+4BC]
 0063FA61    cmp         byte ptr [edx+8],0
>0063FA65    je          0063FA70
 0063FA67    call        TWiimoteObject.A
 0063FA6C    mov         ebx,eax
>0063FA6E    jmp         0063FAC2
 0063FA70    mov         edx,dword ptr [eax+4C0]
 0063FA76    cmp         byte ptr [edx+8],0
>0063FA7A    je          0063FA80
 0063FA7C    xor         ebx,ebx
>0063FA7E    jmp         0063FAC2
 0063FA80    call        TWiimoteObject.HOME
 0063FA85    mov         ebx,eax
>0063FA87    jmp         0063FAC2
 0063FA89    xor         ebx,ebx
>0063FA8B    jmp         0063FAC2
 0063FA8D    xor         ebx,ebx
 0063FA8F    mov         eax,ebp
 0063FA91    call        TWiimoteManager.AnyCount
 0063FA96    mov         edi,eax
 0063FA98    test        edi,edi
>0063FA9A    jle         0063FAC2
 0063FA9C    mov         esi,1
 0063FAA1    test        bl,bl
>0063FAA3    jne         0063FAB6
 0063FAA5    mov         edx,esi
 0063FAA7    mov         eax,ebp
 0063FAA9    call        TWiimoteManager.AnyRightThumbButton4
 0063FAAE    test        al,al
>0063FAB0    jne         0063FAB6
 0063FAB2    xor         eax,eax
>0063FAB4    jmp         0063FAB8
 0063FAB6    mov         al,1
 0063FAB8    mov         ebx,eax
 0063FABA    test        bl,bl
>0063FABC    jne         0063FAC2
 0063FABE    inc         esi
 0063FABF    dec         edi
>0063FAC0    jne         0063FAA1
 0063FAC2    mov         eax,ebx
 0063FAC4    pop         ebp
 0063FAC5    pop         edi
 0063FAC6    pop         esi
 0063FAC7    pop         ebx
 0063FAC8    ret
*}
end;

//0063FACC
function TWiimoteManager.AnyRightThumbButton5(n:Integer):Boolean;
begin
{*
 0063FACC    push        ebx
 0063FACD    push        esi
 0063FACE    push        edi
 0063FACF    push        ebp
 0063FAD0    mov         esi,edx
 0063FAD2    mov         ebp,eax
 0063FAD4    test        esi,esi
>0063FAD6    jle         0063FB80
 0063FADC    mov         edx,esi
 0063FADE    mov         eax,ebp
 0063FAE0    call        TWiimoteManager.GetAny
 0063FAE5    mov         ebx,eax
 0063FAE7    test        ebx,ebx
>0063FAE9    jne         0063FAF2
 0063FAEB    xor         ebx,ebx
>0063FAED    jmp         0063FBB5
 0063FAF2    mov         eax,ebx
 0063FAF4    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063FAFA    call        @IsClass
 0063FAFF    test        al,al
>0063FB01    je          0063FB11
 0063FB03    mov         eax,ebx
 0063FB05    call        TPS3ControllerObject.Start
 0063FB0A    mov         ebx,eax
>0063FB0C    jmp         0063FBB5
 0063FB11    mov         eax,ebx
 0063FB13    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063FB19    call        @IsClass
 0063FB1E    test        al,al
>0063FB20    je          0063FB7C
 0063FB22    mov         eax,ebx
 0063FB24    mov         edx,dword ptr [eax+4B4]
 0063FB2A    cmp         byte ptr [edx+444],0
>0063FB31    je          0063FB3C
 0063FB33    call        TWiimoteObject.One
 0063FB38    mov         ebx,eax
>0063FB3A    jmp         0063FBB5
 0063FB3C    mov         edx,dword ptr [eax+4B8]
 0063FB42    cmp         byte ptr [edx+8],0
>0063FB46    je          0063FB53
 0063FB48    mov         eax,edx
 0063FB4A    call        TClassicObject.Plus
 0063FB4F    mov         ebx,eax
>0063FB51    jmp         0063FBB5
 0063FB53    mov         edx,dword ptr [eax+4BC]
 0063FB59    cmp         byte ptr [edx+8],0
>0063FB5D    je          0063FB63
 0063FB5F    xor         ebx,ebx
>0063FB61    jmp         0063FBB5
 0063FB63    mov         edx,dword ptr [eax+4C0]
 0063FB69    cmp         byte ptr [edx+8],0
>0063FB6D    je          0063FB73
 0063FB6F    xor         ebx,ebx
>0063FB71    jmp         0063FBB5
 0063FB73    call        TWiimoteObject.One
 0063FB78    mov         ebx,eax
>0063FB7A    jmp         0063FBB5
 0063FB7C    xor         ebx,ebx
>0063FB7E    jmp         0063FBB5
 0063FB80    xor         ebx,ebx
 0063FB82    mov         eax,ebp
 0063FB84    call        TWiimoteManager.AnyCount
 0063FB89    mov         edi,eax
 0063FB8B    test        edi,edi
>0063FB8D    jle         0063FBB5
 0063FB8F    mov         esi,1
 0063FB94    test        bl,bl
>0063FB96    jne         0063FBA9
 0063FB98    mov         edx,esi
 0063FB9A    mov         eax,ebp
 0063FB9C    call        TWiimoteManager.AnyRightThumbButton5
 0063FBA1    test        al,al
>0063FBA3    jne         0063FBA9
 0063FBA5    xor         eax,eax
>0063FBA7    jmp         0063FBAB
 0063FBA9    mov         al,1
 0063FBAB    mov         ebx,eax
 0063FBAD    test        bl,bl
>0063FBAF    jne         0063FBB5
 0063FBB1    inc         esi
 0063FBB2    dec         edi
>0063FBB3    jne         0063FB94
 0063FBB5    mov         eax,ebx
 0063FBB7    pop         ebp
 0063FBB8    pop         edi
 0063FBB9    pop         esi
 0063FBBA    pop         ebx
 0063FBBB    ret
*}
end;

//0063FBBC
function TWiimoteManager.AnyRightThumbButton6(n:Integer):Boolean;
begin
{*
 0063FBBC    push        ebx
 0063FBBD    push        esi
 0063FBBE    push        edi
 0063FBBF    push        ebp
 0063FBC0    mov         esi,edx
 0063FBC2    mov         ebp,eax
 0063FBC4    test        esi,esi
>0063FBC6    jle         0063FC70
 0063FBCC    mov         edx,esi
 0063FBCE    mov         eax,ebp
 0063FBD0    call        TWiimoteManager.GetAny
 0063FBD5    mov         ebx,eax
 0063FBD7    test        ebx,ebx
>0063FBD9    jne         0063FBE2
 0063FBDB    xor         ebx,ebx
>0063FBDD    jmp         0063FCA5
 0063FBE2    mov         eax,ebx
 0063FBE4    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063FBEA    call        @IsClass
 0063FBEF    test        al,al
>0063FBF1    je          0063FC01
 0063FBF3    mov         eax,ebx
 0063FBF5    call        TPS3ControllerObject.R3
 0063FBFA    mov         ebx,eax
>0063FBFC    jmp         0063FCA5
 0063FC01    mov         eax,ebx
 0063FC03    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063FC09    call        @IsClass
 0063FC0E    test        al,al
>0063FC10    je          0063FC6C
 0063FC12    mov         eax,ebx
 0063FC14    mov         edx,dword ptr [eax+4B4]
 0063FC1A    cmp         byte ptr [edx+444],0
>0063FC21    je          0063FC2C
 0063FC23    call        TWiimoteObject.Two
 0063FC28    mov         ebx,eax
>0063FC2A    jmp         0063FCA5
 0063FC2C    mov         edx,dword ptr [eax+4B8]
 0063FC32    cmp         byte ptr [edx+8],0
>0063FC36    je          0063FC43
 0063FC38    mov         eax,edx
 0063FC3A    call        TClassicObject.HOME
 0063FC3F    mov         ebx,eax
>0063FC41    jmp         0063FCA5
 0063FC43    mov         edx,dword ptr [eax+4BC]
 0063FC49    cmp         byte ptr [edx+8],0
>0063FC4D    je          0063FC53
 0063FC4F    xor         ebx,ebx
>0063FC51    jmp         0063FCA5
 0063FC53    mov         edx,dword ptr [eax+4C0]
 0063FC59    cmp         byte ptr [edx+8],0
>0063FC5D    je          0063FC63
 0063FC5F    xor         ebx,ebx
>0063FC61    jmp         0063FCA5
 0063FC63    call        TWiimoteObject.Two
 0063FC68    mov         ebx,eax
>0063FC6A    jmp         0063FCA5
 0063FC6C    xor         ebx,ebx
>0063FC6E    jmp         0063FCA5
 0063FC70    xor         ebx,ebx
 0063FC72    mov         eax,ebp
 0063FC74    call        TWiimoteManager.AnyCount
 0063FC79    mov         edi,eax
 0063FC7B    test        edi,edi
>0063FC7D    jle         0063FCA5
 0063FC7F    mov         esi,1
 0063FC84    test        bl,bl
>0063FC86    jne         0063FC99
 0063FC88    mov         edx,esi
 0063FC8A    mov         eax,ebp
 0063FC8C    call        TWiimoteManager.AnyRightThumbButton6
 0063FC91    test        al,al
>0063FC93    jne         0063FC99
 0063FC95    xor         eax,eax
>0063FC97    jmp         0063FC9B
 0063FC99    mov         al,1
 0063FC9B    mov         ebx,eax
 0063FC9D    test        bl,bl
>0063FC9F    jne         0063FCA5
 0063FCA1    inc         esi
 0063FCA2    dec         edi
>0063FCA3    jne         0063FC84
 0063FCA5    mov         eax,ebx
 0063FCA7    pop         ebp
 0063FCA8    pop         edi
 0063FCA9    pop         esi
 0063FCAA    pop         ebx
 0063FCAB    ret
*}
end;

//0063FCAC
function TWiimoteManager.AnyRightThumbButton7(n:Integer):Boolean;
begin
{*
 0063FCAC    push        ebx
 0063FCAD    push        esi
 0063FCAE    push        edi
 0063FCAF    push        ebp
 0063FCB0    mov         esi,edx
 0063FCB2    mov         ebp,eax
 0063FCB4    test        esi,esi
>0063FCB6    jle         0063FD60
 0063FCBC    mov         edx,esi
 0063FCBE    mov         eax,ebp
 0063FCC0    call        TWiimoteManager.GetAny
 0063FCC5    mov         ebx,eax
 0063FCC7    test        ebx,ebx
>0063FCC9    jne         0063FCD2
 0063FCCB    xor         ebx,ebx
>0063FCCD    jmp         0063FD95
 0063FCD2    mov         eax,ebx
 0063FCD4    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063FCDA    call        @IsClass
 0063FCDF    test        al,al
>0063FCE1    je          0063FCF1
 0063FCE3    mov         eax,ebx
 0063FCE5    call        TPS3ControllerObject.PS
 0063FCEA    mov         ebx,eax
>0063FCEC    jmp         0063FD95
 0063FCF1    mov         eax,ebx
 0063FCF3    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063FCF9    call        @IsClass
 0063FCFE    test        al,al
>0063FD00    je          0063FD5C
 0063FD02    mov         eax,ebx
 0063FD04    mov         edx,dword ptr [eax+4B4]
 0063FD0A    cmp         byte ptr [edx+444],0
>0063FD11    je          0063FD1C
 0063FD13    call        TWiimoteObject.Down
 0063FD18    mov         ebx,eax
>0063FD1A    jmp         0063FD95
 0063FD1C    mov         edx,dword ptr [eax+4B8]
 0063FD22    cmp         byte ptr [edx+8],0
>0063FD26    je          0063FD33
 0063FD28    mov         eax,edx
 0063FD2A    call        TClassicObject.Minus
 0063FD2F    mov         ebx,eax
>0063FD31    jmp         0063FD95
 0063FD33    mov         edx,dword ptr [eax+4BC]
 0063FD39    cmp         byte ptr [edx+8],0
>0063FD3D    je          0063FD43
 0063FD3F    xor         ebx,ebx
>0063FD41    jmp         0063FD95
 0063FD43    mov         edx,dword ptr [eax+4C0]
 0063FD49    cmp         byte ptr [edx+8],0
>0063FD4D    je          0063FD53
 0063FD4F    xor         ebx,ebx
>0063FD51    jmp         0063FD95
 0063FD53    call        TWiimoteObject.Down
 0063FD58    mov         ebx,eax
>0063FD5A    jmp         0063FD95
 0063FD5C    xor         ebx,ebx
>0063FD5E    jmp         0063FD95
 0063FD60    xor         ebx,ebx
 0063FD62    mov         eax,ebp
 0063FD64    call        TWiimoteManager.AnyCount
 0063FD69    mov         edi,eax
 0063FD6B    test        edi,edi
>0063FD6D    jle         0063FD95
 0063FD6F    mov         esi,1
 0063FD74    test        bl,bl
>0063FD76    jne         0063FD89
 0063FD78    mov         edx,esi
 0063FD7A    mov         eax,ebp
 0063FD7C    call        TWiimoteManager.AnyRightThumbButton7
 0063FD81    test        al,al
>0063FD83    jne         0063FD89
 0063FD85    xor         eax,eax
>0063FD87    jmp         0063FD8B
 0063FD89    mov         al,1
 0063FD8B    mov         ebx,eax
 0063FD8D    test        bl,bl
>0063FD8F    jne         0063FD95
 0063FD91    inc         esi
 0063FD92    dec         edi
>0063FD93    jne         0063FD74
 0063FD95    mov         eax,ebx
 0063FD97    pop         ebp
 0063FD98    pop         edi
 0063FD99    pop         esi
 0063FD9A    pop         ebx
 0063FD9B    ret
*}
end;

//0063FD9C
function TWiimoteManager.AnyRightThumbButton8(n:Integer):Boolean;
begin
{*
 0063FD9C    push        ebx
 0063FD9D    push        esi
 0063FD9E    push        edi
 0063FD9F    push        ebp
 0063FDA0    mov         esi,edx
 0063FDA2    mov         ebp,eax
 0063FDA4    test        esi,esi
>0063FDA6    jle         0063FE49
 0063FDAC    mov         edx,esi
 0063FDAE    mov         eax,ebp
 0063FDB0    call        TWiimoteManager.GetAny
 0063FDB5    mov         ebx,eax
 0063FDB7    test        ebx,ebx
>0063FDB9    jne         0063FDC2
 0063FDBB    xor         ebx,ebx
>0063FDBD    jmp         0063FE7E
 0063FDC2    mov         eax,ebx
 0063FDC4    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063FDCA    call        @IsClass
 0063FDCF    test        al,al
>0063FDD1    je          0063FDE1
 0063FDD3    mov         eax,ebx
 0063FDD5    call        TPS3ControllerObject.Select
 0063FDDA    mov         ebx,eax
>0063FDDC    jmp         0063FE7E
 0063FDE1    mov         eax,ebx
 0063FDE3    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063FDE9    call        @IsClass
 0063FDEE    test        al,al
>0063FDF0    je          0063FE45
 0063FDF2    mov         eax,ebx
 0063FDF4    mov         edx,dword ptr [eax+4B4]
 0063FDFA    cmp         byte ptr [edx+444],0
>0063FE01    je          0063FE0C
 0063FE03    call        TWiimoteObject.Left
 0063FE08    mov         ebx,eax
>0063FE0A    jmp         0063FE7E
 0063FE0C    mov         edx,dword ptr [eax+4B8]
 0063FE12    cmp         byte ptr [edx+8],0
>0063FE16    je          0063FE1C
 0063FE18    xor         ebx,ebx
>0063FE1A    jmp         0063FE7E
 0063FE1C    mov         edx,dword ptr [eax+4BC]
 0063FE22    cmp         byte ptr [edx+8],0
>0063FE26    je          0063FE2C
 0063FE28    xor         ebx,ebx
>0063FE2A    jmp         0063FE7E
 0063FE2C    mov         edx,dword ptr [eax+4C0]
 0063FE32    cmp         byte ptr [edx+8],0
>0063FE36    je          0063FE3C
 0063FE38    xor         ebx,ebx
>0063FE3A    jmp         0063FE7E
 0063FE3C    call        TWiimoteObject.Left
 0063FE41    mov         ebx,eax
>0063FE43    jmp         0063FE7E
 0063FE45    xor         ebx,ebx
>0063FE47    jmp         0063FE7E
 0063FE49    xor         ebx,ebx
 0063FE4B    mov         eax,ebp
 0063FE4D    call        TWiimoteManager.AnyCount
 0063FE52    mov         edi,eax
 0063FE54    test        edi,edi
>0063FE56    jle         0063FE7E
 0063FE58    mov         esi,1
 0063FE5D    test        bl,bl
>0063FE5F    jne         0063FE72
 0063FE61    mov         edx,esi
 0063FE63    mov         eax,ebp
 0063FE65    call        TWiimoteManager.AnyRightThumbButton8
 0063FE6A    test        al,al
>0063FE6C    jne         0063FE72
 0063FE6E    xor         eax,eax
>0063FE70    jmp         0063FE74
 0063FE72    mov         al,1
 0063FE74    mov         ebx,eax
 0063FE76    test        bl,bl
>0063FE78    jne         0063FE7E
 0063FE7A    inc         esi
 0063FE7B    dec         edi
>0063FE7C    jne         0063FE5D
 0063FE7E    mov         eax,ebx
 0063FE80    pop         ebp
 0063FE81    pop         edi
 0063FE82    pop         esi
 0063FE83    pop         ebx
 0063FE84    ret
*}
end;

//0063FE88
function TWiimoteManager.AnyRightThumbButton9(n:Integer):Boolean;
begin
{*
 0063FE88    push        ebx
 0063FE89    push        esi
 0063FE8A    push        edi
 0063FE8B    push        ebp
 0063FE8C    mov         esi,edx
 0063FE8E    mov         ebp,eax
 0063FE90    test        esi,esi
>0063FE92    jle         0063FF2E
 0063FE98    mov         edx,esi
 0063FE9A    mov         eax,ebp
 0063FE9C    call        TWiimoteManager.GetAny
 0063FEA1    mov         ebx,eax
 0063FEA3    test        ebx,ebx
>0063FEA5    jne         0063FEAE
 0063FEA7    xor         ebx,ebx
>0063FEA9    jmp         0063FF63
 0063FEAE    mov         eax,ebx
 0063FEB0    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063FEB6    call        @IsClass
 0063FEBB    test        al,al
>0063FEBD    je          0063FEC6
 0063FEBF    xor         ebx,ebx
>0063FEC1    jmp         0063FF63
 0063FEC6    mov         eax,ebx
 0063FEC8    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063FECE    call        @IsClass
 0063FED3    test        al,al
>0063FED5    je          0063FF2A
 0063FED7    mov         eax,ebx
 0063FED9    mov         edx,dword ptr [eax+4B4]
 0063FEDF    cmp         byte ptr [edx+444],0
>0063FEE6    je          0063FEF1
 0063FEE8    call        TWiimoteObject.Right
 0063FEED    mov         ebx,eax
>0063FEEF    jmp         0063FF63
 0063FEF1    mov         edx,dword ptr [eax+4B8]
 0063FEF7    cmp         byte ptr [edx+8],0
>0063FEFB    je          0063FF01
 0063FEFD    xor         ebx,ebx
>0063FEFF    jmp         0063FF63
 0063FF01    mov         edx,dword ptr [eax+4BC]
 0063FF07    cmp         byte ptr [edx+8],0
>0063FF0B    je          0063FF11
 0063FF0D    xor         ebx,ebx
>0063FF0F    jmp         0063FF63
 0063FF11    mov         edx,dword ptr [eax+4C0]
 0063FF17    cmp         byte ptr [edx+8],0
>0063FF1B    je          0063FF21
 0063FF1D    xor         ebx,ebx
>0063FF1F    jmp         0063FF63
 0063FF21    call        TWiimoteObject.Right
 0063FF26    mov         ebx,eax
>0063FF28    jmp         0063FF63
 0063FF2A    xor         ebx,ebx
>0063FF2C    jmp         0063FF63
 0063FF2E    xor         ebx,ebx
 0063FF30    mov         eax,ebp
 0063FF32    call        TWiimoteManager.AnyCount
 0063FF37    mov         edi,eax
 0063FF39    test        edi,edi
>0063FF3B    jle         0063FF63
 0063FF3D    mov         esi,1
 0063FF42    test        bl,bl
>0063FF44    jne         0063FF57
 0063FF46    mov         edx,esi
 0063FF48    mov         eax,ebp
 0063FF4A    call        TWiimoteManager.AnyRightThumbButton9
 0063FF4F    test        al,al
>0063FF51    jne         0063FF57
 0063FF53    xor         eax,eax
>0063FF55    jmp         0063FF59
 0063FF57    mov         al,1
 0063FF59    mov         ebx,eax
 0063FF5B    test        bl,bl
>0063FF5D    jne         0063FF63
 0063FF5F    inc         esi
 0063FF60    dec         edi
>0063FF61    jne         0063FF42
 0063FF63    mov         eax,ebx
 0063FF65    pop         ebp
 0063FF66    pop         edi
 0063FF67    pop         esi
 0063FF68    pop         ebx
 0063FF69    ret
*}
end;

//0063FF6C
function TWiimoteManager.AnyRightThumbX(n:Integer):Double;
begin
{*
 0063FF6C    push        ebx
 0063FF6D    push        esi
 0063FF6E    push        edi
 0063FF6F    add         esp,0FFFFFFF4
 0063FF72    mov         ebx,edx
 0063FF74    mov         edi,eax
 0063FF76    test        ebx,ebx
>0063FF78    jle         00640074
 0063FF7E    mov         edx,ebx
 0063FF80    mov         eax,edi
 0063FF82    call        TWiimoteManager.GetAny
 0063FF87    mov         ebx,eax
 0063FF89    test        ebx,ebx
>0063FF8B    jne         0063FF9B
 0063FF8D    xor         eax,eax
 0063FF8F    mov         dword ptr [esp],eax
 0063FF92    mov         dword ptr [esp+4],eax
>0063FF96    jmp         006400A3
 0063FF9B    mov         eax,ebx
 0063FF9D    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0063FFA3    call        @IsClass
 0063FFA8    test        al,al
>0063FFAA    je          0063FFBC
 0063FFAC    mov         eax,ebx
 0063FFAE    call        TPS3ControllerObject.RightStickX
 0063FFB3    fstp        qword ptr [esp]
 0063FFB6    wait
>0063FFB7    jmp         006400A3
 0063FFBC    mov         eax,ebx
 0063FFBE    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0063FFC4    call        @IsClass
 0063FFC9    test        al,al
>0063FFCB    je          00640069
 0063FFD1    mov         eax,dword ptr [ebx+4B4]
 0063FFD7    cmp         byte ptr [eax+444],0
>0063FFDE    je          0063FFF8
 0063FFE0    mov         eax,ebx
 0063FFE2    call        TWiimoteObject.DPadX
 0063FFE7    mov         dword ptr [esp+8],eax
 0063FFEB    fild        dword ptr [esp+8]
 0063FFEF    fstp        qword ptr [esp]
 0063FFF2    wait
>0063FFF3    jmp         006400A3
 0063FFF8    mov         eax,dword ptr [ebx+4B8]
 0063FFFE    cmp         byte ptr [eax+8],0
>00640002    je          00640012
 00640004    call        TClassicObject.RightStickX
 00640009    fstp        qword ptr [esp]
 0064000C    wait
>0064000D    jmp         006400A3
 00640012    mov         eax,dword ptr [ebx+4BC]
 00640018    cmp         byte ptr [eax+8],0
>0064001C    je          00640033
 0064001E    mov         eax,ebx
 00640020    call        TWiimoteObject.DPadY
 00640025    mov         dword ptr [esp+8],eax
 00640029    fild        dword ptr [esp+8]
 0064002D    fstp        qword ptr [esp]
 00640030    wait
>00640031    jmp         006400A3
 00640033    mov         eax,dword ptr [ebx+4C0]
 00640039    cmp         byte ptr [eax+8],0
>0064003D    je          00640054
 0064003F    mov         eax,ebx
 00640041    call        TWiimoteObject.DPadY
 00640046    mov         dword ptr [esp+8],eax
 0064004A    fild        dword ptr [esp+8]
 0064004E    fstp        qword ptr [esp]
 00640051    wait
>00640052    jmp         006400A3
 00640054    mov         eax,ebx
 00640056    call        TWiimoteObject.DPadX
 0064005B    mov         dword ptr [esp+8],eax
 0064005F    fild        dword ptr [esp+8]
 00640063    fstp        qword ptr [esp]
 00640066    wait
>00640067    jmp         006400A3
 00640069    xor         eax,eax
 0064006B    mov         dword ptr [esp],eax
 0064006E    mov         dword ptr [esp+4],eax
>00640072    jmp         006400A3
 00640074    xor         eax,eax
 00640076    mov         dword ptr [esp],eax
 00640079    mov         dword ptr [esp+4],eax
 0064007D    mov         eax,edi
 0064007F    call        TWiimoteManager.AnyCount
 00640084    mov         esi,eax
 00640086    test        esi,esi
>00640088    jle         006400A3
 0064008A    mov         ebx,1
 0064008F    mov         edx,ebx
 00640091    mov         eax,edi
 00640093    call        TWiimoteManager.AnyRightThumbX
 00640098    fadd        qword ptr [esp]
 0064009B    fstp        qword ptr [esp]
 0064009E    wait
 0064009F    inc         ebx
 006400A0    dec         esi
>006400A1    jne         0064008F
 006400A3    fld         qword ptr [esp]
 006400A6    fcomp       dword ptr ds:[6400E8];1:Single
 006400AC    wait
 006400AD    fnstsw      al
 006400AF    sahf
>006400B0    jbe         006400C1
 006400B2    xor         eax,eax
 006400B4    mov         dword ptr [esp],eax
 006400B7    mov         dword ptr [esp+4],3FF00000
>006400BF    jmp         006400DD
 006400C1    fld         qword ptr [esp]
 006400C4    fcomp       dword ptr ds:[6400EC];-1:Single
 006400CA    wait
 006400CB    fnstsw      al
 006400CD    sahf
>006400CE    jae         006400DD
 006400D0    xor         eax,eax
 006400D2    mov         dword ptr [esp],eax
 006400D5    mov         dword ptr [esp+4],0BFF00000
 006400DD    fld         qword ptr [esp]
 006400E0    add         esp,0C
 006400E3    pop         edi
 006400E4    pop         esi
 006400E5    pop         ebx
 006400E6    ret
*}
end;

//006400F0
function TWiimoteManager.AnyRightThumbY(n:Integer):Double;
begin
{*
 006400F0    push        ebx
 006400F1    push        esi
 006400F2    push        edi
 006400F3    add         esp,0FFFFFFF4
 006400F6    mov         ebx,edx
 006400F8    mov         edi,eax
 006400FA    test        ebx,ebx
>006400FC    jle         006401FC
 00640102    mov         edx,ebx
 00640104    mov         eax,edi
 00640106    call        TWiimoteManager.GetAny
 0064010B    mov         ebx,eax
 0064010D    test        ebx,ebx
>0064010F    jne         0064011F
 00640111    xor         eax,eax
 00640113    mov         dword ptr [esp],eax
 00640116    mov         dword ptr [esp+4],eax
>0064011A    jmp         0064022B
 0064011F    mov         eax,ebx
 00640121    mov         edx,dword ptr ds:[629714];TSixaxisObject
 00640127    call        @IsClass
 0064012C    test        al,al
>0064012E    je          00640140
 00640130    mov         eax,ebx
 00640132    call        TPS3ControllerObject.RightStickY
 00640137    fstp        qword ptr [esp]
 0064013A    wait
>0064013B    jmp         0064022B
 00640140    mov         eax,ebx
 00640142    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 00640148    call        @IsClass
 0064014D    test        al,al
>0064014F    je          006401F1
 00640155    mov         eax,dword ptr [ebx+4B4]
 0064015B    cmp         byte ptr [eax+444],0
>00640162    je          0064017C
 00640164    mov         eax,ebx
 00640166    call        TWiimoteObject.DPadY
 0064016B    mov         dword ptr [esp+8],eax
 0064016F    fild        dword ptr [esp+8]
 00640173    fstp        qword ptr [esp]
 00640176    wait
>00640177    jmp         0064022B
 0064017C    mov         eax,dword ptr [ebx+4B8]
 00640182    cmp         byte ptr [eax+8],0
>00640186    je          00640196
 00640188    call        TClassicObject.RightStickY
 0064018D    fstp        qword ptr [esp]
 00640190    wait
>00640191    jmp         0064022B
 00640196    mov         eax,dword ptr [ebx+4BC]
 0064019C    cmp         byte ptr [eax+8],0
>006401A0    je          006401B9
 006401A2    mov         eax,ebx
 006401A4    call        TWiimoteObject.DPadX
 006401A9    neg         eax
 006401AB    mov         dword ptr [esp+8],eax
 006401AF    fild        dword ptr [esp+8]
 006401B3    fstp        qword ptr [esp]
 006401B6    wait
>006401B7    jmp         0064022B
 006401B9    mov         eax,dword ptr [ebx+4C0]
 006401BF    cmp         byte ptr [eax+8],0
>006401C3    je          006401DC
 006401C5    mov         eax,ebx
 006401C7    call        TWiimoteObject.DPadX
 006401CC    neg         eax
 006401CE    mov         dword ptr [esp+8],eax
 006401D2    fild        dword ptr [esp+8]
 006401D6    fstp        qword ptr [esp]
 006401D9    wait
>006401DA    jmp         0064022B
 006401DC    mov         eax,ebx
 006401DE    call        TWiimoteObject.DPadY
 006401E3    mov         dword ptr [esp+8],eax
 006401E7    fild        dword ptr [esp+8]
 006401EB    fstp        qword ptr [esp]
 006401EE    wait
>006401EF    jmp         0064022B
 006401F1    xor         eax,eax
 006401F3    mov         dword ptr [esp],eax
 006401F6    mov         dword ptr [esp+4],eax
>006401FA    jmp         0064022B
 006401FC    xor         eax,eax
 006401FE    mov         dword ptr [esp],eax
 00640201    mov         dword ptr [esp+4],eax
 00640205    mov         eax,edi
 00640207    call        TWiimoteManager.AnyCount
 0064020C    mov         esi,eax
 0064020E    test        esi,esi
>00640210    jle         0064022B
 00640212    mov         ebx,1
 00640217    mov         edx,ebx
 00640219    mov         eax,edi
 0064021B    call        TWiimoteManager.AnyRightThumbY
 00640220    fadd        qword ptr [esp]
 00640223    fstp        qword ptr [esp]
 00640226    wait
 00640227    inc         ebx
 00640228    dec         esi
>00640229    jne         00640217
 0064022B    fld         qword ptr [esp]
 0064022E    fcomp       dword ptr ds:[640270];1:Single
 00640234    wait
 00640235    fnstsw      al
 00640237    sahf
>00640238    jbe         00640249
 0064023A    xor         eax,eax
 0064023C    mov         dword ptr [esp],eax
 0064023F    mov         dword ptr [esp+4],3FF00000
>00640247    jmp         00640265
 00640249    fld         qword ptr [esp]
 0064024C    fcomp       dword ptr ds:[640274];-1:Single
 00640252    wait
 00640253    fnstsw      al
 00640255    sahf
>00640256    jae         00640265
 00640258    xor         eax,eax
 0064025A    mov         dword ptr [esp],eax
 0064025D    mov         dword ptr [esp+4],0BFF00000
 00640265    fld         qword ptr [esp]
 00640268    add         esp,0C
 0064026B    pop         edi
 0064026C    pop         esi
 0064026D    pop         ebx
 0064026E    ret
*}
end;

//00640278
function TWiimoteManager.AnyRoll(n:Integer):Double;
begin
{*
 00640278    push        ebx
 00640279    push        esi
 0064027A    push        edi
 0064027B    add         esp,0FFFFFFE4
 0064027E    mov         ebx,edx
 00640280    mov         edi,eax
 00640282    test        ebx,ebx
>00640284    jle         006402B3
 00640286    mov         edx,ebx
 00640288    mov         eax,edi
 0064028A    call        TWiimoteManager.GetAny
 0064028F    test        eax,eax
>00640291    jne         0064029E
 00640293    xor         eax,eax
 00640295    mov         dword ptr [esp],eax
 00640298    mov         dword ptr [esp+4],eax
>0064029C    jmp         0064030B
 0064029E    mov         edx,dword ptr [eax+3B8];TAccelerometerObject.Roll:Double
 006402A4    mov         dword ptr [esp],edx
 006402A7    mov         edx,dword ptr [eax+3BC];TAccelerometerObject.?f3BC:dword
 006402AD    mov         dword ptr [esp+4],edx
>006402B1    jmp         0064030B
 006402B3    xor         eax,eax
 006402B5    mov         dword ptr [esp],eax
 006402B8    mov         dword ptr [esp+4],eax
 006402BC    mov         eax,edi
 006402BE    call        TWiimoteManager.AnyCount
 006402C3    mov         esi,eax
 006402C5    test        esi,esi
>006402C7    jle         0064030B
 006402C9    mov         ebx,1
 006402CE    mov         edx,ebx
 006402D0    mov         eax,edi
 006402D2    call        TWiimoteManager.AnyRoll
 006402D7    fstp        qword ptr [esp+8]
 006402DB    wait
 006402DC    fld         qword ptr [esp+8]
 006402E0    fabs
 006402E2    fstp        tbyte ptr [esp+10]
 006402E6    wait
 006402E7    fld         qword ptr [esp]
 006402EA    fabs
 006402EC    fld         tbyte ptr [esp+10]
 006402F0    fcompp
 006402F2    wait
 006402F3    fnstsw      al
 006402F5    sahf
>006402F6    jbe         00640307
 006402F8    mov         eax,dword ptr [esp+8]
 006402FC    mov         dword ptr [esp],eax
 006402FF    mov         eax,dword ptr [esp+0C]
 00640303    mov         dword ptr [esp+4],eax
 00640307    inc         ebx
 00640308    dec         esi
>00640309    jne         006402CE
 0064030B    fld         qword ptr [esp]
 0064030E    add         esp,1C
 00640311    pop         edi
 00640312    pop         esi
 00640313    pop         ebx
 00640314    ret
*}
end;

//00640318
function TWiimoteManager.AnySecondBestLeftTrigger(n:Integer):Boolean;
begin
{*
 00640318    push        ebx
 00640319    push        esi
 0064031A    push        edi
 0064031B    push        ebp
 0064031C    mov         esi,edx
 0064031E    mov         ebp,eax
 00640320    test        esi,esi
>00640322    jle         006403DA
 00640328    mov         edx,esi
 0064032A    mov         eax,ebp
 0064032C    call        TWiimoteManager.GetAny
 00640331    mov         ebx,eax
 00640333    test        ebx,ebx
>00640335    jne         0064033E
 00640337    xor         ebx,ebx
>00640339    jmp         0064040F
 0064033E    mov         eax,ebx
 00640340    mov         edx,dword ptr ds:[629714];TSixaxisObject
 00640346    call        @IsClass
 0064034B    test        al,al
>0064034D    je          0064035D
 0064034F    mov         eax,ebx
 00640351    call        TPS3ControllerObject.L2
 00640356    mov         ebx,eax
>00640358    jmp         0064040F
 0064035D    mov         eax,ebx
 0064035F    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 00640365    call        @IsClass
 0064036A    test        al,al
>0064036C    je          006403D6
 0064036E    mov         eax,ebx
 00640370    mov         edx,dword ptr [eax+4B4]
 00640376    cmp         byte ptr [edx+444],0
>0064037D    je          0064038D
 0064037F    mov         eax,edx
 00640381    call        TNunchukObject.C
 00640386    mov         ebx,eax
>00640388    jmp         0064040F
 0064038D    mov         edx,dword ptr [eax+4B8]
 00640393    cmp         byte ptr [edx+8],0
>00640397    je          006403A4
 00640399    mov         eax,edx
 0064039B    call        TClassicObject.ZL
 006403A0    mov         ebx,eax
>006403A2    jmp         0064040F
 006403A4    mov         edx,dword ptr [eax+4BC]
 006403AA    cmp         byte ptr [edx+8],0
>006403AE    je          006403BB
 006403B0    mov         eax,edx
 006403B2    call        TGuitarObject.Fret2
 006403B7    mov         ebx,eax
>006403B9    jmp         0064040F
 006403BB    mov         edx,dword ptr [eax+4C0]
 006403C1    cmp         byte ptr [edx+8],0
>006403C5    je          006403D2
 006403C7    mov         eax,edx
 006403C9    call        TDrumsObject.HiHat
 006403CE    mov         ebx,eax
>006403D0    jmp         0064040F
 006403D2    xor         ebx,ebx
>006403D4    jmp         0064040F
 006403D6    xor         ebx,ebx
>006403D8    jmp         0064040F
 006403DA    xor         ebx,ebx
 006403DC    mov         eax,ebp
 006403DE    call        TWiimoteManager.AnyCount
 006403E3    mov         edi,eax
 006403E5    test        edi,edi
>006403E7    jle         0064040F
 006403E9    mov         esi,1
 006403EE    test        bl,bl
>006403F0    jne         00640403
 006403F2    mov         edx,esi
 006403F4    mov         eax,ebp
 006403F6    call        TWiimoteManager.AnySecondBestLeftTrigger
 006403FB    test        al,al
>006403FD    jne         00640403
 006403FF    xor         eax,eax
>00640401    jmp         00640405
 00640403    mov         al,1
 00640405    mov         ebx,eax
 00640407    test        bl,bl
>00640409    jne         0064040F
 0064040B    inc         esi
 0064040C    dec         edi
>0064040D    jne         006403EE
 0064040F    mov         eax,ebx
 00640411    pop         ebp
 00640412    pop         edi
 00640413    pop         esi
 00640414    pop         ebx
 00640415    ret
*}
end;

//00640418
function TWiimoteManager.AnySecondBestRightTrigger(n:Integer):Boolean;
begin
{*
 00640418    push        ebx
 00640419    push        esi
 0064041A    push        edi
 0064041B    push        ebp
 0064041C    mov         esi,edx
 0064041E    mov         ebp,eax
 00640420    test        esi,esi
>00640422    jle         006404D3
 00640428    mov         edx,esi
 0064042A    mov         eax,ebp
 0064042C    call        TWiimoteManager.GetAny
 00640431    mov         ebx,eax
 00640433    test        ebx,ebx
>00640435    jne         0064043E
 00640437    xor         ebx,ebx
>00640439    jmp         00640508
 0064043E    mov         eax,ebx
 00640440    mov         edx,dword ptr ds:[629714];TSixaxisObject
 00640446    call        @IsClass
 0064044B    test        al,al
>0064044D    je          0064045D
 0064044F    mov         eax,ebx
 00640451    call        TPS3ControllerObject.R2
 00640456    mov         ebx,eax
>00640458    jmp         00640508
 0064045D    mov         eax,ebx
 0064045F    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 00640465    call        @IsClass
 0064046A    test        al,al
>0064046C    je          006404CF
 0064046E    mov         eax,ebx
 00640470    mov         edx,dword ptr [eax+4B4]
 00640476    cmp         byte ptr [edx+444],0
>0064047D    je          00640486
 0064047F    xor         ebx,ebx
>00640481    jmp         00640508
 00640486    mov         edx,dword ptr [eax+4B8]
 0064048C    cmp         byte ptr [edx+8],0
>00640490    je          0064049D
 00640492    mov         eax,edx
 00640494    call        TClassicObject.ZR
 00640499    mov         ebx,eax
>0064049B    jmp         00640508
 0064049D    mov         edx,dword ptr [eax+4BC]
 006404A3    cmp         byte ptr [edx+8],0
>006404A7    je          006404B4
 006404A9    mov         eax,edx
 006404AB    call        TGuitarObject.StrumUp
 006404B0    mov         ebx,eax
>006404B2    jmp         00640508
 006404B4    mov         edx,dword ptr [eax+4C0]
 006404BA    cmp         byte ptr [edx+8],0
>006404BE    je          006404CB
 006404C0    mov         eax,edx
 006404C2    call        TDrumsObject.Bass
 006404C7    mov         ebx,eax
>006404C9    jmp         00640508
 006404CB    xor         ebx,ebx
>006404CD    jmp         00640508
 006404CF    xor         ebx,ebx
>006404D1    jmp         00640508
 006404D3    xor         ebx,ebx
 006404D5    mov         eax,ebp
 006404D7    call        TWiimoteManager.AnyCount
 006404DC    mov         edi,eax
 006404DE    test        edi,edi
>006404E0    jle         00640508
 006404E2    mov         esi,1
 006404E7    test        bl,bl
>006404E9    jne         006404FC
 006404EB    mov         edx,esi
 006404ED    mov         eax,ebp
 006404EF    call        TWiimoteManager.AnySecondBestRightTrigger
 006404F4    test        al,al
>006404F6    jne         006404FC
 006404F8    xor         eax,eax
>006404FA    jmp         006404FE
 006404FC    mov         al,1
 006404FE    mov         ebx,eax
 00640500    test        bl,bl
>00640502    jne         00640508
 00640504    inc         esi
 00640505    dec         edi
>00640506    jne         006404E7
 00640508    mov         eax,ebx
 0064050A    pop         ebp
 0064050B    pop         edi
 0064050C    pop         esi
 0064050D    pop         ebx
 0064050E    ret
*}
end;

//00640510
function TWiimoteManager.AnySelect(n:Integer):Boolean;
begin
{*
 00640510    push        ebx
 00640511    push        esi
 00640512    push        edi
 00640513    push        ebp
 00640514    mov         esi,edx
 00640516    mov         ebp,eax
 00640518    test        esi,esi
>0064051A    jle         00640629
 00640520    mov         edx,esi
 00640522    mov         eax,ebp
 00640524    call        TWiimoteManager.GetAny
 00640529    mov         ebx,eax
 0064052B    test        ebx,ebx
>0064052D    jne         00640536
 0064052F    xor         ebx,ebx
>00640531    jmp         0064065E
 00640536    mov         eax,ebx
 00640538    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0064053E    call        @IsClass
 00640543    test        al,al
>00640545    je          00640555
 00640547    mov         eax,ebx
 00640549    call        TPS3ControllerObject.Select
 0064054E    mov         ebx,eax
>00640550    jmp         0064065E
 00640555    mov         eax,ebx
 00640557    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0064055D    call        @IsClass
 00640562    test        al,al
>00640564    je          00640625
 0064056A    mov         eax,dword ptr [ebx+4B4]
 00640570    cmp         byte ptr [eax+444],0
>00640577    je          00640587
 00640579    mov         eax,ebx
 0064057B    call        TWiimoteObject.Minus
 00640580    mov         ebx,eax
>00640582    jmp         0064065E
 00640587    mov         eax,dword ptr [ebx+4B8]
 0064058D    cmp         byte ptr [eax+8],0
>00640591    je          006405BA
 00640593    mov         eax,dword ptr [ebx+4B8]
 00640599    call        TClassicObject.Minus
 0064059E    test        al,al
>006405A0    jne         006405B1
 006405A2    mov         eax,ebx
 006405A4    call        TWiimoteObject.Minus
 006405A9    test        al,al
>006405AB    jne         006405B1
 006405AD    xor         eax,eax
>006405AF    jmp         006405B3
 006405B1    mov         al,1
 006405B3    mov         ebx,eax
>006405B5    jmp         0064065E
 006405BA    mov         eax,dword ptr [ebx+4BC]
 006405C0    cmp         byte ptr [eax+8],0
>006405C4    je          006405EA
 006405C6    mov         eax,dword ptr [ebx+4BC]
 006405CC    call        TGuitarObject.Minus
 006405D1    test        al,al
>006405D3    jne         006405E4
 006405D5    mov         eax,ebx
 006405D7    call        TWiimoteObject.Minus
 006405DC    test        al,al
>006405DE    jne         006405E4
 006405E0    xor         eax,eax
>006405E2    jmp         006405E6
 006405E4    mov         al,1
 006405E6    mov         ebx,eax
>006405E8    jmp         0064065E
 006405EA    mov         eax,dword ptr [ebx+4C0]
 006405F0    cmp         byte ptr [eax+8],0
>006405F4    je          0064061A
 006405F6    mov         eax,dword ptr [ebx+4C0]
 006405FC    call        TDrumsObject.Minus
 00640601    test        al,al
>00640603    jne         00640614
 00640605    mov         eax,ebx
 00640607    call        TWiimoteObject.Minus
 0064060C    test        al,al
>0064060E    jne         00640614
 00640610    xor         eax,eax
>00640612    jmp         00640616
 00640614    mov         al,1
 00640616    mov         ebx,eax
>00640618    jmp         0064065E
 0064061A    mov         eax,ebx
 0064061C    call        TWiimoteObject.Minus
 00640621    mov         ebx,eax
>00640623    jmp         0064065E
 00640625    xor         ebx,ebx
>00640627    jmp         0064065E
 00640629    xor         ebx,ebx
 0064062B    mov         eax,ebp
 0064062D    call        TWiimoteManager.AnyCount
 00640632    mov         edi,eax
 00640634    test        edi,edi
>00640636    jle         0064065E
 00640638    mov         esi,1
 0064063D    test        bl,bl
>0064063F    jne         00640652
 00640641    mov         edx,esi
 00640643    mov         eax,ebp
 00640645    call        TWiimoteManager.AnySelect
 0064064A    test        al,al
>0064064C    jne         00640652
 0064064E    xor         eax,eax
>00640650    jmp         00640654
 00640652    mov         al,1
 00640654    mov         ebx,eax
 00640656    test        bl,bl
>00640658    jne         0064065E
 0064065A    inc         esi
 0064065B    dec         edi
>0064065C    jne         0064063D
 0064065E    mov         eax,ebx
 00640660    pop         ebp
 00640661    pop         edi
 00640662    pop         esi
 00640663    pop         ebx
 00640664    ret
*}
end;

//00640668
{*procedure TWiimoteManager.AnySetRumble(n:Integer; amount:Double; ?:?);
begin
 00640668    push        ebp
 00640669    mov         ebp,esp
 0064066B    push        ecx
 0064066C    push        ebx
 0064066D    push        esi
 0064066E    push        edi
 0064066F    mov         esi,edx
 00640671    mov         dword ptr [ebp-4],eax
 00640674    test        esi,esi
>00640676    jle         006406E1
 00640678    mov         edx,esi
 0064067A    mov         eax,dword ptr [ebp-4]
 0064067D    call        TWiimoteManager.GetAny
 00640682    mov         ebx,eax
 00640684    test        ebx,ebx
>00640686    je          00640754
 0064068C    mov         eax,ebx
 0064068E    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 00640694    call        @IsClass
 00640699    test        al,al
>0064069B    je          006406BD
 0064069D    fld         qword ptr [ebp+8]
 006406A0    fabs
 006406A2    fld         tbyte ptr ds:[64075C];0.3:Extended
 006406A8    fcompp
 006406AA    wait
 006406AB    fnstsw      al
 006406AD    sahf
 006406AE    setb        dl
 006406B1    mov         eax,ebx
 006406B3    call        TWiimoteObject.SetRumble
>006406B8    jmp         00640754
 006406BD    mov         eax,ebx
 006406BF    mov         edx,dword ptr ds:[629714];TSixaxisObject
 006406C5    call        @IsClass
 006406CA    test        al,al
>006406CC    je          00640754
 006406D2    push        dword ptr [ebp+0C]
 006406D5    push        dword ptr [ebp+8]
 006406D8    mov         eax,ebx
 006406DA    mov         edx,dword ptr [eax]
 006406DC    call        dword ptr [edx+28]
>006406DF    jmp         00640754
 006406E1    mov         eax,dword ptr [ebp-4]
 006406E4    call        TWiimoteManager.AnyCount
 006406E9    mov         edi,eax
 006406EB    test        edi,edi
>006406ED    jle         00640754
 006406EF    mov         esi,1
 006406F4    mov         edx,esi
 006406F6    mov         eax,dword ptr [ebp-4]
 006406F9    call        TWiimoteManager.GetAny
 006406FE    mov         ebx,eax
 00640700    test        ebx,ebx
>00640702    je          00640750
 00640704    mov         eax,ebx
 00640706    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0064070C    call        @IsClass
 00640711    test        al,al
>00640713    je          00640732
 00640715    fld         qword ptr [ebp+8]
 00640718    fabs
 0064071A    fld         tbyte ptr ds:[64075C];0.3:Extended
 00640720    fcompp
 00640722    wait
 00640723    fnstsw      al
 00640725    sahf
 00640726    setb        dl
 00640729    mov         eax,ebx
 0064072B    call        TWiimoteObject.SetRumble
>00640730    jmp         00640750
 00640732    mov         eax,ebx
 00640734    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0064073A    call        @IsClass
 0064073F    test        al,al
>00640741    je          00640750
 00640743    push        dword ptr [ebp+0C]
 00640746    push        dword ptr [ebp+8]
 00640749    mov         eax,ebx
 0064074B    mov         edx,dword ptr [eax]
 0064074D    call        dword ptr [edx+28]
 00640750    inc         esi
 00640751    dec         edi
>00640752    jne         006406F4
 00640754    pop         edi
 00640755    pop         esi
 00640756    pop         ebx
 00640757    pop         ecx
 00640758    pop         ebp
 00640759    ret         8
end;*}

//00640768
function TWiimoteManager.AnySmoothPitch(n:Integer):Double;
begin
{*
 00640768    push        ebx
 00640769    push        esi
 0064076A    push        edi
 0064076B    add         esp,0FFFFFFE4
 0064076E    mov         ebx,edx
 00640770    mov         edi,eax
 00640772    test        ebx,ebx
>00640774    jle         006407A3
 00640776    mov         edx,ebx
 00640778    mov         eax,edi
 0064077A    call        TWiimoteManager.GetAny
 0064077F    test        eax,eax
>00640781    jne         0064078E
 00640783    xor         eax,eax
 00640785    mov         dword ptr [esp],eax
 00640788    mov         dword ptr [esp+4],eax
>0064078C    jmp         006407FB
 0064078E    mov         edx,dword ptr [eax+3D8];TAccelerometerObject.SmoothPitch:Double
 00640794    mov         dword ptr [esp],edx
 00640797    mov         edx,dword ptr [eax+3DC];TAccelerometerObject.?f3DC:dword
 0064079D    mov         dword ptr [esp+4],edx
>006407A1    jmp         006407FB
 006407A3    xor         eax,eax
 006407A5    mov         dword ptr [esp],eax
 006407A8    mov         dword ptr [esp+4],eax
 006407AC    mov         eax,edi
 006407AE    call        TWiimoteManager.AnyCount
 006407B3    mov         esi,eax
 006407B5    test        esi,esi
>006407B7    jle         006407FB
 006407B9    mov         ebx,1
 006407BE    mov         edx,ebx
 006407C0    mov         eax,edi
 006407C2    call        TWiimoteManager.AnySmoothPitch
 006407C7    fstp        qword ptr [esp+8]
 006407CB    wait
 006407CC    fld         qword ptr [esp+8]
 006407D0    fabs
 006407D2    fstp        tbyte ptr [esp+10]
 006407D6    wait
 006407D7    fld         qword ptr [esp]
 006407DA    fabs
 006407DC    fld         tbyte ptr [esp+10]
 006407E0    fcompp
 006407E2    wait
 006407E3    fnstsw      al
 006407E5    sahf
>006407E6    jbe         006407F7
 006407E8    mov         eax,dword ptr [esp+8]
 006407EC    mov         dword ptr [esp],eax
 006407EF    mov         eax,dword ptr [esp+0C]
 006407F3    mov         dword ptr [esp+4],eax
 006407F7    inc         ebx
 006407F8    dec         esi
>006407F9    jne         006407BE
 006407FB    fld         qword ptr [esp]
 006407FE    add         esp,1C
 00640801    pop         edi
 00640802    pop         esi
 00640803    pop         ebx
 00640804    ret
*}
end;

//00640808
function TWiimoteManager.AnySmoothRoll(n:Integer):Double;
begin
{*
 00640808    push        ebx
 00640809    push        esi
 0064080A    push        edi
 0064080B    add         esp,0FFFFFFE4
 0064080E    mov         ebx,edx
 00640810    mov         edi,eax
 00640812    test        ebx,ebx
>00640814    jle         00640843
 00640816    mov         edx,ebx
 00640818    mov         eax,edi
 0064081A    call        TWiimoteManager.GetAny
 0064081F    test        eax,eax
>00640821    jne         0064082E
 00640823    xor         eax,eax
 00640825    mov         dword ptr [esp],eax
 00640828    mov         dword ptr [esp+4],eax
>0064082C    jmp         0064089B
 0064082E    mov         edx,dword ptr [eax+3D0];TAccelerometerObject.SmoothRoll:Double
 00640834    mov         dword ptr [esp],edx
 00640837    mov         edx,dword ptr [eax+3D4];TAccelerometerObject.?f3D4:dword
 0064083D    mov         dword ptr [esp+4],edx
>00640841    jmp         0064089B
 00640843    xor         eax,eax
 00640845    mov         dword ptr [esp],eax
 00640848    mov         dword ptr [esp+4],eax
 0064084C    mov         eax,edi
 0064084E    call        TWiimoteManager.AnyCount
 00640853    mov         esi,eax
 00640855    test        esi,esi
>00640857    jle         0064089B
 00640859    mov         ebx,1
 0064085E    mov         edx,ebx
 00640860    mov         eax,edi
 00640862    call        TWiimoteManager.AnySmoothRoll
 00640867    fstp        qword ptr [esp+8]
 0064086B    wait
 0064086C    fld         qword ptr [esp+8]
 00640870    fabs
 00640872    fstp        tbyte ptr [esp+10]
 00640876    wait
 00640877    fld         qword ptr [esp]
 0064087A    fabs
 0064087C    fld         tbyte ptr [esp+10]
 00640880    fcompp
 00640882    wait
 00640883    fnstsw      al
 00640885    sahf
>00640886    jbe         00640897
 00640888    mov         eax,dword ptr [esp+8]
 0064088C    mov         dword ptr [esp],eax
 0064088F    mov         eax,dword ptr [esp+0C]
 00640893    mov         dword ptr [esp+4],eax
 00640897    inc         ebx
 00640898    dec         esi
>00640899    jne         0064085E
 0064089B    fld         qword ptr [esp]
 0064089E    add         esp,1C
 006408A1    pop         edi
 006408A2    pop         esi
 006408A3    pop         ebx
 006408A4    ret
*}
end;

//006408A8
function TWiimoteManager.AnySquare(n:Integer):Boolean;
begin
{*
 006408A8    push        ebx
 006408A9    push        esi
 006408AA    push        edi
 006408AB    push        ebp
 006408AC    mov         esi,edx
 006408AE    mov         ebp,eax
 006408B0    test        esi,esi
>006408B2    jle         0064096D
 006408B8    mov         edx,esi
 006408BA    mov         eax,ebp
 006408BC    call        TWiimoteManager.GetAny
 006408C1    mov         ebx,eax
 006408C3    test        ebx,ebx
>006408C5    jne         006408CE
 006408C7    xor         ebx,ebx
>006408C9    jmp         006409A2
 006408CE    mov         eax,ebx
 006408D0    mov         edx,dword ptr ds:[629714];TSixaxisObject
 006408D6    call        @IsClass
 006408DB    test        al,al
>006408DD    je          006408ED
 006408DF    mov         eax,ebx
 006408E1    call        TPS3ControllerObject.Square
 006408E6    mov         ebx,eax
>006408E8    jmp         006409A2
 006408ED    mov         eax,ebx
 006408EF    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 006408F5    call        @IsClass
 006408FA    test        al,al
>006408FC    je          00640969
 006408FE    mov         eax,ebx
 00640900    mov         edx,dword ptr [eax+4B4]
 00640906    cmp         byte ptr [edx+444],0
>0064090D    je          0064091B
 0064090F    call        TWiimoteObject.Left
 00640914    mov         ebx,eax
>00640916    jmp         006409A2
 0064091B    mov         edx,dword ptr [eax+4B8]
 00640921    cmp         byte ptr [edx+8],0
>00640925    je          00640932
 00640927    mov         eax,edx
 00640929    call        TClassicObject.Y
 0064092E    mov         ebx,eax
>00640930    jmp         006409A2
 00640932    mov         edx,dword ptr [eax+4BC]
 00640938    cmp         byte ptr [edx+8],0
>0064093C    je          00640949
 0064093E    mov         eax,edx
 00640940    call        TGuitarObject.Fret1
 00640945    mov         ebx,eax
>00640947    jmp         006409A2
 00640949    mov         edx,dword ptr [eax+4C0]
 0064094F    cmp         byte ptr [edx+8],0
>00640953    je          00640960
 00640955    mov         eax,edx
 00640957    call        TDrumsObject.Red
 0064095C    mov         ebx,eax
>0064095E    jmp         006409A2
 00640960    call        TWiimoteObject.Left
 00640965    mov         ebx,eax
>00640967    jmp         006409A2
 00640969    xor         ebx,ebx
>0064096B    jmp         006409A2
 0064096D    xor         ebx,ebx
 0064096F    mov         eax,ebp
 00640971    call        TWiimoteManager.AnyCount
 00640976    mov         edi,eax
 00640978    test        edi,edi
>0064097A    jle         006409A2
 0064097C    mov         esi,1
 00640981    test        bl,bl
>00640983    jne         00640996
 00640985    mov         edx,esi
 00640987    mov         eax,ebp
 00640989    call        TWiimoteManager.AnySquare
 0064098E    test        al,al
>00640990    jne         00640996
 00640992    xor         eax,eax
>00640994    jmp         00640998
 00640996    mov         al,1
 00640998    mov         ebx,eax
 0064099A    test        bl,bl
>0064099C    jne         006409A2
 0064099E    inc         esi
 0064099F    dec         edi
>006409A0    jne         00640981
 006409A2    mov         eax,ebx
 006409A4    pop         ebp
 006409A5    pop         edi
 006409A6    pop         esi
 006409A7    pop         ebx
 006409A8    ret
*}
end;

//006409AC
function TWiimoteManager.AnyStart(n:Integer):Boolean;
begin
{*
 006409AC    push        ebx
 006409AD    push        esi
 006409AE    push        edi
 006409AF    push        ebp
 006409B0    mov         esi,edx
 006409B2    mov         ebp,eax
 006409B4    test        esi,esi
>006409B6    jle         00640AC5
 006409BC    mov         edx,esi
 006409BE    mov         eax,ebp
 006409C0    call        TWiimoteManager.GetAny
 006409C5    mov         ebx,eax
 006409C7    test        ebx,ebx
>006409C9    jne         006409D2
 006409CB    xor         ebx,ebx
>006409CD    jmp         00640AFA
 006409D2    mov         eax,ebx
 006409D4    mov         edx,dword ptr ds:[629714];TSixaxisObject
 006409DA    call        @IsClass
 006409DF    test        al,al
>006409E1    je          006409F1
 006409E3    mov         eax,ebx
 006409E5    call        TPS3ControllerObject.Start
 006409EA    mov         ebx,eax
>006409EC    jmp         00640AFA
 006409F1    mov         eax,ebx
 006409F3    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 006409F9    call        @IsClass
 006409FE    test        al,al
>00640A00    je          00640AC1
 00640A06    mov         eax,dword ptr [ebx+4B4]
 00640A0C    cmp         byte ptr [eax+444],0
>00640A13    je          00640A23
 00640A15    mov         eax,ebx
 00640A17    call        TWiimoteObject.Plus
 00640A1C    mov         ebx,eax
>00640A1E    jmp         00640AFA
 00640A23    mov         eax,dword ptr [ebx+4B8]
 00640A29    cmp         byte ptr [eax+8],0
>00640A2D    je          00640A56
 00640A2F    mov         eax,dword ptr [ebx+4B8]
 00640A35    call        TClassicObject.Plus
 00640A3A    test        al,al
>00640A3C    jne         00640A4D
 00640A3E    mov         eax,ebx
 00640A40    call        TWiimoteObject.Plus
 00640A45    test        al,al
>00640A47    jne         00640A4D
 00640A49    xor         eax,eax
>00640A4B    jmp         00640A4F
 00640A4D    mov         al,1
 00640A4F    mov         ebx,eax
>00640A51    jmp         00640AFA
 00640A56    mov         eax,dword ptr [ebx+4BC]
 00640A5C    cmp         byte ptr [eax+8],0
>00640A60    je          00640A86
 00640A62    mov         eax,dword ptr [ebx+4BC]
 00640A68    call        TGuitarObject.Plus
 00640A6D    test        al,al
>00640A6F    jne         00640A80
 00640A71    mov         eax,ebx
 00640A73    call        TWiimoteObject.Plus
 00640A78    test        al,al
>00640A7A    jne         00640A80
 00640A7C    xor         eax,eax
>00640A7E    jmp         00640A82
 00640A80    mov         al,1
 00640A82    mov         ebx,eax
>00640A84    jmp         00640AFA
 00640A86    mov         eax,dword ptr [ebx+4C0]
 00640A8C    cmp         byte ptr [eax+8],0
>00640A90    je          00640AB6
 00640A92    mov         eax,dword ptr [ebx+4C0]
 00640A98    call        TDrumsObject.Plus
 00640A9D    test        al,al
>00640A9F    jne         00640AB0
 00640AA1    mov         eax,ebx
 00640AA3    call        TWiimoteObject.Plus
 00640AA8    test        al,al
>00640AAA    jne         00640AB0
 00640AAC    xor         eax,eax
>00640AAE    jmp         00640AB2
 00640AB0    mov         al,1
 00640AB2    mov         ebx,eax
>00640AB4    jmp         00640AFA
 00640AB6    mov         eax,ebx
 00640AB8    call        TWiimoteObject.Plus
 00640ABD    mov         ebx,eax
>00640ABF    jmp         00640AFA
 00640AC1    xor         ebx,ebx
>00640AC3    jmp         00640AFA
 00640AC5    xor         ebx,ebx
 00640AC7    mov         eax,ebp
 00640AC9    call        TWiimoteManager.AnyCount
 00640ACE    mov         edi,eax
 00640AD0    test        edi,edi
>00640AD2    jle         00640AFA
 00640AD4    mov         esi,1
 00640AD9    test        bl,bl
>00640ADB    jne         00640AEE
 00640ADD    mov         edx,esi
 00640ADF    mov         eax,ebp
 00640AE1    call        TWiimoteManager.AnyStart
 00640AE6    test        al,al
>00640AE8    jne         00640AEE
 00640AEA    xor         eax,eax
>00640AEC    jmp         00640AF0
 00640AEE    mov         al,1
 00640AF0    mov         ebx,eax
 00640AF2    test        bl,bl
>00640AF4    jne         00640AFA
 00640AF6    inc         esi
 00640AF7    dec         edi
>00640AF8    jne         00640AD9
 00640AFA    mov         eax,ebx
 00640AFC    pop         ebp
 00640AFD    pop         edi
 00640AFE    pop         esi
 00640AFF    pop         ebx
 00640B00    ret
*}
end;

//00640B04
function TWiimoteManager.AnySteeringAngle(n:Integer):Double;
begin
{*
 00640B04    push        ebx
 00640B05    push        esi
 00640B06    push        edi
 00640B07    add         esp,0FFFFFFF8
 00640B0A    mov         ebx,edx
 00640B0C    mov         edi,eax
 00640B0E    test        ebx,ebx
>00640B10    jle         00640B3F
 00640B12    mov         edx,ebx
 00640B14    mov         eax,edi
 00640B16    call        TWiimoteManager.GetAny
 00640B1B    test        eax,eax
>00640B1D    jne         00640B2A
 00640B1F    xor         eax,eax
 00640B21    mov         dword ptr [esp],eax
 00640B24    mov         dword ptr [esp+4],eax
>00640B28    jmp         00640B6E
 00640B2A    mov         edx,dword ptr [eax+3E0];TAccelerometerObject.SteeringAngle:Double
 00640B30    mov         dword ptr [esp],edx
 00640B33    mov         edx,dword ptr [eax+3E4];TAccelerometerObject.?f3E4:dword
 00640B39    mov         dword ptr [esp+4],edx
>00640B3D    jmp         00640B6E
 00640B3F    xor         eax,eax
 00640B41    mov         dword ptr [esp],eax
 00640B44    mov         dword ptr [esp+4],eax
 00640B48    mov         eax,edi
 00640B4A    call        TWiimoteManager.AnyCount
 00640B4F    mov         esi,eax
 00640B51    test        esi,esi
>00640B53    jle         00640B6E
 00640B55    mov         ebx,1
 00640B5A    mov         edx,ebx
 00640B5C    mov         eax,edi
 00640B5E    call        TWiimoteManager.AnySteeringAngle
 00640B63    fadd        qword ptr [esp]
 00640B66    fstp        qword ptr [esp]
 00640B69    wait
 00640B6A    inc         ebx
 00640B6B    dec         esi
>00640B6C    jne         00640B5A
 00640B6E    fld         qword ptr [esp]
 00640B71    pop         ecx
 00640B72    pop         edx
 00640B73    pop         edi
 00640B74    pop         esi
 00640B75    pop         ebx
 00640B76    ret
*}
end;

//00640B78
function TWiimoteManager.AnyTopLeftTrigger(n:Integer):Boolean;
begin
{*
 00640B78    push        ebx
 00640B79    push        esi
 00640B7A    push        edi
 00640B7B    push        ebp
 00640B7C    mov         esi,edx
 00640B7E    mov         ebp,eax
 00640B80    test        esi,esi
>00640B82    jle         00640C5B
 00640B88    mov         edx,esi
 00640B8A    mov         eax,ebp
 00640B8C    call        TWiimoteManager.GetAny
 00640B91    mov         ebx,eax
 00640B93    test        ebx,ebx
>00640B95    jne         00640B9E
 00640B97    xor         ebx,ebx
>00640B99    jmp         00640C90
 00640B9E    mov         eax,ebx
 00640BA0    mov         edx,dword ptr ds:[629714];TSixaxisObject
 00640BA6    call        @IsClass
 00640BAB    test        al,al
>00640BAD    je          00640BBD
 00640BAF    mov         eax,ebx
 00640BB1    call        TPS3ControllerObject.L1
 00640BB6    mov         ebx,eax
>00640BB8    jmp         00640C90
 00640BBD    mov         eax,ebx
 00640BBF    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 00640BC5    call        @IsClass
 00640BCA    test        al,al
>00640BCC    je          00640C57
 00640BD2    mov         eax,dword ptr [ebx+4B4]
 00640BD8    cmp         byte ptr [eax+444],0
>00640BDF    je          00640BED
 00640BE1    call        TNunchukObject.C
 00640BE6    mov         ebx,eax
>00640BE8    jmp         00640C90
 00640BED    mov         eax,dword ptr [ebx+4B8]
 00640BF3    cmp         byte ptr [eax+8],0
>00640BF7    je          00640C29
 00640BF9    mov         eax,dword ptr [ebx+4B8]
 00640BFF    call        TClassicObject.LFull
 00640C04    test        al,al
>00640C06    jne         00640C23
 00640C08    mov         eax,dword ptr [ebx+4B8]
 00640C0E    call        TClassicObject.L
 00640C13    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 00640C19    wait
 00640C1A    fnstsw      al
 00640C1C    sahf
>00640C1D    jae         00640C23
 00640C1F    xor         eax,eax
>00640C21    jmp         00640C25
 00640C23    mov         al,1
 00640C25    mov         ebx,eax
>00640C27    jmp         00640C90
 00640C29    mov         eax,dword ptr [ebx+4BC]
 00640C2F    cmp         byte ptr [eax+8],0
>00640C33    je          00640C3E
 00640C35    call        TGuitarObject.Fret1
 00640C3A    mov         ebx,eax
>00640C3C    jmp         00640C90
 00640C3E    mov         eax,dword ptr [ebx+4C0]
 00640C44    cmp         byte ptr [eax+8],0
>00640C48    je          00640C53
 00640C4A    call        TDrumsObject.Yellow
 00640C4F    mov         ebx,eax
>00640C51    jmp         00640C90
 00640C53    xor         ebx,ebx
>00640C55    jmp         00640C90
 00640C57    xor         ebx,ebx
>00640C59    jmp         00640C90
 00640C5B    xor         ebx,ebx
 00640C5D    mov         eax,ebp
 00640C5F    call        TWiimoteManager.AnyCount
 00640C64    mov         edi,eax
 00640C66    test        edi,edi
>00640C68    jle         00640C90
 00640C6A    mov         esi,1
 00640C6F    test        bl,bl
>00640C71    jne         00640C84
 00640C73    mov         edx,esi
 00640C75    mov         eax,ebp
 00640C77    call        TWiimoteManager.AnyTopLeftTrigger
 00640C7C    test        al,al
>00640C7E    jne         00640C84
 00640C80    xor         eax,eax
>00640C82    jmp         00640C86
 00640C84    mov         al,1
 00640C86    mov         ebx,eax
 00640C88    test        bl,bl
>00640C8A    jne         00640C90
 00640C8C    inc         esi
 00640C8D    dec         edi
>00640C8E    jne         00640C6F
 00640C90    mov         eax,ebx
 00640C92    pop         ebp
 00640C93    pop         edi
 00640C94    pop         esi
 00640C95    pop         ebx
 00640C96    ret
*}
end;

//00640C98
function TWiimoteManager.AnyTopRightTrigger(n:Integer):Boolean;
begin
{*
 00640C98    push        ebx
 00640C99    push        esi
 00640C9A    push        edi
 00640C9B    push        ebp
 00640C9C    mov         esi,edx
 00640C9E    mov         ebp,eax
 00640CA0    test        esi,esi
>00640CA2    jle         00640D84
 00640CA8    mov         edx,esi
 00640CAA    mov         eax,ebp
 00640CAC    call        TWiimoteManager.GetAny
 00640CB1    mov         ebx,eax
 00640CB3    test        ebx,ebx
>00640CB5    jne         00640CBE
 00640CB7    xor         ebx,ebx
>00640CB9    jmp         00640DB9
 00640CBE    mov         eax,ebx
 00640CC0    mov         edx,dword ptr ds:[629714];TSixaxisObject
 00640CC6    call        @IsClass
 00640CCB    test        al,al
>00640CCD    je          00640CDD
 00640CCF    mov         eax,ebx
 00640CD1    call        TPS3ControllerObject.R1
 00640CD6    mov         ebx,eax
>00640CD8    jmp         00640DB9
 00640CDD    mov         eax,ebx
 00640CDF    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 00640CE5    call        @IsClass
 00640CEA    test        al,al
>00640CEC    je          00640D80
 00640CF2    mov         eax,dword ptr [ebx+4B4]
 00640CF8    cmp         byte ptr [eax+444],0
>00640CFF    je          00640D0F
 00640D01    mov         eax,ebx
 00640D03    call        TWiimoteObject.B
 00640D08    mov         ebx,eax
>00640D0A    jmp         00640DB9
 00640D0F    mov         eax,dword ptr [ebx+4B8]
 00640D15    cmp         byte ptr [eax+8],0
>00640D19    je          00640D4B
 00640D1B    mov         eax,dword ptr [ebx+4B8]
 00640D21    call        TClassicObject.RFull
 00640D26    test        al,al
>00640D28    jne         00640D45
 00640D2A    mov         eax,dword ptr [ebx+4B8]
 00640D30    call        TClassicObject.R
 00640D35    fcomp       qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 00640D3B    wait
 00640D3C    fnstsw      al
 00640D3E    sahf
>00640D3F    jae         00640D45
 00640D41    xor         eax,eax
>00640D43    jmp         00640D47
 00640D45    mov         al,1
 00640D47    mov         ebx,eax
>00640D49    jmp         00640DB9
 00640D4B    mov         eax,dword ptr [ebx+4BC]
 00640D51    cmp         byte ptr [eax+8],0
>00640D55    je          00640D60
 00640D57    call        TGuitarObject.StrumUp
 00640D5C    mov         ebx,eax
>00640D5E    jmp         00640DB9
 00640D60    mov         eax,dword ptr [ebx+4C0]
 00640D66    cmp         byte ptr [eax+8],0
>00640D6A    je          00640D75
 00640D6C    call        TDrumsObject.Orange
 00640D71    mov         ebx,eax
>00640D73    jmp         00640DB9
 00640D75    mov         eax,ebx
 00640D77    call        TWiimoteObject.B
 00640D7C    mov         ebx,eax
>00640D7E    jmp         00640DB9
 00640D80    xor         ebx,ebx
>00640D82    jmp         00640DB9
 00640D84    xor         ebx,ebx
 00640D86    mov         eax,ebp
 00640D88    call        TWiimoteManager.AnyCount
 00640D8D    mov         edi,eax
 00640D8F    test        edi,edi
>00640D91    jle         00640DB9
 00640D93    mov         esi,1
 00640D98    test        bl,bl
>00640D9A    jne         00640DAD
 00640D9C    mov         edx,esi
 00640D9E    mov         eax,ebp
 00640DA0    call        TWiimoteManager.AnyTopRightTrigger
 00640DA5    test        al,al
>00640DA7    jne         00640DAD
 00640DA9    xor         eax,eax
>00640DAB    jmp         00640DAF
 00640DAD    mov         al,1
 00640DAF    mov         ebx,eax
 00640DB1    test        bl,bl
>00640DB3    jne         00640DB9
 00640DB5    inc         esi
 00640DB6    dec         edi
>00640DB7    jne         00640D98
 00640DB9    mov         eax,ebx
 00640DBB    pop         ebp
 00640DBC    pop         edi
 00640DBD    pop         esi
 00640DBE    pop         ebx
 00640DBF    ret
*}
end;

//00640DC0
function TWiimoteManager.AnyTriangle(n:Integer):Boolean;
begin
{*
 00640DC0    push        ebx
 00640DC1    push        esi
 00640DC2    push        edi
 00640DC3    push        ebp
 00640DC4    mov         esi,edx
 00640DC6    mov         ebp,eax
 00640DC8    test        esi,esi
>00640DCA    jle         00640E85
 00640DD0    mov         edx,esi
 00640DD2    mov         eax,ebp
 00640DD4    call        TWiimoteManager.GetAny
 00640DD9    mov         ebx,eax
 00640DDB    test        ebx,ebx
>00640DDD    jne         00640DE6
 00640DDF    xor         ebx,ebx
>00640DE1    jmp         00640EBA
 00640DE6    mov         eax,ebx
 00640DE8    mov         edx,dword ptr ds:[629714];TSixaxisObject
 00640DEE    call        @IsClass
 00640DF3    test        al,al
>00640DF5    je          00640E05
 00640DF7    mov         eax,ebx
 00640DF9    call        TPS3ControllerObject.Triangle
 00640DFE    mov         ebx,eax
>00640E00    jmp         00640EBA
 00640E05    mov         eax,ebx
 00640E07    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 00640E0D    call        @IsClass
 00640E12    test        al,al
>00640E14    je          00640E81
 00640E16    mov         eax,ebx
 00640E18    mov         edx,dword ptr [eax+4B4]
 00640E1E    cmp         byte ptr [edx+444],0
>00640E25    je          00640E33
 00640E27    call        TWiimoteObject.Up
 00640E2C    mov         ebx,eax
>00640E2E    jmp         00640EBA
 00640E33    mov         edx,dword ptr [eax+4B8]
 00640E39    cmp         byte ptr [edx+8],0
>00640E3D    je          00640E4A
 00640E3F    mov         eax,edx
 00640E41    call        TClassicObject.X
 00640E46    mov         ebx,eax
>00640E48    jmp         00640EBA
 00640E4A    mov         edx,dword ptr [eax+4BC]
 00640E50    cmp         byte ptr [edx+8],0
>00640E54    je          00640E61
 00640E56    mov         eax,edx
 00640E58    call        TGuitarObject.Fret2
 00640E5D    mov         ebx,eax
>00640E5F    jmp         00640EBA
 00640E61    mov         edx,dword ptr [eax+4C0]
 00640E67    cmp         byte ptr [edx+8],0
>00640E6B    je          00640E78
 00640E6D    mov         eax,edx
 00640E6F    call        TDrumsObject.Yellow
 00640E74    mov         ebx,eax
>00640E76    jmp         00640EBA
 00640E78    call        TWiimoteObject.Up
 00640E7D    mov         ebx,eax
>00640E7F    jmp         00640EBA
 00640E81    xor         ebx,ebx
>00640E83    jmp         00640EBA
 00640E85    xor         ebx,ebx
 00640E87    mov         eax,ebp
 00640E89    call        TWiimoteManager.AnyCount
 00640E8E    mov         edi,eax
 00640E90    test        edi,edi
>00640E92    jle         00640EBA
 00640E94    mov         esi,1
 00640E99    test        bl,bl
>00640E9B    jne         00640EAE
 00640E9D    mov         edx,esi
 00640E9F    mov         eax,ebp
 00640EA1    call        TWiimoteManager.AnyTriangle
 00640EA6    test        al,al
>00640EA8    jne         00640EAE
 00640EAA    xor         eax,eax
>00640EAC    jmp         00640EB0
 00640EAE    mov         al,1
 00640EB0    mov         ebx,eax
 00640EB2    test        bl,bl
>00640EB4    jne         00640EBA
 00640EB6    inc         esi
 00640EB7    dec         edi
>00640EB8    jne         00640E99
 00640EBA    mov         eax,ebx
 00640EBC    pop         ebp
 00640EBD    pop         edi
 00640EBE    pop         esi
 00640EBF    pop         ebx
 00640EC0    ret
*}
end;

//00640EC4
function TWiimoteManager.AnyUp(n:Integer):Boolean;
begin
{*
 00640EC4    push        ebx
 00640EC5    push        esi
 00640EC6    push        edi
 00640EC7    push        ebp
 00640EC8    mov         esi,edx
 00640ECA    mov         ebp,eax
 00640ECC    test        esi,esi
>00640ECE    jle         00641045
 00640ED4    mov         edx,esi
 00640ED6    mov         eax,ebp
 00640ED8    call        TWiimoteManager.GetAny
 00640EDD    mov         ebx,eax
 00640EDF    test        ebx,ebx
>00640EE1    jne         00640EEA
 00640EE3    xor         ebx,ebx
>00640EE5    jmp         0064107A
 00640EEA    mov         eax,ebx
 00640EEC    mov         edx,dword ptr ds:[629714];TSixaxisObject
 00640EF2    call        @IsClass
 00640EF7    test        al,al
>00640EF9    je          00640F2A
 00640EFB    mov         eax,ebx
 00640EFD    call        TPS3ControllerObject.Up
 00640F02    test        al,al
>00640F04    jne         00640F21
 00640F06    mov         eax,ebx
 00640F08    call        TPS3ControllerObject.LeftStickY
 00640F0D    fld         qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 00640F13    fchs
 00640F15    fcompp
 00640F17    wait
 00640F18    fnstsw      al
 00640F1A    sahf
>00640F1B    ja          00640F21
 00640F1D    xor         eax,eax
>00640F1F    jmp         00640F23
 00640F21    mov         al,1
 00640F23    mov         ebx,eax
>00640F25    jmp         0064107A
 00640F2A    mov         eax,ebx
 00640F2C    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 00640F32    call        @IsClass
 00640F37    test        al,al
>00640F39    je          00641041
 00640F3F    mov         eax,dword ptr [ebx+4B4]
 00640F45    cmp         byte ptr [eax+444],0
>00640F4C    je          00640F81
 00640F4E    mov         eax,ebx
 00640F50    call        TWiimoteObject.Up
 00640F55    test        al,al
>00640F57    jne         00640F78
 00640F59    mov         eax,dword ptr [ebx+4B4]
 00640F5F    call        TNunchukObject.StickY
 00640F64    fld         qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 00640F6A    fchs
 00640F6C    fcompp
 00640F6E    wait
 00640F6F    fnstsw      al
 00640F71    sahf
>00640F72    ja          00640F78
 00640F74    xor         eax,eax
>00640F76    jmp         00640F7A
 00640F78    mov         al,1
 00640F7A    mov         ebx,eax
>00640F7C    jmp         0064107A
 00640F81    mov         eax,dword ptr [ebx+4B8]
 00640F87    cmp         byte ptr [eax+8],0
>00640F8B    je          00640FCF
 00640F8D    mov         eax,dword ptr [ebx+4B8]
 00640F93    call        TClassicObject.Up
 00640F98    test        al,al
>00640F9A    jne         00640FC6
 00640F9C    mov         eax,ebx
 00640F9E    call        TWiimoteObject.Up
 00640FA3    test        al,al
>00640FA5    jne         00640FC6
 00640FA7    mov         eax,dword ptr [ebx+4B8]
 00640FAD    call        TClassicObject.LeftStickY
 00640FB2    fld         qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 00640FB8    fchs
 00640FBA    fcompp
 00640FBC    wait
 00640FBD    fnstsw      al
 00640FBF    sahf
>00640FC0    ja          00640FC6
 00640FC2    xor         eax,eax
>00640FC4    jmp         00640FC8
 00640FC6    mov         al,1
 00640FC8    mov         ebx,eax
>00640FCA    jmp         0064107A
 00640FCF    mov         esi,dword ptr [ebx+4BC]
 00640FD5    cmp         byte ptr [esi+8],0
>00640FD9    je          00640FFA
 00640FDB    mov         eax,esi
 00640FDD    call        TGuitarObject.StickY
 00640FE2    fld         qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 00640FE8    fchs
 00640FEA    fcompp
 00640FEC    wait
 00640FED    fnstsw      al
 00640FEF    sahf
 00640FF0    seta        al
 00640FF3    mov         ebx,eax
>00640FF5    jmp         0064107A
 00640FFA    mov         eax,dword ptr [ebx+4C0]
 00641000    cmp         byte ptr [eax+8],0
>00641004    je          00641036
 00641006    mov         eax,ebx
 00641008    call        TWiimoteObject.Right
 0064100D    test        al,al
>0064100F    jne         00641030
 00641011    mov         eax,dword ptr [ebx+4C0]
 00641017    call        TDrumsObject.StickY
 0064101C    fld         qword ptr [ebp+140];TWiimoteManager.AnyAxisMin:Double
 00641022    fchs
 00641024    fcompp
 00641026    wait
 00641027    fnstsw      al
 00641029    sahf
>0064102A    ja          00641030
 0064102C    xor         eax,eax
>0064102E    jmp         00641032
 00641030    mov         al,1
 00641032    mov         ebx,eax
>00641034    jmp         0064107A
 00641036    mov         eax,ebx
 00641038    call        TWiimoteObject.Up
 0064103D    mov         ebx,eax
>0064103F    jmp         0064107A
 00641041    xor         ebx,ebx
>00641043    jmp         0064107A
 00641045    xor         ebx,ebx
 00641047    mov         eax,ebp
 00641049    call        TWiimoteManager.AnyCount
 0064104E    mov         edi,eax
 00641050    test        edi,edi
>00641052    jle         0064107A
 00641054    mov         esi,1
 00641059    test        bl,bl
>0064105B    jne         0064106E
 0064105D    mov         edx,esi
 0064105F    mov         eax,ebp
 00641061    call        TWiimoteManager.AnyUp
 00641066    test        al,al
>00641068    jne         0064106E
 0064106A    xor         eax,eax
>0064106C    jmp         00641070
 0064106E    mov         al,1
 00641070    mov         ebx,eax
 00641072    test        bl,bl
>00641074    jne         0064107A
 00641076    inc         esi
 00641077    dec         edi
>00641078    jne         00641059
 0064107A    mov         eax,ebx
 0064107C    pop         ebp
 0064107D    pop         edi
 0064107E    pop         esi
 0064107F    pop         ebx
 00641080    ret
*}
end;

//00641084
function TWiimoteManager.AnyWaggleGesture(n:Integer):TWaggleGesture;
begin
{*
 00641084    push        ebx
 00641085    push        esi
 00641086    push        edi
 00641087    push        ebp
 00641088    mov         esi,edx
 0064108A    mov         ebp,eax
 0064108C    test        esi,esi
>0064108E    jle         006410AA
 00641090    mov         edx,esi
 00641092    mov         eax,ebp
 00641094    call        TWiimoteManager.GetAny
 00641099    test        eax,eax
>0064109B    jne         006410A1
 0064109D    xor         ebx,ebx
>0064109F    jmp         006410D1
 006410A1    movzx       ebx,byte ptr [eax+42D];TAccelerometerObject.WaggleGesture:TWaggleGesture
>006410A8    jmp         006410D1
 006410AA    xor         ebx,ebx
 006410AC    mov         eax,ebp
 006410AE    call        TWiimoteManager.AnyCount
 006410B3    mov         edi,eax
 006410B5    test        edi,edi
>006410B7    jle         006410D1
 006410B9    mov         esi,1
 006410BE    mov         edx,esi
 006410C0    mov         eax,ebp
 006410C2    call        TWiimoteManager.AnyWaggleGesture
 006410C7    mov         ebx,eax
 006410C9    test        bl,bl
>006410CB    jne         006410D1
 006410CD    inc         esi
 006410CE    dec         edi
>006410CF    jne         006410BE
 006410D1    mov         eax,ebx
 006410D3    pop         ebp
 006410D4    pop         edi
 006410D5    pop         esi
 006410D6    pop         ebx
 006410D7    ret
*}
end;

//006410D8
function TWiimoteManager.AnyX(n:Integer):Double;
begin
{*
 006410D8    push        ebx
 006410D9    push        esi
 006410DA    push        edi
 006410DB    add         esp,0FFFFFFE0
 006410DE    mov         ebx,edx
 006410E0    mov         edi,eax
 006410E2    test        ebx,ebx
>006410E4    jle         00641263
 006410EA    mov         edx,ebx
 006410EC    mov         eax,edi
 006410EE    call        TWiimoteManager.GetAny
 006410F3    mov         ebx,eax
 006410F5    test        ebx,ebx
>006410F7    jne         00641107
 006410F9    xor         eax,eax
 006410FB    mov         dword ptr [esp],eax
 006410FE    mov         dword ptr [esp+4],eax
>00641102    jmp         00641292
 00641107    mov         eax,ebx
 00641109    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0064110F    call        @IsClass
 00641114    test        al,al
>00641116    je          0064113B
 00641118    mov         eax,ebx
 0064111A    mov         edx,dword ptr [eax]
 0064111C    call        dword ptr [edx+88]
 00641122    fstp        qword ptr [esp+8]
 00641126    wait
 00641127    mov         eax,ebx
 00641129    call        TPS3ControllerObject.LeftStickX
 0064112E    fadd        qword ptr [esp+8]
 00641132    fstp        qword ptr [esp]
 00641135    wait
>00641136    jmp         00641292
 0064113B    mov         eax,ebx
 0064113D    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 00641143    call        @IsClass
 00641148    test        al,al
>0064114A    je          00641258
 00641150    mov         eax,dword ptr [ebx+4B4]
 00641156    cmp         byte ptr [eax+444],0
>0064115D    je          0064118D
 0064115F    mov         eax,ebx
 00641161    call        TWiimoteObject.DPadX
 00641166    mov         dword ptr [esp+10],eax
 0064116A    fild        dword ptr [esp+10]
 0064116E    fstp        tbyte ptr [esp+14]
 00641172    wait
 00641173    mov         eax,dword ptr [ebx+4B4]
 00641179    call        TNunchukObject.StickX
 0064117E    fld         tbyte ptr [esp+14]
 00641182    faddp       st(1),st
 00641184    fstp        qword ptr [esp]
 00641187    wait
>00641188    jmp         00641292
 0064118D    mov         esi,dword ptr [ebx+4B8]
 00641193    cmp         byte ptr [esi+8],0
>00641197    je          006411D2
 00641199    mov         eax,esi
 0064119B    call        TClassicObject.DPadX
 006411A0    mov         esi,eax
 006411A2    mov         eax,ebx
 006411A4    call        TWiimoteObject.DPadX
 006411A9    add         esi,eax
 006411AB    mov         dword ptr [esp+10],esi
 006411AF    fild        dword ptr [esp+10]
 006411B3    fstp        tbyte ptr [esp+14]
 006411B7    wait
 006411B8    mov         eax,dword ptr [ebx+4B8]
 006411BE    call        TClassicObject.LeftStickX
 006411C3    fld         tbyte ptr [esp+14]
 006411C7    faddp       st(1),st
 006411C9    fstp        qword ptr [esp]
 006411CC    wait
>006411CD    jmp         00641292
 006411D2    mov         eax,dword ptr [ebx+4BC]
 006411D8    cmp         byte ptr [eax+8],0
>006411DC    je          0064120C
 006411DE    mov         eax,ebx
 006411E0    call        TWiimoteObject.DPadY
 006411E5    mov         dword ptr [esp+10],eax
 006411E9    fild        dword ptr [esp+10]
 006411ED    fstp        tbyte ptr [esp+14]
 006411F1    wait
 006411F2    mov         eax,dword ptr [ebx+4BC]
 006411F8    call        TGuitarObject.StickX
 006411FD    fld         tbyte ptr [esp+14]
 00641201    faddp       st(1),st
 00641203    fstp        qword ptr [esp]
 00641206    wait
>00641207    jmp         00641292
 0064120C    mov         eax,dword ptr [ebx+4C0]
 00641212    cmp         byte ptr [eax+8],0
>00641216    je          00641243
 00641218    mov         eax,ebx
 0064121A    call        TWiimoteObject.DPadY
 0064121F    mov         dword ptr [esp+10],eax
 00641223    fild        dword ptr [esp+10]
 00641227    fstp        tbyte ptr [esp+14]
 0064122B    wait
 0064122C    mov         eax,dword ptr [ebx+4C0]
 00641232    call        TDrumsObject.StickX
 00641237    fld         tbyte ptr [esp+14]
 0064123B    faddp       st(1),st
 0064123D    fstp        qword ptr [esp]
 00641240    wait
>00641241    jmp         00641292
 00641243    mov         eax,ebx
 00641245    call        TWiimoteObject.DPadX
 0064124A    mov         dword ptr [esp+10],eax
 0064124E    fild        dword ptr [esp+10]
 00641252    fstp        qword ptr [esp]
 00641255    wait
>00641256    jmp         00641292
 00641258    xor         eax,eax
 0064125A    mov         dword ptr [esp],eax
 0064125D    mov         dword ptr [esp+4],eax
>00641261    jmp         00641292
 00641263    xor         eax,eax
 00641265    mov         dword ptr [esp],eax
 00641268    mov         dword ptr [esp+4],eax
 0064126C    mov         eax,edi
 0064126E    call        TWiimoteManager.AnyCount
 00641273    mov         esi,eax
 00641275    test        esi,esi
>00641277    jle         00641292
 00641279    mov         ebx,1
 0064127E    mov         edx,ebx
 00641280    mov         eax,edi
 00641282    call        TWiimoteManager.AnyX
 00641287    fadd        qword ptr [esp]
 0064128A    fstp        qword ptr [esp]
 0064128D    wait
 0064128E    inc         ebx
 0064128F    dec         esi
>00641290    jne         0064127E
 00641292    fld         qword ptr [esp]
 00641295    fcomp       dword ptr ds:[6412D8];1:Single
 0064129B    wait
 0064129C    fnstsw      al
 0064129E    sahf
>0064129F    jbe         006412B0
 006412A1    xor         eax,eax
 006412A3    mov         dword ptr [esp],eax
 006412A6    mov         dword ptr [esp+4],3FF00000
>006412AE    jmp         006412CC
 006412B0    fld         qword ptr [esp]
 006412B3    fcomp       dword ptr ds:[6412DC];-1:Single
 006412B9    wait
 006412BA    fnstsw      al
 006412BC    sahf
>006412BD    jae         006412CC
 006412BF    xor         eax,eax
 006412C1    mov         dword ptr [esp],eax
 006412C4    mov         dword ptr [esp+4],0BFF00000
 006412CC    fld         qword ptr [esp]
 006412CF    add         esp,20
 006412D2    pop         edi
 006412D3    pop         esi
 006412D4    pop         ebx
 006412D5    ret
*}
end;

//006412E0
function TWiimoteManager.AnyY(n:Integer):Double;
begin
{*
 006412E0    push        ebx
 006412E1    push        esi
 006412E2    push        edi
 006412E3    add         esp,0FFFFFFE0
 006412E6    mov         ebx,edx
 006412E8    mov         edi,eax
 006412EA    test        ebx,ebx
>006412EC    jle         0064146F
 006412F2    mov         edx,ebx
 006412F4    mov         eax,edi
 006412F6    call        TWiimoteManager.GetAny
 006412FB    mov         ebx,eax
 006412FD    test        ebx,ebx
>006412FF    jne         0064130F
 00641301    xor         eax,eax
 00641303    mov         dword ptr [esp],eax
 00641306    mov         dword ptr [esp+4],eax
>0064130A    jmp         0064149E
 0064130F    mov         eax,ebx
 00641311    mov         edx,dword ptr ds:[629714];TSixaxisObject
 00641317    call        @IsClass
 0064131C    test        al,al
>0064131E    je          00641343
 00641320    mov         eax,ebx
 00641322    mov         edx,dword ptr [eax]
 00641324    call        dword ptr [edx+8C]
 0064132A    fstp        qword ptr [esp+8]
 0064132E    wait
 0064132F    mov         eax,ebx
 00641331    call        TPS3ControllerObject.LeftStickY
 00641336    fadd        qword ptr [esp+8]
 0064133A    fstp        qword ptr [esp]
 0064133D    wait
>0064133E    jmp         0064149E
 00641343    mov         eax,ebx
 00641345    mov         edx,dword ptr ds:[61CEE4];TWiimoteObject
 0064134B    call        @IsClass
 00641350    test        al,al
>00641352    je          00641464
 00641358    mov         eax,dword ptr [ebx+4B4]
 0064135E    cmp         byte ptr [eax+444],0
>00641365    je          00641395
 00641367    mov         eax,ebx
 00641369    call        TWiimoteObject.DPadY
 0064136E    mov         dword ptr [esp+10],eax
 00641372    fild        dword ptr [esp+10]
 00641376    fstp        tbyte ptr [esp+14]
 0064137A    wait
 0064137B    mov         eax,dword ptr [ebx+4B4]
 00641381    call        TNunchukObject.StickY
 00641386    fld         tbyte ptr [esp+14]
 0064138A    faddp       st(1),st
 0064138C    fstp        qword ptr [esp]
 0064138F    wait
>00641390    jmp         0064149E
 00641395    mov         esi,dword ptr [ebx+4B8]
 0064139B    cmp         byte ptr [esi+8],0
>0064139F    je          006413DA
 006413A1    mov         eax,esi
 006413A3    call        TClassicObject.DPadY
 006413A8    mov         esi,eax
 006413AA    mov         eax,ebx
 006413AC    call        TWiimoteObject.DPadY
 006413B1    add         esi,eax
 006413B3    mov         dword ptr [esp+10],esi
 006413B7    fild        dword ptr [esp+10]
 006413BB    fstp        tbyte ptr [esp+14]
 006413BF    wait
 006413C0    mov         eax,dword ptr [ebx+4B8]
 006413C6    call        TClassicObject.LeftStickY
 006413CB    fld         tbyte ptr [esp+14]
 006413CF    faddp       st(1),st
 006413D1    fstp        qword ptr [esp]
 006413D4    wait
>006413D5    jmp         0064149E
 006413DA    mov         eax,dword ptr [ebx+4BC]
 006413E0    cmp         byte ptr [eax+8],0
>006413E4    je          00641416
 006413E6    mov         eax,ebx
 006413E8    call        TWiimoteObject.DPadX
 006413ED    neg         eax
 006413EF    mov         dword ptr [esp+10],eax
 006413F3    fild        dword ptr [esp+10]
 006413F7    fstp        tbyte ptr [esp+14]
 006413FB    wait
 006413FC    mov         eax,dword ptr [ebx+4BC]
 00641402    call        TGuitarObject.StickY
 00641407    fld         tbyte ptr [esp+14]
 0064140B    faddp       st(1),st
 0064140D    fstp        qword ptr [esp]
 00641410    wait
>00641411    jmp         0064149E
 00641416    mov         eax,dword ptr [ebx+4C0]
 0064141C    cmp         byte ptr [eax+8],0
>00641420    je          0064144F
 00641422    mov         eax,ebx
 00641424    call        TWiimoteObject.DPadX
 00641429    neg         eax
 0064142B    mov         dword ptr [esp+10],eax
 0064142F    fild        dword ptr [esp+10]
 00641433    fstp        tbyte ptr [esp+14]
 00641437    wait
 00641438    mov         eax,dword ptr [ebx+4C0]
 0064143E    call        TDrumsObject.StickY
 00641443    fld         tbyte ptr [esp+14]
 00641447    faddp       st(1),st
 00641449    fstp        qword ptr [esp]
 0064144C    wait
>0064144D    jmp         0064149E
 0064144F    mov         eax,ebx
 00641451    call        TWiimoteObject.DPadY
 00641456    mov         dword ptr [esp+10],eax
 0064145A    fild        dword ptr [esp+10]
 0064145E    fstp        qword ptr [esp]
 00641461    wait
>00641462    jmp         0064149E
 00641464    xor         eax,eax
 00641466    mov         dword ptr [esp],eax
 00641469    mov         dword ptr [esp+4],eax
>0064146D    jmp         0064149E
 0064146F    xor         eax,eax
 00641471    mov         dword ptr [esp],eax
 00641474    mov         dword ptr [esp+4],eax
 00641478    mov         eax,edi
 0064147A    call        TWiimoteManager.AnyCount
 0064147F    mov         esi,eax
 00641481    test        esi,esi
>00641483    jle         0064149E
 00641485    mov         ebx,1
 0064148A    mov         edx,ebx
 0064148C    mov         eax,edi
 0064148E    call        TWiimoteManager.AnyY
 00641493    fadd        qword ptr [esp]
 00641496    fstp        qword ptr [esp]
 00641499    wait
 0064149A    inc         ebx
 0064149B    dec         esi
>0064149C    jne         0064148A
 0064149E    fld         qword ptr [esp]
 006414A1    fcomp       dword ptr ds:[6414E4];1:Single
 006414A7    wait
 006414A8    fnstsw      al
 006414AA    sahf
>006414AB    jbe         006414BC
 006414AD    xor         eax,eax
 006414AF    mov         dword ptr [esp],eax
 006414B2    mov         dword ptr [esp+4],3FF00000
>006414BA    jmp         006414D8
 006414BC    fld         qword ptr [esp]
 006414BF    fcomp       dword ptr ds:[6414E8];-1:Single
 006414C5    wait
 006414C6    fnstsw      al
 006414C8    sahf
>006414C9    jae         006414D8
 006414CB    xor         eax,eax
 006414CD    mov         dword ptr [esp],eax
 006414D0    mov         dword ptr [esp+4],0BFF00000
 006414D8    fld         qword ptr [esp]
 006414DB    add         esp,20
 006414DE    pop         edi
 006414DF    pop         esi
 006414E0    pop         ebx
 006414E1    ret
*}
end;

//006414EC
function TWiimoteManager.AnyYaw(n:Integer):Double;
begin
{*
 006414EC    push        ebx
 006414ED    push        esi
 006414EE    push        edi
 006414EF    add         esp,0FFFFFFE4
 006414F2    mov         ebx,edx
 006414F4    mov         edi,eax
 006414F6    test        ebx,ebx
>006414F8    jle         00641527
 006414FA    mov         edx,ebx
 006414FC    mov         eax,edi
 006414FE    call        TWiimoteManager.GetAny
 00641503    test        eax,eax
>00641505    jne         00641512
 00641507    xor         eax,eax
 00641509    mov         dword ptr [esp],eax
 0064150C    mov         dword ptr [esp+4],eax
>00641510    jmp         0064157F
 00641512    mov         edx,dword ptr [eax+3C8];TAccelerometerObject.Yaw:Double
 00641518    mov         dword ptr [esp],edx
 0064151B    mov         edx,dword ptr [eax+3CC];TAccelerometerObject.?f3CC:dword
 00641521    mov         dword ptr [esp+4],edx
>00641525    jmp         0064157F
 00641527    xor         eax,eax
 00641529    mov         dword ptr [esp],eax
 0064152C    mov         dword ptr [esp+4],eax
 00641530    mov         eax,edi
 00641532    call        TWiimoteManager.AnyCount
 00641537    mov         esi,eax
 00641539    test        esi,esi
>0064153B    jle         0064157F
 0064153D    mov         ebx,1
 00641542    mov         edx,ebx
 00641544    mov         eax,edi
 00641546    call        TWiimoteManager.AnyYaw
 0064154B    fstp        qword ptr [esp+8]
 0064154F    wait
 00641550    fld         qword ptr [esp+8]
 00641554    fabs
 00641556    fstp        tbyte ptr [esp+10]
 0064155A    wait
 0064155B    fld         qword ptr [esp]
 0064155E    fabs
 00641560    fld         tbyte ptr [esp+10]
 00641564    fcompp
 00641566    wait
 00641567    fnstsw      al
 00641569    sahf
>0064156A    jbe         0064157B
 0064156C    mov         eax,dword ptr [esp+8]
 00641570    mov         dword ptr [esp],eax
 00641573    mov         eax,dword ptr [esp+0C]
 00641577    mov         dword ptr [esp+4],eax
 0064157B    inc         ebx
 0064157C    dec         esi
>0064157D    jne         00641542
 0064157F    fld         qword ptr [esp]
 00641582    add         esp,1C
 00641585    pop         edi
 00641586    pop         esi
 00641587    pop         ebx
 00641588    ret
*}
end;

//0064158C
procedure TWiimoteManager.ConnectBluetoothWiimotes;
begin
{*
 0064158C    ret
*}
end;

//00641590
procedure TWiimoteManager.ConnectExtraLightstones;
begin
{*
 00641590    push        ebx
 00641591    mov         ebx,eax
 00641593    push        ebx
 00641594    push        642310;TWiimoteManager.HidControllerEnumerate:Boolean
 00641599    mov         eax,dword ptr [ebx+34];TWiimoteManager.HidController:TJvHidDeviceController
 0064159C    call        TJvHidDeviceController.SetOnEnumerate
 006415A1    mov         eax,dword ptr [ebx+34];TWiimoteManager.HidController:TJvHidDeviceController
 006415A4    call        TJvHidDeviceController.Enumerate
 006415A9    mov         eax,ebx
 006415AB    call        TWiimoteManager.StartLightstones
 006415B0    pop         ebx
 006415B1    ret
*}
end;

//006415B4
procedure TWiimoteManager.ConnectExtraSpacePoints;
begin
{*
 006415B4    push        ebx
 006415B5    mov         ebx,eax
 006415B7    push        ebx
 006415B8    push        642310;TWiimoteManager.HidControllerEnumerate:Boolean
 006415BD    mov         eax,dword ptr [ebx+34];TWiimoteManager.HidController:TJvHidDeviceController
 006415C0    call        TJvHidDeviceController.SetOnEnumerate
 006415C5    mov         eax,dword ptr [ebx+34];TWiimoteManager.HidController:TJvHidDeviceController
 006415C8    call        TJvHidDeviceController.Enumerate
 006415CD    mov         eax,ebx
 006415CF    call        TWiimoteManager.StartSpacePoints
 006415D4    pop         ebx
 006415D5    ret
*}
end;

//006415D8
procedure TWiimoteManager.ConnectExtraWiimotes;
begin
{*
 006415D8    push        ebx
 006415D9    push        esi
 006415DA    push        edi
 006415DB    mov         ebx,eax
 006415DD    push        ebx
 006415DE    push        642310;TWiimoteManager.HidControllerEnumerate:Boolean
 006415E3    mov         eax,dword ptr [ebx+34];TWiimoteManager.HidController:TJvHidDeviceController
 006415E6    call        TJvHidDeviceController.SetOnEnumerate
 006415EB    mov         eax,dword ptr [ebx+34];TWiimoteManager.HidController:TJvHidDeviceController
 006415EE    call        TJvHidDeviceController.Enumerate
 006415F3    mov         byte ptr [ebx+133],1;TWiimoteManager.CanAddNewWiimotes:Boolean
 006415FA    mov         eax,ebx
 006415FC    call        TWiimoteManager.TestAllConnections
 00641601    mov         eax,dword ptr [ebx+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 00641604    call        TNumberedObjectList.ValidCount
 00641609    cmp         eax,dword ptr [ebx+6C];TWiimoteManager.FMaxWiimoteUsed:Integer
>0064160C    jl          00641678
 0064160E    mov         eax,dword ptr [ebx+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 00641611    call        TNumberedObjectList.ValidCount
 00641616    cmp         eax,dword ptr [ebx+7C];TWiimoteManager.FMaxBalanceBoardUsed:Integer
>00641619    jl          00641678
 0064161B    mov         eax,dword ptr [ebx+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 0064161E    call        TNumberedObjectList.ValidCount
 00641623    cmp         eax,dword ptr [ebx+70];TWiimoteManager.FMaxGuitarUsed:Integer
>00641626    jl          00641678
 00641628    mov         eax,dword ptr [ebx+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 0064162B    call        TNumberedObjectList.ValidCount
 00641630    cmp         eax,dword ptr [ebx+74];TWiimoteManager.FMaxDrumsUsed:Integer
>00641633    jl          00641678
 00641635    mov         eax,dword ptr [ebx+5C];TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 00641638    call        TNumberedObjectList.ValidCount
 0064163D    cmp         eax,dword ptr [ebx+74];TWiimoteManager.FMaxDrumsUsed:Integer
>00641640    jl          00641678
 00641642    cmp         byte ptr [ebx+100],0;TWiimoteManager.FGUIMode:Boolean
>00641649    jne         00641678
 0064164B    cmp         byte ptr [ebx+102],0;TWiimoteManager.FUseAllWiimotes:Boolean
>00641652    jne         00641678
 00641654    cmp         byte ptr [ebx+103],0;TWiimoteManager.FUseAllGuitars:Boolean
>0064165B    jne         00641678
 0064165D    cmp         byte ptr [ebx+104],0;TWiimoteManager.FUseAllDrums:Boolean
>00641664    jne         00641678
 00641666    cmp         byte ptr [ebx+105],0;TWiimoteManager.FUseAllTurntables:Boolean
>0064166D    jne         00641678
 0064166F    cmp         byte ptr [ebx+106],0;TWiimoteManager.FUseAllBalanceBoards:Boolean
>00641676    je          0064167F
 00641678    call        00600DEC
>0064167D    jmp         00641684
 0064167F    call        00600DF4
 00641684    mov         eax,dword ptr [ebx+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 00641687    call        TNumberedObjectList.ValidCount
 0064168C    mov         esi,eax
 0064168E    mov         eax,dword ptr [ebx+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 00641691    call        TNumberedObjectList.ValidCount
 00641696    add         esi,eax
 00641698    mov         eax,dword ptr [ebx+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 0064169B    call        TNumberedObjectList.ValidCount
 006416A0    add         esi,eax
 006416A2    mov         eax,dword ptr [ebx+5C];TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 006416A5    call        TNumberedObjectList.ValidCount
 006416AA    add         esi,eax
 006416AC    test        esi,esi
>006416AE    jne         006416B5
 006416B0    call        00600DFC
 006416B5    mov         eax,dword ptr [ebx+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 006416B8    mov         esi,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 006416BB    dec         esi
 006416BC    test        esi,esi
>006416BE    jl          006416DA
 006416C0    inc         esi
 006416C1    xor         edi,edi
 006416C3    mov         eax,dword ptr [ebx+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 006416C6    mov         edx,edi
 006416C8    call        TList.Get
 006416CD    test        eax,eax
>006416CF    je          006416D6
 006416D1    call        TWiimoteObject.SetMode
 006416D6    inc         edi
 006416D7    dec         esi
>006416D8    jne         006416C3
 006416DA    mov         eax,dword ptr [ebx+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 006416DD    mov         esi,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 006416E0    dec         esi
 006416E1    test        esi,esi
>006416E3    jl          006416FF
 006416E5    inc         esi
 006416E6    xor         edi,edi
 006416E8    mov         eax,dword ptr [ebx+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 006416EB    mov         edx,edi
 006416ED    call        TList.Get
 006416F2    test        eax,eax
>006416F4    je          006416FB
 006416F6    call        TWiimoteObject.SetMode
 006416FB    inc         edi
 006416FC    dec         esi
>006416FD    jne         006416E8
 006416FF    mov         eax,dword ptr [ebx+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 00641702    mov         esi,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 00641705    dec         esi
 00641706    test        esi,esi
>00641708    jl          00641724
 0064170A    inc         esi
 0064170B    xor         edi,edi
 0064170D    mov         eax,dword ptr [ebx+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 00641710    mov         edx,edi
 00641712    call        TList.Get
 00641717    test        eax,eax
>00641719    je          00641720
 0064171B    call        TWiimoteObject.SetMode
 00641720    inc         edi
 00641721    dec         esi
>00641722    jne         0064170D
 00641724    mov         eax,dword ptr [ebx+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 00641727    mov         esi,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 0064172A    dec         esi
 0064172B    test        esi,esi
>0064172D    jl          00641749
 0064172F    inc         esi
 00641730    xor         edi,edi
 00641732    mov         eax,dword ptr [ebx+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 00641735    mov         edx,edi
 00641737    call        TList.Get
 0064173C    test        eax,eax
>0064173E    je          00641745
 00641740    call        TWiimoteObject.SetMode
 00641745    inc         edi
 00641746    dec         esi
>00641747    jne         00641732
 00641749    mov         eax,dword ptr [ebx+5C];TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 0064174C    mov         esi,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 0064174F    dec         esi
 00641750    test        esi,esi
>00641752    jl          0064176E
 00641754    inc         esi
 00641755    xor         edi,edi
 00641757    mov         eax,dword ptr [ebx+5C];TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 0064175A    mov         edx,edi
 0064175C    call        TList.Get
 00641761    test        eax,eax
>00641763    je          0064176A
 00641765    call        TWiimoteObject.SetMode
 0064176A    inc         edi
 0064176B    dec         esi
>0064176C    jne         00641757
 0064176E    pop         edi
 0064176F    pop         esi
 00641770    pop         ebx
 00641771    ret
*}
end;

//00641774
constructor TWiimoteManager.Create(AOwner:TComponent);
begin
{*
 00641774    push        ebp
 00641775    mov         ebp,esp
 00641777    push        ecx
 00641778    push        ebx
 00641779    push        esi
 0064177A    test        dl,dl
>0064177C    je          00641786
 0064177E    add         esp,0FFFFFFF0
 00641781    call        @ClassCreate
 00641786    mov         byte ptr [ebp-1],dl
 00641789    mov         ebx,eax
 0064178B    xor         edx,edx
 0064178D    mov         eax,ebx
 0064178F    call        TComponent.Create
 00641794    mov         dword ptr [ebx+140],33333333;TWiimoteManager.AnyAxisMin:Double
 0064179E    mov         dword ptr [ebx+144],3FD33333;TWiimoteManager.?f144:dword
 006417A8    mov         byte ptr [ebx+134],1;TWiimoteManager.AutoNumberWiimotes:Boolean
 006417AF    call        00600F68
 006417B4    mov         eax,ebx
 006417B6    call        TWiimoteManager.ConnectBluetoothWiimotes
 006417BB    mov         ecx,ebx
 006417BD    mov         dl,1
 006417BF    mov         eax,[004C4800];TTimer
 006417C4    call        TTimer.Create;TTimer.Create
 006417C9    mov         esi,eax
 006417CB    mov         dword ptr [ebx+138],esi;TWiimoteManager.Timer1:TTimer
 006417D1    mov         eax,esi
 006417D3    xor         edx,edx
 006417D5    call        TTimer.SetEnabled
 006417DA    push        ebx
 006417DB    push        6440E4;TWiimoteManager.Timer1Timer
 006417E0    mov         eax,dword ptr [ebx+138];TWiimoteManager.Timer1:TTimer
 006417E6    call        TTimer.SetOnTimer
 006417EB    mov         dl,1
 006417ED    mov         eax,[0043C7BC];TStringList
 006417F2    call        TStringList.Create;TStringList.Create
 006417F7    mov         esi,eax
 006417F9    mov         dword ptr [ebx+38],esi;TWiimoteManager.FakeArrivals:TStringList
 006417FC    mov         eax,esi
 006417FE    mov         dl,1
 00641800    call        TStringList.SetSorted
 00641805    mov         eax,dword ptr [ebx+38];TWiimoteManager.FakeArrivals:TStringList
 00641808    mov         byte ptr [eax+39],0;TStringList.FDuplicates:TDuplicates
 0064180C    mov         ecx,ebx
 0064180E    mov         dl,1
 00641810    mov         eax,[005DD5C8];TJvHidDeviceController
 00641815    call        TJvHidDeviceController.Create;TJvHidDeviceController.Create
 0064181A    mov         dword ptr [ebx+34],eax;TWiimoteManager.HidController:TJvHidDeviceController
 0064181D    mov         cl,1
 0064181F    mov         dl,1
 00641821    mov         eax,[00471630];TObjectList
 00641826    call        TObjectList.Create;TObjectList.Create
 0064182B    mov         dword ptr [ebx+3C],eax;TWiimoteManager.FDiscoveredWiimotes:TObjectList
 0064182E    mov         cl,1
 00641830    mov         dl,1
 00641832    mov         eax,[00471630];TObjectList
 00641837    call        TObjectList.Create;TObjectList.Create
 0064183C    mov         dword ptr [ebx+40],eax;TWiimoteManager.FDiscoveredSixaxes:TObjectList
 0064183F    mov         cl,1
 00641841    mov         dl,1
 00641843    mov         eax,[00471630];TObjectList
 00641848    call        TObjectList.Create;TObjectList.Create
 0064184D    mov         dword ptr [ebx+48],eax;TWiimoteManager.FDiscoveredLightstones:TObjectList
 00641850    mov         cl,1
 00641852    mov         dl,1
 00641854    mov         eax,[00471630];TObjectList
 00641859    call        TObjectList.Create;TObjectList.Create
 0064185E    mov         dword ptr [ebx+44],eax;TWiimoteManager.FDiscoveredSpacePoints:TObjectList
 00641861    mov         dl,1
 00641863    mov         eax,[00637F78];TNumberedObjectList
 00641868    call        TNumberedObjectList.Create;TNumberedObjectList.Create
 0064186D    mov         dword ptr [ebx+4C],eax;TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 00641870    mov         dl,1
 00641872    mov         eax,[00637F78];TNumberedObjectList
 00641877    call        TNumberedObjectList.Create;TNumberedObjectList.Create
 0064187C    mov         dword ptr [ebx+50],eax;TWiimoteManager.FConnectedBoards:TNumberedObjectList
 0064187F    mov         dl,1
 00641881    mov         eax,[00637F78];TNumberedObjectList
 00641886    call        TNumberedObjectList.Create;TNumberedObjectList.Create
 0064188B    mov         dword ptr [ebx+54],eax;TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 0064188E    mov         dl,1
 00641890    mov         eax,[00637F78];TNumberedObjectList
 00641895    call        TNumberedObjectList.Create;TNumberedObjectList.Create
 0064189A    mov         dword ptr [ebx+58],eax;TWiimoteManager.FConnectedDrums:TNumberedObjectList
 0064189D    mov         dl,1
 0064189F    mov         eax,[00637F78];TNumberedObjectList
 006418A4    call        TNumberedObjectList.Create;TNumberedObjectList.Create
 006418A9    mov         dword ptr [ebx+5C],eax;TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 006418AC    mov         dl,1
 006418AE    mov         eax,[00637F78];TNumberedObjectList
 006418B3    call        TNumberedObjectList.Create;TNumberedObjectList.Create
 006418B8    mov         dword ptr [ebx+60],eax;TWiimoteManager.FConnectedSixaxes:TNumberedObjectList
 006418BB    mov         dl,1
 006418BD    mov         eax,[00637F78];TNumberedObjectList
 006418C2    call        TNumberedObjectList.Create;TNumberedObjectList.Create
 006418C7    mov         dword ptr [ebx+68],eax;TWiimoteManager.FConnectedLightstones:TNumberedObjectList
 006418CA    mov         dl,1
 006418CC    mov         eax,[00637F78];TNumberedObjectList
 006418D1    call        TNumberedObjectList.Create;TNumberedObjectList.Create
 006418D6    mov         dword ptr [ebx+64],eax;TWiimoteManager.FConnectedSpacePoints:TNumberedObjectList
 006418D9    mov         byte ptr [ebx+118],1;TWiimoteManager.FUseWiimote:Boolean
 006418E0    mov         byte ptr [ebx+129],1;TWiimoteManager.FUseSixaxis:Boolean
 006418E7    mov         byte ptr [ebx+12F],1;TWiimoteManager.FUseLightstone:Boolean
 006418EE    mov         byte ptr [ebx+131],1;TWiimoteManager.FUseSpacePoint:Boolean
 006418F5    mov         eax,ebx
 006418F7    call        TWiimoteManager.StartCompileTime
 006418FC    mov         eax,dword ptr [ebx+34];TWiimoteManager.HidController:TJvHidDeviceController
 006418FF    mov         dword ptr [eax+4C],ebx;TJvHidDeviceController.?f4C:TWiimoteManager
 00641902    mov         dword ptr [eax+48],641E44;TJvHidDeviceController.FArrivalEvent:TJvHidPlugEvent TWiimoteM...
 00641909    mov         dword ptr [eax+7C],ebx;TJvHidDeviceController.?f7C:TWiimoteManager
 0064190C    mov         dword ptr [eax+78],64254C;TJvHidDeviceController.FRemovalEvent:TJvHidPlugEvent TWiimoteM...
 00641913    push        ebx
 00641914    push        642308;TWiimoteManager.HidControllerDeviceChange
 00641919    call        TJvHidDeviceController.SetOnDeviceChange
 0064191E    push        ebx
 0064191F    push        64230C;TWiimoteManager.HidControllerDeviceUnplug
 00641924    mov         eax,dword ptr [ebx+34];TWiimoteManager.HidController:TJvHidDeviceController
 00641927    call        TJvHidDeviceController.SetOnDeviceUnplug
 0064192C    mov         eax,ebx
 0064192E    cmp         byte ptr [ebp-1],0
>00641932    je          00641943
 00641934    call        @AfterConstruction
 00641939    pop         dword ptr fs:[0]
 00641940    add         esp,0C
 00641943    mov         eax,ebx
 00641945    pop         esi
 00641946    pop         ebx
 00641947    pop         ecx
 00641948    pop         ebp
 00641949    ret
*}
end;

//0064194C
destructor TWiimoteManager.Destroy();
begin
{*
 0064194C    push        ebx
 0064194D    push        esi
 0064194E    call        @BeforeDestruction
 00641953    mov         ebx,edx
 00641955    mov         esi,eax
 00641957    mov         eax,dword ptr [esi+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 0064195A    call        TObject.Free
 0064195F    mov         eax,dword ptr [esi+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 00641962    call        TObject.Free
 00641967    mov         eax,dword ptr [esi+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 0064196A    call        TObject.Free
 0064196F    mov         eax,dword ptr [esi+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 00641972    call        TObject.Free
 00641977    mov         eax,dword ptr [esi+5C];TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 0064197A    call        TObject.Free
 0064197F    mov         eax,dword ptr [esi+60];TWiimoteManager.FConnectedSixaxes:TNumberedObjectList
 00641982    call        TObject.Free
 00641987    mov         eax,dword ptr [esi+68];TWiimoteManager.FConnectedLightstones:TNumberedObjectList
 0064198A    call        TObject.Free
 0064198F    mov         eax,dword ptr [esi+64];TWiimoteManager.FConnectedSpacePoints:TNumberedObjectList
 00641992    call        TObject.Free
 00641997    mov         eax,dword ptr [esi+3C];TWiimoteManager.FDiscoveredWiimotes:TObjectList
 0064199A    call        TObject.Free
 0064199F    mov         eax,dword ptr [esi+40];TWiimoteManager.FDiscoveredSixaxes:TObjectList
 006419A2    call        TObject.Free
 006419A7    mov         eax,dword ptr [esi+48];TWiimoteManager.FDiscoveredLightstones:TObjectList
 006419AA    call        TObject.Free
 006419AF    mov         eax,dword ptr [esi+44];TWiimoteManager.FDiscoveredSpacePoints:TObjectList
 006419B2    call        TObject.Free
 006419B7    mov         edx,ebx
 006419B9    and         dl,0FC
 006419BC    mov         eax,esi
 006419BE    call        TComponent.Destroy
 006419C3    test        bl,bl
>006419C5    jle         006419CE
 006419C7    mov         eax,esi
 006419C9    call        @ClassDestroy
 006419CE    pop         esi
 006419CF    pop         ebx
 006419D0    ret
*}
end;

//006419D4
function TWiimoteManager.GetAny(n:Integer):TAccelerometerObject;
begin
{*
 006419D4    test        edx,edx
>006419D6    jg          006419DD
 006419D8    mov         edx,1
 006419DD    mov         ecx,dword ptr [eax+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 006419E0    cmp         edx,dword ptr [ecx+8];TNumberedObjectList.FCount:Integer
>006419E3    jg          006419EB
 006419E5    call        TWiimoteManager.GetWiimote
 006419EA    ret
 006419EB    mov         ecx,dword ptr [eax+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 006419EE    sub         edx,dword ptr [ecx+8]
 006419F1    mov         ecx,dword ptr [eax+60];TWiimoteManager.FConnectedSixaxes:TNumberedObjectList
 006419F4    cmp         edx,dword ptr [ecx+8];TNumberedObjectList.FCount:Integer
>006419F7    jg          006419FF
 006419F9    call        TWiimoteManager.GetSixaxis
 006419FE    ret
 006419FF    mov         ecx,dword ptr [eax+60];TWiimoteManager.FConnectedSixaxes:TNumberedObjectList
 00641A02    sub         edx,dword ptr [ecx+8]
 00641A05    mov         ecx,dword ptr [eax+64];TWiimoteManager.FConnectedSpacePoints:TNumberedObjectList
 00641A08    cmp         edx,dword ptr [ecx+8];TNumberedObjectList.FCount:Integer
>00641A0B    jg          00641A13
 00641A0D    call        TWiimoteManager.GetSpacePoint
 00641A12    ret
 00641A13    mov         ecx,dword ptr [eax+64];TWiimoteManager.FConnectedSpacePoints:TNumberedObjectList
 00641A16    sub         edx,dword ptr [ecx+8]
 00641A19    mov         ecx,dword ptr [eax+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 00641A1C    cmp         edx,dword ptr [ecx+8];TNumberedObjectList.FCount:Integer
>00641A1F    jg          00641A27
 00641A21    call        TWiimoteManager.GetGuitar
 00641A26    ret
 00641A27    mov         ecx,dword ptr [eax+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 00641A2A    sub         edx,dword ptr [ecx+8]
 00641A2D    mov         ecx,dword ptr [eax+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 00641A30    cmp         edx,dword ptr [ecx+8];TNumberedObjectList.FCount:Integer
>00641A33    jg          00641A3B
 00641A35    call        TWiimoteManager.GetDrums
 00641A3A    ret
 00641A3B    mov         ecx,dword ptr [eax+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 00641A3E    sub         edx,dword ptr [ecx+8]
 00641A41    mov         ecx,dword ptr [eax+5C];TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 00641A44    cmp         edx,dword ptr [ecx+8];TNumberedObjectList.FCount:Integer
>00641A47    jg          00641A4F
 00641A49    call        TWiimoteManager.GetTurntable
 00641A4E    ret
 00641A4F    xor         eax,eax
 00641A51    ret
*}
end;

//00641A54
function TWiimoteManager.GetBalanceBoard(n:Integer):TWiimoteObject;
begin
{*
 00641A54    push        ebp
 00641A55    mov         ebp,esp
 00641A57    push        ebx
 00641A58    push        esi
 00641A59    push        edi
 00641A5A    mov         ebx,edx
 00641A5C    mov         esi,eax
 00641A5E    xor         eax,eax
 00641A60    push        ebp
 00641A61    push        641ACC
 00641A66    push        dword ptr fs:[eax]
 00641A69    mov         dword ptr fs:[eax],esp
 00641A6C    cmp         byte ptr [esi+126],0;TWiimoteManager.FUseWiimoteDotBalanceBoard:Boolean
>00641A73    je          00641A8A
 00641A75    mov         edx,ebx
 00641A77    mov         eax,esi
 00641A79    call        TWiimoteManager.GetWiimote
 00641A7E    mov         edi,eax
 00641A80    xor         eax,eax
 00641A82    pop         edx
 00641A83    pop         ecx
 00641A84    pop         ecx
 00641A85    mov         dword ptr fs:[eax],edx
>00641A88    jmp         00641AD8
 00641A8A    xor         edi,edi
 00641A8C    test        ebx,ebx
>00641A8E    jge         00641A9A
 00641A90    xor         eax,eax
 00641A92    pop         edx
 00641A93    pop         ecx
 00641A94    pop         ecx
 00641A95    mov         dword ptr fs:[eax],edx
>00641A98    jmp         00641AD8
 00641A9A    test        ebx,ebx
>00641A9C    jne         00641AA3
 00641A9E    mov         ebx,1
 00641AA3    mov         eax,dword ptr [esi+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 00641AA6    cmp         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
>00641AA9    jle         00641AB5
 00641AAB    xor         eax,eax
 00641AAD    pop         edx
 00641AAE    pop         ecx
 00641AAF    pop         ecx
 00641AB0    mov         dword ptr fs:[eax],edx
>00641AB3    jmp         00641AD8
 00641AB5    mov         edx,ebx
 00641AB7    dec         edx
 00641AB8    mov         eax,dword ptr [esi+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 00641ABB    call        TList.Get
 00641AC0    mov         edi,eax
 00641AC2    xor         eax,eax
 00641AC4    pop         edx
 00641AC5    pop         ecx
 00641AC6    pop         ecx
 00641AC7    mov         dword ptr fs:[eax],edx
>00641ACA    jmp         00641AD8
>00641ACC    jmp         @HandleAnyException
 00641AD1    xor         edi,edi
 00641AD3    call        @DoneExcept
 00641AD8    mov         eax,edi
 00641ADA    pop         edi
 00641ADB    pop         esi
 00641ADC    pop         ebx
 00641ADD    pop         ebp
 00641ADE    ret
*}
end;

//00641AE0
function TWiimoteManager.GetDrums(n:Integer):TWiimoteObject;
begin
{*
 00641AE0    push        ebp
 00641AE1    mov         ebp,esp
 00641AE3    push        ebx
 00641AE4    push        esi
 00641AE5    push        edi
 00641AE6    mov         ebx,edx
 00641AE8    mov         esi,eax
 00641AEA    xor         eax,eax
 00641AEC    push        ebp
 00641AED    push        641B58
 00641AF2    push        dword ptr fs:[eax]
 00641AF5    mov         dword ptr fs:[eax],esp
 00641AF8    cmp         byte ptr [esi+124],0;TWiimoteManager.FUseWiimoteDotDrums:Boolean
>00641AFF    je          00641B16
 00641B01    mov         edx,ebx
 00641B03    mov         eax,esi
 00641B05    call        TWiimoteManager.GetWiimote
 00641B0A    mov         edi,eax
 00641B0C    xor         eax,eax
 00641B0E    pop         edx
 00641B0F    pop         ecx
 00641B10    pop         ecx
 00641B11    mov         dword ptr fs:[eax],edx
>00641B14    jmp         00641B64
 00641B16    xor         edi,edi
 00641B18    test        ebx,ebx
>00641B1A    jge         00641B26
 00641B1C    xor         eax,eax
 00641B1E    pop         edx
 00641B1F    pop         ecx
 00641B20    pop         ecx
 00641B21    mov         dword ptr fs:[eax],edx
>00641B24    jmp         00641B64
 00641B26    test        ebx,ebx
>00641B28    jne         00641B2F
 00641B2A    mov         ebx,1
 00641B2F    mov         eax,dword ptr [esi+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 00641B32    cmp         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
>00641B35    jle         00641B41
 00641B37    xor         eax,eax
 00641B39    pop         edx
 00641B3A    pop         ecx
 00641B3B    pop         ecx
 00641B3C    mov         dword ptr fs:[eax],edx
>00641B3F    jmp         00641B64
 00641B41    mov         edx,ebx
 00641B43    dec         edx
 00641B44    mov         eax,dword ptr [esi+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 00641B47    call        TList.Get
 00641B4C    mov         edi,eax
 00641B4E    xor         eax,eax
 00641B50    pop         edx
 00641B51    pop         ecx
 00641B52    pop         ecx
 00641B53    mov         dword ptr fs:[eax],edx
>00641B56    jmp         00641B64
>00641B58    jmp         @HandleAnyException
 00641B5D    xor         edi,edi
 00641B5F    call        @DoneExcept
 00641B64    mov         eax,edi
 00641B66    pop         edi
 00641B67    pop         esi
 00641B68    pop         ebx
 00641B69    pop         ebp
 00641B6A    ret
*}
end;

//00641B6C
function TWiimoteManager.GetGuitar(n:Integer):TWiimoteObject;
begin
{*
 00641B6C    push        ebp
 00641B6D    mov         ebp,esp
 00641B6F    push        ebx
 00641B70    push        esi
 00641B71    push        edi
 00641B72    mov         ebx,edx
 00641B74    mov         esi,eax
 00641B76    xor         eax,eax
 00641B78    push        ebp
 00641B79    push        641BE4
 00641B7E    push        dword ptr fs:[eax]
 00641B81    mov         dword ptr fs:[eax],esp
 00641B84    cmp         byte ptr [esi+123],0;TWiimoteManager.FUseWiimoteDotGuitar:Boolean
>00641B8B    je          00641BA2
 00641B8D    mov         edx,ebx
 00641B8F    mov         eax,esi
 00641B91    call        TWiimoteManager.GetWiimote
 00641B96    mov         edi,eax
 00641B98    xor         eax,eax
 00641B9A    pop         edx
 00641B9B    pop         ecx
 00641B9C    pop         ecx
 00641B9D    mov         dword ptr fs:[eax],edx
>00641BA0    jmp         00641BF0
 00641BA2    xor         edi,edi
 00641BA4    test        ebx,ebx
>00641BA6    jge         00641BB2
 00641BA8    xor         eax,eax
 00641BAA    pop         edx
 00641BAB    pop         ecx
 00641BAC    pop         ecx
 00641BAD    mov         dword ptr fs:[eax],edx
>00641BB0    jmp         00641BF0
 00641BB2    test        ebx,ebx
>00641BB4    jne         00641BBB
 00641BB6    mov         ebx,1
 00641BBB    mov         eax,dword ptr [esi+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 00641BBE    cmp         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
>00641BC1    jle         00641BCD
 00641BC3    xor         eax,eax
 00641BC5    pop         edx
 00641BC6    pop         ecx
 00641BC7    pop         ecx
 00641BC8    mov         dword ptr fs:[eax],edx
>00641BCB    jmp         00641BF0
 00641BCD    mov         edx,ebx
 00641BCF    dec         edx
 00641BD0    mov         eax,dword ptr [esi+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 00641BD3    call        TList.Get
 00641BD8    mov         edi,eax
 00641BDA    xor         eax,eax
 00641BDC    pop         edx
 00641BDD    pop         ecx
 00641BDE    pop         ecx
 00641BDF    mov         dword ptr fs:[eax],edx
>00641BE2    jmp         00641BF0
>00641BE4    jmp         @HandleAnyException
 00641BE9    xor         edi,edi
 00641BEB    call        @DoneExcept
 00641BF0    mov         eax,edi
 00641BF2    pop         edi
 00641BF3    pop         esi
 00641BF4    pop         ebx
 00641BF5    pop         ebp
 00641BF6    ret
*}
end;

//00641BF8
function TWiimoteManager.GetLightstone(n:Integer):TLightstoneObject;
begin
{*
 00641BF8    push        ebp
 00641BF9    mov         ebp,esp
 00641BFB    push        ebx
 00641BFC    push        esi
 00641BFD    push        edi
 00641BFE    mov         ebx,edx
 00641C00    mov         esi,eax
 00641C02    xor         eax,eax
 00641C04    push        ebp
 00641C05    push        641C52
 00641C0A    push        dword ptr fs:[eax]
 00641C0D    mov         dword ptr fs:[eax],esp
 00641C10    xor         edi,edi
 00641C12    test        ebx,ebx
>00641C14    jge         00641C20
 00641C16    xor         eax,eax
 00641C18    pop         edx
 00641C19    pop         ecx
 00641C1A    pop         ecx
 00641C1B    mov         dword ptr fs:[eax],edx
>00641C1E    jmp         00641C5E
 00641C20    test        ebx,ebx
>00641C22    jne         00641C29
 00641C24    mov         ebx,1
 00641C29    mov         eax,dword ptr [esi+68];TWiimoteManager.FConnectedLightstones:TNumberedObjectList
 00641C2C    cmp         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
>00641C2F    jle         00641C3B
 00641C31    xor         eax,eax
 00641C33    pop         edx
 00641C34    pop         ecx
 00641C35    pop         ecx
 00641C36    mov         dword ptr fs:[eax],edx
>00641C39    jmp         00641C5E
 00641C3B    mov         edx,ebx
 00641C3D    dec         edx
 00641C3E    mov         eax,dword ptr [esi+68];TWiimoteManager.FConnectedLightstones:TNumberedObjectList
 00641C41    call        TList.Get
 00641C46    mov         edi,eax
 00641C48    xor         eax,eax
 00641C4A    pop         edx
 00641C4B    pop         ecx
 00641C4C    pop         ecx
 00641C4D    mov         dword ptr fs:[eax],edx
>00641C50    jmp         00641C5E
>00641C52    jmp         @HandleAnyException
 00641C57    xor         edi,edi
 00641C59    call        @DoneExcept
 00641C5E    mov         eax,edi
 00641C60    pop         edi
 00641C61    pop         esi
 00641C62    pop         ebx
 00641C63    pop         ebp
 00641C64    ret
*}
end;

//00641C68
function TWiimoteManager.GetSixaxis(n:Integer):TSixaxisObject;
begin
{*
 00641C68    push        ebp
 00641C69    mov         ebp,esp
 00641C6B    push        ebx
 00641C6C    push        esi
 00641C6D    push        edi
 00641C6E    mov         ebx,edx
 00641C70    mov         esi,eax
 00641C72    xor         eax,eax
 00641C74    push        ebp
 00641C75    push        641CC2
 00641C7A    push        dword ptr fs:[eax]
 00641C7D    mov         dword ptr fs:[eax],esp
 00641C80    xor         edi,edi
 00641C82    test        ebx,ebx
>00641C84    jge         00641C90
 00641C86    xor         eax,eax
 00641C88    pop         edx
 00641C89    pop         ecx
 00641C8A    pop         ecx
 00641C8B    mov         dword ptr fs:[eax],edx
>00641C8E    jmp         00641CCE
 00641C90    test        ebx,ebx
>00641C92    jne         00641C99
 00641C94    mov         ebx,1
 00641C99    mov         eax,dword ptr [esi+60];TWiimoteManager.FConnectedSixaxes:TNumberedObjectList
 00641C9C    cmp         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
>00641C9F    jle         00641CAB
 00641CA1    xor         eax,eax
 00641CA3    pop         edx
 00641CA4    pop         ecx
 00641CA5    pop         ecx
 00641CA6    mov         dword ptr fs:[eax],edx
>00641CA9    jmp         00641CCE
 00641CAB    mov         edx,ebx
 00641CAD    dec         edx
 00641CAE    mov         eax,dword ptr [esi+60];TWiimoteManager.FConnectedSixaxes:TNumberedObjectList
 00641CB1    call        TList.Get
 00641CB6    mov         edi,eax
 00641CB8    xor         eax,eax
 00641CBA    pop         edx
 00641CBB    pop         ecx
 00641CBC    pop         ecx
 00641CBD    mov         dword ptr fs:[eax],edx
>00641CC0    jmp         00641CCE
>00641CC2    jmp         @HandleAnyException
 00641CC7    xor         edi,edi
 00641CC9    call        @DoneExcept
 00641CCE    mov         eax,edi
 00641CD0    pop         edi
 00641CD1    pop         esi
 00641CD2    pop         ebx
 00641CD3    pop         ebp
 00641CD4    ret
*}
end;

//00641CD8
function TWiimoteManager.GetSpacePoint(n:Integer):TSpacePointObject;
begin
{*
 00641CD8    push        ebp
 00641CD9    mov         ebp,esp
 00641CDB    push        ebx
 00641CDC    push        esi
 00641CDD    push        edi
 00641CDE    mov         ebx,edx
 00641CE0    mov         esi,eax
 00641CE2    xor         eax,eax
 00641CE4    push        ebp
 00641CE5    push        641D32
 00641CEA    push        dword ptr fs:[eax]
 00641CED    mov         dword ptr fs:[eax],esp
 00641CF0    xor         edi,edi
 00641CF2    test        ebx,ebx
>00641CF4    jge         00641D00
 00641CF6    xor         eax,eax
 00641CF8    pop         edx
 00641CF9    pop         ecx
 00641CFA    pop         ecx
 00641CFB    mov         dword ptr fs:[eax],edx
>00641CFE    jmp         00641D3E
 00641D00    test        ebx,ebx
>00641D02    jne         00641D09
 00641D04    mov         ebx,1
 00641D09    mov         eax,dword ptr [esi+64];TWiimoteManager.FConnectedSpacePoints:TNumberedObjectList
 00641D0C    cmp         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
>00641D0F    jle         00641D1B
 00641D11    xor         eax,eax
 00641D13    pop         edx
 00641D14    pop         ecx
 00641D15    pop         ecx
 00641D16    mov         dword ptr fs:[eax],edx
>00641D19    jmp         00641D3E
 00641D1B    mov         edx,ebx
 00641D1D    dec         edx
 00641D1E    mov         eax,dword ptr [esi+64];TWiimoteManager.FConnectedSpacePoints:TNumberedObjectList
 00641D21    call        TList.Get
 00641D26    mov         edi,eax
 00641D28    xor         eax,eax
 00641D2A    pop         edx
 00641D2B    pop         ecx
 00641D2C    pop         ecx
 00641D2D    mov         dword ptr fs:[eax],edx
>00641D30    jmp         00641D3E
>00641D32    jmp         @HandleAnyException
 00641D37    xor         edi,edi
 00641D39    call        @DoneExcept
 00641D3E    mov         eax,edi
 00641D40    pop         edi
 00641D41    pop         esi
 00641D42    pop         ebx
 00641D43    pop         ebp
 00641D44    ret
*}
end;

//00641D48
function TWiimoteManager.GetTurntable(n:Integer):TWiimoteObject;
begin
{*
 00641D48    push        ebp
 00641D49    mov         ebp,esp
 00641D4B    push        ebx
 00641D4C    push        esi
 00641D4D    push        edi
 00641D4E    mov         ebx,edx
 00641D50    mov         esi,eax
 00641D52    xor         eax,eax
 00641D54    push        ebp
 00641D55    push        641DC0
 00641D5A    push        dword ptr fs:[eax]
 00641D5D    mov         dword ptr fs:[eax],esp
 00641D60    cmp         byte ptr [esi+125],0;TWiimoteManager.FUseWiimoteDotTurntable:Boolean
>00641D67    je          00641D7E
 00641D69    mov         edx,ebx
 00641D6B    mov         eax,esi
 00641D6D    call        TWiimoteManager.GetWiimote
 00641D72    mov         edi,eax
 00641D74    xor         eax,eax
 00641D76    pop         edx
 00641D77    pop         ecx
 00641D78    pop         ecx
 00641D79    mov         dword ptr fs:[eax],edx
>00641D7C    jmp         00641DCC
 00641D7E    xor         edi,edi
 00641D80    test        ebx,ebx
>00641D82    jge         00641D8E
 00641D84    xor         eax,eax
 00641D86    pop         edx
 00641D87    pop         ecx
 00641D88    pop         ecx
 00641D89    mov         dword ptr fs:[eax],edx
>00641D8C    jmp         00641DCC
 00641D8E    test        ebx,ebx
>00641D90    jne         00641D97
 00641D92    mov         ebx,1
 00641D97    mov         eax,dword ptr [esi+5C];TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 00641D9A    cmp         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
>00641D9D    jle         00641DA9
 00641D9F    xor         eax,eax
 00641DA1    pop         edx
 00641DA2    pop         ecx
 00641DA3    pop         ecx
 00641DA4    mov         dword ptr fs:[eax],edx
>00641DA7    jmp         00641DCC
 00641DA9    mov         edx,ebx
 00641DAB    dec         edx
 00641DAC    mov         eax,dword ptr [esi+5C];TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 00641DAF    call        TList.Get
 00641DB4    mov         edi,eax
 00641DB6    xor         eax,eax
 00641DB8    pop         edx
 00641DB9    pop         ecx
 00641DBA    pop         ecx
 00641DBB    mov         dword ptr fs:[eax],edx
>00641DBE    jmp         00641DCC
>00641DC0    jmp         @HandleAnyException
 00641DC5    xor         edi,edi
 00641DC7    call        @DoneExcept
 00641DCC    mov         eax,edi
 00641DCE    pop         edi
 00641DCF    pop         esi
 00641DD0    pop         ebx
 00641DD1    pop         ebp
 00641DD2    ret
*}
end;

//00641DD4
function TWiimoteManager.GetWiimote(n:Integer):TWiimoteObject;
begin
{*
 00641DD4    push        ebp
 00641DD5    mov         ebp,esp
 00641DD7    push        ebx
 00641DD8    push        esi
 00641DD9    push        edi
 00641DDA    mov         ebx,edx
 00641DDC    mov         esi,eax
 00641DDE    xor         eax,eax
 00641DE0    push        ebp
 00641DE1    push        641E2E
 00641DE6    push        dword ptr fs:[eax]
 00641DE9    mov         dword ptr fs:[eax],esp
 00641DEC    xor         edi,edi
 00641DEE    test        ebx,ebx
>00641DF0    jge         00641DFC
 00641DF2    xor         eax,eax
 00641DF4    pop         edx
 00641DF5    pop         ecx
 00641DF6    pop         ecx
 00641DF7    mov         dword ptr fs:[eax],edx
>00641DFA    jmp         00641E3A
 00641DFC    test        ebx,ebx
>00641DFE    jne         00641E05
 00641E00    mov         ebx,1
 00641E05    mov         eax,dword ptr [esi+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 00641E08    cmp         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
>00641E0B    jle         00641E17
 00641E0D    xor         eax,eax
 00641E0F    pop         edx
 00641E10    pop         ecx
 00641E11    pop         ecx
 00641E12    mov         dword ptr fs:[eax],edx
>00641E15    jmp         00641E3A
 00641E17    mov         edx,ebx
 00641E19    dec         edx
 00641E1A    mov         eax,dword ptr [esi+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 00641E1D    call        TList.Get
 00641E22    mov         edi,eax
 00641E24    xor         eax,eax
 00641E26    pop         edx
 00641E27    pop         ecx
 00641E28    pop         ecx
 00641E29    mov         dword ptr fs:[eax],edx
>00641E2C    jmp         00641E3A
>00641E2E    jmp         @HandleAnyException
 00641E33    xor         edi,edi
 00641E35    call        @DoneExcept
 00641E3A    mov         eax,edi
 00641E3C    pop         edi
 00641E3D    pop         esi
 00641E3E    pop         ebx
 00641E3F    pop         ebp
 00641E40    ret
*}
end;

//00641E44
procedure TWiimoteManager.HidControllerArrival(HidDev:TJvHidDevice);
begin
{*
 00641E44    push        ebp
 00641E45    mov         ebp,esp
 00641E47    add         esp,0FFFFFF6C
 00641E4D    push        esi
 00641E4E    push        edi
 00641E4F    xor         ecx,ecx
 00641E51    mov         dword ptr [ebp-90],ecx
 00641E57    mov         dword ptr [ebp-94],ecx
 00641E5D    mov         dword ptr [ebp-88],ecx
 00641E63    mov         dword ptr [ebp-8C],ecx
 00641E69    mov         esi,edx
 00641E6B    mov         edi,eax
 00641E6D    xor         eax,eax
 00641E6F    push        ebp
 00641E70    push        642064
 00641E75    push        dword ptr fs:[eax]
 00641E78    mov         dword ptr fs:[eax],esp
 00641E7B    cmp         word ptr [esi+44],57E
>00641E81    jne         00641F99
 00641E87    cmp         word ptr [esi+46],306
>00641E8D    jne         00641F99
 00641E93    lea         edx,[ebp-44]
 00641E96    mov         eax,esi
 00641E98    call        005DEE9C
 00641E9D    cmp         word ptr [ebp-40],16
>00641EA2    jne         00641F99
 00641EA8    lea         edx,[ebp-84]
 00641EAE    mov         eax,esi
 00641EB0    call        005DEE9C
 00641EB5    cmp         word ptr [ebp-7E],16
>00641EBA    jne         00641F99
 00641EC0    cmp         byte ptr [esi+8],0;TJvHidDevice.FIsPluggedIn:Boolean
>00641EC4    je          00641F99
 00641ECA    mov         byte ptr [ebp-1],0
 00641ECE    cmp         byte ptr [edi+133],0;TWiimoteManager.CanAddNewWiimotes:Boolean
>00641ED5    je          0064202A
 00641EDB    mov         eax,[0078D7D8];^gvar_0078BD1C
 00641EE0    cmp         byte ptr [eax],0
>00641EE3    je          00641F54
 00641EE5    lea         edx,[ebp-8C]
 00641EEB    mov         eax,esi
 00641EED    call        005DEFB8
 00641EF2    mov         edx,dword ptr [ebp-8C]
 00641EF8    lea         eax,[ebp-88]
 00641EFE    call        @UStrFromWStr
 00641F03    mov         edx,dword ptr [ebp-88]
 00641F09    mov         eax,dword ptr [edi+38];TWiimoteManager.FakeArrivals:TStringList
 00641F0C    mov         ecx,dword ptr [eax]
 00641F0E    call        dword ptr [ecx+54];TStringList.IndexOf
 00641F11    cmp         eax,0FFFFFFFF
>00641F14    je          00641F26
 00641F16    mov         byte ptr [ebp-1],1
 00641F1A    mov         edx,eax
 00641F1C    mov         eax,dword ptr [edi+38];TWiimoteManager.FakeArrivals:TStringList
 00641F1F    mov         ecx,dword ptr [eax]
 00641F21    call        dword ptr [ecx+48];TStringList.Delete
>00641F24    jmp         00641F58
 00641F26    lea         edx,[ebp-94]
 00641F2C    mov         eax,esi
 00641F2E    call        005DEFB8
 00641F33    mov         edx,dword ptr [ebp-94]
 00641F39    lea         eax,[ebp-90]
 00641F3F    call        @UStrFromWStr
 00641F44    mov         edx,dword ptr [ebp-90]
 00641F4A    mov         eax,dword ptr [edi+38];TWiimoteManager.FakeArrivals:TStringList
 00641F4D    mov         ecx,dword ptr [eax]
 00641F4F    call        dword ptr [ecx+38];TStringList.Add
>00641F52    jmp         00641F58
 00641F54    mov         byte ptr [ebp-1],1
 00641F58    cmp         byte ptr [ebp-1],0
>00641F5C    je          00641F77
 00641F5E    xor         edx,edx
 00641F60    mov         eax,dword ptr [edi+138];TWiimoteManager.Timer1:TTimer
 00641F66    call        TTimer.SetEnabled
 00641F6B    mov         eax,edi
 00641F6D    call        TWiimoteManager.ConnectExtraWiimotes
>00641F72    jmp         0064202A
 00641F77    mov         edx,3A98
 00641F7C    mov         eax,dword ptr [edi+138];TWiimoteManager.Timer1:TTimer
 00641F82    call        TTimer.SetInterval
 00641F87    mov         dl,1
 00641F89    mov         eax,dword ptr [edi+138];TWiimoteManager.Timer1:TTimer
 00641F8F    call        TTimer.SetEnabled
>00641F94    jmp         0064202A
 00641F99    cmp         word ptr [esi+44],483
>00641F9F    jne         00641FA8
 00641FA1    cmp         word ptr [esi+46],35
>00641FA6    je          00641FB7
 00641FA8    cmp         word ptr [esi+44],14FA
>00641FAE    jne         00641FC0
 00641FB0    cmp         word ptr [esi+46],1
>00641FB5    jne         00641FC0
 00641FB7    mov         eax,edi
 00641FB9    call        TWiimoteManager.ConnectExtraLightstones
>00641FBE    jmp         0064202A
 00641FC0    cmp         word ptr [esi+44],20FF
>00641FC6    jne         00641FEA
 00641FC8    cmp         word ptr [esi+46],100
>00641FCE    jne         00641FEA
 00641FD0    lea         edx,[ebp-44]
 00641FD3    mov         eax,esi
 00641FD5    call        005DEE9C
 00641FDA    cmp         word ptr [ebp-40],15
>00641FDF    jne         00641FEA
 00641FE1    mov         eax,edi
 00641FE3    call        TWiimoteManager.ConnectExtraSpacePoints
>00641FE8    jmp         0064202A
 00641FEA    cmp         word ptr [esi+44],1BAE
>00641FF0    jne         0064202A
 00641FF2    push        0
 00641FF4    push        642074;^TIcon.SetHeight
 00641FF9    call        user32.FindWindowW
 00641FFE    test        eax,eax
>00642000    jne         0064202A
 00642002    mov         eax,6420A8;'Vuzix/Icuiti hardware is no longer supported due to them banning me.
Please...
 00642007    call        ShowMessage
 0064200C    push        3
 0064200E    push        0
 00642010    push        0
 00642012    push        6422D8;'http://forums.vr920.com'
 00642017    push        0
 00642019    push        0
 0064201B    call        shell32.ShellExecuteW
 00642020    mov         eax,5C
 00642025    call        @Halt
 0064202A    xor         eax,eax
 0064202C    pop         edx
 0064202D    pop         ecx
 0064202E    pop         ecx
 0064202F    mov         dword ptr fs:[eax],edx
 00642032    push        64206B
 00642037    lea         eax,[ebp-94]
 0064203D    call        @WStrClr
 00642042    lea         eax,[ebp-90]
 00642048    call        @UStrClr
 0064204D    lea         eax,[ebp-8C]
 00642053    call        @WStrClr
 00642058    lea         eax,[ebp-88]
 0064205E    call        @UStrClr
 00642063    ret
>00642064    jmp         @HandleFinally
>00642069    jmp         00642037
 0064206B    pop         edi
 0064206C    pop         esi
 0064206D    mov         esp,ebp
 0064206F    pop         ebp
 00642070    ret
*}
end;

//00642308
procedure TWiimoteManager.HidControllerDeviceChange(Sender:TObject);
begin
{*
 00642308    ret
*}
end;

//0064230C
procedure TWiimoteManager.HidControllerDeviceUnplug(HidDev:TJvHidDevice);
begin
{*
 0064230C    ret
*}
end;

//00642310
function TWiimoteManager.HidControllerEnumerate(HidDev:TJvHidDevice; Idx:Integer):Boolean;
begin
{*
 00642310    push        ebp
 00642311    mov         ebp,esp
 00642313    add         esp,0FFFFFF70
 00642319    push        ebx
 0064231A    push        esi
 0064231B    push        edi
 0064231C    xor         ebx,ebx
 0064231E    mov         dword ptr [ebp-88],ebx
 00642324    mov         dword ptr [ebp-8C],ebx
 0064232A    mov         dword ptr [ebp-90],ebx
 00642330    mov         edi,ecx
 00642332    mov         ebx,edx
 00642334    mov         esi,eax
 00642336    xor         eax,eax
 00642338    push        ebp
 00642339    push        642508
 0064233E    push        dword ptr fs:[eax]
 00642341    mov         dword ptr fs:[eax],esp
 00642344    cmp         word ptr [ebx+44],57E
>0064234A    jne         006423BA
 0064234C    cmp         word ptr [ebx+46],306
>00642352    jne         006423BA
 00642354    lea         edx,[ebp-44]
 00642357    mov         eax,ebx
 00642359    call        005DEE9C
 0064235E    cmp         word ptr [ebp-40],16
>00642363    jne         006423BA
 00642365    lea         edx,[ebp-84]
 0064236B    mov         eax,ebx
 0064236D    call        005DEE9C
 00642372    cmp         word ptr [ebp-7E],16
>00642377    jne         006423BA
 00642379    cmp         byte ptr [ebx+8],0;TJvHidDevice.FIsPluggedIn:Boolean
>0064237D    je          006423BA
 0064237F    xor         eax,eax
 00642381    mov         dword ptr [ebp-4],eax
 00642384    lea         edx,[ebp-4]
 00642387    mov         ecx,edi
 00642389    mov         eax,dword ptr [esi+34];TWiimoteManager.HidController:TJvHidDeviceController
 0064238C    call        TJvHidDeviceController.CheckOutByIndex
 00642391    test        al,al
>00642393    je          006424E8
 00642399    mov         eax,dword ptr [ebp-4]
 0064239C    push        eax
 0064239D    mov         ecx,esi
 0064239F    mov         dl,1
 006423A1    mov         eax,[0061CEE4];TWiimoteObject
 006423A6    call        TWiimoteObject.Create;TWiimoteObject.Create
 006423AB    mov         edx,eax
 006423AD    mov         eax,dword ptr [esi+3C];TWiimoteManager.FDiscoveredWiimotes:TObjectList
 006423B0    call        TList.Add
>006423B5    jmp         006424E8
 006423BA    cmp         word ptr [ebx+44],483
>006423C0    jne         006423C9
 006423C2    cmp         word ptr [ebx+46],35
>006423C7    je          006423D8
 006423C9    cmp         word ptr [ebx+44],14FA
>006423CF    jne         00642413
 006423D1    cmp         word ptr [ebx+46],1
>006423D6    jne         00642413
 006423D8    xor         eax,eax
 006423DA    mov         dword ptr [ebp-4],eax
 006423DD    lea         edx,[ebp-4]
 006423E0    mov         ecx,edi
 006423E2    mov         eax,dword ptr [esi+34];TWiimoteManager.HidController:TJvHidDeviceController
 006423E5    call        TJvHidDeviceController.CheckOutByIndex
 006423EA    test        al,al
>006423EC    je          006424E8
 006423F2    mov         eax,dword ptr [ebp-4]
 006423F5    push        eax
 006423F6    mov         ecx,esi
 006423F8    mov         dl,1
 006423FA    mov         eax,[00636D80];TLightstoneObject
 006423FF    call        TLightstoneObject.Create;TLightstoneObject.Create
 00642404    mov         edx,eax
 00642406    mov         eax,dword ptr [esi+48];TWiimoteManager.FDiscoveredLightstones:TObjectList
 00642409    call        TList.Add
>0064240E    jmp         006424E8
 00642413    cmp         word ptr [ebx+44],20FF
>00642419    jne         0064246C
 0064241B    cmp         word ptr [ebx+46],100
>00642421    jne         0064246C
 00642423    lea         edx,[ebp-44]
 00642426    mov         eax,ebx
 00642428    call        005DEE9C
 0064242D    cmp         word ptr [ebp-40],15
>00642432    jne         0064246C
 00642434    xor         eax,eax
 00642436    mov         dword ptr [ebp-4],eax
 00642439    lea         edx,[ebp-4]
 0064243C    mov         ecx,edi
 0064243E    mov         eax,dword ptr [esi+34];TWiimoteManager.HidController:TJvHidDeviceController
 00642441    call        TJvHidDeviceController.CheckOutByIndex
 00642446    test        al,al
>00642448    je          006424E8
 0064244E    mov         eax,dword ptr [ebp-4]
 00642451    push        eax
 00642452    mov         ecx,esi
 00642454    mov         dl,1
 00642456    mov         eax,[0063744C];TSpacePointObject
 0064245B    call        TSpacePointObject.Create;TSpacePointObject.Create
 00642460    mov         edx,eax
 00642462    mov         eax,dword ptr [esi+44];TWiimoteManager.FDiscoveredSpacePoints:TObjectList
 00642465    call        TList.Add
>0064246A    jmp         006424E8
 0064246C    cmp         word ptr [ebx+44],1234
>00642472    jne         0064249A
 00642474    cmp         word ptr [ebx+46],0
>00642479    jne         0064249A
 0064247B    xor         eax,eax
 0064247D    mov         dword ptr [ebp-4],eax
 00642480    cmp         byte ptr [esi+130],0;TWiimoteManager.FUseNIA:Boolean
>00642487    je          006424E8
 00642489    lea         edx,[ebp-4]
 0064248C    mov         ecx,edi
 0064248E    mov         eax,dword ptr [esi+34];TWiimoteManager.HidController:TJvHidDeviceController
 00642491    call        TJvHidDeviceController.CheckOutByIndex
 00642496    test        al,al
>00642498    jmp         006424E8
 0064249A    push        642524;'Found HID '
 0064249F    lea         ecx,[ebp-8C]
 006424A5    movzx       eax,word ptr [ebx+44]
 006424A9    mov         edx,4
 006424AE    call        IntToHex
 006424B3    push        dword ptr [ebp-8C]
 006424B9    push        642548;':'
 006424BE    lea         ecx,[ebp-90]
 006424C4    movzx       eax,word ptr [ebx+46]
 006424C8    mov         edx,4
 006424CD    call        IntToHex
 006424D2    push        dword ptr [ebp-90]
 006424D8    lea         eax,[ebp-88]
 006424DE    mov         edx,4
 006424E3    call        @UStrCatN
 006424E8    mov         bl,1
 006424EA    xor         eax,eax
 006424EC    pop         edx
 006424ED    pop         ecx
 006424EE    pop         ecx
 006424EF    mov         dword ptr fs:[eax],edx
 006424F2    push        64250F
 006424F7    lea         eax,[ebp-90]
 006424FD    mov         edx,3
 00642502    call        @UStrArrayClr
 00642507    ret
>00642508    jmp         @HandleFinally
>0064250D    jmp         006424F7
 0064250F    mov         eax,ebx
 00642511    pop         edi
 00642512    pop         esi
 00642513    pop         ebx
 00642514    mov         esp,ebp
 00642516    pop         ebp
 00642517    ret
*}
end;

//0064254C
procedure TWiimoteManager.HidControllerRemoval(HidDev:TJvHidDevice);
begin
{*
 0064254C    ret
*}
end;

//00642550
function TWiimoteManager.Peek(n:Integer; addr:Cardinal):Integer;
begin
{*
 00642550    push        ebp
 00642551    mov         ebp,esp
 00642553    add         esp,0FFFFFFE4
 00642556    push        ebx
 00642557    push        esi
 00642558    push        edi
 00642559    mov         dword ptr [ebp-4],ecx
 0064255C    mov         esi,0FFFFFFF0
 00642561    call        TWiimoteManager.GetWiimote
 00642566    mov         ebx,eax
 00642568    test        ebx,ebx
>0064256A    je          006426A0
 00642570    cmp         byte ptr [ebx+18],0;TWiimoteObject.Connected:Boolean
>00642574    je          006426A0
 0064257A    and         dword ptr [ebp-4],0FEFFFFFF
 00642581    lea         eax,[ebp-1A]
 00642584    xor         ecx,ecx
 00642586    mov         edx,16
 0064258B    call        @FillChar
 00642590    mov         byte ptr [ebp-1A],17
 00642594    movzx       eax,byte ptr [ebx+48C];TWiimoteObject.FRumble:Boolean
 0064259B    mov         edx,dword ptr [ebp-4]
 0064259E    shr         edx,18
 006425A1    and         dl,0FF
 006425A4    or          al,dl
 006425A6    mov         byte ptr [ebp-19],al
 006425A9    mov         eax,dword ptr [ebp-4]
 006425AC    shr         eax,10
 006425AF    and         al,0FF
 006425B1    mov         byte ptr [ebp-18],al
 006425B4    mov         eax,dword ptr [ebp-4]
 006425B7    shr         eax,8
 006425BA    and         al,0FF
 006425BC    mov         byte ptr [ebp-17],al
 006425BF    movzx       eax,byte ptr [ebp-4]
 006425C3    and         al,0FF
 006425C5    mov         byte ptr [ebp-16],al
 006425C8    mov         byte ptr [ebp-15],0
 006425CC    mov         byte ptr [ebp-14],1
 006425D0    push        0
 006425D2    push        0
 006425D4    mov         eax,dword ptr [ebx+20];TWiimoteObject.Dev:TJvHidDevice
 006425D7    call        005DF390
 006425DC    xor         edx,edx
 006425DE    push        ebp
 006425DF    push        642677
 006425E4    push        dword ptr fs:[edx]
 006425E7    mov         dword ptr fs:[edx],esp
 006425EA    lea         edx,[ebp-1A]
 006425ED    mov         ecx,16
 006425F2    mov         eax,ebx
 006425F4    call        TManagedHidObject.SendReport
 006425F9    mov         esi,64
 006425FE    lea         eax,[ebp-1A]
 00642601    xor         ecx,ecx
 00642603    mov         edx,16
 00642608    call        @FillChar
 0064260D    lea         edx,[ebx+45C];TWiimoteObject.InByte:?
 00642613    mov         ecx,16
 00642618    mov         eax,ebx
 0064261A    call        TManagedHidObject.ReadReport
 0064261F    test        al,al
>00642621    je          0064265B
 00642623    lea         edx,[ebp-1A]
 00642626    lea         eax,[ebx+45C];TWiimoteObject.InByte:?
 0064262C    mov         ecx,16
 00642631    call        Move
 00642636    cmp         byte ptr [ebp-1A],21
>0064263A    jne         0064266A
 0064263C    movzx       eax,byte ptr [ebp-17]
 00642640    and         al,0F
 00642642    test        al,al
>00642644    je          0064264D
 00642646    movzx       esi,al
 00642649    neg         esi
>0064264B    jmp         00642651
 0064264D    movzx       esi,byte ptr [ebp-14]
 00642651    xor         eax,eax
 00642653    pop         edx
 00642654    pop         ecx
 00642655    pop         ecx
 00642656    mov         dword ptr fs:[eax],edx
>00642659    jmp         006426A0
 0064265B    mov         esi,0FFFFFFEF
 00642660    xor         eax,eax
 00642662    pop         edx
 00642663    pop         ecx
 00642664    pop         ecx
 00642665    mov         dword ptr fs:[eax],edx
>00642668    jmp         006426A0
 0064266A    dec         esi
>0064266B    jne         006425FE
 0064266D    xor         eax,eax
 0064266F    pop         edx
 00642670    pop         ecx
 00642671    pop         ecx
 00642672    mov         dword ptr fs:[eax],edx
>00642675    jmp         0064268D
>00642677    jmp         @HandleAnyException
 0064267C    mov         esi,0FFFFFFEE
 00642681    call        @DoneExcept
>00642686    jmp         006426A0
 00642688    call        @DoneExcept
 0064268D    push        ebx
 0064268E    push        646790;TManagedHidObject.DevData
 00642693    mov         eax,dword ptr [ebx+20];TWiimoteObject.Dev:TJvHidDevice
 00642696    call        005DF390
 0064269B    mov         esi,0FFFFFFF0
 006426A0    mov         eax,esi
 006426A2    pop         edi
 006426A3    pop         esi
 006426A4    pop         ebx
 006426A5    mov         esp,ebp
 006426A7    pop         ebp
 006426A8    ret
*}
end;

//006426AC
procedure TWiimoteManager.PerformNullUpdates;
begin
{*
 006426AC    push        ebx
 006426AD    push        esi
 006426AE    push        edi
 006426AF    mov         edi,eax
 006426B1    mov         eax,dword ptr [edi+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 006426B4    mov         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 006426B7    dec         ebx
 006426B8    test        ebx,ebx
>006426BA    jl          006426D6
 006426BC    inc         ebx
 006426BD    xor         esi,esi
 006426BF    mov         eax,dword ptr [edi+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 006426C2    mov         edx,esi
 006426C4    call        TList.Get
 006426C9    test        eax,eax
>006426CB    je          006426D2
 006426CD    call        TWiimoteObject.PerformNullUpdates
 006426D2    inc         esi
 006426D3    dec         ebx
>006426D4    jne         006426BF
 006426D6    mov         eax,dword ptr [edi+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 006426D9    mov         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 006426DC    dec         ebx
 006426DD    test        ebx,ebx
>006426DF    jl          006426FB
 006426E1    inc         ebx
 006426E2    xor         esi,esi
 006426E4    mov         eax,dword ptr [edi+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 006426E7    mov         edx,esi
 006426E9    call        TList.Get
 006426EE    test        eax,eax
>006426F0    je          006426F7
 006426F2    call        TWiimoteObject.PerformNullUpdates
 006426F7    inc         esi
 006426F8    dec         ebx
>006426F9    jne         006426E4
 006426FB    mov         eax,dword ptr [edi+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 006426FE    mov         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 00642701    dec         ebx
 00642702    test        ebx,ebx
>00642704    jl          00642720
 00642706    inc         ebx
 00642707    xor         esi,esi
 00642709    mov         eax,dword ptr [edi+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 0064270C    mov         edx,esi
 0064270E    call        TList.Get
 00642713    test        eax,eax
>00642715    je          0064271C
 00642717    call        TWiimoteObject.PerformNullUpdates
 0064271C    inc         esi
 0064271D    dec         ebx
>0064271E    jne         00642709
 00642720    mov         eax,dword ptr [edi+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 00642723    mov         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 00642726    dec         ebx
 00642727    test        ebx,ebx
>00642729    jl          00642745
 0064272B    inc         ebx
 0064272C    xor         esi,esi
 0064272E    mov         eax,dword ptr [edi+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 00642731    mov         edx,esi
 00642733    call        TList.Get
 00642738    test        eax,eax
>0064273A    je          00642741
 0064273C    call        TWiimoteObject.PerformNullUpdates
 00642741    inc         esi
 00642742    dec         ebx
>00642743    jne         0064272E
 00642745    mov         eax,dword ptr [edi+64];TWiimoteManager.FConnectedSpacePoints:TNumberedObjectList
 00642748    mov         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 0064274B    dec         ebx
 0064274C    test        ebx,ebx
>0064274E    jl          0064276A
 00642750    inc         ebx
 00642751    xor         esi,esi
 00642753    mov         eax,dword ptr [edi+64];TWiimoteManager.FConnectedSpacePoints:TNumberedObjectList
 00642756    mov         edx,esi
 00642758    call        TList.Get
 0064275D    test        eax,eax
>0064275F    je          00642766
 00642761    call        TSpacePointObject.PerformNullUpdates
 00642766    inc         esi
 00642767    dec         ebx
>00642768    jne         00642753
 0064276A    pop         edi
 0064276B    pop         esi
 0064276C    pop         ebx
 0064276D    ret
*}
end;

//00642770
procedure TWiimoteManager.ReadLightstones;
begin
{*
 00642770    push        ebx
 00642771    push        esi
 00642772    push        edi
 00642773    mov         edi,eax
 00642775    mov         eax,dword ptr [edi+68];TWiimoteManager.FConnectedLightstones:TNumberedObjectList
 00642778    mov         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 0064277B    dec         ebx
 0064277C    test        ebx,ebx
>0064277E    jl          0064279A
 00642780    inc         ebx
 00642781    xor         esi,esi
 00642783    mov         eax,dword ptr [edi+68];TWiimoteManager.FConnectedLightstones:TNumberedObjectList
 00642786    mov         edx,esi
 00642788    call        TList.Get
 0064278D    test        eax,eax
>0064278F    je          00642796
 00642791    call        TLightstoneObject.ReadLightstone
 00642796    inc         esi
 00642797    dec         ebx
>00642798    jne         00642783
 0064279A    pop         edi
 0064279B    pop         esi
 0064279C    pop         ebx
 0064279D    ret
*}
end;

//006427A0
procedure TWiimoteManager.ReadSixaxes;
begin
{*
 006427A0    push        ebx
 006427A1    push        esi
 006427A2    push        edi
 006427A3    mov         edi,eax
 006427A5    mov         eax,dword ptr [edi+60];TWiimoteManager.FConnectedSixaxes:TNumberedObjectList
 006427A8    mov         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 006427AB    dec         ebx
 006427AC    test        ebx,ebx
>006427AE    jl          006427CA
 006427B0    inc         ebx
 006427B1    xor         esi,esi
 006427B3    mov         eax,dword ptr [edi+60];TWiimoteManager.FConnectedSixaxes:TNumberedObjectList
 006427B6    mov         edx,esi
 006427B8    call        TList.Get
 006427BD    test        eax,eax
>006427BF    je          006427C6
 006427C1    mov         edx,dword ptr [eax]
 006427C3    call        dword ptr [edx+1C]
 006427C6    inc         esi
 006427C7    dec         ebx
>006427C8    jne         006427B3
 006427CA    pop         edi
 006427CB    pop         esi
 006427CC    pop         ebx
 006427CD    ret
*}
end;

//006427D0
procedure TWiimoteManager.ReadSpacePoints;
begin
{*
 006427D0    push        ebx
 006427D1    push        esi
 006427D2    push        edi
 006427D3    mov         edi,eax
 006427D5    mov         eax,dword ptr [edi+64];TWiimoteManager.FConnectedSpacePoints:TNumberedObjectList
 006427D8    mov         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 006427DB    dec         ebx
 006427DC    test        ebx,ebx
>006427DE    jl          006427FA
 006427E0    inc         ebx
 006427E1    xor         esi,esi
 006427E3    mov         eax,dword ptr [edi+64];TWiimoteManager.FConnectedSpacePoints:TNumberedObjectList
 006427E6    mov         edx,esi
 006427E8    call        TList.Get
 006427ED    test        eax,eax
>006427EF    je          006427F6
 006427F1    call        TSpacePointObject.ReadSpacePoint
 006427F6    inc         esi
 006427F7    dec         ebx
>006427F8    jne         006427E3
 006427FA    pop         edi
 006427FB    pop         esi
 006427FC    pop         ebx
 006427FD    ret
*}
end;

//00642800
procedure TWiimoteManager.ReadWiimotes;
begin
{*
 00642800    push        ebx
 00642801    push        esi
 00642802    push        edi
 00642803    mov         edi,eax
 00642805    mov         eax,dword ptr [edi+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 00642808    mov         ebx,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 0064280B    dec         ebx
 0064280C    test        ebx,ebx
>0064280E    jl          0064282A
 00642810    inc         ebx
 00642811    xor         esi,esi
 00642813    mov         eax,dword ptr [edi+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 00642816    mov         edx,esi
 00642818    call        TList.Get
 0064281D    test        eax,eax
>0064281F    je          00642826
 00642821    call        TWiimoteObject.ReadWiimote
 00642826    inc         esi
 00642827    dec         ebx
>00642828    jne         00642813
 0064282A    pop         edi
 0064282B    pop         esi
 0064282C    pop         ebx
 0064282D    ret
*}
end;

//00642830
procedure TWiimoteManager.RemoveSixaxis(Sixaxis:TSixaxisObject);
begin
{*
 00642830    test        edx,edx
>00642832    je          0064283C
 00642834    mov         eax,dword ptr [eax+60];TWiimoteManager.FConnectedSixaxes:TNumberedObjectList
 00642837    call        TNumberedObjectList.Remove
 0064283C    ret
*}
end;

//00642840
procedure TWiimoteManager.RemoveSpacePoint(SpacePoint:TSpacePointObject);
begin
{*
 00642840    test        edx,edx
>00642842    je          0064284C
 00642844    mov         eax,dword ptr [eax+64];TWiimoteManager.FConnectedSpacePoints:TNumberedObjectList
 00642847    call        TNumberedObjectList.Remove
 0064284C    ret
*}
end;

//00642850
procedure TWiimoteManager.RemoveWiimote(Wiimote:TWiimoteObject);
begin
{*
 00642850    push        ebx
 00642851    push        esi
 00642852    mov         esi,edx
 00642854    mov         ebx,eax
 00642856    test        esi,esi
>00642858    je          00642928
 0064285E    mov         edx,esi
 00642860    mov         eax,dword ptr [ebx+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 00642863    call        TNumberedObjectList.Remove
 00642868    mov         eax,dword ptr [ebx+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 0064286B    call        TNumberedObjectList.ValidCount
 00642870    mov         dword ptr [ebx+10C],eax;TWiimoteManager.FConnectedWiimoteCount:Integer
 00642876    mov         edx,esi
 00642878    mov         eax,dword ptr [ebx+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 0064287B    call        TNumberedObjectList.Remove
 00642880    mov         edx,esi
 00642882    mov         eax,dword ptr [ebx+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 00642885    call        TNumberedObjectList.Remove
 0064288A    mov         edx,esi
 0064288C    mov         eax,dword ptr [ebx+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 0064288F    call        TNumberedObjectList.Remove
 00642894    mov         eax,dword ptr [ebx+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 00642897    call        TNumberedObjectList.ValidCount
 0064289C    cmp         eax,dword ptr [ebx+6C];TWiimoteManager.FMaxWiimoteUsed:Integer
>0064289F    jl          006428F5
 006428A1    mov         eax,dword ptr [ebx+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 006428A4    call        TNumberedObjectList.ValidCount
 006428A9    cmp         eax,dword ptr [ebx+7C];TWiimoteManager.FMaxBalanceBoardUsed:Integer
>006428AC    jl          006428F5
 006428AE    mov         eax,dword ptr [ebx+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 006428B1    call        TNumberedObjectList.ValidCount
 006428B6    cmp         eax,dword ptr [ebx+70];TWiimoteManager.FMaxGuitarUsed:Integer
>006428B9    jl          006428F5
 006428BB    mov         eax,dword ptr [ebx+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 006428BE    call        TNumberedObjectList.ValidCount
 006428C3    cmp         eax,dword ptr [ebx+74];TWiimoteManager.FMaxDrumsUsed:Integer
>006428C6    jl          006428F5
 006428C8    cmp         byte ptr [ebx+100],0;TWiimoteManager.FGUIMode:Boolean
>006428CF    jne         006428F5
 006428D1    cmp         byte ptr [ebx+102],0;TWiimoteManager.FUseAllWiimotes:Boolean
>006428D8    jne         006428F5
 006428DA    cmp         byte ptr [ebx+103],0;TWiimoteManager.FUseAllGuitars:Boolean
>006428E1    jne         006428F5
 006428E3    cmp         byte ptr [ebx+104],0;TWiimoteManager.FUseAllDrums:Boolean
>006428EA    jne         006428F5
 006428EC    cmp         byte ptr [ebx+106],0;TWiimoteManager.FUseAllBalanceBoards:Boolean
>006428F3    je          006428FC
 006428F5    call        00600DEC
>006428FA    jmp         00642901
 006428FC    call        00600DF4
 00642901    mov         eax,dword ptr [ebx+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 00642904    call        TNumberedObjectList.ValidCount
 00642909    mov         esi,eax
 0064290B    mov         eax,dword ptr [ebx+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 0064290E    call        TNumberedObjectList.ValidCount
 00642913    add         esi,eax
 00642915    mov         eax,dword ptr [ebx+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 00642918    call        TNumberedObjectList.ValidCount
 0064291D    add         esi,eax
 0064291F    test        esi,esi
>00642921    jne         00642928
 00642923    call        00600DFC
 00642928    pop         esi
 00642929    pop         ebx
 0064292A    ret
*}
end;

//0064292C
procedure TWiimoteManager.SetAllModes;
begin
{*
 0064292C    ret
*}
end;

//00642930
procedure TWiimoteManager.StartCompileTime;
begin
{*
 00642930    push        ebx
 00642931    mov         ebx,eax
 00642933    mov         byte ptr [ebx+123],0;TWiimoteManager.FUseWiimoteDotGuitar:Boolean
 0064293A    mov         byte ptr [ebx+124],0;TWiimoteManager.FUseWiimoteDotDrums:Boolean
 00642941    mov         byte ptr [ebx+125],0;TWiimoteManager.FUseWiimoteDotTurntable:Boolean
 00642948    mov         byte ptr [ebx+126],0;TWiimoteManager.FUseWiimoteDotBalanceBoard:Boolean
 0064294F    mov         byte ptr [ebx+11A],0;TWiimoteManager.FUseClassic:Boolean
 00642956    mov         byte ptr [ebx+128],0;TWiimoteManager.FUseBladeFXOverflow:Boolean
 0064295D    xor         eax,eax
 0064295F    mov         dword ptr [ebx+80],eax;TWiimoteManager.FMaxSixaxisUsed:Integer
 00642965    xor         eax,eax
 00642967    mov         dword ptr [ebx+6C],eax;TWiimoteManager.FMaxWiimoteUsed:Integer
 0064296A    xor         eax,eax
 0064296C    mov         dword ptr [ebx+70],eax;TWiimoteManager.FMaxGuitarUsed:Integer
 0064296F    xor         eax,eax
 00642971    mov         dword ptr [ebx+74],eax;TWiimoteManager.FMaxDrumsUsed:Integer
 00642974    xor         eax,eax
 00642976    mov         dword ptr [ebx+78],eax;TWiimoteManager.FMaxTurntableUsed:Integer
 00642979    xor         eax,eax
 0064297B    mov         dword ptr [ebx+7C],eax;TWiimoteManager.FMaxBalanceBoardUsed:Integer
 0064297E    mov         byte ptr [ebx+102],0;TWiimoteManager.FUseAllWiimotes:Boolean
 00642985    mov         byte ptr [ebx+103],0;TWiimoteManager.FUseAllGuitars:Boolean
 0064298C    mov         byte ptr [ebx+104],0;TWiimoteManager.FUseAllDrums:Boolean
 00642993    mov         byte ptr [ebx+105],0;TWiimoteManager.FUseAllTurntables:Boolean
 0064299A    mov         byte ptr [ebx+106],0;TWiimoteManager.FUseAllBalanceBoards:Boolean
 006429A1    mov         byte ptr [ebx+107],0;TWiimoteManager.FUseAllSixaxes:Boolean
 006429A8    mov         byte ptr [ebx+108],0;TWiimoteManager.FUseAllNavs:Boolean
 006429AF    mov         eax,dword ptr [ebx+0F0];TWiimoteManager.FSixaxesUsed::1
 006429B5    call        @DynArrayHigh
 006429BA    test        eax,eax
>006429BC    jl          006429CF
 006429BE    inc         eax
 006429BF    xor         edx,edx
 006429C1    mov         ecx,dword ptr [ebx+0F0];TWiimoteManager.FSixaxesUsed::1
 006429C7    mov         byte ptr [ecx+edx],0
 006429CB    inc         edx
 006429CC    dec         eax
>006429CD    jne         006429C1
 006429CF    mov         eax,dword ptr [ebx+0F4];TWiimoteManager.FNavsUsed::1
 006429D5    call        @DynArrayHigh
 006429DA    test        eax,eax
>006429DC    jl          006429EF
 006429DE    inc         eax
 006429DF    xor         edx,edx
 006429E1    mov         ecx,dword ptr [ebx+0F4];TWiimoteManager.FNavsUsed::1
 006429E7    mov         byte ptr [ecx+edx],0
 006429EB    inc         edx
 006429EC    dec         eax
>006429ED    jne         006429E1
 006429EF    mov         eax,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 006429F5    call        @DynArrayHigh
 006429FA    test        eax,eax
>006429FC    jl          00642A0F
 006429FE    inc         eax
 006429FF    xor         edx,edx
 00642A01    mov         ecx,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 00642A07    mov         byte ptr [ecx+edx],0
 00642A0B    inc         edx
 00642A0C    dec         eax
>00642A0D    jne         00642A01
 00642A0F    mov         eax,dword ptr [ebx+98];TWiimoteManager.FGuitarsUsed::1
 00642A15    call        @DynArrayHigh
 00642A1A    test        eax,eax
>00642A1C    jl          00642A2F
 00642A1E    inc         eax
 00642A1F    xor         edx,edx
 00642A21    mov         ecx,dword ptr [ebx+98];TWiimoteManager.FGuitarsUsed::1
 00642A27    mov         byte ptr [ecx+edx],0
 00642A2B    inc         edx
 00642A2C    dec         eax
>00642A2D    jne         00642A21
 00642A2F    mov         eax,dword ptr [ebx+9C];TWiimoteManager.FDrumsUsed::1
 00642A35    call        @DynArrayHigh
 00642A3A    test        eax,eax
>00642A3C    jl          00642A4F
 00642A3E    inc         eax
 00642A3F    xor         edx,edx
 00642A41    mov         ecx,dword ptr [ebx+9C];TWiimoteManager.FDrumsUsed::1
 00642A47    mov         byte ptr [ecx+edx],0
 00642A4B    inc         edx
 00642A4C    dec         eax
>00642A4D    jne         00642A41
 00642A4F    mov         eax,dword ptr [ebx+0A0];TWiimoteManager.FTurntablesUsed::1
 00642A55    call        @DynArrayHigh
 00642A5A    test        eax,eax
>00642A5C    jl          00642A6F
 00642A5E    inc         eax
 00642A5F    xor         edx,edx
 00642A61    mov         ecx,dword ptr [ebx+0A0];TWiimoteManager.FTurntablesUsed::1
 00642A67    mov         byte ptr [ecx+edx],0
 00642A6B    inc         edx
 00642A6C    dec         eax
>00642A6D    jne         00642A61
 00642A6F    mov         eax,dword ptr [ebx+0A4];TWiimoteManager.FBalanceBoardsUsed::1
 00642A75    call        @DynArrayHigh
 00642A7A    test        eax,eax
>00642A7C    jl          00642A8F
 00642A7E    inc         eax
 00642A7F    xor         edx,edx
 00642A81    mov         ecx,dword ptr [ebx+0A4];TWiimoteManager.FBalanceBoardsUsed::1
 00642A87    mov         byte ptr [ecx+edx],0
 00642A8B    inc         edx
 00642A8C    dec         eax
>00642A8D    jne         00642A81
 00642A8F    mov         eax,dword ptr [ebx+0A8];TWiimoteManager.FForcesUsed::1
 00642A95    call        @DynArrayHigh
 00642A9A    test        eax,eax
>00642A9C    jl          00642AAF
 00642A9E    inc         eax
 00642A9F    xor         edx,edx
 00642AA1    mov         ecx,dword ptr [ebx+0A8];TWiimoteManager.FForcesUsed::1
 00642AA7    mov         byte ptr [ecx+edx],0
 00642AAB    inc         edx
 00642AAC    dec         eax
>00642AAD    jne         00642AA1
 00642AAF    mov         eax,dword ptr [ebx+0AC];TWiimoteManager.FIRsUsed::1
 00642AB5    call        @DynArrayHigh
 00642ABA    test        eax,eax
>00642ABC    jl          00642ACF
 00642ABE    inc         eax
 00642ABF    xor         edx,edx
 00642AC1    mov         ecx,dword ptr [ebx+0AC];TWiimoteManager.FIRsUsed::1
 00642AC7    mov         byte ptr [ecx+edx],0
 00642ACB    inc         edx
 00642ACC    dec         eax
>00642ACD    jne         00642AC1
 00642ACF    mov         eax,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00642AD5    call        @DynArrayHigh
 00642ADA    test        eax,eax
>00642ADC    jl          00642AEF
 00642ADE    inc         eax
 00642ADF    xor         edx,edx
 00642AE1    mov         ecx,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00642AE7    mov         byte ptr [ecx+edx],0
 00642AEB    inc         edx
 00642AEC    dec         eax
>00642AED    jne         00642AE1
 00642AEF    mov         eax,dword ptr [ebx+0B4];TWiimoteManager.FMotionPlusesUsed::1
 00642AF5    call        @DynArrayHigh
 00642AFA    test        eax,eax
>00642AFC    jl          00642B0F
 00642AFE    inc         eax
 00642AFF    xor         edx,edx
 00642B01    mov         ecx,dword ptr [ebx+0B4];TWiimoteManager.FMotionPlusesUsed::1
 00642B07    mov         byte ptr [ecx+edx],0
 00642B0B    inc         edx
 00642B0C    dec         eax
>00642B0D    jne         00642B01
 00642B0F    mov         eax,dword ptr [ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 00642B15    call        @DynArrayHigh
 00642B1A    test        eax,eax
>00642B1C    jl          00642B2F
 00642B1E    inc         eax
 00642B1F    xor         edx,edx
 00642B21    mov         ecx,dword ptr [ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 00642B27    mov         byte ptr [ecx+edx],0
 00642B2B    inc         edx
 00642B2C    dec         eax
>00642B2D    jne         00642B21
 00642B2F    mov         eax,dword ptr [ebx+0BC];TWiimoteManager.F3FsUsed::1
 00642B35    call        @DynArrayHigh
 00642B3A    test        eax,eax
>00642B3C    jl          00642B4F
 00642B3E    inc         eax
 00642B3F    xor         edx,edx
 00642B41    mov         ecx,dword ptr [ebx+0BC];TWiimoteManager.F3FsUsed::1
 00642B47    mov         byte ptr [ecx+edx],0
 00642B4B    inc         edx
 00642B4C    dec         eax
>00642B4D    jne         00642B41
 00642B4F    mov         eax,dword ptr [ebx+0C0];TWiimoteManager.FGuitarForcesUsed::1
 00642B55    call        @DynArrayHigh
 00642B5A    test        eax,eax
>00642B5C    jl          00642B6F
 00642B5E    inc         eax
 00642B5F    xor         edx,edx
 00642B61    mov         ecx,dword ptr [ebx+0C0];TWiimoteManager.FGuitarForcesUsed::1
 00642B67    mov         byte ptr [ecx+edx],0
 00642B6B    inc         edx
 00642B6C    dec         eax
>00642B6D    jne         00642B61
 00642B6F    mov         eax,dword ptr [ebx+0C4];TWiimoteManager.FGuitarIRsUsed::1
 00642B75    call        @DynArrayHigh
 00642B7A    test        eax,eax
>00642B7C    jl          00642B8F
 00642B7E    inc         eax
 00642B7F    xor         edx,edx
 00642B81    mov         ecx,dword ptr [ebx+0C4];TWiimoteManager.FGuitarIRsUsed::1
 00642B87    mov         byte ptr [ecx+edx],0
 00642B8B    inc         edx
 00642B8C    dec         eax
>00642B8D    jne         00642B81
 00642B8F    mov         eax,dword ptr [ebx+0C8];TWiimoteManager.FGuitarSpeakersUsed::1
 00642B95    call        @DynArrayHigh
 00642B9A    test        eax,eax
>00642B9C    jl          00642BAF
 00642B9E    inc         eax
 00642B9F    xor         edx,edx
 00642BA1    mov         ecx,dword ptr [ebx+0C8];TWiimoteManager.FGuitarSpeakersUsed::1
 00642BA7    mov         byte ptr [ecx+edx],0
 00642BAB    inc         edx
 00642BAC    dec         eax
>00642BAD    jne         00642BA1
 00642BAF    mov         eax,dword ptr [ebx+0CC];TWiimoteManager.FGuitar3FsUsed::1
 00642BB5    call        @DynArrayHigh
 00642BBA    test        eax,eax
>00642BBC    jl          00642BCF
 00642BBE    inc         eax
 00642BBF    xor         edx,edx
 00642BC1    mov         ecx,dword ptr [ebx+0CC];TWiimoteManager.FGuitar3FsUsed::1
 00642BC7    mov         byte ptr [ecx+edx],0
 00642BCB    inc         edx
 00642BCC    dec         eax
>00642BCD    jne         00642BC1
 00642BCF    mov         eax,dword ptr [ebx+0D0];TWiimoteManager.FDrumsForcesUsed::1
 00642BD5    call        @DynArrayHigh
 00642BDA    test        eax,eax
>00642BDC    jl          00642BEF
 00642BDE    inc         eax
 00642BDF    xor         edx,edx
 00642BE1    mov         ecx,dword ptr [ebx+0D0];TWiimoteManager.FDrumsForcesUsed::1
 00642BE7    mov         byte ptr [ecx+edx],0
 00642BEB    inc         edx
 00642BEC    dec         eax
>00642BED    jne         00642BE1
 00642BEF    mov         eax,dword ptr [ebx+0D4];TWiimoteManager.FDrumsIRsUsed::1
 00642BF5    call        @DynArrayHigh
 00642BFA    test        eax,eax
>00642BFC    jl          00642C0F
 00642BFE    inc         eax
 00642BFF    xor         edx,edx
 00642C01    mov         ecx,dword ptr [ebx+0D4];TWiimoteManager.FDrumsIRsUsed::1
 00642C07    mov         byte ptr [ecx+edx],0
 00642C0B    inc         edx
 00642C0C    dec         eax
>00642C0D    jne         00642C01
 00642C0F    mov         eax,dword ptr [ebx+0D8];TWiimoteManager.FDrumsSpeakersUsed::1
 00642C15    call        @DynArrayHigh
 00642C1A    test        eax,eax
>00642C1C    jl          00642C2F
 00642C1E    inc         eax
 00642C1F    xor         edx,edx
 00642C21    mov         ecx,dword ptr [ebx+0D8];TWiimoteManager.FDrumsSpeakersUsed::1
 00642C27    mov         byte ptr [ecx+edx],0
 00642C2B    inc         edx
 00642C2C    dec         eax
>00642C2D    jne         00642C21
 00642C2F    mov         eax,dword ptr [ebx+0DC];TWiimoteManager.FDrums3FsUsed::1
 00642C35    call        @DynArrayHigh
 00642C3A    test        eax,eax
>00642C3C    jl          00642C4F
 00642C3E    inc         eax
 00642C3F    xor         edx,edx
 00642C41    mov         ecx,dword ptr [ebx+0DC];TWiimoteManager.FDrums3FsUsed::1
 00642C47    mov         byte ptr [ecx+edx],0
 00642C4B    inc         edx
 00642C4C    dec         eax
>00642C4D    jne         00642C41
 00642C4F    mov         eax,dword ptr [ebx+0E0];TWiimoteManager.FTurntableForcesUsed::1
 00642C55    call        @DynArrayHigh
 00642C5A    test        eax,eax
>00642C5C    jl          00642C6F
 00642C5E    inc         eax
 00642C5F    xor         edx,edx
 00642C61    mov         ecx,dword ptr [ebx+0E0];TWiimoteManager.FTurntableForcesUsed::1
 00642C67    mov         byte ptr [ecx+edx],0
 00642C6B    inc         edx
 00642C6C    dec         eax
>00642C6D    jne         00642C61
 00642C6F    mov         eax,dword ptr [ebx+0E4];TWiimoteManager.FTurntableIRsUsed::1
 00642C75    call        @DynArrayHigh
 00642C7A    test        eax,eax
>00642C7C    jl          00642C8F
 00642C7E    inc         eax
 00642C7F    xor         edx,edx
 00642C81    mov         ecx,dword ptr [ebx+0E4];TWiimoteManager.FTurntableIRsUsed::1
 00642C87    mov         byte ptr [ecx+edx],0
 00642C8B    inc         edx
 00642C8C    dec         eax
>00642C8D    jne         00642C81
 00642C8F    mov         eax,dword ptr [ebx+0E8];TWiimoteManager.FTurntableSpeakersUsed::1
 00642C95    call        @DynArrayHigh
 00642C9A    test        eax,eax
>00642C9C    jl          00642CAF
 00642C9E    inc         eax
 00642C9F    xor         edx,edx
 00642CA1    mov         ecx,dword ptr [ebx+0E8];TWiimoteManager.FTurntableSpeakersUsed::1
 00642CA7    mov         byte ptr [ecx+edx],0
 00642CAB    inc         edx
 00642CAC    dec         eax
>00642CAD    jne         00642CA1
 00642CAF    mov         eax,dword ptr [ebx+0EC];TWiimoteManager.FTurntable3FsUsed::1
 00642CB5    call        @DynArrayHigh
 00642CBA    test        eax,eax
>00642CBC    jl          00642CCF
 00642CBE    inc         eax
 00642CBF    xor         edx,edx
 00642CC1    mov         ecx,dword ptr [ebx+0EC];TWiimoteManager.FTurntable3FsUsed::1
 00642CC7    mov         byte ptr [ecx+edx],0
 00642CCB    inc         edx
 00642CCC    dec         eax
>00642CCD    jne         00642CC1
 00642CCF    mov         byte ptr [ebx+118],0;TWiimoteManager.FUseWiimote:Boolean
 00642CD6    mov         byte ptr [ebx+119],0;TWiimoteManager.FUseGuitar:Boolean
 00642CDD    mov         byte ptr [ebx+11C],0;TWiimoteManager.FUseDrums:Boolean
 00642CE4    mov         byte ptr [ebx+11D],0;TWiimoteManager.FUseTurntable:Boolean
 00642CEB    mov         byte ptr [ebx+11A],0;TWiimoteManager.FUseClassic:Boolean
 00642CF2    mov         byte ptr [ebx+11B],0;TWiimoteManager.FUseBalanceBoard:Boolean
 00642CF9    mov         byte ptr [ebx+11E],0;TWiimoteManager.FUseForce:Boolean
 00642D00    mov         byte ptr [ebx+11F],0;TWiimoteManager.FUseIR:Boolean
 00642D07    mov         byte ptr [ebx+120],0;TWiimoteManager.FUseExpansion:Boolean
 00642D0E    mov         byte ptr [ebx+127],0;TWiimoteManager.FUseMotionPlus:Boolean
 00642D15    mov         byte ptr [ebx+121],0;TWiimoteManager.FUseSpeaker:Boolean
 00642D1C    mov         byte ptr [ebx+122],0;TWiimoteManager.FUse3F:Boolean
 00642D23    mov         byte ptr [ebx+129],0;TWiimoteManager.FUseSixaxis:Boolean
 00642D2A    mov         byte ptr [ebx+12C],0;TWiimoteManager.FUseSixaxisGyro:Boolean
 00642D31    mov         byte ptr [ebx+12A],0;TWiimoteManager.FUseNav:Boolean
 00642D38    mov         byte ptr [ebx+12D],0;TWiimoteManager.FUseNavGyro:Boolean
 00642D3F    mov         byte ptr [ebx+12E],0;TWiimoteManager.FUseDualShock3:Boolean
 00642D46    mov         byte ptr [ebx+12F],0;TWiimoteManager.FUseLightstone:Boolean
 00642D4D    mov         byte ptr [ebx+131],0;TWiimoteManager.FUseSpacePoint:Boolean
 00642D54    mov         byte ptr [ebx+130],0;TWiimoteManager.FUseNIA:Boolean
 00642D5B    pop         ebx
 00642D5C    ret
*}
end;

//00642D60
procedure TWiimoteManager.StartGUI;
begin
{*
 00642D60    push        ebx
 00642D61    mov         ebx,eax
 00642D63    cmp         byte ptr [ebx+101],0;TWiimoteManager.FRunning:Boolean
>00642D6A    jne         00642E0F
 00642D70    cmp         byte ptr [ebx+100],0;TWiimoteManager.FGUIMode:Boolean
>00642D77    jne         00642E0F
 00642D7D    mov         eax,ebx
 00642D7F    call        TWiimoteManager.StartCompileTime
 00642D84    push        0
 00642D86    push        0
 00642D88    xor         ecx,ecx
 00642D8A    xor         edx,edx
 00642D8C    mov         eax,ebx
 00642D8E    call        TWiimoteManager.UseAllDrums
 00642D93    push        0
 00642D95    push        0
 00642D97    xor         ecx,ecx
 00642D99    mov         dl,1
 00642D9B    mov         eax,ebx
 00642D9D    call        TWiimoteManager.UseAllGuitars
 00642DA2    push        0
 00642DA4    push        0
 00642DA6    xor         ecx,ecx
 00642DA8    mov         dl,1
 00642DAA    mov         eax,ebx
 00642DAC    call        TWiimoteManager.UseAllTurntables
 00642DB1    mov         eax,ebx
 00642DB3    call        TWiimoteManager.UseAllBalanceBoards
 00642DB8    push        1
 00642DBA    push        0
 00642DBC    push        0
 00642DBE    push        1
 00642DC0    mov         cl,1
 00642DC2    mov         dl,1
 00642DC4    mov         eax,ebx
 00642DC6    call        TWiimoteManager.UseAllWiimotes
 00642DCB    mov         eax,ebx
 00642DCD    call        TWiimoteManager.UseAllSixaxes
 00642DD2    mov         eax,ebx
 00642DD4    call        TWiimoteManager.UseAllSpacePoints
 00642DD9    xor         edx,edx
 00642DDB    mov         eax,ebx
 00642DDD    call        TWiimoteManager.UseLightstone
 00642DE2    call        00600F68
 00642DE7    call        00600DEC
 00642DEC    mov         byte ptr [ebx+100],1;TWiimoteManager.FGUIMode:Boolean
 00642DF3    mov         eax,ebx
 00642DF5    call        TWiimoteManager.StartWiimotes
 00642DFA    mov         eax,ebx
 00642DFC    call        TWiimoteManager.StartSixaxes
 00642E01    mov         eax,ebx
 00642E03    call        TWiimoteManager.StartSpacePoints
 00642E08    mov         eax,ebx
 00642E0A    call        TWiimoteManager.StartLightstones
 00642E0F    pop         ebx
 00642E10    ret
*}
end;

//00642E14
procedure TWiimoteManager.StartLightstones;
begin
{*
 00642E14    push        ebx
 00642E15    push        esi
 00642E16    push        edi
 00642E17    push        ebp
 00642E18    mov         esi,eax
 00642E1A    mov         eax,dword ptr [esi+48];TWiimoteManager.FDiscoveredLightstones:TObjectList
 00642E1D    mov         edi,dword ptr [eax+8];TObjectList.FCount:Integer
 00642E20    dec         edi
 00642E21    test        edi,edi
>00642E23    jl          00642E60
 00642E25    inc         edi
 00642E26    xor         ebp,ebp
 00642E28    mov         eax,dword ptr [esi+48];TWiimoteManager.FDiscoveredLightstones:TObjectList
 00642E2B    mov         edx,ebp
 00642E2D    call        TList.Get
 00642E32    mov         ebx,eax
 00642E34    test        ebx,ebx
>00642E36    je          00642E5C
 00642E38    mov         byte ptr [ebx+18],1
 00642E3C    mov         edx,ebx
 00642E3E    mov         eax,dword ptr [esi+68];TWiimoteManager.FConnectedLightstones:TNumberedObjectList
 00642E41    call        TList.IndexOf
 00642E46    inc         eax
 00642E47    test        eax,eax
>00642E49    jg          00642E56
 00642E4B    mov         eax,dword ptr [esi+68];TWiimoteManager.FConnectedLightstones:TNumberedObjectList
 00642E4E    mov         edx,ebx
 00642E50    call        TNumberedObjectList.Add
 00642E55    inc         eax
 00642E56    mov         dword ptr [ebx+9C],eax
 00642E5C    inc         ebp
 00642E5D    dec         edi
>00642E5E    jne         00642E28
 00642E60    pop         ebp
 00642E61    pop         edi
 00642E62    pop         esi
 00642E63    pop         ebx
 00642E64    ret
*}
end;

//00642E68
procedure TWiimoteManager.StartRuntime;
begin
{*
 00642E68    push        ebx
 00642E69    mov         ebx,eax
 00642E6B    cmp         byte ptr [ebx+101],0;TWiimoteManager.FRunning:Boolean
>00642E72    jne         00642F17
 00642E78    cmp         byte ptr [ebx+100],0;TWiimoteManager.FGUIMode:Boolean
>00642E7F    jne         00642F17
 00642E85    cmp         byte ptr [ebx+118],0;TWiimoteManager.FUseWiimote:Boolean
>00642E8C    jne         00642EBB
 00642E8E    cmp         byte ptr [ebx+129],0;TWiimoteManager.FUseSixaxis:Boolean
>00642E95    jne         00642EBB
 00642E97    cmp         byte ptr [ebx+12A],0;TWiimoteManager.FUseNav:Boolean
>00642E9E    jne         00642EBB
 00642EA0    cmp         byte ptr [ebx+12B],0;TWiimoteManager.FUseMove:Boolean
>00642EA7    jne         00642EBB
 00642EA9    cmp         byte ptr [ebx+12F],0;TWiimoteManager.FUseLightstone:Boolean
>00642EB0    jne         00642EBB
 00642EB2    cmp         byte ptr [ebx+130],0;TWiimoteManager.FUseNIA:Boolean
>00642EB9    je          00642F17
 00642EBB    call        00600F68
 00642EC0    call        00600DEC
 00642EC5    mov         byte ptr [ebx+101],1;TWiimoteManager.FRunning:Boolean
 00642ECC    cmp         byte ptr [ebx+118],0;TWiimoteManager.FUseWiimote:Boolean
>00642ED3    jne         00642EDE
 00642ED5    cmp         byte ptr [ebx+12B],0;TWiimoteManager.FUseMove:Boolean
>00642EDC    je          00642EE5
 00642EDE    mov         eax,ebx
 00642EE0    call        TWiimoteManager.StartWiimotes
 00642EE5    cmp         byte ptr [ebx+129],0;TWiimoteManager.FUseSixaxis:Boolean
>00642EEC    jne         00642F00
 00642EEE    cmp         byte ptr [ebx+12A],0;TWiimoteManager.FUseNav:Boolean
>00642EF5    jne         00642F00
 00642EF7    cmp         byte ptr [ebx+132],0;TWiimoteManager.FUseKinect:Boolean
>00642EFE    je          00642F07
 00642F00    mov         eax,ebx
 00642F02    call        TWiimoteManager.StartSixaxes
 00642F07    cmp         byte ptr [ebx+12F],0;TWiimoteManager.FUseLightstone:Boolean
>00642F0E    je          00642F17
 00642F10    mov         eax,ebx
 00642F12    call        TWiimoteManager.StartLightstones
 00642F17    pop         ebx
 00642F18    ret
*}
end;

//00642F1C
procedure TWiimoteManager.StartSixaxes;
begin
{*
 00642F1C    push        ebp
 00642F1D    mov         ebp,esp
 00642F1F    mov         ecx,0A
 00642F24    push        0
 00642F26    push        0
 00642F28    dec         ecx
>00642F29    jne         00642F24
 00642F2B    push        ebx
 00642F2C    push        esi
 00642F2D    push        edi
 00642F2E    mov         dword ptr [ebp-4],eax
 00642F31    xor         eax,eax
 00642F33    push        ebp
 00642F34    push        64346C
 00642F39    push        dword ptr fs:[eax]
 00642F3C    mov         dword ptr fs:[eax],esp
 00642F3F    call        0061992C
 00642F44    test        al,al
>00642F46    je          00643444
 00642F4C    mov         eax,[0078CD14];^gvar_0081D8E8:Pointer
 00642F51    mov         eax,dword ptr [eax]
 00642F53    call        eax
 00642F55    test        eax,eax
>00642F57    jl          00643444
 00642F5D    mov         eax,[0078D20C];^gvar_0081D8EC:Pointer
 00642F62    mov         eax,dword ptr [eax]
 00642F64    call        eax
 00642F66    test        eax,eax
>00642F68    jl          00643444
 00642F6E    mov         eax,[0078CDE4];^gvar_0081D8F0:Pointer
 00642F73    mov         eax,dword ptr [eax]
 00642F75    call        eax
 00642F77    mov         [0081ECB4],eax;gvar_0081ECB4
 00642F7C    cmp         dword ptr ds:[81ECB4],0;gvar_0081ECB4
>00642F83    je          00643444
 00642F89    mov         edi,dword ptr ds:[81ECB4];gvar_0081ECB4
 00642F8F    test        edi,edi
>00642F91    je          00642FFE
 00642F93    mov         ebx,dword ptr [edi+208]
 00642F99    test        ebx,ebx
>00642F9B    je          00642FF8
 00642F9D    cmp         word ptr [ebx+214],54C
>00642FA6    jne         00642FF2
 00642FA8    cmp         word ptr [ebx+216],268
>00642FB1    jne         00642FF2
 00642FB3    push        ebx
 00642FB4    mov         ecx,dword ptr [ebp-4]
 00642FB7    mov         dl,1
 00642FB9    mov         eax,[00629714];TSixaxisObject
 00642FBE    call        TSixaxisObject.Create;TSixaxisObject.Create
 00642FC3    mov         esi,eax
 00642FC5    mov         eax,dword ptr [ebp-4]
 00642FC8    movzx       eax,byte ptr [eax+12C];TWiimoteManager.FUseSixaxisGyro:Boolean
 00642FCF    mov         byte ptr [esi+477],al;TSixaxisObject.FUseGyro:Boolean
 00642FD5    mov         eax,dword ptr [ebp-4]
 00642FD8    movzx       eax,byte ptr [eax+12E];TWiimoteManager.FUseDualShock3:Boolean
 00642FDF    mov         byte ptr [esi+478],al;TSixaxisObject.FUseDualShock3:Boolean
 00642FE5    mov         edx,esi
 00642FE7    mov         eax,dword ptr [ebp-4]
 00642FEA    mov         eax,dword ptr [eax+40];TWiimoteManager.FDiscoveredSixaxes:TObjectList
 00642FED    call        TList.Add
 00642FF2    mov         ebx,dword ptr [ebx]
 00642FF4    test        ebx,ebx
>00642FF6    jne         00642F9D
 00642FF8    mov         edi,dword ptr [edi]
 00642FFA    test        edi,edi
>00642FFC    jne         00642F93
 00642FFE    mov         eax,dword ptr [ebp-4]
 00643001    mov         eax,dword ptr [eax+40];TWiimoteManager.FDiscoveredSixaxes:TObjectList
 00643004    mov         eax,dword ptr [eax+8];TObjectList.FCount:Integer
 00643007    dec         eax
 00643008    test        eax,eax
>0064300A    jl          006430A0
 00643010    inc         eax
 00643011    mov         dword ptr [ebp-0C],eax
 00643014    xor         edi,edi
 00643016    mov         eax,dword ptr [ebp-4]
 00643019    mov         eax,dword ptr [eax+40];TWiimoteManager.FDiscoveredSixaxes:TObjectList
 0064301C    mov         edx,edi
 0064301E    call        TList.Get
 00643023    mov         esi,eax
 00643025    test        esi,esi
>00643027    je          00643096
 00643029    cmp         byte ptr [esi+18],0
>0064302D    je          00643096
 0064302F    mov         edx,esi
 00643031    mov         eax,dword ptr [ebp-4]
 00643034    mov         eax,dword ptr [eax+60];TWiimoteManager.FConnectedSixaxes:TNumberedObjectList
 00643037    call        TList.IndexOf
 0064303C    mov         ebx,eax
 0064303E    inc         ebx
 0064303F    test        ebx,ebx
>00643041    jg          00643053
 00643043    mov         eax,dword ptr [ebp-4]
 00643046    mov         eax,dword ptr [eax+60];TWiimoteManager.FConnectedSixaxes:TNumberedObjectList
 00643049    mov         edx,esi
 0064304B    call        TNumberedObjectList.Add
 00643050    mov         ebx,eax
 00643052    inc         ebx
 00643053    mov         eax,esi
 00643055    mov         edx,dword ptr [eax]
 00643057    call        dword ptr [edx+2C]
 0064305A    mov         eax,dword ptr [ebp-4]
 0064305D    cmp         byte ptr [eax+107],0;TWiimoteManager.FUseAllSixaxes:Boolean
>00643064    je          0064306F
 00643066    mov         byte ptr [esi+476],1
>0064306D    jmp         0064308D
 0064306F    mov         eax,dword ptr [ebp-4]
 00643072    cmp         ebx,dword ptr [eax+80];TWiimoteManager.FMaxSixaxisUsed:Integer
>00643078    jg          0064308D
 0064307A    mov         eax,dword ptr [ebp-4]
 0064307D    mov         eax,dword ptr [eax+0F0];TWiimoteManager.FSixaxesUsed::1
 00643083    movzx       eax,byte ptr [eax+ebx]
 00643087    mov         byte ptr [esi+476],al
 0064308D    mov         edx,ebx
 0064308F    mov         eax,esi
 00643091    mov         ecx,dword ptr [eax]
 00643093    call        dword ptr [ecx+40]
 00643096    inc         edi
 00643097    dec         dword ptr [ebp-0C]
>0064309A    jne         00643016
 006430A0    xor         eax,eax
 006430A2    push        ebp
 006430A3    push        6430EC
 006430A8    push        dword ptr fs:[eax]
 006430AB    mov         dword ptr fs:[eax],esp
 006430AE    lea         edx,[ebp-14]
 006430B1    xor         eax,eax
 006430B3    call        ParamStr
 006430B8    mov         eax,dword ptr [ebp-14]
 006430BB    lea         edx,[ebp-10]
 006430BE    call        ExtractFileDir
 006430C3    lea         eax,[ebp-10]
 006430C6    mov         edx,643488;'\wiimote.ini'
 006430CB    call        @UStrCat
 006430D0    mov         ecx,dword ptr [ebp-10]
 006430D3    mov         dl,1
 006430D5    mov         eax,[004598F4];TIniFile
 006430DA    call        TCustomIniFile.Create;TIniFile.Create
 006430DF    mov         dword ptr [ebp-8],eax
 006430E2    xor         eax,eax
 006430E4    pop         edx
 006430E5    pop         ecx
 006430E6    pop         ecx
 006430E7    mov         dword ptr fs:[eax],edx
>006430EA    jmp         00643100
>006430EC    jmp         @HandleAnyException
 006430F1    call        @DoneExcept
>006430F6    jmp         00643444
 006430FB    call        @DoneExcept
 00643100    xor         eax,eax
 00643102    push        ebp
 00643103    push        643431
 00643108    push        dword ptr fs:[eax]
 0064310B    mov         dword ptr fs:[eax],esp
 0064310E    mov         eax,dword ptr [ebp-4]
 00643111    mov         eax,dword ptr [eax+60];TWiimoteManager.FConnectedSixaxes:TNumberedObjectList
 00643114    mov         eax,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 00643117    test        eax,eax
>00643119    jle         0064341B
 0064311F    mov         dword ptr [ebp-0C],eax
 00643122    mov         edi,1
 00643127    mov         edx,edi
 00643129    mov         eax,dword ptr [ebp-4]
 0064312C    call        TWiimoteManager.GetSixaxis
 00643131    mov         esi,eax
 00643133    push        8D
 00643135    lea         edx,[ebp-1C]
 00643138    mov         eax,edi
 0064313A    call        IntToStr
 0064313F    mov         ecx,dword ptr [ebp-1C]
 00643142    lea         eax,[ebp-18]
 00643145    mov         edx,6434B0;'Sixaxis'
 0064314A    call        @UStrCat3
 0064314F    mov         edx,dword ptr [ebp-18]
 00643152    mov         ecx,6434CC;'MinX'
 00643157    mov         eax,dword ptr [ebp-8]
 0064315A    mov         ebx,dword ptr [eax]
 0064315C    call        dword ptr [ebx+0C];TCustomIniFile.ReadInteger
 0064315F    mov         dword ptr [ebp-20],eax
 00643162    fild        dword ptr [ebp-20]
 00643165    fstp        qword ptr [esi+4B0];TSixaxisObject.MinX:Double
 0064316B    wait
 0064316C    push        73
 0064316E    lea         edx,[ebp-28]
 00643171    mov         eax,edi
 00643173    call        IntToStr
 00643178    mov         ecx,dword ptr [ebp-28]
 0064317B    lea         eax,[ebp-24]
 0064317E    mov         edx,6434B0;'Sixaxis'
 00643183    call        @UStrCat3
 00643188    mov         edx,dword ptr [ebp-24]
 0064318B    mov         ecx,6434E4;'MaxX'
 00643190    mov         eax,dword ptr [ebp-8]
 00643193    mov         ebx,dword ptr [eax]
 00643195    call        dword ptr [ebx+0C];TCustomIniFile.ReadInteger
 00643198    mov         dword ptr [ebp-20],eax
 0064319B    fild        dword ptr [ebp-20]
 0064319E    fstp        qword ptr [esi+4B8];TSixaxisObject.MaxX:Double
 006431A4    wait
 006431A5    push        8D
 006431A7    lea         edx,[ebp-30]
 006431AA    mov         eax,edi
 006431AC    call        IntToStr
 006431B1    mov         ecx,dword ptr [ebp-30]
 006431B4    lea         eax,[ebp-2C]
 006431B7    mov         edx,6434B0;'Sixaxis'
 006431BC    call        @UStrCat3
 006431C1    mov         edx,dword ptr [ebp-2C]
 006431C4    mov         ecx,6434FC;'MinY'
 006431C9    mov         eax,dword ptr [ebp-8]
 006431CC    mov         ebx,dword ptr [eax]
 006431CE    call        dword ptr [ebx+0C];TCustomIniFile.ReadInteger
 006431D1    mov         dword ptr [ebp-20],eax
 006431D4    fild        dword ptr [ebp-20]
 006431D7    fstp        qword ptr [esi+4C0];TSixaxisObject.MinY:Double
 006431DD    wait
 006431DE    push        73
 006431E0    lea         edx,[ebp-38]
 006431E3    mov         eax,edi
 006431E5    call        IntToStr
 006431EA    mov         ecx,dword ptr [ebp-38]
 006431ED    lea         eax,[ebp-34]
 006431F0    mov         edx,6434B0;'Sixaxis'
 006431F5    call        @UStrCat3
 006431FA    mov         edx,dword ptr [ebp-34]
 006431FD    mov         ecx,643514;'MaxY'
 00643202    mov         eax,dword ptr [ebp-8]
 00643205    mov         ebx,dword ptr [eax]
 00643207    call        dword ptr [ebx+0C];TCustomIniFile.ReadInteger
 0064320A    mov         dword ptr [ebp-20],eax
 0064320D    fild        dword ptr [ebp-20]
 00643210    fstp        qword ptr [esi+4C8];TSixaxisObject.MaxY:Double
 00643216    wait
 00643217    push        8D
 00643219    lea         edx,[ebp-40]
 0064321C    mov         eax,edi
 0064321E    call        IntToStr
 00643223    mov         ecx,dword ptr [ebp-40]
 00643226    lea         eax,[ebp-3C]
 00643229    mov         edx,6434B0;'Sixaxis'
 0064322E    call        @UStrCat3
 00643233    mov         edx,dword ptr [ebp-3C]
 00643236    mov         ecx,64352C;'MinZ'
 0064323B    mov         eax,dword ptr [ebp-8]
 0064323E    mov         ebx,dword ptr [eax]
 00643240    call        dword ptr [ebx+0C];TCustomIniFile.ReadInteger
 00643243    mov         dword ptr [ebp-20],eax
 00643246    fild        dword ptr [ebp-20]
 00643249    fstp        qword ptr [esi+4D0];TSixaxisObject.MinZ:Double
 0064324F    wait
 00643250    push        73
 00643252    lea         edx,[ebp-48]
 00643255    mov         eax,edi
 00643257    call        IntToStr
 0064325C    mov         ecx,dword ptr [ebp-48]
 0064325F    lea         eax,[ebp-44]
 00643262    mov         edx,6434B0;'Sixaxis'
 00643267    call        @UStrCat3
 0064326C    mov         edx,dword ptr [ebp-44]
 0064326F    mov         ecx,643544;'MaxZ'
 00643274    mov         eax,dword ptr [ebp-8]
 00643277    mov         ebx,dword ptr [eax]
 00643279    call        dword ptr [ebx+0C];TCustomIniFile.ReadInteger
 0064327C    mov         dword ptr [ebp-20],eax
 0064327F    fild        dword ptr [ebp-20]
 00643282    fstp        qword ptr [esi+4D8];TSixaxisObject.MaxZ:Double
 00643288    wait
 00643289    push        3FE849BA
 0064328E    push        5E353F7D
 00643293    lea         edx,[ebp-50]
 00643296    mov         eax,edi
 00643298    call        IntToStr
 0064329D    mov         ecx,dword ptr [ebp-50]
 006432A0    lea         eax,[ebp-4C]
 006432A3    mov         edx,6434B0;'Sixaxis'
 006432A8    call        @UStrCat3
 006432AD    mov         edx,dword ptr [ebp-4C]
 006432B0    mov         ecx,64355C;'DegreesPerRawGyro'
 006432B5    mov         eax,dword ptr [ebp-8]
 006432B8    mov         ebx,dword ptr [eax]
 006432BA    call        dword ptr [ebx+28];TCustomIniFile.ReadFloat
 006432BD    fstp        qword ptr [esi+230];TSixaxisObject.DegPerGyro:Double
 006432C3    wait
 006432C4    fld         qword ptr [esi+4B0];TSixaxisObject.MinX:Double
 006432CA    fadd        qword ptr [esi+4B8];TSixaxisObject.MaxX:Double
 006432D0    fdiv        dword ptr ds:[643580];2:Single
 006432D6    fstp        qword ptr [esi+300];TSixaxisObject.RawZeroForceX:Double
 006432DC    wait
 006432DD    mov         eax,dword ptr [esi+300];TSixaxisObject.RawZeroForceX:Double
 006432E3    mov         dword ptr [esi+278],eax;TSixaxisObject.cyx:Double
 006432E9    mov         eax,dword ptr [esi+304];TSixaxisObject.?f304:dword
 006432EF    mov         dword ptr [esi+27C],eax;TSixaxisObject.?f27C:dword
 006432F5    mov         eax,dword ptr [esi+300];TSixaxisObject.RawZeroForceX:Double
 006432FB    mov         dword ptr [esi+290],eax;TSixaxisObject.czx:Double
 00643301    mov         eax,dword ptr [esi+304];TSixaxisObject.?f304:dword
 00643307    mov         dword ptr [esi+294],eax;TSixaxisObject.?f294:dword
 0064330D    fld         qword ptr [esi+4C0];TSixaxisObject.MinY:Double
 00643313    fadd        qword ptr [esi+4C8];TSixaxisObject.MaxY:Double
 00643319    fdiv        dword ptr ds:[643580];2:Single
 0064331F    fstp        qword ptr [esi+308];TSixaxisObject.RawZeroForceY:Double
 00643325    wait
 00643326    mov         eax,dword ptr [esi+308];TSixaxisObject.RawZeroForceY:Double
 0064332C    mov         dword ptr [esi+268],eax;TSixaxisObject.cxy:Double
 00643332    mov         eax,dword ptr [esi+30C];TSixaxisObject.?f30C:dword
 00643338    mov         dword ptr [esi+26C],eax;TSixaxisObject.?f26C:dword
 0064333E    mov         eax,dword ptr [esi+308];TSixaxisObject.RawZeroForceY:Double
 00643344    mov         dword ptr [esi+298],eax;TSixaxisObject.czy:Double
 0064334A    mov         eax,dword ptr [esi+30C];TSixaxisObject.?f30C:dword
 00643350    mov         dword ptr [esi+29C],eax;TSixaxisObject.?f29C:dword
 00643356    fld         qword ptr [esi+4D0];TSixaxisObject.MinZ:Double
 0064335C    fadd        qword ptr [esi+4D8];TSixaxisObject.MaxZ:Double
 00643362    fdiv        dword ptr ds:[643580];2:Single
 00643368    fstp        qword ptr [esi+310];TSixaxisObject.RawZeroForceZ:Double
 0064336E    wait
 0064336F    mov         eax,dword ptr [esi+310];TSixaxisObject.RawZeroForceZ:Double
 00643375    mov         dword ptr [esi+270],eax;TSixaxisObject.cxz:Double
 0064337B    mov         eax,dword ptr [esi+314];TSixaxisObject.?f314:dword
 00643381    mov         dword ptr [esi+274],eax;TSixaxisObject.?f274:dword
 00643387    mov         eax,dword ptr [esi+310];TSixaxisObject.RawZeroForceZ:Double
 0064338D    mov         dword ptr [esi+288],eax;TSixaxisObject.cyz:Double
 00643393    mov         eax,dword ptr [esi+314];TSixaxisObject.?f314:dword
 00643399    mov         dword ptr [esi+28C],eax;TSixaxisObject.?f28C:dword
 0064339F    fld         qword ptr [esi+4B8];TSixaxisObject.MaxX:Double
 006433A5    fsub        qword ptr [esi+300];TSixaxisObject.RawZeroForceX:Double
 006433AB    fstp        qword ptr [esi+318];TSixaxisObject.RawForcePerGX:Double
 006433B1    wait
 006433B2    fld         qword ptr [esi+4C8];TSixaxisObject.MaxY:Double
 006433B8    fsub        qword ptr [esi+308];TSixaxisObject.RawZeroForceY:Double
 006433BE    fstp        qword ptr [esi+320];TSixaxisObject.RawForcePerGY:Double
 006433C4    wait
 006433C5    fld         qword ptr [esi+4D8];TSixaxisObject.MaxZ:Double
 006433CB    fsub        qword ptr [esi+310];TSixaxisObject.RawZeroForceZ:Double
 006433D1    fstp        qword ptr [esi+328];TSixaxisObject.RawForcePerGZ:Double
 006433D7    wait
 006433D8    fld         qword ptr [esi+300];TSixaxisObject.RawZeroForceX:Double
 006433DE    fadd        qword ptr [esi+318];TSixaxisObject.RawForcePerGX:Double
 006433E4    fstp        qword ptr [esi+260];TSixaxisObject.cxx:Double
 006433EA    wait
 006433EB    fld         qword ptr [esi+308];TSixaxisObject.RawZeroForceY:Double
 006433F1    fadd        qword ptr [esi+320];TSixaxisObject.RawForcePerGY:Double
 006433F7    fstp        qword ptr [esi+280];TSixaxisObject.cyy:Double
 006433FD    wait
 006433FE    fld         qword ptr [esi+310];TSixaxisObject.RawZeroForceZ:Double
 00643404    fadd        qword ptr [esi+328];TSixaxisObject.RawForcePerGZ:Double
 0064340A    fstp        qword ptr [esi+2A0];TSixaxisObject.czz:Double
 00643410    wait
 00643411    inc         edi
 00643412    dec         dword ptr [ebp-0C]
>00643415    jne         00643127
 0064341B    xor         eax,eax
 0064341D    pop         edx
 0064341E    pop         ecx
 0064341F    pop         ecx
 00643420    mov         dword ptr fs:[eax],edx
 00643423    push        643438
 00643428    mov         eax,dword ptr [ebp-8]
 0064342B    call        TObject.Free
 00643430    ret
>00643431    jmp         @HandleFinally
>00643436    jmp         00643428
 00643438    mov         eax,[0078D590];^Application:TApplication
 0064343D    mov         eax,dword ptr [eax]
 0064343F    call        TApplication.ProcessMessages
 00643444    xor         eax,eax
 00643446    pop         edx
 00643447    pop         ecx
 00643448    pop         ecx
 00643449    mov         dword ptr fs:[eax],edx
 0064344C    push        643473
 00643451    lea         eax,[ebp-50]
 00643454    mov         edx,0C
 00643459    call        @UStrArrayClr
 0064345E    lea         eax,[ebp-1C]
 00643461    mov         edx,4
 00643466    call        @UStrArrayClr
 0064346B    ret
>0064346C    jmp         @HandleFinally
>00643471    jmp         00643451
 00643473    pop         edi
 00643474    pop         esi
 00643475    pop         ebx
 00643476    mov         esp,ebp
 00643478    pop         ebp
 00643479    ret
*}
end;

//00643584
procedure TWiimoteManager.StartSpacePoints;
begin
{*
 00643584    push        ebx
 00643585    push        esi
 00643586    push        edi
 00643587    push        ebp
 00643588    mov         esi,eax
 0064358A    mov         eax,dword ptr [esi+44];TWiimoteManager.FDiscoveredSpacePoints:TObjectList
 0064358D    mov         edi,dword ptr [eax+8];TObjectList.FCount:Integer
 00643590    dec         edi
 00643591    test        edi,edi
>00643593    jl          006435D3
 00643595    inc         edi
 00643596    xor         ebp,ebp
 00643598    mov         eax,dword ptr [esi+44];TWiimoteManager.FDiscoveredSpacePoints:TObjectList
 0064359B    mov         edx,ebp
 0064359D    call        TList.Get
 006435A2    mov         ebx,eax
 006435A4    test        ebx,ebx
>006435A6    je          006435CF
 006435A8    mov         byte ptr [ebx+18],1
 006435AC    mov         edx,ebx
 006435AE    mov         eax,dword ptr [esi+64];TWiimoteManager.FConnectedSpacePoints:TNumberedObjectList
 006435B1    call        TList.IndexOf
 006435B6    inc         eax
 006435B7    test        eax,eax
>006435B9    jg          006435C6
 006435BB    mov         eax,dword ptr [esi+64];TWiimoteManager.FConnectedSpacePoints:TNumberedObjectList
 006435BE    mov         edx,ebx
 006435C0    call        TNumberedObjectList.Add
 006435C5    inc         eax
 006435C6    mov         edx,eax
 006435C8    mov         eax,ebx
 006435CA    call        TSpacePointObject.SetNumber
 006435CF    inc         ebp
 006435D0    dec         edi
>006435D1    jne         00643598
 006435D3    pop         ebp
 006435D4    pop         edi
 006435D5    pop         esi
 006435D6    pop         ebx
 006435D7    ret
*}
end;

//006435D8
procedure TWiimoteManager.StartWiimotes;
begin
{*
 006435D8    push        ebx
 006435D9    push        esi
 006435DA    push        edi
 006435DB    mov         ebx,eax
 006435DD    push        ebx
 006435DE    push        642310;TWiimoteManager.HidControllerEnumerate:Boolean
 006435E3    mov         eax,dword ptr [ebx+34];TWiimoteManager.HidController:TJvHidDeviceController
 006435E6    call        TJvHidDeviceController.SetOnEnumerate
 006435EB    mov         eax,dword ptr [ebx+34];TWiimoteManager.HidController:TJvHidDeviceController
 006435EE    call        TJvHidDeviceController.Enumerate
 006435F3    mov         byte ptr [ebx+133],1;TWiimoteManager.CanAddNewWiimotes:Boolean
 006435FA    mov         eax,ebx
 006435FC    call        TWiimoteManager.TestAllConnections
 00643601    cmp         byte ptr [ebx+102],0;TWiimoteManager.FUseAllWiimotes:Boolean
 00643608    cmp         byte ptr [ebx+100],0;TWiimoteManager.FGUIMode:Boolean
 0064360F    mov         eax,dword ptr [ebx+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 00643612    call        TNumberedObjectList.ValidCount
 00643617    cmp         eax,dword ptr [ebx+6C];TWiimoteManager.FMaxWiimoteUsed:Integer
>0064361A    jl          00643686
 0064361C    mov         eax,dword ptr [ebx+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 0064361F    call        TNumberedObjectList.ValidCount
 00643624    cmp         eax,dword ptr [ebx+7C];TWiimoteManager.FMaxBalanceBoardUsed:Integer
>00643627    jl          00643686
 00643629    mov         eax,dword ptr [ebx+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 0064362C    call        TNumberedObjectList.ValidCount
 00643631    cmp         eax,dword ptr [ebx+70];TWiimoteManager.FMaxGuitarUsed:Integer
>00643634    jl          00643686
 00643636    mov         eax,dword ptr [ebx+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 00643639    call        TNumberedObjectList.ValidCount
 0064363E    cmp         eax,dword ptr [ebx+74];TWiimoteManager.FMaxDrumsUsed:Integer
>00643641    jl          00643686
 00643643    mov         eax,dword ptr [ebx+5C];TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 00643646    call        TNumberedObjectList.ValidCount
 0064364B    cmp         eax,dword ptr [ebx+78];TWiimoteManager.FMaxTurntableUsed:Integer
>0064364E    jl          00643686
 00643650    cmp         byte ptr [ebx+100],0;TWiimoteManager.FGUIMode:Boolean
>00643657    jne         00643686
 00643659    cmp         byte ptr [ebx+102],0;TWiimoteManager.FUseAllWiimotes:Boolean
>00643660    jne         00643686
 00643662    cmp         byte ptr [ebx+103],0;TWiimoteManager.FUseAllGuitars:Boolean
>00643669    jne         00643686
 0064366B    cmp         byte ptr [ebx+104],0;TWiimoteManager.FUseAllDrums:Boolean
>00643672    jne         00643686
 00643674    cmp         byte ptr [ebx+105],0;TWiimoteManager.FUseAllTurntables:Boolean
>0064367B    jne         00643686
 0064367D    cmp         byte ptr [ebx+106],0;TWiimoteManager.FUseAllBalanceBoards:Boolean
>00643684    je          0064368D
 00643686    call        00600DEC
>0064368B    jmp         00643692
 0064368D    call        00600DF4
 00643692    mov         eax,dword ptr [ebx+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 00643695    call        TNumberedObjectList.ValidCount
 0064369A    mov         esi,eax
 0064369C    mov         eax,dword ptr [ebx+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 0064369F    call        TNumberedObjectList.ValidCount
 006436A4    add         esi,eax
 006436A6    mov         eax,dword ptr [ebx+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 006436A9    call        TNumberedObjectList.ValidCount
 006436AE    add         esi,eax
 006436B0    mov         eax,dword ptr [ebx+5C];TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 006436B3    call        TNumberedObjectList.ValidCount
 006436B8    add         esi,eax
 006436BA    test        esi,esi
>006436BC    jne         006436C3
 006436BE    call        00600DFC
 006436C3    mov         eax,dword ptr [ebx+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 006436C6    mov         esi,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 006436C9    dec         esi
 006436CA    test        esi,esi
>006436CC    jl          006436E8
 006436CE    inc         esi
 006436CF    xor         edi,edi
 006436D1    mov         eax,dword ptr [ebx+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 006436D4    mov         edx,edi
 006436D6    call        TList.Get
 006436DB    test        eax,eax
>006436DD    je          006436E4
 006436DF    call        TWiimoteObject.SetMode
 006436E4    inc         edi
 006436E5    dec         esi
>006436E6    jne         006436D1
 006436E8    mov         eax,dword ptr [ebx+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 006436EB    mov         esi,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 006436EE    dec         esi
 006436EF    test        esi,esi
>006436F1    jl          0064370D
 006436F3    inc         esi
 006436F4    xor         edi,edi
 006436F6    mov         eax,dword ptr [ebx+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 006436F9    mov         edx,edi
 006436FB    call        TList.Get
 00643700    test        eax,eax
>00643702    je          00643709
 00643704    call        TWiimoteObject.SetMode
 00643709    inc         edi
 0064370A    dec         esi
>0064370B    jne         006436F6
 0064370D    mov         eax,dword ptr [ebx+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 00643710    mov         esi,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 00643713    dec         esi
 00643714    test        esi,esi
>00643716    jl          00643732
 00643718    inc         esi
 00643719    xor         edi,edi
 0064371B    mov         eax,dword ptr [ebx+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 0064371E    mov         edx,edi
 00643720    call        TList.Get
 00643725    test        eax,eax
>00643727    je          0064372E
 00643729    call        TWiimoteObject.SetMode
 0064372E    inc         edi
 0064372F    dec         esi
>00643730    jne         0064371B
 00643732    mov         eax,dword ptr [ebx+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 00643735    mov         esi,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 00643738    dec         esi
 00643739    test        esi,esi
>0064373B    jl          00643757
 0064373D    inc         esi
 0064373E    xor         edi,edi
 00643740    mov         eax,dword ptr [ebx+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 00643743    mov         edx,edi
 00643745    call        TList.Get
 0064374A    test        eax,eax
>0064374C    je          00643753
 0064374E    call        TWiimoteObject.SetMode
 00643753    inc         edi
 00643754    dec         esi
>00643755    jne         00643740
 00643757    mov         eax,dword ptr [ebx+5C];TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 0064375A    mov         esi,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 0064375D    dec         esi
 0064375E    test        esi,esi
>00643760    jl          0064377C
 00643762    inc         esi
 00643763    xor         edi,edi
 00643765    mov         eax,dword ptr [ebx+5C];TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 00643768    mov         edx,edi
 0064376A    call        TList.Get
 0064376F    test        eax,eax
>00643771    je          00643778
 00643773    call        TWiimoteObject.SetMode
 00643778    inc         edi
 00643779    dec         esi
>0064377A    jne         00643765
 0064377C    mov         eax,[0078D590];^Application:TApplication
 00643781    mov         eax,dword ptr [eax]
 00643783    call        TApplication.ProcessMessages
 00643788    pop         edi
 00643789    pop         esi
 0064378A    pop         ebx
 0064378B    ret
*}
end;

//0064378C
procedure TWiimoteManager.StopGUI;
begin
{*
 0064378C    call        TWiimoteManager.StopRuntime
 00643791    ret
*}
end;

//00643794
procedure TWiimoteManager.StopRuntime;
begin
{*
 00643794    push        ebx
 00643795    mov         ebx,eax
 00643797    mov         byte ptr [ebx+133],0;TWiimoteManager.CanAddNewWiimotes:Boolean
 0064379E    call        00600DF4
 006437A3    mov         eax,dword ptr [ebx+60];TWiimoteManager.FConnectedSixaxes:TNumberedObjectList
 006437A6    mov         edx,dword ptr [eax]
 006437A8    call        dword ptr [edx+8];TList.Clear
 006437AB    mov         eax,dword ptr [ebx+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 006437AE    mov         edx,dword ptr [eax]
 006437B0    call        dword ptr [edx+8];TList.Clear
 006437B3    mov         eax,dword ptr [ebx+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 006437B6    mov         edx,dword ptr [eax]
 006437B8    call        dword ptr [edx+8];TList.Clear
 006437BB    mov         eax,dword ptr [ebx+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 006437BE    mov         edx,dword ptr [eax]
 006437C0    call        dword ptr [edx+8];TList.Clear
 006437C3    mov         eax,dword ptr [ebx+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 006437C6    mov         edx,dword ptr [eax]
 006437C8    call        dword ptr [edx+8];TList.Clear
 006437CB    mov         eax,dword ptr [ebx+5C];TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 006437CE    mov         edx,dword ptr [eax]
 006437D0    call        dword ptr [edx+8];TList.Clear
 006437D3    mov         eax,dword ptr [ebx+68];TWiimoteManager.FConnectedLightstones:TNumberedObjectList
 006437D6    mov         edx,dword ptr [eax]
 006437D8    call        dword ptr [edx+8];TList.Clear
 006437DB    mov         eax,dword ptr [ebx+64];TWiimoteManager.FConnectedSpacePoints:TNumberedObjectList
 006437DE    mov         edx,dword ptr [eax]
 006437E0    call        dword ptr [edx+8];TList.Clear
 006437E3    mov         eax,dword ptr [ebx+3C];TWiimoteManager.FDiscoveredWiimotes:TObjectList
 006437E6    mov         edx,dword ptr [eax]
 006437E8    call        dword ptr [edx+8];TList.Clear
 006437EB    mov         eax,dword ptr [ebx+40];TWiimoteManager.FDiscoveredSixaxes:TObjectList
 006437EE    mov         edx,dword ptr [eax]
 006437F0    call        dword ptr [edx+8];TList.Clear
 006437F3    mov         eax,dword ptr [ebx+44];TWiimoteManager.FDiscoveredSpacePoints:TObjectList
 006437F6    mov         edx,dword ptr [eax]
 006437F8    call        dword ptr [edx+8];TList.Clear
 006437FB    mov         eax,dword ptr [ebx+48];TWiimoteManager.FDiscoveredLightstones:TObjectList
 006437FE    mov         edx,dword ptr [eax]
 00643800    call        dword ptr [edx+8];TList.Clear
 00643803    xor         eax,eax
 00643805    mov         dword ptr [ebx+10C],eax;TWiimoteManager.FConnectedWiimoteCount:Integer
 0064380B    mov         byte ptr [ebx+101],0;TWiimoteManager.FRunning:Boolean
 00643812    mov         byte ptr [ebx+100],0;TWiimoteManager.FGUIMode:Boolean
 00643819    pop         ebx
 0064381A    ret
*}
end;

//0064381C
procedure TWiimoteManager.TestAllConnections;
begin
{*
 0064381C    push        ebx
 0064381D    push        esi
 0064381E    push        edi
 0064381F    push        ebp
 00643820    add         esp,0FFFFFFE8
 00643823    mov         esi,eax
 00643825    xor         eax,eax
 00643827    mov         dword ptr [esp+4],eax
 0064382B    xor         eax,eax
 0064382D    mov         dword ptr [esi+114],eax;TWiimoteManager.NumberFinished:Integer
 00643833    mov         eax,dword ptr [esi+3C];TWiimoteManager.FDiscoveredWiimotes:TObjectList
 00643836    mov         edi,dword ptr [eax+8];TObjectList.FCount:Integer
 00643839    dec         edi
 0064383A    test        edi,edi
>0064383C    jl          00643881
 0064383E    inc         edi
 0064383F    xor         ebp,ebp
 00643841    mov         edx,ebp
 00643843    mov         eax,dword ptr [esi+3C];TWiimoteManager.FDiscoveredWiimotes:TObjectList
 00643846    call        TList.Get
 0064384B    mov         ebx,eax
 0064384D    test        ebx,ebx
>0064384F    je          0064387D
 00643851    mov         byte ptr [ebx+44B],1
 00643858    mov         byte ptr [ebx+44C],1
 0064385F    movzx       eax,byte ptr [esi+127];TWiimoteManager.FUseMotionPlus:Boolean
 00643866    mov         byte ptr [ebx+44D],al
 0064386C    cmp         byte ptr [ebx+18],0
>00643870    jne         0064387D
 00643872    mov         eax,ebx
 00643874    call        TWiimoteObject.TestConnection
 00643879    add         dword ptr [esp+4],eax
 0064387D    inc         ebp
 0064387E    dec         edi
>0064387F    jne         00643841
 00643881    cmp         dword ptr [esp+4],0
 00643886    setg        al
 00643889    test        al,al
>0064388B    je          00643965
 00643891    call        00600EA0
 00643896    fstp        qword ptr [esp+8]
 0064389A    wait
 0064389B    fld         qword ptr [esp+8]
 0064389F    fadd        dword ptr ds:[6440E0];1.5:Single
 006438A5    fstp        qword ptr [esp+10]
 006438A9    wait
>006438AA    jmp         006438BF
 006438AC    mov         eax,[0078D590];^Application:TApplication
 006438B1    mov         eax,dword ptr [eax]
 006438B3    call        TApplication.ProcessMessages
 006438B8    push        32
 006438BA    call        kernel32.Sleep
 006438BF    mov         eax,dword ptr [esi+114];TWiimoteManager.NumberFinished:Integer
 006438C5    cmp         eax,dword ptr [esp+4]
>006438C9    jge         006438DA
 006438CB    call        00600EA0
 006438D0    fcomp       qword ptr [esp+10]
 006438D4    wait
 006438D5    fnstsw      al
 006438D7    sahf
>006438D8    jb          006438AC
 006438DA    call        00600EA0
 006438DF    fcomp       qword ptr [esp+10]
 006438E3    wait
 006438E4    fnstsw      al
 006438E6    sahf
 006438E7    mov         eax,[0078D590];^Application:TApplication
 006438EC    mov         eax,dword ptr [eax]
 006438EE    call        TApplication.ProcessMessages
 006438F3    xor         eax,eax
 006438F5    mov         dword ptr [esp+4],eax
 006438F9    xor         eax,eax
 006438FB    mov         dword ptr [esi+114],eax;TWiimoteManager.NumberFinished:Integer
 00643901    mov         eax,dword ptr [esi+3C];TWiimoteManager.FDiscoveredWiimotes:TObjectList
 00643904    mov         edi,dword ptr [eax+8];TObjectList.FCount:Integer
 00643907    dec         edi
 00643908    test        edi,edi
>0064390A    jl          0064395D
 0064390C    inc         edi
 0064390D    xor         ebp,ebp
 0064390F    mov         edx,ebp
 00643911    mov         eax,dword ptr [esi+3C];TWiimoteManager.FDiscoveredWiimotes:TObjectList
 00643914    call        TList.Get
 00643919    mov         ebx,eax
 0064391B    test        ebx,ebx
>0064391D    je          00643959
 0064391F    cmp         byte ptr [ebx+18],0
>00643923    jne         00643959
 00643925    cmp         byte ptr [ebx+442],0
>0064392C    jne         00643937
 0064392E    cmp         byte ptr [ebx+441],0
>00643935    jne         00643959
 00643937    cmp         byte ptr [ebx+56],0
>0064393B    je          00643943
 0064393D    mov         byte ptr [ebx+55],1
>00643941    jmp         00643947
 00643943    mov         byte ptr [ebx+54],1
 00643947    mov         byte ptr [ebx+442],0
 0064394E    mov         eax,ebx
 00643950    call        TWiimoteObject.TestConnection
 00643955    add         dword ptr [esp+4],eax
 00643959    inc         ebp
 0064395A    dec         edi
>0064395B    jne         0064390F
 0064395D    cmp         dword ptr [esp+4],0
 00643962    setg        al
 00643965    test        al,al
>00643967    je          00643A19
 0064396D    call        00600EA0
 00643972    fstp        qword ptr [esp+8]
 00643976    wait
 00643977    fld         qword ptr [esp+8]
 0064397B    fadd        dword ptr ds:[6440E0];1.5:Single
 00643981    fstp        qword ptr [esp+10]
 00643985    wait
>00643986    jmp         0064399B
 00643988    mov         eax,[0078D590];^Application:TApplication
 0064398D    mov         eax,dword ptr [eax]
 0064398F    call        TApplication.ProcessMessages
 00643994    push        32
 00643996    call        kernel32.Sleep
 0064399B    mov         eax,dword ptr [esi+114];TWiimoteManager.NumberFinished:Integer
 006439A1    cmp         eax,dword ptr [esp+4]
>006439A5    jge         006439B6
 006439A7    call        00600EA0
 006439AC    fcomp       qword ptr [esp+10]
 006439B0    wait
 006439B1    fnstsw      al
 006439B3    sahf
>006439B4    jb          00643988
 006439B6    call        00600EA0
 006439BB    fcomp       qword ptr [esp+10]
 006439BF    wait
 006439C0    fnstsw      al
 006439C2    sahf
 006439C3    mov         eax,[0078D590];^Application:TApplication
 006439C8    mov         eax,dword ptr [eax]
 006439CA    call        TApplication.ProcessMessages
 006439CF    mov         eax,dword ptr [esi+3C];TWiimoteManager.FDiscoveredWiimotes:TObjectList
 006439D2    mov         edi,dword ptr [eax+8];TObjectList.FCount:Integer
 006439D5    dec         edi
 006439D6    test        edi,edi
>006439D8    jl          00643A19
 006439DA    inc         edi
 006439DB    xor         ebp,ebp
 006439DD    mov         edx,ebp
 006439DF    mov         eax,dword ptr [esi+3C];TWiimoteManager.FDiscoveredWiimotes:TObjectList
 006439E2    call        TList.Get
 006439E7    mov         ebx,eax
 006439E9    test        ebx,ebx
>006439EB    je          00643A15
 006439ED    cmp         byte ptr [ebx+18],0
>006439F1    jne         00643A15
 006439F3    cmp         byte ptr [ebx+442],0
>006439FA    jne         00643A05
 006439FC    cmp         byte ptr [ebx+441],0
>00643A03    jne         00643A15
 00643A05    cmp         byte ptr [ebx+56],0
>00643A09    je          00643A11
 00643A0B    mov         byte ptr [ebx+55],1
>00643A0F    jmp         00643A15
 00643A11    mov         byte ptr [ebx+54],1
 00643A15    inc         ebp
 00643A16    dec         edi
>00643A17    jne         006439DD
 00643A19    mov         eax,dword ptr [esi+3C];TWiimoteManager.FDiscoveredWiimotes:TObjectList
 00643A1C    mov         edi,dword ptr [eax+8];TObjectList.FCount:Integer
 00643A1F    dec         edi
 00643A20    test        edi,edi
>00643A22    jl          006440CA
 00643A28    inc         edi
 00643A29    xor         ebp,ebp
 00643A2B    mov         edx,ebp
 00643A2D    mov         eax,dword ptr [esi+3C];TWiimoteManager.FDiscoveredWiimotes:TObjectList
 00643A30    call        TList.Get
 00643A35    mov         ebx,eax
 00643A37    test        ebx,ebx
>00643A39    je          006440C2
 00643A3F    cmp         byte ptr [ebx+18],0
>00643A43    jne         006440C2
 00643A49    cmp         byte ptr [ebx+55],0
>00643A4D    je          00643A59
 00643A4F    cmp         byte ptr [ebx+54],0
>00643A53    je          00643A59
 00643A55    xor         eax,eax
>00643A57    jmp         00643A5B
 00643A59    mov         al,1
 00643A5B    mov         byte ptr [ebx+18],al
 00643A5E    test        al,al
>00643A60    je          006440B8
 00643A66    mov         eax,dword ptr [ebx+4CC]
 00643A6C    cmp         byte ptr [eax+8],0
>00643A70    je          00643B6D
 00643A76    cmp         byte ptr [esi+126],0;TWiimoteManager.FUseWiimoteDotBalanceBoard:Boolean
>00643A7D    jne         00643B6D
 00643A83    mov         edx,ebx
 00643A85    mov         eax,dword ptr [esi+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 00643A88    call        TList.IndexOf
 00643A8D    inc         eax
 00643A8E    mov         dword ptr [esp],eax
 00643A91    cmp         dword ptr [esp],0
>00643A95    jg          00643AA5
 00643A97    mov         edx,ebx
 00643A99    mov         eax,dword ptr [esi+50];TWiimoteManager.FConnectedBoards:TNumberedObjectList
 00643A9C    call        TNumberedObjectList.Add
 00643AA1    inc         eax
 00643AA2    mov         dword ptr [esp],eax
 00643AA5    cmp         byte ptr [esi+106],0;TWiimoteManager.FUseAllBalanceBoards:Boolean
>00643AAC    je          00643ADA
 00643AAE    mov         byte ptr [ebx+444],1
 00643AB5    mov         byte ptr [ebx+447],1
 00643ABC    mov         byte ptr [ebx+445],0
 00643AC3    mov         byte ptr [ebx+446],0
 00643ACA    mov         byte ptr [ebx+449],0
 00643AD1    mov         byte ptr [ebx+44A],0
>00643AD8    jmp         00643B50
 00643ADA    mov         eax,dword ptr [esp]
 00643ADD    cmp         eax,dword ptr [esi+7C];TWiimoteManager.FMaxBalanceBoardUsed:Integer
>00643AE0    jg          00643B26
 00643AE2    mov         eax,dword ptr [esi+0A4];TWiimoteManager.FBalanceBoardsUsed::1
 00643AE8    mov         edx,dword ptr [esp]
 00643AEB    movzx       eax,byte ptr [eax+edx]
 00643AEF    mov         byte ptr [ebx+444],al
 00643AF5    mov         eax,dword ptr [esi+0A4];TWiimoteManager.FBalanceBoardsUsed::1
 00643AFB    mov         edx,dword ptr [esp]
 00643AFE    movzx       eax,byte ptr [eax+edx]
 00643B02    mov         byte ptr [ebx+447],al
 00643B08    mov         byte ptr [ebx+445],0
 00643B0F    mov         byte ptr [ebx+446],0
 00643B16    mov         byte ptr [ebx+449],0
 00643B1D    mov         byte ptr [ebx+44A],0
>00643B24    jmp         00643B50
 00643B26    mov         byte ptr [ebx+444],0
 00643B2D    mov         byte ptr [ebx+447],0
 00643B34    mov         byte ptr [ebx+445],0
 00643B3B    mov         byte ptr [ebx+446],0
 00643B42    mov         byte ptr [ebx+449],0
 00643B49    mov         byte ptr [ebx+44A],0
 00643B50    or          edx,0FFFFFFFF
 00643B53    mov         eax,ebx
 00643B55    call        TWiimoteObject.SetNumber
 00643B5A    mov         edx,dword ptr [esp]
 00643B5D    mov         eax,dword ptr [ebx+4CC]
 00643B63    call        TBalanceBoardObject.SetNumber
>00643B68    jmp         006440C2
 00643B6D    mov         eax,dword ptr [ebx+4BC]
 00643B73    cmp         byte ptr [eax+8],0
>00643B77    je          00643CBF
 00643B7D    cmp         byte ptr [esi+123],0;TWiimoteManager.FUseWiimoteDotGuitar:Boolean
>00643B84    jne         00643CBF
 00643B8A    mov         edx,ebx
 00643B8C    mov         eax,dword ptr [esi+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 00643B8F    call        TList.IndexOf
 00643B94    inc         eax
 00643B95    mov         dword ptr [esp],eax
 00643B98    cmp         dword ptr [esp],0
>00643B9C    jg          00643BAC
 00643B9E    mov         edx,ebx
 00643BA0    mov         eax,dword ptr [esi+54];TWiimoteManager.FConnectedGuitars:TNumberedObjectList
 00643BA3    call        TNumberedObjectList.Add
 00643BA8    inc         eax
 00643BA9    mov         dword ptr [esp],eax
 00643BAC    cmp         byte ptr [esi+103],0;TWiimoteManager.FUseAllGuitars:Boolean
>00643BB3    je          00643BFC
 00643BB5    mov         byte ptr [ebx+444],1
 00643BBC    mov         byte ptr [ebx+447],1
 00643BC3    movzx       eax,byte ptr [esi+11E];TWiimoteManager.FUseForce:Boolean
 00643BCA    mov         byte ptr [ebx+445],al
 00643BD0    movzx       eax,byte ptr [esi+11F];TWiimoteManager.FUseIR:Boolean
 00643BD7    mov         byte ptr [ebx+446],al
 00643BDD    movzx       eax,byte ptr [esi+121];TWiimoteManager.FUseSpeaker:Boolean
 00643BE4    mov         byte ptr [ebx+449],al
 00643BEA    movzx       eax,byte ptr [esi+122];TWiimoteManager.FUse3F:Boolean
 00643BF1    mov         byte ptr [ebx+44A],al
>00643BF7    jmp         00643CA2
 00643BFC    mov         eax,dword ptr [esp]
 00643BFF    cmp         eax,dword ptr [esi+70];TWiimoteManager.FMaxGuitarUsed:Integer
>00643C02    jg          00643C78
 00643C04    mov         eax,dword ptr [esi+98];TWiimoteManager.FGuitarsUsed::1
 00643C0A    mov         edx,dword ptr [esp]
 00643C0D    movzx       eax,byte ptr [eax+edx]
 00643C11    mov         byte ptr [ebx+444],al
 00643C17    mov         eax,dword ptr [esi+98];TWiimoteManager.FGuitarsUsed::1
 00643C1D    mov         edx,dword ptr [esp]
 00643C20    movzx       eax,byte ptr [eax+edx]
 00643C24    mov         byte ptr [ebx+447],al
 00643C2A    mov         eax,dword ptr [esi+0C0];TWiimoteManager.FGuitarForcesUsed::1
 00643C30    mov         edx,dword ptr [esp]
 00643C33    movzx       eax,byte ptr [eax+edx]
 00643C37    mov         byte ptr [ebx+445],al
 00643C3D    mov         eax,dword ptr [esi+0C4];TWiimoteManager.FGuitarIRsUsed::1
 00643C43    mov         edx,dword ptr [esp]
 00643C46    movzx       eax,byte ptr [eax+edx]
 00643C4A    mov         byte ptr [ebx+446],al
 00643C50    mov         eax,dword ptr [esi+0C8];TWiimoteManager.FGuitarSpeakersUsed::1
 00643C56    mov         edx,dword ptr [esp]
 00643C59    movzx       eax,byte ptr [eax+edx]
 00643C5D    mov         byte ptr [ebx+449],al
 00643C63    mov         eax,dword ptr [esi+0CC];TWiimoteManager.FGuitar3FsUsed::1
 00643C69    mov         edx,dword ptr [esp]
 00643C6C    movzx       eax,byte ptr [eax+edx]
 00643C70    mov         byte ptr [ebx+44A],al
>00643C76    jmp         00643CA2
 00643C78    mov         byte ptr [ebx+444],0
 00643C7F    mov         byte ptr [ebx+447],0
 00643C86    mov         byte ptr [ebx+445],0
 00643C8D    mov         byte ptr [ebx+446],0
 00643C94    mov         byte ptr [ebx+449],0
 00643C9B    mov         byte ptr [ebx+44A],0
 00643CA2    or          edx,0FFFFFFFF
 00643CA5    mov         eax,ebx
 00643CA7    call        TWiimoteObject.SetNumber
 00643CAC    mov         edx,dword ptr [esp]
 00643CAF    mov         eax,dword ptr [ebx+4BC]
 00643CB5    call        TGuitarObject.SetNumber
>00643CBA    jmp         006440C2
 00643CBF    mov         eax,dword ptr [ebx+4C0]
 00643CC5    cmp         byte ptr [eax+8],0
>00643CC9    je          00643E11
 00643CCF    cmp         byte ptr [esi+124],0;TWiimoteManager.FUseWiimoteDotDrums:Boolean
>00643CD6    jne         00643E11
 00643CDC    mov         edx,ebx
 00643CDE    mov         eax,dword ptr [esi+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 00643CE1    call        TList.IndexOf
 00643CE6    inc         eax
 00643CE7    mov         dword ptr [esp],eax
 00643CEA    cmp         dword ptr [esp],0
>00643CEE    jg          00643CFE
 00643CF0    mov         edx,ebx
 00643CF2    mov         eax,dword ptr [esi+58];TWiimoteManager.FConnectedDrums:TNumberedObjectList
 00643CF5    call        TNumberedObjectList.Add
 00643CFA    inc         eax
 00643CFB    mov         dword ptr [esp],eax
 00643CFE    cmp         byte ptr [esi+104],0;TWiimoteManager.FUseAllDrums:Boolean
>00643D05    je          00643D4E
 00643D07    mov         byte ptr [ebx+444],1
 00643D0E    mov         byte ptr [ebx+447],1
 00643D15    movzx       eax,byte ptr [esi+11E];TWiimoteManager.FUseForce:Boolean
 00643D1C    mov         byte ptr [ebx+445],al
 00643D22    movzx       eax,byte ptr [esi+11F];TWiimoteManager.FUseIR:Boolean
 00643D29    mov         byte ptr [ebx+446],al
 00643D2F    movzx       eax,byte ptr [esi+121];TWiimoteManager.FUseSpeaker:Boolean
 00643D36    mov         byte ptr [ebx+449],al
 00643D3C    movzx       eax,byte ptr [esi+122];TWiimoteManager.FUse3F:Boolean
 00643D43    mov         byte ptr [ebx+44A],al
>00643D49    jmp         00643DF4
 00643D4E    mov         eax,dword ptr [esp]
 00643D51    cmp         eax,dword ptr [esi+74];TWiimoteManager.FMaxDrumsUsed:Integer
>00643D54    jg          00643DCA
 00643D56    mov         eax,dword ptr [esi+9C];TWiimoteManager.FDrumsUsed::1
 00643D5C    mov         edx,dword ptr [esp]
 00643D5F    movzx       eax,byte ptr [eax+edx]
 00643D63    mov         byte ptr [ebx+444],al
 00643D69    mov         eax,dword ptr [esi+9C];TWiimoteManager.FDrumsUsed::1
 00643D6F    mov         edx,dword ptr [esp]
 00643D72    movzx       eax,byte ptr [eax+edx]
 00643D76    mov         byte ptr [ebx+447],al
 00643D7C    mov         eax,dword ptr [esi+0D0];TWiimoteManager.FDrumsForcesUsed::1
 00643D82    mov         edx,dword ptr [esp]
 00643D85    movzx       eax,byte ptr [eax+edx]
 00643D89    mov         byte ptr [ebx+445],al
 00643D8F    mov         eax,dword ptr [esi+0D4];TWiimoteManager.FDrumsIRsUsed::1
 00643D95    mov         edx,dword ptr [esp]
 00643D98    movzx       eax,byte ptr [eax+edx]
 00643D9C    mov         byte ptr [ebx+446],al
 00643DA2    mov         eax,dword ptr [esi+0D8];TWiimoteManager.FDrumsSpeakersUsed::1
 00643DA8    mov         edx,dword ptr [esp]
 00643DAB    movzx       eax,byte ptr [eax+edx]
 00643DAF    mov         byte ptr [ebx+449],al
 00643DB5    mov         eax,dword ptr [esi+0DC];TWiimoteManager.FDrums3FsUsed::1
 00643DBB    mov         edx,dword ptr [esp]
 00643DBE    movzx       eax,byte ptr [eax+edx]
 00643DC2    mov         byte ptr [ebx+44A],al
>00643DC8    jmp         00643DF4
 00643DCA    mov         byte ptr [ebx+444],0
 00643DD1    mov         byte ptr [ebx+447],0
 00643DD8    mov         byte ptr [ebx+445],0
 00643DDF    mov         byte ptr [ebx+446],0
 00643DE6    mov         byte ptr [ebx+449],0
 00643DED    mov         byte ptr [ebx+44A],0
 00643DF4    or          edx,0FFFFFFFF
 00643DF7    mov         eax,ebx
 00643DF9    call        TWiimoteObject.SetNumber
 00643DFE    mov         edx,dword ptr [esp]
 00643E01    mov         eax,dword ptr [ebx+4C0]
 00643E07    call        TDrumsObject.SetNumber
>00643E0C    jmp         006440C2
 00643E11    mov         eax,dword ptr [ebx+4C4]
 00643E17    cmp         byte ptr [eax+8],0
>00643E1B    je          00643F63
 00643E21    cmp         byte ptr [esi+125],0;TWiimoteManager.FUseWiimoteDotTurntable:Boolean
>00643E28    jne         00643F63
 00643E2E    mov         edx,ebx
 00643E30    mov         eax,dword ptr [esi+5C];TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 00643E33    call        TList.IndexOf
 00643E38    inc         eax
 00643E39    mov         dword ptr [esp],eax
 00643E3C    cmp         dword ptr [esp],0
>00643E40    jg          00643E50
 00643E42    mov         edx,ebx
 00643E44    mov         eax,dword ptr [esi+5C];TWiimoteManager.FConnectedTurntables:TNumberedObjectList
 00643E47    call        TNumberedObjectList.Add
 00643E4C    inc         eax
 00643E4D    mov         dword ptr [esp],eax
 00643E50    cmp         byte ptr [esi+105],0;TWiimoteManager.FUseAllTurntables:Boolean
>00643E57    je          00643EA0
 00643E59    mov         byte ptr [ebx+444],1
 00643E60    mov         byte ptr [ebx+447],1
 00643E67    movzx       eax,byte ptr [esi+11E];TWiimoteManager.FUseForce:Boolean
 00643E6E    mov         byte ptr [ebx+445],al
 00643E74    movzx       eax,byte ptr [esi+11F];TWiimoteManager.FUseIR:Boolean
 00643E7B    mov         byte ptr [ebx+446],al
 00643E81    movzx       eax,byte ptr [esi+121];TWiimoteManager.FUseSpeaker:Boolean
 00643E88    mov         byte ptr [ebx+449],al
 00643E8E    movzx       eax,byte ptr [esi+122];TWiimoteManager.FUse3F:Boolean
 00643E95    mov         byte ptr [ebx+44A],al
>00643E9B    jmp         00643F46
 00643EA0    mov         eax,dword ptr [esp]
 00643EA3    cmp         eax,dword ptr [esi+78];TWiimoteManager.FMaxTurntableUsed:Integer
>00643EA6    jg          00643F1C
 00643EA8    mov         eax,dword ptr [esi+0A0];TWiimoteManager.FTurntablesUsed::1
 00643EAE    mov         edx,dword ptr [esp]
 00643EB1    movzx       eax,byte ptr [eax+edx]
 00643EB5    mov         byte ptr [ebx+444],al
 00643EBB    mov         eax,dword ptr [esi+0A0];TWiimoteManager.FTurntablesUsed::1
 00643EC1    mov         edx,dword ptr [esp]
 00643EC4    movzx       eax,byte ptr [eax+edx]
 00643EC8    mov         byte ptr [ebx+447],al
 00643ECE    mov         eax,dword ptr [esi+0E0];TWiimoteManager.FTurntableForcesUsed::1
 00643ED4    mov         edx,dword ptr [esp]
 00643ED7    movzx       eax,byte ptr [eax+edx]
 00643EDB    mov         byte ptr [ebx+445],al
 00643EE1    mov         eax,dword ptr [esi+0E4];TWiimoteManager.FTurntableIRsUsed::1
 00643EE7    mov         edx,dword ptr [esp]
 00643EEA    movzx       eax,byte ptr [eax+edx]
 00643EEE    mov         byte ptr [ebx+446],al
 00643EF4    mov         eax,dword ptr [esi+0E8];TWiimoteManager.FTurntableSpeakersUsed::1
 00643EFA    mov         edx,dword ptr [esp]
 00643EFD    movzx       eax,byte ptr [eax+edx]
 00643F01    mov         byte ptr [ebx+449],al
 00643F07    mov         eax,dword ptr [esi+0EC];TWiimoteManager.FTurntable3FsUsed::1
 00643F0D    mov         edx,dword ptr [esp]
 00643F10    movzx       eax,byte ptr [eax+edx]
 00643F14    mov         byte ptr [ebx+44A],al
>00643F1A    jmp         00643F46
 00643F1C    mov         byte ptr [ebx+444],0
 00643F23    mov         byte ptr [ebx+447],0
 00643F2A    mov         byte ptr [ebx+445],0
 00643F31    mov         byte ptr [ebx+446],0
 00643F38    mov         byte ptr [ebx+449],0
 00643F3F    mov         byte ptr [ebx+44A],0
 00643F46    or          edx,0FFFFFFFF
 00643F49    mov         eax,ebx
 00643F4B    call        TWiimoteObject.SetNumber
 00643F50    mov         edx,dword ptr [esp]
 00643F53    mov         eax,dword ptr [ebx+4C4]
 00643F59    call        TTurntableObject.SetNumber
>00643F5E    jmp         006440C2
 00643F63    mov         edx,ebx
 00643F65    mov         eax,dword ptr [esi+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 00643F68    call        TList.IndexOf
 00643F6D    inc         eax
 00643F6E    mov         dword ptr [esp],eax
 00643F71    cmp         dword ptr [esp],0
>00643F75    jg          00643F85
 00643F77    mov         edx,ebx
 00643F79    mov         eax,dword ptr [esi+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 00643F7C    call        TNumberedObjectList.Add
 00643F81    inc         eax
 00643F82    mov         dword ptr [esp],eax
 00643F85    cmp         byte ptr [esi+102],0;TWiimoteManager.FUseAllWiimotes:Boolean
>00643F8C    je          00643FE8
 00643F8E    mov         byte ptr [ebx+444],1
 00643F95    movzx       eax,byte ptr [esi+120];TWiimoteManager.FUseExpansion:Boolean
 00643F9C    mov         byte ptr [ebx+447],al
 00643FA2    movzx       eax,byte ptr [esi+11E];TWiimoteManager.FUseForce:Boolean
 00643FA9    mov         byte ptr [ebx+445],al
 00643FAF    movzx       eax,byte ptr [esi+11F];TWiimoteManager.FUseIR:Boolean
 00643FB6    mov         byte ptr [ebx+446],al
 00643FBC    movzx       eax,byte ptr [esi+121];TWiimoteManager.FUseSpeaker:Boolean
 00643FC3    mov         byte ptr [ebx+449],al
 00643FC9    movzx       eax,byte ptr [esi+122];TWiimoteManager.FUse3F:Boolean
 00643FD0    mov         byte ptr [ebx+44A],al
 00643FD6    movzx       eax,byte ptr [esi+127];TWiimoteManager.FUseMotionPlus:Boolean
 00643FDD    mov         byte ptr [ebx+448],al
>00643FE3    jmp         006440AC
 00643FE8    mov         eax,dword ptr [esp]
 00643FEB    cmp         eax,dword ptr [esi+6C];TWiimoteManager.FMaxWiimoteUsed:Integer
>00643FEE    jg          0064407B
 00643FF4    mov         eax,dword ptr [esi+94];TWiimoteManager.FWiimotesUsed::1
 00643FFA    mov         edx,dword ptr [esp]
 00643FFD    movzx       eax,byte ptr [eax+edx]
 00644001    mov         byte ptr [ebx+444],al
 00644007    mov         eax,dword ptr [esi+0B0];TWiimoteManager.FExpansionsUsed::1
 0064400D    mov         edx,dword ptr [esp]
 00644010    movzx       eax,byte ptr [eax+edx]
 00644014    mov         byte ptr [ebx+447],al
 0064401A    mov         eax,dword ptr [esi+0B4];TWiimoteManager.FMotionPlusesUsed::1
 00644020    mov         edx,dword ptr [esp]
 00644023    movzx       eax,byte ptr [eax+edx]
 00644027    mov         byte ptr [ebx+448],al
 0064402D    mov         eax,dword ptr [esi+0A8];TWiimoteManager.FForcesUsed::1
 00644033    mov         edx,dword ptr [esp]
 00644036    movzx       eax,byte ptr [eax+edx]
 0064403A    mov         byte ptr [ebx+445],al
 00644040    mov         eax,dword ptr [esi+0AC];TWiimoteManager.FIRsUsed::1
 00644046    mov         edx,dword ptr [esp]
 00644049    movzx       eax,byte ptr [eax+edx]
 0064404D    mov         byte ptr [ebx+446],al
 00644053    mov         eax,dword ptr [esi+0B8];TWiimoteManager.FSpeakersUsed::1
 00644059    mov         edx,dword ptr [esp]
 0064405C    movzx       eax,byte ptr [eax+edx]
 00644060    mov         byte ptr [ebx+449],al
 00644066    mov         eax,dword ptr [esi+0BC];TWiimoteManager.F3FsUsed::1
 0064406C    mov         edx,dword ptr [esp]
 0064406F    movzx       eax,byte ptr [eax+edx]
 00644073    mov         byte ptr [ebx+44A],al
>00644079    jmp         006440AC
 0064407B    mov         byte ptr [ebx+444],0
 00644082    mov         byte ptr [ebx+447],0
 00644089    mov         byte ptr [ebx+448],0
 00644090    mov         byte ptr [ebx+445],0
 00644097    mov         byte ptr [ebx+446],0
 0064409E    mov         byte ptr [ebx+449],0
 006440A5    mov         byte ptr [ebx+44A],0
 006440AC    mov         edx,dword ptr [esp]
 006440AF    mov         eax,ebx
 006440B1    call        TWiimoteObject.SetNumber
>006440B6    jmp         006440C2
 006440B8    or          edx,0FFFFFFFF
 006440BB    mov         eax,ebx
 006440BD    call        TWiimoteObject.SetNumber
 006440C2    inc         ebp
 006440C3    dec         edi
>006440C4    jne         00643A2B
 006440CA    mov         eax,dword ptr [esi+4C];TWiimoteManager.FConnectedWiimotes:TNumberedObjectList
 006440CD    mov         eax,dword ptr [eax+8];TNumberedObjectList.FCount:Integer
 006440D0    mov         dword ptr [esi+10C],eax;TWiimoteManager.FConnectedWiimoteCount:Integer
 006440D6    add         esp,18
 006440D9    pop         ebp
 006440DA    pop         edi
 006440DB    pop         esi
 006440DC    pop         ebx
 006440DD    ret
*}
end;

//006440E4
procedure TWiimoteManager.Timer1Timer(Sender:TObject);
begin
{*
 006440E4    push        ebx
 006440E5    mov         ebx,eax
 006440E7    xor         edx,edx
 006440E9    mov         eax,dword ptr [ebx+138];TWiimoteManager.Timer1:TTimer
 006440EF    call        TTimer.SetEnabled
 006440F4    cmp         byte ptr [ebx+133],0;TWiimoteManager.CanAddNewWiimotes:Boolean
>006440FB    je          00644104
 006440FD    mov         eax,ebx
 006440FF    call        TWiimoteManager.ConnectExtraWiimotes
 00644104    pop         ebx
 00644105    ret
*}
end;

//00644108
procedure TWiimoteManager.UseAllBalanceBoards;
begin
{*
 00644108    mov         byte ptr [eax+106],1;TWiimoteManager.FUseAllBalanceBoards:Boolean
 0064410F    mov         byte ptr [eax+11B],1;TWiimoteManager.FUseBalanceBoard:Boolean
 00644116    mov         byte ptr [eax+118],1;TWiimoteManager.FUseWiimote:Boolean
 0064411D    mov         byte ptr [eax+120],1;TWiimoteManager.FUseExpansion:Boolean
 00644124    ret
*}
end;

//00644128
procedure TWiimoteManager.UseAllDrums(Force:Boolean; IR:Boolean; Use3F:Boolean; Speaker:Boolean);
begin
{*
 00644128    push        ebp
 00644129    mov         ebp,esp
 0064412B    mov         byte ptr [eax+104],1;TWiimoteManager.FUseAllDrums:Boolean
 00644132    mov         byte ptr [eax+11C],1;TWiimoteManager.FUseDrums:Boolean
 00644139    mov         byte ptr [eax+118],1;TWiimoteManager.FUseWiimote:Boolean
 00644140    mov         byte ptr [eax+120],1;TWiimoteManager.FUseExpansion:Boolean
 00644147    pop         ebp
 00644148    ret         8
*}
end;

//0064414C
procedure TWiimoteManager.UseAllGuitars(Force:Boolean; IR:Boolean; Use3F:Boolean; Speaker:Boolean);
begin
{*
 0064414C    push        ebp
 0064414D    mov         ebp,esp
 0064414F    mov         byte ptr [eax+103],1;TWiimoteManager.FUseAllGuitars:Boolean
 00644156    mov         byte ptr [eax+119],1;TWiimoteManager.FUseGuitar:Boolean
 0064415D    mov         byte ptr [eax+118],1;TWiimoteManager.FUseWiimote:Boolean
 00644164    mov         byte ptr [eax+120],1;TWiimoteManager.FUseExpansion:Boolean
 0064416B    pop         ebp
 0064416C    ret         8
*}
end;

//00644170
procedure TWiimoteManager.UseAllKinects;
begin
{*
 00644170    mov         byte ptr [eax+10A],1;TWiimoteManager.FUseAllKinects:Boolean
 00644177    mov         byte ptr [eax+132],1;TWiimoteManager.FUseKinect:Boolean
 0064417E    ret
*}
end;

//00644180
procedure TWiimoteManager.UseAllMoves;
begin
{*
 00644180    mov         byte ptr [eax+109],1;TWiimoteManager.FUseAllMoves:Boolean
 00644187    mov         byte ptr [eax+12B],1;TWiimoteManager.FUseMove:Boolean
 0064418E    ret
*}
end;

//00644190
procedure TWiimoteManager.UseAllNavs;
begin
{*
 00644190    mov         byte ptr [eax+108],1;TWiimoteManager.FUseAllNavs:Boolean
 00644197    mov         byte ptr [eax+12A],1;TWiimoteManager.FUseNav:Boolean
 0064419E    ret
*}
end;

//006441A0
procedure TWiimoteManager.UseAllSixaxes;
begin
{*
 006441A0    mov         byte ptr [eax+107],1;TWiimoteManager.FUseAllSixaxes:Boolean
 006441A7    mov         byte ptr [eax+129],1;TWiimoteManager.FUseSixaxis:Boolean
 006441AE    ret
*}
end;

//006441B0
procedure TWiimoteManager.UseAllSpacePoints;
begin
{*
 006441B0    mov         byte ptr [eax+131],1;TWiimoteManager.FUseSpacePoint:Boolean
 006441B7    ret
*}
end;

//006441B8
procedure TWiimoteManager.UseAllTurntables(Force:Boolean; IR:Boolean; Use3F:Boolean; Speaker:Boolean);
begin
{*
 006441B8    push        ebp
 006441B9    mov         ebp,esp
 006441BB    mov         byte ptr [eax+105],1;TWiimoteManager.FUseAllTurntables:Boolean
 006441C2    mov         byte ptr [eax+11D],1;TWiimoteManager.FUseTurntable:Boolean
 006441C9    mov         byte ptr [eax+118],1;TWiimoteManager.FUseWiimote:Boolean
 006441D0    mov         byte ptr [eax+120],1;TWiimoteManager.FUseExpansion:Boolean
 006441D7    pop         ebp
 006441D8    ret         8
*}
end;

//006441DC
procedure TWiimoteManager.UseAllWiimotes(Force:Boolean; IR:Boolean; UseMotionPlus:Boolean; Use3F:Boolean; Speaker:Boolean; Expansion:Boolean);
begin
{*
 006441DC    push        ebp
 006441DD    mov         ebp,esp
 006441DF    mov         byte ptr [eax+102],1;TWiimoteManager.FUseAllWiimotes:Boolean
 006441E6    mov         byte ptr [eax+118],1;TWiimoteManager.FUseWiimote:Boolean
 006441ED    or          dl,byte ptr [eax+11E];TWiimoteManager.FUseForce:Boolean
 006441F3    mov         byte ptr [eax+11E],dl;TWiimoteManager.FUseForce:Boolean
 006441F9    or          cl,byte ptr [eax+11F];TWiimoteManager.FUseIR:Boolean
 006441FF    mov         byte ptr [eax+11F],cl;TWiimoteManager.FUseIR:Boolean
 00644205    movzx       edx,byte ptr [eax+120];TWiimoteManager.FUseExpansion:Boolean
 0064420C    or          dl,byte ptr [ebp+14]
 0064420F    mov         byte ptr [eax+120],dl;TWiimoteManager.FUseExpansion:Boolean
 00644215    movzx       edx,byte ptr [eax+121];TWiimoteManager.FUseSpeaker:Boolean
 0064421C    or          dl,byte ptr [ebp+10]
 0064421F    mov         byte ptr [eax+121],dl;TWiimoteManager.FUseSpeaker:Boolean
 00644225    movzx       edx,byte ptr [eax+122];TWiimoteManager.FUse3F:Boolean
 0064422C    or          dl,byte ptr [ebp+0C]
 0064422F    mov         byte ptr [eax+122],dl;TWiimoteManager.FUse3F:Boolean
 00644235    movzx       edx,byte ptr [eax+127];TWiimoteManager.FUseMotionPlus:Boolean
 0064423C    or          dl,byte ptr [ebp+8]
 0064423F    mov         byte ptr [eax+127],dl;TWiimoteManager.FUseMotionPlus:Boolean
 00644245    pop         ebp
 00644246    ret         10
*}
end;

//0064424C
procedure TWiimoteManager.UseBalanceBoard(i:Integer);
begin
{*
 0064424C    push        ebx
 0064424D    push        esi
 0064424E    push        edi
 0064424F    mov         esi,edx
 00644251    mov         ebx,eax
 00644253    test        esi,esi
>00644255    jge         00644263
 00644257    mov         eax,ebx
 00644259    call        TWiimoteManager.UseAllBalanceBoards
>0064425E    jmp         006442FE
 00644263    test        esi,esi
>00644265    jne         0064426C
 00644267    mov         esi,1
 0064426C    mov         byte ptr [ebx+118],1;TWiimoteManager.FUseWiimote:Boolean
 00644273    mov         byte ptr [ebx+11B],1;TWiimoteManager.FUseBalanceBoard:Boolean
 0064427A    mov         byte ptr [ebx+120],1;TWiimoteManager.FUseExpansion:Boolean
 00644281    cmp         esi,dword ptr [ebx+7C];TWiimoteManager.FMaxBalanceBoardUsed:Integer
>00644284    jle         006442D6
 00644286    mov         eax,dword ptr [ebx+0A4];TWiimoteManager.FBalanceBoardsUsed::1
 0064428C    call        @DynArrayHigh
 00644291    mov         edi,eax
 00644293    lea         eax,[esi+1]
 00644296    push        eax
 00644297    lea         eax,[ebx+0A4];TWiimoteManager.FBalanceBoardsUsed::1
 0064429D    mov         ecx,1
 006442A2    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 006442A8    call        @DynArraySetLength
 006442AD    add         esp,4
 006442B0    lea         edx,[edi+1]
 006442B3    push        edx
 006442B4    mov         eax,dword ptr [ebx+0A4];TWiimoteManager.FBalanceBoardsUsed::1
 006442BA    call        @DynArrayHigh
 006442BF    pop         edx
 006442C0    sub         eax,edx
>006442C2    jl          006442D3
 006442C4    inc         eax
 006442C5    mov         ecx,dword ptr [ebx+0A4];TWiimoteManager.FBalanceBoardsUsed::1
 006442CB    mov         byte ptr [ecx+edx],0
 006442CF    inc         edx
 006442D0    dec         eax
>006442D1    jne         006442C5
 006442D3    mov         dword ptr [ebx+7C],esi;TWiimoteManager.FMaxBalanceBoardUsed:Integer
 006442D6    mov         eax,dword ptr [ebx+0A4];TWiimoteManager.FBalanceBoardsUsed::1
 006442DC    mov         byte ptr [eax+esi],1
 006442E0    cmp         byte ptr [ebx+126],0;TWiimoteManager.FUseWiimoteDotBalanceBoard:Boolean
>006442E7    je          006442FE
 006442E9    push        0
 006442EB    push        1
 006442ED    push        0
 006442EF    push        0
 006442F1    push        0
 006442F3    xor         ecx,ecx
 006442F5    mov         edx,esi
 006442F7    mov         eax,ebx
 006442F9    call        TWiimoteManager.UseWiimote
 006442FE    pop         edi
 006442FF    pop         esi
 00644300    pop         ebx
 00644301    ret
*}
end;

//00644304
procedure TWiimoteManager.UseBladeFXOverflow(i:Integer);
begin
{*
 00644304    mov         byte ptr [eax+128],1;TWiimoteManager.FUseBladeFXOverflow:Boolean
 0064430B    ret
*}
end;

//0064430C
procedure TWiimoteManager.UseClassic(i:Integer);
begin
{*
 0064430C    mov         byte ptr [eax+11A],1;TWiimoteManager.FUseClassic:Boolean
 00644313    mov         byte ptr [eax+120],1;TWiimoteManager.FUseExpansion:Boolean
 0064431A    push        0
 0064431C    push        1
 0064431E    push        0
 00644320    push        0
 00644322    push        0
 00644324    xor         ecx,ecx
 00644326    call        TWiimoteManager.UseWiimote
 0064432B    ret
*}
end;

//0064432C
procedure TWiimoteManager.UseDrums(i:Integer; Force:Boolean; Use3F:Boolean; Speaker:Boolean; IR:Boolean);
begin
{*
 0064432C    push        ebp
 0064432D    mov         ebp,esp
 0064432F    add         esp,0FFFFFFF8
 00644332    push        ebx
 00644333    push        esi
 00644334    push        edi
 00644335    mov         byte ptr [ebp-1],cl
 00644338    mov         esi,edx
 0064433A    mov         ebx,eax
 0064433C    test        esi,esi
>0064433E    jge         0064435E
 00644340    movzx       eax,byte ptr [ebp+0C]
 00644344    push        eax
 00644345    movzx       eax,byte ptr [ebp+8]
 00644349    push        eax
 0064434A    movzx       ecx,byte ptr [ebp+10]
 0064434E    movzx       edx,byte ptr [ebp-1]
 00644352    mov         eax,ebx
 00644354    call        TWiimoteManager.UseAllDrums
>00644359    jmp         00644534
 0064435E    test        esi,esi
>00644360    jne         00644367
 00644362    mov         esi,1
 00644367    mov         byte ptr [ebx+118],1;TWiimoteManager.FUseWiimote:Boolean
 0064436E    mov         byte ptr [ebx+11C],1;TWiimoteManager.FUseDrums:Boolean
 00644375    mov         byte ptr [ebx+120],1;TWiimoteManager.FUseExpansion:Boolean
 0064437C    movzx       eax,byte ptr [ebx+11E];TWiimoteManager.FUseForce:Boolean
 00644383    or          al,byte ptr [ebp-1]
 00644386    mov         byte ptr [ebx+11E],al;TWiimoteManager.FUseForce:Boolean
 0064438C    movzx       eax,byte ptr [ebx+11F];TWiimoteManager.FUseIR:Boolean
 00644393    or          al,byte ptr [ebp+10]
 00644396    mov         byte ptr [ebx+11F],al;TWiimoteManager.FUseIR:Boolean
 0064439C    movzx       eax,byte ptr [ebx+121];TWiimoteManager.FUseSpeaker:Boolean
 006443A3    or          al,byte ptr [ebp+0C]
 006443A6    mov         byte ptr [ebx+121],al;TWiimoteManager.FUseSpeaker:Boolean
 006443AC    movzx       eax,byte ptr [ebx+122];TWiimoteManager.FUse3F:Boolean
 006443B3    or          al,byte ptr [ebp+8]
 006443B6    mov         byte ptr [ebx+122],al;TWiimoteManager.FUse3F:Boolean
 006443BC    cmp         esi,dword ptr [ebx+74];TWiimoteManager.FMaxDrumsUsed:Integer
>006443BF    jle         006444A9
 006443C5    mov         eax,dword ptr [ebx+9C];TWiimoteManager.FDrumsUsed::1
 006443CB    call        @DynArrayHigh
 006443D0    mov         dword ptr [ebp-8],eax
 006443D3    lea         edi,[esi+1]
 006443D6    push        edi
 006443D7    lea         eax,[ebx+9C];TWiimoteManager.FDrumsUsed::1
 006443DD    mov         ecx,1
 006443E2    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 006443E8    call        @DynArraySetLength
 006443ED    add         esp,4
 006443F0    push        edi
 006443F1    lea         eax,[ebx+0D0];TWiimoteManager.FDrumsForcesUsed::1
 006443F7    mov         ecx,1
 006443FC    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644402    call        @DynArraySetLength
 00644407    add         esp,4
 0064440A    push        edi
 0064440B    lea         eax,[ebx+0D4];TWiimoteManager.FDrumsIRsUsed::1
 00644411    mov         ecx,1
 00644416    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 0064441C    call        @DynArraySetLength
 00644421    add         esp,4
 00644424    push        edi
 00644425    lea         eax,[ebx+0D8];TWiimoteManager.FDrumsSpeakersUsed::1
 0064442B    mov         ecx,1
 00644430    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644436    call        @DynArraySetLength
 0064443B    add         esp,4
 0064443E    push        edi
 0064443F    lea         eax,[ebx+0DC];TWiimoteManager.FDrums3FsUsed::1
 00644445    mov         ecx,1
 0064444A    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644450    call        @DynArraySetLength
 00644455    add         esp,4
 00644458    mov         eax,dword ptr [ebp-8]
 0064445B    inc         eax
 0064445C    push        eax
 0064445D    mov         eax,dword ptr [ebx+9C];TWiimoteManager.FDrumsUsed::1
 00644463    call        @DynArrayHigh
 00644468    mov         edx,eax
 0064446A    pop         eax
 0064446B    sub         edx,eax
>0064446D    jl          006444A6
 0064446F    inc         edx
 00644470    mov         ecx,dword ptr [ebx+9C];TWiimoteManager.FDrumsUsed::1
 00644476    mov         byte ptr [ecx+eax],0
 0064447A    mov         ecx,dword ptr [ebx+0D0];TWiimoteManager.FDrumsForcesUsed::1
 00644480    mov         byte ptr [ecx+eax],0
 00644484    mov         ecx,dword ptr [ebx+0D4];TWiimoteManager.FDrumsIRsUsed::1
 0064448A    mov         byte ptr [ecx+eax],0
 0064448E    mov         ecx,dword ptr [ebx+0D8];TWiimoteManager.FDrumsSpeakersUsed::1
 00644494    mov         byte ptr [ecx+eax],0
 00644498    mov         ecx,dword ptr [ebx+0DC];TWiimoteManager.FDrums3FsUsed::1
 0064449E    mov         byte ptr [ecx+eax],0
 006444A2    inc         eax
 006444A3    dec         edx
>006444A4    jne         00644470
 006444A6    mov         dword ptr [ebx+74],esi;TWiimoteManager.FMaxDrumsUsed:Integer
 006444A9    mov         eax,dword ptr [ebx+9C];TWiimoteManager.FDrumsUsed::1
 006444AF    mov         byte ptr [eax+esi],1
 006444B3    mov         eax,dword ptr [ebx+0D0];TWiimoteManager.FDrumsForcesUsed::1
 006444B9    movzx       eax,byte ptr [eax+esi]
 006444BD    or          al,byte ptr [ebp-1]
 006444C0    mov         edx,dword ptr [ebx+0D0];TWiimoteManager.FDrumsForcesUsed::1
 006444C6    mov         byte ptr [edx+esi],al
 006444C9    mov         eax,dword ptr [ebx+0D4];TWiimoteManager.FDrumsIRsUsed::1
 006444CF    movzx       eax,byte ptr [eax+esi]
 006444D3    or          al,byte ptr [ebp+10]
 006444D6    mov         edx,dword ptr [ebx+0D4];TWiimoteManager.FDrumsIRsUsed::1
 006444DC    mov         byte ptr [edx+esi],al
 006444DF    mov         eax,dword ptr [ebx+0D8];TWiimoteManager.FDrumsSpeakersUsed::1
 006444E5    movzx       eax,byte ptr [eax+esi]
 006444E9    or          al,byte ptr [ebp+0C]
 006444EC    mov         edx,dword ptr [ebx+0D8];TWiimoteManager.FDrumsSpeakersUsed::1
 006444F2    mov         byte ptr [edx+esi],al
 006444F5    mov         eax,dword ptr [ebx+0DC];TWiimoteManager.FDrums3FsUsed::1
 006444FB    movzx       eax,byte ptr [eax+esi]
 006444FF    or          al,byte ptr [ebp+8]
 00644502    mov         edx,dword ptr [ebx+0DC];TWiimoteManager.FDrums3FsUsed::1
 00644508    mov         byte ptr [edx+esi],al
 0064450B    cmp         byte ptr [ebx+124],0;TWiimoteManager.FUseWiimoteDotDrums:Boolean
>00644512    je          00644534
 00644514    movzx       eax,byte ptr [ebp+10]
 00644518    push        eax
 00644519    push        1
 0064451B    movzx       eax,byte ptr [ebp+0C]
 0064451F    push        eax
 00644520    movzx       eax,byte ptr [ebp+8]
 00644524    push        eax
 00644525    push        0
 00644527    movzx       ecx,byte ptr [ebp-1]
 0064452B    mov         edx,esi
 0064452D    mov         eax,ebx
 0064452F    call        TWiimoteManager.UseWiimote
 00644534    pop         edi
 00644535    pop         esi
 00644536    pop         ebx
 00644537    pop         ecx
 00644538    pop         ecx
 00644539    pop         ebp
 0064453A    ret         0C
*}
end;

//00644540
procedure TWiimoteManager.UseDualShock3(i:Integer);
begin
{*
 00644540    mov         byte ptr [eax+12E],1;TWiimoteManager.FUseDualShock3:Boolean
 00644547    ret
*}
end;

//00644548
procedure TWiimoteManager.UseGuitar(i:Integer; Force:Boolean; UseMotionPlus:Boolean; Use3F:Boolean; Speaker:Boolean; IR:Boolean);
begin
{*
 00644548    push        ebp
 00644549    mov         ebp,esp
 0064454B    add         esp,0FFFFFFF8
 0064454E    push        ebx
 0064454F    push        esi
 00644550    push        edi
 00644551    mov         byte ptr [ebp-1],cl
 00644554    mov         esi,edx
 00644556    mov         ebx,eax
 00644558    test        esi,esi
>0064455A    jge         0064457A
 0064455C    movzx       eax,byte ptr [ebp+10]
 00644560    push        eax
 00644561    movzx       eax,byte ptr [ebp+0C]
 00644565    push        eax
 00644566    movzx       ecx,byte ptr [ebp+14]
 0064456A    movzx       edx,byte ptr [ebp-1]
 0064456E    mov         eax,ebx
 00644570    call        TWiimoteManager.UseAllGuitars
>00644575    jmp         00644753
 0064457A    test        esi,esi
>0064457C    jne         00644583
 0064457E    mov         esi,1
 00644583    mov         byte ptr [ebx+118],1;TWiimoteManager.FUseWiimote:Boolean
 0064458A    mov         byte ptr [ebx+119],1;TWiimoteManager.FUseGuitar:Boolean
 00644591    mov         byte ptr [ebx+120],1;TWiimoteManager.FUseExpansion:Boolean
 00644598    movzx       eax,byte ptr [ebx+11E];TWiimoteManager.FUseForce:Boolean
 0064459F    or          al,byte ptr [ebp-1]
 006445A2    mov         byte ptr [ebx+11E],al;TWiimoteManager.FUseForce:Boolean
 006445A8    movzx       eax,byte ptr [ebx+11F];TWiimoteManager.FUseIR:Boolean
 006445AF    or          al,byte ptr [ebp+14]
 006445B2    mov         byte ptr [ebx+11F],al;TWiimoteManager.FUseIR:Boolean
 006445B8    movzx       eax,byte ptr [ebx+121];TWiimoteManager.FUseSpeaker:Boolean
 006445BF    or          al,byte ptr [ebp+10]
 006445C2    mov         byte ptr [ebx+121],al;TWiimoteManager.FUseSpeaker:Boolean
 006445C8    movzx       eax,byte ptr [ebx+122];TWiimoteManager.FUse3F:Boolean
 006445CF    or          al,byte ptr [ebp+0C]
 006445D2    mov         byte ptr [ebx+122],al;TWiimoteManager.FUse3F:Boolean
 006445D8    cmp         esi,dword ptr [ebx+70];TWiimoteManager.FMaxGuitarUsed:Integer
>006445DB    jle         006446C5
 006445E1    mov         eax,dword ptr [ebx+98];TWiimoteManager.FGuitarsUsed::1
 006445E7    call        @DynArrayHigh
 006445EC    mov         dword ptr [ebp-8],eax
 006445EF    lea         edi,[esi+1]
 006445F2    push        edi
 006445F3    lea         eax,[ebx+98];TWiimoteManager.FGuitarsUsed::1
 006445F9    mov         ecx,1
 006445FE    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644604    call        @DynArraySetLength
 00644609    add         esp,4
 0064460C    push        edi
 0064460D    lea         eax,[ebx+0C0];TWiimoteManager.FGuitarForcesUsed::1
 00644613    mov         ecx,1
 00644618    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 0064461E    call        @DynArraySetLength
 00644623    add         esp,4
 00644626    push        edi
 00644627    lea         eax,[ebx+0C4];TWiimoteManager.FGuitarIRsUsed::1
 0064462D    mov         ecx,1
 00644632    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644638    call        @DynArraySetLength
 0064463D    add         esp,4
 00644640    push        edi
 00644641    lea         eax,[ebx+0C8];TWiimoteManager.FGuitarSpeakersUsed::1
 00644647    mov         ecx,1
 0064464C    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644652    call        @DynArraySetLength
 00644657    add         esp,4
 0064465A    push        edi
 0064465B    lea         eax,[ebx+0CC];TWiimoteManager.FGuitar3FsUsed::1
 00644661    mov         ecx,1
 00644666    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 0064466C    call        @DynArraySetLength
 00644671    add         esp,4
 00644674    mov         eax,dword ptr [ebp-8]
 00644677    inc         eax
 00644678    push        eax
 00644679    mov         eax,dword ptr [ebx+98];TWiimoteManager.FGuitarsUsed::1
 0064467F    call        @DynArrayHigh
 00644684    mov         edx,eax
 00644686    pop         eax
 00644687    sub         edx,eax
>00644689    jl          006446C2
 0064468B    inc         edx
 0064468C    mov         ecx,dword ptr [ebx+98];TWiimoteManager.FGuitarsUsed::1
 00644692    mov         byte ptr [ecx+eax],0
 00644696    mov         ecx,dword ptr [ebx+0C0];TWiimoteManager.FGuitarForcesUsed::1
 0064469C    mov         byte ptr [ecx+eax],0
 006446A0    mov         ecx,dword ptr [ebx+0C4];TWiimoteManager.FGuitarIRsUsed::1
 006446A6    mov         byte ptr [ecx+eax],0
 006446AA    mov         ecx,dword ptr [ebx+0C8];TWiimoteManager.FGuitarSpeakersUsed::1
 006446B0    mov         byte ptr [ecx+eax],0
 006446B4    mov         ecx,dword ptr [ebx+0CC];TWiimoteManager.FGuitar3FsUsed::1
 006446BA    mov         byte ptr [ecx+eax],0
 006446BE    inc         eax
 006446BF    dec         edx
>006446C0    jne         0064468C
 006446C2    mov         dword ptr [ebx+70],esi;TWiimoteManager.FMaxGuitarUsed:Integer
 006446C5    mov         eax,dword ptr [ebx+98];TWiimoteManager.FGuitarsUsed::1
 006446CB    mov         byte ptr [eax+esi],1
 006446CF    mov         eax,dword ptr [ebx+0C0];TWiimoteManager.FGuitarForcesUsed::1
 006446D5    movzx       eax,byte ptr [eax+esi]
 006446D9    or          al,byte ptr [ebp-1]
 006446DC    mov         edx,dword ptr [ebx+0C0];TWiimoteManager.FGuitarForcesUsed::1
 006446E2    mov         byte ptr [edx+esi],al
 006446E5    mov         eax,dword ptr [ebx+0C4];TWiimoteManager.FGuitarIRsUsed::1
 006446EB    movzx       eax,byte ptr [eax+esi]
 006446EF    or          al,byte ptr [ebp+14]
 006446F2    mov         edx,dword ptr [ebx+0C4];TWiimoteManager.FGuitarIRsUsed::1
 006446F8    mov         byte ptr [edx+esi],al
 006446FB    mov         eax,dword ptr [ebx+0C8];TWiimoteManager.FGuitarSpeakersUsed::1
 00644701    movzx       eax,byte ptr [eax+esi]
 00644705    or          al,byte ptr [ebp+10]
 00644708    mov         edx,dword ptr [ebx+0C8];TWiimoteManager.FGuitarSpeakersUsed::1
 0064470E    mov         byte ptr [edx+esi],al
 00644711    mov         eax,dword ptr [ebx+0CC];TWiimoteManager.FGuitar3FsUsed::1
 00644717    movzx       eax,byte ptr [eax+esi]
 0064471B    or          al,byte ptr [ebp+0C]
 0064471E    mov         edx,dword ptr [ebx+0CC];TWiimoteManager.FGuitar3FsUsed::1
 00644724    mov         byte ptr [edx+esi],al
 00644727    cmp         byte ptr [ebx+123],0;TWiimoteManager.FUseWiimoteDotGuitar:Boolean
>0064472E    je          00644753
 00644730    movzx       eax,byte ptr [ebp+14]
 00644734    push        eax
 00644735    push        1
 00644737    movzx       eax,byte ptr [ebp+10]
 0064473B    push        eax
 0064473C    movzx       eax,byte ptr [ebp+0C]
 00644740    push        eax
 00644741    movzx       eax,byte ptr [ebp+8]
 00644745    push        eax
 00644746    movzx       ecx,byte ptr [ebp-1]
 0064474A    mov         edx,esi
 0064474C    mov         eax,ebx
 0064474E    call        TWiimoteManager.UseWiimote
 00644753    pop         edi
 00644754    pop         esi
 00644755    pop         ebx
 00644756    pop         ecx
 00644757    pop         ecx
 00644758    pop         ebp
 00644759    ret         10
*}
end;

//0064475C
procedure TWiimoteManager.UseKinect(i:Integer);
begin
{*
 0064475C    push        ebx
 0064475D    push        esi
 0064475E    push        edi
 0064475F    mov         esi,edx
 00644761    mov         ebx,eax
 00644763    test        esi,esi
>00644765    jge         00644770
 00644767    mov         eax,ebx
 00644769    call        TWiimoteManager.UseAllKinects
>0064476E    jmp         006447E5
 00644770    test        esi,esi
>00644772    jne         00644779
 00644774    mov         esi,1
 00644779    mov         byte ptr [ebx+132],1;TWiimoteManager.FUseKinect:Boolean
 00644780    cmp         esi,dword ptr [ebx+90];TWiimoteManager.FMaxKinectUsed:Integer
>00644786    jle         006447DB
 00644788    mov         eax,dword ptr [ebx+0FC];TWiimoteManager.FKinectsUsed::1
 0064478E    call        @DynArrayHigh
 00644793    mov         edi,eax
 00644795    lea         eax,[esi+1]
 00644798    push        eax
 00644799    lea         eax,[ebx+0FC];TWiimoteManager.FKinectsUsed::1
 0064479F    mov         ecx,1
 006447A4    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 006447AA    call        @DynArraySetLength
 006447AF    add         esp,4
 006447B2    lea         edx,[edi+1]
 006447B5    push        edx
 006447B6    mov         eax,dword ptr [ebx+0FC];TWiimoteManager.FKinectsUsed::1
 006447BC    call        @DynArrayHigh
 006447C1    pop         edx
 006447C2    sub         eax,edx
>006447C4    jl          006447D5
 006447C6    inc         eax
 006447C7    mov         ecx,dword ptr [ebx+0FC];TWiimoteManager.FKinectsUsed::1
 006447CD    mov         byte ptr [ecx+edx],0
 006447D1    inc         edx
 006447D2    dec         eax
>006447D3    jne         006447C7
 006447D5    mov         dword ptr [ebx+90],esi;TWiimoteManager.FMaxKinectUsed:Integer
 006447DB    mov         eax,dword ptr [ebx+0FC];TWiimoteManager.FKinectsUsed::1
 006447E1    mov         byte ptr [eax+esi],1
 006447E5    pop         edi
 006447E6    pop         esi
 006447E7    pop         ebx
 006447E8    ret
*}
end;

//006447EC
procedure TWiimoteManager.UseLightstone(i:Integer);
begin
{*
 006447EC    mov         byte ptr [eax+12F],1;TWiimoteManager.FUseLightstone:Boolean
 006447F3    ret
*}
end;

//006447F4
procedure TWiimoteManager.UseMotionPlus(i:Integer);
begin
{*
 006447F4    mov         byte ptr [eax+127],1;TWiimoteManager.FUseMotionPlus:Boolean
 006447FB    push        0
 006447FD    push        0
 006447FF    push        0
 00644801    push        0
 00644803    push        1
 00644805    xor         ecx,ecx
 00644807    call        TWiimoteManager.UseWiimote
 0064480C    ret
*}
end;

//00644810
procedure TWiimoteManager.UseMove(i:Integer);
begin
{*
 00644810    push        ebp
 00644811    mov         ebp,esp
 00644813    push        0
 00644815    push        0
 00644817    push        ebx
 00644818    push        esi
 00644819    push        edi
 0064481A    mov         esi,edx
 0064481C    mov         ebx,eax
 0064481E    xor         eax,eax
 00644820    push        ebp
 00644821    push        6448ED
 00644826    push        dword ptr fs:[eax]
 00644829    mov         dword ptr fs:[eax],esp
 0064482C    push        644908;'Manager.UseMove('
 00644831    lea         edx,[ebp-8]
 00644834    mov         eax,esi
 00644836    call        IntToStr
 0064483B    push        dword ptr [ebp-8]
 0064483E    push        644938;')'
 00644843    lea         eax,[ebp-4]
 00644846    mov         edx,3
 0064484B    call        @UStrCatN
 00644850    test        esi,esi
>00644852    jge         0064485D
 00644854    mov         eax,ebx
 00644856    call        TWiimoteManager.UseAllMoves
>0064485B    jmp         006448D2
 0064485D    test        esi,esi
>0064485F    jne         00644866
 00644861    mov         esi,1
 00644866    mov         byte ptr [ebx+12B],1;TWiimoteManager.FUseMove:Boolean
 0064486D    cmp         esi,dword ptr [ebx+88];TWiimoteManager.FMaxMoveUsed:Integer
>00644873    jle         006448C8
 00644875    mov         eax,dword ptr [ebx+0F8];TWiimoteManager.FMovesUsed::1
 0064487B    call        @DynArrayHigh
 00644880    mov         edi,eax
 00644882    lea         eax,[esi+1]
 00644885    push        eax
 00644886    lea         eax,[ebx+0F8];TWiimoteManager.FMovesUsed::1
 0064488C    mov         ecx,1
 00644891    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644897    call        @DynArraySetLength
 0064489C    add         esp,4
 0064489F    lea         edx,[edi+1]
 006448A2    push        edx
 006448A3    mov         eax,dword ptr [ebx+0F8];TWiimoteManager.FMovesUsed::1
 006448A9    call        @DynArrayHigh
 006448AE    pop         edx
 006448AF    sub         eax,edx
>006448B1    jl          006448C2
 006448B3    inc         eax
 006448B4    mov         ecx,dword ptr [ebx+0F8];TWiimoteManager.FMovesUsed::1
 006448BA    mov         byte ptr [ecx+edx],0
 006448BE    inc         edx
 006448BF    dec         eax
>006448C0    jne         006448B4
 006448C2    mov         dword ptr [ebx+88],esi;TWiimoteManager.FMaxMoveUsed:Integer
 006448C8    mov         eax,dword ptr [ebx+0F8];TWiimoteManager.FMovesUsed::1
 006448CE    mov         byte ptr [eax+esi],1
 006448D2    xor         eax,eax
 006448D4    pop         edx
 006448D5    pop         ecx
 006448D6    pop         ecx
 006448D7    mov         dword ptr fs:[eax],edx
 006448DA    push        6448F4
 006448DF    lea         eax,[ebp-8]
 006448E2    mov         edx,2
 006448E7    call        @UStrArrayClr
 006448EC    ret
>006448ED    jmp         @HandleFinally
>006448F2    jmp         006448DF
 006448F4    pop         edi
 006448F5    pop         esi
 006448F6    pop         ebx
 006448F7    pop         ecx
 006448F8    pop         ecx
 006448F9    pop         ebp
 006448FA    ret
*}
end;

//0064493C
procedure TWiimoteManager.UseNav(i:Integer);
begin
{*
 0064493C    push        ebx
 0064493D    push        esi
 0064493E    push        edi
 0064493F    mov         esi,edx
 00644941    mov         ebx,eax
 00644943    test        esi,esi
>00644945    jge         00644950
 00644947    mov         eax,ebx
 00644949    call        TWiimoteManager.UseAllNavs
>0064494E    jmp         006449C5
 00644950    test        esi,esi
>00644952    jne         00644959
 00644954    mov         esi,1
 00644959    mov         byte ptr [ebx+12A],1;TWiimoteManager.FUseNav:Boolean
 00644960    cmp         esi,dword ptr [ebx+84];TWiimoteManager.FMaxNavUsed:Integer
>00644966    jle         006449BB
 00644968    mov         eax,dword ptr [ebx+0F4];TWiimoteManager.FNavsUsed::1
 0064496E    call        @DynArrayHigh
 00644973    mov         edi,eax
 00644975    lea         eax,[esi+1]
 00644978    push        eax
 00644979    lea         eax,[ebx+0F4];TWiimoteManager.FNavsUsed::1
 0064497F    mov         ecx,1
 00644984    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 0064498A    call        @DynArraySetLength
 0064498F    add         esp,4
 00644992    lea         edx,[edi+1]
 00644995    push        edx
 00644996    mov         eax,dword ptr [ebx+0F4];TWiimoteManager.FNavsUsed::1
 0064499C    call        @DynArrayHigh
 006449A1    pop         edx
 006449A2    sub         eax,edx
>006449A4    jl          006449B5
 006449A6    inc         eax
 006449A7    mov         ecx,dword ptr [ebx+0F4];TWiimoteManager.FNavsUsed::1
 006449AD    mov         byte ptr [ecx+edx],0
 006449B1    inc         edx
 006449B2    dec         eax
>006449B3    jne         006449A7
 006449B5    mov         dword ptr [ebx+84],esi;TWiimoteManager.FMaxNavUsed:Integer
 006449BB    mov         eax,dword ptr [ebx+0F4];TWiimoteManager.FNavsUsed::1
 006449C1    mov         byte ptr [eax+esi],1
 006449C5    pop         edi
 006449C6    pop         esi
 006449C7    pop         ebx
 006449C8    ret
*}
end;

//006449CC
procedure TWiimoteManager.UseNavGyro(i:Integer);
begin
{*
 006449CC    mov         byte ptr [eax+12D],1;TWiimoteManager.FUseNavGyro:Boolean
 006449D3    ret
*}
end;

//006449D4
procedure TWiimoteManager.UseNIA(i:Integer);
begin
{*
 006449D4    mov         byte ptr [eax+130],1;TWiimoteManager.FUseNIA:Boolean
 006449DB    ret
*}
end;

//006449DC
procedure TWiimoteManager.UseSixaxis(i:Integer);
begin
{*
 006449DC    push        ebx
 006449DD    push        esi
 006449DE    push        edi
 006449DF    mov         esi,edx
 006449E1    mov         ebx,eax
 006449E3    test        esi,esi
>006449E5    jge         006449F0
 006449E7    mov         eax,ebx
 006449E9    call        TWiimoteManager.UseAllSixaxes
>006449EE    jmp         00644A65
 006449F0    test        esi,esi
>006449F2    jne         006449F9
 006449F4    mov         esi,1
 006449F9    mov         byte ptr [ebx+129],1;TWiimoteManager.FUseSixaxis:Boolean
 00644A00    cmp         esi,dword ptr [ebx+80];TWiimoteManager.FMaxSixaxisUsed:Integer
>00644A06    jle         00644A5B
 00644A08    mov         eax,dword ptr [ebx+0F0];TWiimoteManager.FSixaxesUsed::1
 00644A0E    call        @DynArrayHigh
 00644A13    mov         edi,eax
 00644A15    lea         eax,[esi+1]
 00644A18    push        eax
 00644A19    lea         eax,[ebx+0F0];TWiimoteManager.FSixaxesUsed::1
 00644A1F    mov         ecx,1
 00644A24    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644A2A    call        @DynArraySetLength
 00644A2F    add         esp,4
 00644A32    lea         edx,[edi+1]
 00644A35    push        edx
 00644A36    mov         eax,dword ptr [ebx+0F0];TWiimoteManager.FSixaxesUsed::1
 00644A3C    call        @DynArrayHigh
 00644A41    pop         edx
 00644A42    sub         eax,edx
>00644A44    jl          00644A55
 00644A46    inc         eax
 00644A47    mov         ecx,dword ptr [ebx+0F0];TWiimoteManager.FSixaxesUsed::1
 00644A4D    mov         byte ptr [ecx+edx],0
 00644A51    inc         edx
 00644A52    dec         eax
>00644A53    jne         00644A47
 00644A55    mov         dword ptr [ebx+80],esi;TWiimoteManager.FMaxSixaxisUsed:Integer
 00644A5B    mov         eax,dword ptr [ebx+0F0];TWiimoteManager.FSixaxesUsed::1
 00644A61    mov         byte ptr [eax+esi],1
 00644A65    pop         edi
 00644A66    pop         esi
 00644A67    pop         ebx
 00644A68    ret
*}
end;

//00644A6C
procedure TWiimoteManager.UseSixaxisGyro(i:Integer);
begin
{*
 00644A6C    mov         byte ptr [eax+12C],1;TWiimoteManager.FUseSixaxisGyro:Boolean
 00644A73    ret
*}
end;

//00644A74
procedure TWiimoteManager.UseSpacePoint(i:Integer);
begin
{*
 00644A74    mov         byte ptr [eax+131],1;TWiimoteManager.FUseSpacePoint:Boolean
 00644A7B    ret
*}
end;

//00644A7C
procedure TWiimoteManager.UseTurntable(i:Integer; Force:Boolean; UseMotionPlus:Boolean; Use3F:Boolean; Speaker:Boolean; IR:Boolean);
begin
{*
 00644A7C    push        ebp
 00644A7D    mov         ebp,esp
 00644A7F    add         esp,0FFFFFFF8
 00644A82    push        ebx
 00644A83    push        esi
 00644A84    push        edi
 00644A85    mov         byte ptr [ebp-1],cl
 00644A88    mov         esi,edx
 00644A8A    mov         ebx,eax
 00644A8C    test        esi,esi
>00644A8E    jge         00644AAE
 00644A90    movzx       eax,byte ptr [ebp+10]
 00644A94    push        eax
 00644A95    movzx       eax,byte ptr [ebp+0C]
 00644A99    push        eax
 00644A9A    movzx       ecx,byte ptr [ebp+14]
 00644A9E    movzx       edx,byte ptr [ebp-1]
 00644AA2    mov         eax,ebx
 00644AA4    call        TWiimoteManager.UseAllTurntables
>00644AA9    jmp         00644C87
 00644AAE    test        esi,esi
>00644AB0    jne         00644AB7
 00644AB2    mov         esi,1
 00644AB7    mov         byte ptr [ebx+118],1;TWiimoteManager.FUseWiimote:Boolean
 00644ABE    mov         byte ptr [ebx+11D],1;TWiimoteManager.FUseTurntable:Boolean
 00644AC5    mov         byte ptr [ebx+120],1;TWiimoteManager.FUseExpansion:Boolean
 00644ACC    movzx       eax,byte ptr [ebx+11E];TWiimoteManager.FUseForce:Boolean
 00644AD3    or          al,byte ptr [ebp-1]
 00644AD6    mov         byte ptr [ebx+11E],al;TWiimoteManager.FUseForce:Boolean
 00644ADC    movzx       eax,byte ptr [ebx+11F];TWiimoteManager.FUseIR:Boolean
 00644AE3    or          al,byte ptr [ebp+14]
 00644AE6    mov         byte ptr [ebx+11F],al;TWiimoteManager.FUseIR:Boolean
 00644AEC    movzx       eax,byte ptr [ebx+121];TWiimoteManager.FUseSpeaker:Boolean
 00644AF3    or          al,byte ptr [ebp+10]
 00644AF6    mov         byte ptr [ebx+121],al;TWiimoteManager.FUseSpeaker:Boolean
 00644AFC    movzx       eax,byte ptr [ebx+122];TWiimoteManager.FUse3F:Boolean
 00644B03    or          al,byte ptr [ebp+0C]
 00644B06    mov         byte ptr [ebx+122],al;TWiimoteManager.FUse3F:Boolean
 00644B0C    cmp         esi,dword ptr [ebx+78];TWiimoteManager.FMaxTurntableUsed:Integer
>00644B0F    jle         00644BF9
 00644B15    mov         eax,dword ptr [ebx+0A0];TWiimoteManager.FTurntablesUsed::1
 00644B1B    call        @DynArrayHigh
 00644B20    mov         dword ptr [ebp-8],eax
 00644B23    lea         edi,[esi+1]
 00644B26    push        edi
 00644B27    lea         eax,[ebx+0A0];TWiimoteManager.FTurntablesUsed::1
 00644B2D    mov         ecx,1
 00644B32    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644B38    call        @DynArraySetLength
 00644B3D    add         esp,4
 00644B40    push        edi
 00644B41    lea         eax,[ebx+0E0];TWiimoteManager.FTurntableForcesUsed::1
 00644B47    mov         ecx,1
 00644B4C    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644B52    call        @DynArraySetLength
 00644B57    add         esp,4
 00644B5A    push        edi
 00644B5B    lea         eax,[ebx+0E4];TWiimoteManager.FTurntableIRsUsed::1
 00644B61    mov         ecx,1
 00644B66    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644B6C    call        @DynArraySetLength
 00644B71    add         esp,4
 00644B74    push        edi
 00644B75    lea         eax,[ebx+0E8];TWiimoteManager.FTurntableSpeakersUsed::1
 00644B7B    mov         ecx,1
 00644B80    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644B86    call        @DynArraySetLength
 00644B8B    add         esp,4
 00644B8E    push        edi
 00644B8F    lea         eax,[ebx+0EC];TWiimoteManager.FTurntable3FsUsed::1
 00644B95    mov         ecx,1
 00644B9A    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644BA0    call        @DynArraySetLength
 00644BA5    add         esp,4
 00644BA8    mov         eax,dword ptr [ebp-8]
 00644BAB    inc         eax
 00644BAC    push        eax
 00644BAD    mov         eax,dword ptr [ebx+0A0];TWiimoteManager.FTurntablesUsed::1
 00644BB3    call        @DynArrayHigh
 00644BB8    mov         edx,eax
 00644BBA    pop         eax
 00644BBB    sub         edx,eax
>00644BBD    jl          00644BF6
 00644BBF    inc         edx
 00644BC0    mov         ecx,dword ptr [ebx+0A0];TWiimoteManager.FTurntablesUsed::1
 00644BC6    mov         byte ptr [ecx+eax],0
 00644BCA    mov         ecx,dword ptr [ebx+0E0];TWiimoteManager.FTurntableForcesUsed::1
 00644BD0    mov         byte ptr [ecx+eax],0
 00644BD4    mov         ecx,dword ptr [ebx+0E4];TWiimoteManager.FTurntableIRsUsed::1
 00644BDA    mov         byte ptr [ecx+eax],0
 00644BDE    mov         ecx,dword ptr [ebx+0E8];TWiimoteManager.FTurntableSpeakersUsed::1
 00644BE4    mov         byte ptr [ecx+eax],0
 00644BE8    mov         ecx,dword ptr [ebx+0EC];TWiimoteManager.FTurntable3FsUsed::1
 00644BEE    mov         byte ptr [ecx+eax],0
 00644BF2    inc         eax
 00644BF3    dec         edx
>00644BF4    jne         00644BC0
 00644BF6    mov         dword ptr [ebx+78],esi;TWiimoteManager.FMaxTurntableUsed:Integer
 00644BF9    mov         eax,dword ptr [ebx+0A0];TWiimoteManager.FTurntablesUsed::1
 00644BFF    mov         byte ptr [eax+esi],1
 00644C03    mov         eax,dword ptr [ebx+0E0];TWiimoteManager.FTurntableForcesUsed::1
 00644C09    movzx       eax,byte ptr [eax+esi]
 00644C0D    or          al,byte ptr [ebp-1]
 00644C10    mov         edx,dword ptr [ebx+0E0];TWiimoteManager.FTurntableForcesUsed::1
 00644C16    mov         byte ptr [edx+esi],al
 00644C19    mov         eax,dword ptr [ebx+0E4];TWiimoteManager.FTurntableIRsUsed::1
 00644C1F    movzx       eax,byte ptr [eax+esi]
 00644C23    or          al,byte ptr [ebp+14]
 00644C26    mov         edx,dword ptr [ebx+0E4];TWiimoteManager.FTurntableIRsUsed::1
 00644C2C    mov         byte ptr [edx+esi],al
 00644C2F    mov         eax,dword ptr [ebx+0E8];TWiimoteManager.FTurntableSpeakersUsed::1
 00644C35    movzx       eax,byte ptr [eax+esi]
 00644C39    or          al,byte ptr [ebp+10]
 00644C3C    mov         edx,dword ptr [ebx+0E8];TWiimoteManager.FTurntableSpeakersUsed::1
 00644C42    mov         byte ptr [edx+esi],al
 00644C45    mov         eax,dword ptr [ebx+0EC];TWiimoteManager.FTurntable3FsUsed::1
 00644C4B    movzx       eax,byte ptr [eax+esi]
 00644C4F    or          al,byte ptr [ebp+0C]
 00644C52    mov         edx,dword ptr [ebx+0EC];TWiimoteManager.FTurntable3FsUsed::1
 00644C58    mov         byte ptr [edx+esi],al
 00644C5B    cmp         byte ptr [ebx+125],0;TWiimoteManager.FUseWiimoteDotTurntable:Boolean
>00644C62    je          00644C87
 00644C64    movzx       eax,byte ptr [ebp+14]
 00644C68    push        eax
 00644C69    push        1
 00644C6B    movzx       eax,byte ptr [ebp+10]
 00644C6F    push        eax
 00644C70    movzx       eax,byte ptr [ebp+0C]
 00644C74    push        eax
 00644C75    movzx       eax,byte ptr [ebp+8]
 00644C79    push        eax
 00644C7A    movzx       ecx,byte ptr [ebp-1]
 00644C7E    mov         edx,esi
 00644C80    mov         eax,ebx
 00644C82    call        TWiimoteManager.UseWiimote
 00644C87    pop         edi
 00644C88    pop         esi
 00644C89    pop         ebx
 00644C8A    pop         ecx
 00644C8B    pop         ecx
 00644C8C    pop         ebp
 00644C8D    ret         10
*}
end;

//00644C90
procedure TWiimoteManager.UseWiimote(i:Integer; Force:Boolean; UseMotionPlus:Boolean; Use3F:Boolean; Speaker:Boolean; Expansion:Boolean; IR:Boolean);
begin
{*
 00644C90    push        ebp
 00644C91    mov         ebp,esp
 00644C93    add         esp,0FFFFFFF8
 00644C96    push        ebx
 00644C97    push        esi
 00644C98    push        edi
 00644C99    mov         byte ptr [ebp-1],cl
 00644C9C    mov         esi,edx
 00644C9E    mov         ebx,eax
 00644CA0    test        esi,esi
>00644CA2    jge         00644CCC
 00644CA4    movzx       eax,byte ptr [ebp+14]
 00644CA8    push        eax
 00644CA9    movzx       eax,byte ptr [ebp+10]
 00644CAD    push        eax
 00644CAE    movzx       eax,byte ptr [ebp+0C]
 00644CB2    push        eax
 00644CB3    movzx       eax,byte ptr [ebp+8]
 00644CB7    push        eax
 00644CB8    movzx       ecx,byte ptr [ebp+18]
 00644CBC    movzx       edx,byte ptr [ebp-1]
 00644CC0    mov         eax,ebx
 00644CC2    call        TWiimoteManager.UseAllWiimotes
>00644CC7    jmp         00644EFF
 00644CCC    test        esi,esi
>00644CCE    jne         00644CD5
 00644CD0    mov         esi,1
 00644CD5    mov         byte ptr [ebx+118],1;TWiimoteManager.FUseWiimote:Boolean
 00644CDC    movzx       eax,byte ptr [ebx+11E];TWiimoteManager.FUseForce:Boolean
 00644CE3    or          al,byte ptr [ebp-1]
 00644CE6    mov         byte ptr [ebx+11E],al;TWiimoteManager.FUseForce:Boolean
 00644CEC    movzx       eax,byte ptr [ebx+11F];TWiimoteManager.FUseIR:Boolean
 00644CF3    or          al,byte ptr [ebp+18]
 00644CF6    mov         byte ptr [ebx+11F],al;TWiimoteManager.FUseIR:Boolean
 00644CFC    movzx       eax,byte ptr [ebx+120];TWiimoteManager.FUseExpansion:Boolean
 00644D03    or          al,byte ptr [ebp+14]
 00644D06    mov         byte ptr [ebx+120],al;TWiimoteManager.FUseExpansion:Boolean
 00644D0C    movzx       eax,byte ptr [ebx+127];TWiimoteManager.FUseMotionPlus:Boolean
 00644D13    or          al,byte ptr [ebp+8]
 00644D16    mov         byte ptr [ebx+127],al;TWiimoteManager.FUseMotionPlus:Boolean
 00644D1C    movzx       eax,byte ptr [ebx+121];TWiimoteManager.FUseSpeaker:Boolean
 00644D23    or          al,byte ptr [ebp+10]
 00644D26    mov         byte ptr [ebx+121],al;TWiimoteManager.FUseSpeaker:Boolean
 00644D2C    movzx       eax,byte ptr [ebx+122];TWiimoteManager.FUse3F:Boolean
 00644D33    or          al,byte ptr [ebp+0C]
 00644D36    mov         byte ptr [ebx+122],al;TWiimoteManager.FUse3F:Boolean
 00644D3C    cmp         esi,dword ptr [ebx+6C];TWiimoteManager.FMaxWiimoteUsed:Integer
>00644D3F    jle         00644E71
 00644D45    mov         eax,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 00644D4B    call        @DynArrayHigh
 00644D50    mov         dword ptr [ebp-8],eax
 00644D53    lea         edi,[esi+1]
 00644D56    push        edi
 00644D57    lea         eax,[ebx+94];TWiimoteManager.FWiimotesUsed::1
 00644D5D    mov         ecx,1
 00644D62    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644D68    call        @DynArraySetLength
 00644D6D    add         esp,4
 00644D70    push        edi
 00644D71    lea         eax,[ebx+0A8];TWiimoteManager.FForcesUsed::1
 00644D77    mov         ecx,1
 00644D7C    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644D82    call        @DynArraySetLength
 00644D87    add         esp,4
 00644D8A    push        edi
 00644D8B    lea         eax,[ebx+0AC];TWiimoteManager.FIRsUsed::1
 00644D91    mov         ecx,1
 00644D96    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644D9C    call        @DynArraySetLength
 00644DA1    add         esp,4
 00644DA4    push        edi
 00644DA5    lea         eax,[ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00644DAB    mov         ecx,1
 00644DB0    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644DB6    call        @DynArraySetLength
 00644DBB    add         esp,4
 00644DBE    push        edi
 00644DBF    lea         eax,[ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 00644DC5    mov         ecx,1
 00644DCA    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644DD0    call        @DynArraySetLength
 00644DD5    add         esp,4
 00644DD8    push        edi
 00644DD9    lea         eax,[ebx+0BC];TWiimoteManager.F3FsUsed::1
 00644DDF    mov         ecx,1
 00644DE4    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644DEA    call        @DynArraySetLength
 00644DEF    add         esp,4
 00644DF2    push        edi
 00644DF3    lea         eax,[ebx+0B4];TWiimoteManager.FMotionPlusesUsed::1
 00644DF9    mov         ecx,1
 00644DFE    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644E04    call        @DynArraySetLength
 00644E09    add         esp,4
 00644E0C    mov         eax,dword ptr [ebp-8]
 00644E0F    inc         eax
 00644E10    push        eax
 00644E11    mov         eax,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 00644E17    call        @DynArrayHigh
 00644E1C    mov         edx,eax
 00644E1E    pop         eax
 00644E1F    sub         edx,eax
>00644E21    jl          00644E6E
 00644E23    inc         edx
 00644E24    mov         ecx,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 00644E2A    mov         byte ptr [ecx+eax],0
 00644E2E    mov         ecx,dword ptr [ebx+0A8];TWiimoteManager.FForcesUsed::1
 00644E34    mov         byte ptr [ecx+eax],0
 00644E38    mov         ecx,dword ptr [ebx+0AC];TWiimoteManager.FIRsUsed::1
 00644E3E    mov         byte ptr [ecx+eax],0
 00644E42    mov         ecx,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00644E48    mov         byte ptr [ecx+eax],0
 00644E4C    mov         ecx,dword ptr [ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 00644E52    mov         byte ptr [ecx+eax],0
 00644E56    mov         ecx,dword ptr [ebx+0BC];TWiimoteManager.F3FsUsed::1
 00644E5C    mov         byte ptr [ecx+eax],0
 00644E60    mov         ecx,dword ptr [ebx+0B4];TWiimoteManager.FMotionPlusesUsed::1
 00644E66    mov         byte ptr [ecx+eax],0
 00644E6A    inc         eax
 00644E6B    dec         edx
>00644E6C    jne         00644E24
 00644E6E    mov         dword ptr [ebx+6C],esi;TWiimoteManager.FMaxWiimoteUsed:Integer
 00644E71    mov         eax,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 00644E77    mov         byte ptr [eax+esi],1
 00644E7B    mov         eax,dword ptr [ebx+0A8];TWiimoteManager.FForcesUsed::1
 00644E81    movzx       eax,byte ptr [eax+esi]
 00644E85    or          al,byte ptr [ebp-1]
 00644E88    mov         edx,dword ptr [ebx+0A8];TWiimoteManager.FForcesUsed::1
 00644E8E    mov         byte ptr [edx+esi],al
 00644E91    mov         eax,dword ptr [ebx+0AC];TWiimoteManager.FIRsUsed::1
 00644E97    movzx       eax,byte ptr [eax+esi]
 00644E9B    or          al,byte ptr [ebp+18]
 00644E9E    mov         edx,dword ptr [ebx+0AC];TWiimoteManager.FIRsUsed::1
 00644EA4    mov         byte ptr [edx+esi],al
 00644EA7    mov         eax,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00644EAD    movzx       eax,byte ptr [eax+esi]
 00644EB1    or          al,byte ptr [ebp+14]
 00644EB4    mov         edx,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00644EBA    mov         byte ptr [edx+esi],al
 00644EBD    mov         eax,dword ptr [ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 00644EC3    movzx       eax,byte ptr [eax+esi]
 00644EC7    or          al,byte ptr [ebp+10]
 00644ECA    mov         edx,dword ptr [ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 00644ED0    mov         byte ptr [edx+esi],al
 00644ED3    mov         eax,dword ptr [ebx+0BC];TWiimoteManager.F3FsUsed::1
 00644ED9    movzx       eax,byte ptr [eax+esi]
 00644EDD    or          al,byte ptr [ebp+0C]
 00644EE0    mov         edx,dword ptr [ebx+0BC];TWiimoteManager.F3FsUsed::1
 00644EE6    mov         byte ptr [edx+esi],al
 00644EE9    mov         eax,dword ptr [ebx+0B4];TWiimoteManager.FMotionPlusesUsed::1
 00644EEF    movzx       eax,byte ptr [eax+esi]
 00644EF3    or          al,byte ptr [ebp+8]
 00644EF6    mov         edx,dword ptr [ebx+0B4];TWiimoteManager.FMotionPlusesUsed::1
 00644EFC    mov         byte ptr [edx+esi],al
 00644EFF    pop         edi
 00644F00    pop         esi
 00644F01    pop         ebx
 00644F02    pop         ecx
 00644F03    pop         ecx
 00644F04    pop         ebp
 00644F05    ret         14
*}
end;

//00644F08
procedure TWiimoteManager.UseWiimoteDotBalanceBoard;
begin
{*
 00644F08    push        ebx
 00644F09    push        esi
 00644F0A    push        edi
 00644F0B    mov         ebx,eax
 00644F0D    cmp         byte ptr [ebx+126],0;TWiimoteManager.FUseWiimoteDotBalanceBoard:Boolean
>00644F14    jne         006450AE
 00644F1A    mov         byte ptr [ebx+126],1;TWiimoteManager.FUseWiimoteDotBalanceBoard:Boolean
 00644F21    mov         eax,dword ptr [ebx+7C];TWiimoteManager.FMaxBalanceBoardUsed:Integer
 00644F24    cmp         eax,dword ptr [ebx+6C];TWiimoteManager.FMaxWiimoteUsed:Integer
>00644F27    jle         00645055
 00644F2D    mov         esi,dword ptr [ebx+70];TWiimoteManager.FMaxGuitarUsed:Integer
 00644F30    lea         edi,[esi+1]
 00644F33    push        edi
 00644F34    lea         eax,[ebx+94];TWiimoteManager.FWiimotesUsed::1
 00644F3A    mov         ecx,1
 00644F3F    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644F45    call        @DynArraySetLength
 00644F4A    add         esp,4
 00644F4D    push        edi
 00644F4E    lea         eax,[ebx+0A8];TWiimoteManager.FForcesUsed::1
 00644F54    mov         ecx,1
 00644F59    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644F5F    call        @DynArraySetLength
 00644F64    add         esp,4
 00644F67    push        edi
 00644F68    lea         eax,[ebx+0AC];TWiimoteManager.FIRsUsed::1
 00644F6E    mov         ecx,1
 00644F73    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644F79    call        @DynArraySetLength
 00644F7E    add         esp,4
 00644F81    push        edi
 00644F82    lea         eax,[ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00644F88    mov         ecx,1
 00644F8D    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644F93    call        @DynArraySetLength
 00644F98    add         esp,4
 00644F9B    push        edi
 00644F9C    lea         eax,[ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 00644FA2    mov         ecx,1
 00644FA7    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644FAD    call        @DynArraySetLength
 00644FB2    add         esp,4
 00644FB5    push        edi
 00644FB6    lea         eax,[ebx+0BC];TWiimoteManager.F3FsUsed::1
 00644FBC    mov         ecx,1
 00644FC1    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644FC7    call        @DynArraySetLength
 00644FCC    add         esp,4
 00644FCF    push        edi
 00644FD0    lea         eax,[ebx+0B4];TWiimoteManager.FMotionPlusesUsed::1
 00644FD6    mov         ecx,1
 00644FDB    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00644FE1    call        @DynArraySetLength
 00644FE6    add         esp,4
 00644FE9    mov         eax,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 00644FEF    call        @DynArrayHigh
 00644FF4    test        eax,eax
>00644FF6    jl          0064504D
 00644FF8    inc         eax
 00644FF9    xor         esi,esi
 00644FFB    mov         edx,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 00645001    cmp         byte ptr [edx+esi],0
>00645005    jne         00645017
 00645007    mov         edx,dword ptr [ebx+0A4];TWiimoteManager.FBalanceBoardsUsed::1
 0064500D    cmp         byte ptr [edx+esi],0
>00645011    jne         00645017
 00645013    xor         edx,edx
>00645015    jmp         00645019
 00645017    mov         dl,1
 00645019    mov         ecx,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 0064501F    mov         byte ptr [ecx+esi],dl
 00645022    mov         edx,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00645028    cmp         byte ptr [edx+esi],0
>0064502C    jne         0064503E
 0064502E    mov         edx,dword ptr [ebx+0A4];TWiimoteManager.FBalanceBoardsUsed::1
 00645034    cmp         byte ptr [edx+esi],0
>00645038    jne         0064503E
 0064503A    xor         edx,edx
>0064503C    jmp         00645040
 0064503E    mov         dl,1
 00645040    mov         ecx,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00645046    mov         byte ptr [ecx+esi],dl
 00645049    inc         esi
 0064504A    dec         eax
>0064504B    jne         00644FFB
 0064504D    mov         eax,dword ptr [ebx+7C];TWiimoteManager.FMaxBalanceBoardUsed:Integer
 00645050    mov         dword ptr [ebx+6C],eax;TWiimoteManager.FMaxWiimoteUsed:Integer
>00645053    jmp         006450AE
 00645055    test        eax,eax
>00645057    jl          006450AE
 00645059    inc         eax
 0064505A    xor         esi,esi
 0064505C    mov         edx,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 00645062    cmp         byte ptr [edx+esi],0
>00645066    jne         00645078
 00645068    mov         edx,dword ptr [ebx+0A4];TWiimoteManager.FBalanceBoardsUsed::1
 0064506E    cmp         byte ptr [edx+esi],0
>00645072    jne         00645078
 00645074    xor         edx,edx
>00645076    jmp         0064507A
 00645078    mov         dl,1
 0064507A    mov         ecx,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 00645080    mov         byte ptr [ecx+esi],dl
 00645083    mov         edx,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00645089    cmp         byte ptr [edx+esi],0
>0064508D    jne         0064509F
 0064508F    mov         edx,dword ptr [ebx+0A4];TWiimoteManager.FBalanceBoardsUsed::1
 00645095    cmp         byte ptr [edx+esi],0
>00645099    jne         0064509F
 0064509B    xor         edx,edx
>0064509D    jmp         006450A1
 0064509F    mov         dl,1
 006450A1    mov         ecx,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 006450A7    mov         byte ptr [ecx+esi],dl
 006450AA    inc         esi
 006450AB    dec         eax
>006450AC    jne         0064505C
 006450AE    pop         edi
 006450AF    pop         esi
 006450B0    pop         ebx
 006450B1    ret
*}
end;

//006450B4
procedure TWiimoteManager.UseWiimoteDotClassic;
begin
{*
 006450B4    ret
*}
end;

//006450B8
procedure TWiimoteManager.UseWiimoteDotDrums;
begin
{*
 006450B8    push        ebx
 006450B9    push        esi
 006450BA    push        edi
 006450BB    mov         ebx,eax
 006450BD    cmp         byte ptr [ebx+124],0;TWiimoteManager.FUseWiimoteDotDrums:Boolean
>006450C4    jne         006453A8
 006450CA    mov         byte ptr [ebx+124],1;TWiimoteManager.FUseWiimoteDotDrums:Boolean
 006450D1    mov         eax,dword ptr [ebx+74];TWiimoteManager.FMaxDrumsUsed:Integer
 006450D4    cmp         eax,dword ptr [ebx+6C];TWiimoteManager.FMaxWiimoteUsed:Integer
>006450D7    jle         006452AB
 006450DD    mov         esi,eax
 006450DF    lea         edi,[esi+1]
 006450E2    push        edi
 006450E3    lea         eax,[ebx+94];TWiimoteManager.FWiimotesUsed::1
 006450E9    mov         ecx,1
 006450EE    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 006450F4    call        @DynArraySetLength
 006450F9    add         esp,4
 006450FC    push        edi
 006450FD    lea         eax,[ebx+0A8];TWiimoteManager.FForcesUsed::1
 00645103    mov         ecx,1
 00645108    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 0064510E    call        @DynArraySetLength
 00645113    add         esp,4
 00645116    push        edi
 00645117    lea         eax,[ebx+0AC];TWiimoteManager.FIRsUsed::1
 0064511D    mov         ecx,1
 00645122    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00645128    call        @DynArraySetLength
 0064512D    add         esp,4
 00645130    push        edi
 00645131    lea         eax,[ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00645137    mov         ecx,1
 0064513C    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00645142    call        @DynArraySetLength
 00645147    add         esp,4
 0064514A    push        edi
 0064514B    lea         eax,[ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 00645151    mov         ecx,1
 00645156    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 0064515C    call        @DynArraySetLength
 00645161    add         esp,4
 00645164    push        edi
 00645165    lea         eax,[ebx+0BC];TWiimoteManager.F3FsUsed::1
 0064516B    mov         ecx,1
 00645170    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00645176    call        @DynArraySetLength
 0064517B    add         esp,4
 0064517E    push        edi
 0064517F    lea         eax,[ebx+0B4];TWiimoteManager.FMotionPlusesUsed::1
 00645185    mov         ecx,1
 0064518A    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00645190    call        @DynArraySetLength
 00645195    add         esp,4
 00645198    mov         eax,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 0064519E    call        @DynArrayHigh
 006451A3    test        eax,eax
>006451A5    jl          006452A0
 006451AB    inc         eax
 006451AC    xor         esi,esi
 006451AE    mov         edx,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 006451B4    cmp         byte ptr [edx+esi],0
>006451B8    jne         006451CA
 006451BA    mov         edx,dword ptr [ebx+9C];TWiimoteManager.FDrumsUsed::1
 006451C0    cmp         byte ptr [edx+esi],0
>006451C4    jne         006451CA
 006451C6    xor         edx,edx
>006451C8    jmp         006451CC
 006451CA    mov         dl,1
 006451CC    mov         ecx,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 006451D2    mov         byte ptr [ecx+esi],dl
 006451D5    mov         edx,dword ptr [ebx+0A8];TWiimoteManager.FForcesUsed::1
 006451DB    cmp         byte ptr [edx+esi],0
>006451DF    jne         006451F1
 006451E1    mov         edx,dword ptr [ebx+0D0];TWiimoteManager.FDrumsForcesUsed::1
 006451E7    cmp         byte ptr [edx+esi],0
>006451EB    jne         006451F1
 006451ED    xor         edx,edx
>006451EF    jmp         006451F3
 006451F1    mov         dl,1
 006451F3    mov         ecx,dword ptr [ebx+0A8];TWiimoteManager.FForcesUsed::1
 006451F9    mov         byte ptr [ecx+esi],dl
 006451FC    mov         edx,dword ptr [ebx+0AC];TWiimoteManager.FIRsUsed::1
 00645202    cmp         byte ptr [edx+esi],0
>00645206    jne         00645218
 00645208    mov         edx,dword ptr [ebx+0D4];TWiimoteManager.FDrumsIRsUsed::1
 0064520E    cmp         byte ptr [edx+esi],0
>00645212    jne         00645218
 00645214    xor         edx,edx
>00645216    jmp         0064521A
 00645218    mov         dl,1
 0064521A    mov         ecx,dword ptr [ebx+0AC];TWiimoteManager.FIRsUsed::1
 00645220    mov         byte ptr [ecx+esi],dl
 00645223    mov         edx,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00645229    cmp         byte ptr [edx+esi],0
>0064522D    jne         0064523F
 0064522F    mov         edx,dword ptr [ebx+9C];TWiimoteManager.FDrumsUsed::1
 00645235    cmp         byte ptr [edx+esi],0
>00645239    jne         0064523F
 0064523B    xor         edx,edx
>0064523D    jmp         00645241
 0064523F    mov         dl,1
 00645241    mov         ecx,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00645247    mov         byte ptr [ecx+esi],dl
 0064524A    mov         edx,dword ptr [ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 00645250    cmp         byte ptr [edx+esi],0
>00645254    jne         00645266
 00645256    mov         edx,dword ptr [ebx+0D8];TWiimoteManager.FDrumsSpeakersUsed::1
 0064525C    cmp         byte ptr [edx+esi],0
>00645260    jne         00645266
 00645262    xor         edx,edx
>00645264    jmp         00645268
 00645266    mov         dl,1
 00645268    mov         ecx,dword ptr [ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 0064526E    mov         byte ptr [ecx+esi],dl
 00645271    mov         edx,dword ptr [ebx+0BC];TWiimoteManager.F3FsUsed::1
 00645277    cmp         byte ptr [edx+esi],0
>0064527B    jne         0064528D
 0064527D    mov         edx,dword ptr [ebx+0DC];TWiimoteManager.FDrums3FsUsed::1
 00645283    cmp         byte ptr [edx+esi],0
>00645287    jne         0064528D
 00645289    xor         edx,edx
>0064528B    jmp         0064528F
 0064528D    mov         dl,1
 0064528F    mov         ecx,dword ptr [ebx+0BC];TWiimoteManager.F3FsUsed::1
 00645295    mov         byte ptr [ecx+esi],dl
 00645298    inc         esi
 00645299    dec         eax
>0064529A    jne         006451AE
 006452A0    mov         eax,dword ptr [ebx+74];TWiimoteManager.FMaxDrumsUsed:Integer
 006452A3    mov         dword ptr [ebx+6C],eax;TWiimoteManager.FMaxWiimoteUsed:Integer
>006452A6    jmp         006453A8
 006452AB    test        eax,eax
>006452AD    jl          006453A8
 006452B3    inc         eax
 006452B4    xor         esi,esi
 006452B6    mov         edx,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 006452BC    cmp         byte ptr [edx+esi],0
>006452C0    jne         006452D2
 006452C2    mov         edx,dword ptr [ebx+9C];TWiimoteManager.FDrumsUsed::1
 006452C8    cmp         byte ptr [edx+esi],0
>006452CC    jne         006452D2
 006452CE    xor         edx,edx
>006452D0    jmp         006452D4
 006452D2    mov         dl,1
 006452D4    mov         ecx,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 006452DA    mov         byte ptr [ecx+esi],dl
 006452DD    mov         edx,dword ptr [ebx+0A8];TWiimoteManager.FForcesUsed::1
 006452E3    cmp         byte ptr [edx+esi],0
>006452E7    jne         006452F9
 006452E9    mov         edx,dword ptr [ebx+0D0];TWiimoteManager.FDrumsForcesUsed::1
 006452EF    cmp         byte ptr [edx+esi],0
>006452F3    jne         006452F9
 006452F5    xor         edx,edx
>006452F7    jmp         006452FB
 006452F9    mov         dl,1
 006452FB    mov         ecx,dword ptr [ebx+0A8];TWiimoteManager.FForcesUsed::1
 00645301    mov         byte ptr [ecx+esi],dl
 00645304    mov         edx,dword ptr [ebx+0AC];TWiimoteManager.FIRsUsed::1
 0064530A    cmp         byte ptr [edx+esi],0
>0064530E    jne         00645320
 00645310    mov         edx,dword ptr [ebx+0D4];TWiimoteManager.FDrumsIRsUsed::1
 00645316    cmp         byte ptr [edx+esi],0
>0064531A    jne         00645320
 0064531C    xor         edx,edx
>0064531E    jmp         00645322
 00645320    mov         dl,1
 00645322    mov         ecx,dword ptr [ebx+0AC];TWiimoteManager.FIRsUsed::1
 00645328    mov         byte ptr [ecx+esi],dl
 0064532B    mov         edx,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00645331    cmp         byte ptr [edx+esi],0
>00645335    jne         00645347
 00645337    mov         edx,dword ptr [ebx+9C];TWiimoteManager.FDrumsUsed::1
 0064533D    cmp         byte ptr [edx+esi],0
>00645341    jne         00645347
 00645343    xor         edx,edx
>00645345    jmp         00645349
 00645347    mov         dl,1
 00645349    mov         ecx,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 0064534F    mov         byte ptr [ecx+esi],dl
 00645352    mov         edx,dword ptr [ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 00645358    cmp         byte ptr [edx+esi],0
>0064535C    jne         0064536E
 0064535E    mov         edx,dword ptr [ebx+0D8];TWiimoteManager.FDrumsSpeakersUsed::1
 00645364    cmp         byte ptr [edx+esi],0
>00645368    jne         0064536E
 0064536A    xor         edx,edx
>0064536C    jmp         00645370
 0064536E    mov         dl,1
 00645370    mov         ecx,dword ptr [ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 00645376    mov         byte ptr [ecx+esi],dl
 00645379    mov         edx,dword ptr [ebx+0BC];TWiimoteManager.F3FsUsed::1
 0064537F    cmp         byte ptr [edx+esi],0
>00645383    jne         00645395
 00645385    mov         edx,dword ptr [ebx+0DC];TWiimoteManager.FDrums3FsUsed::1
 0064538B    cmp         byte ptr [edx+esi],0
>0064538F    jne         00645395
 00645391    xor         edx,edx
>00645393    jmp         00645397
 00645395    mov         dl,1
 00645397    mov         ecx,dword ptr [ebx+0BC];TWiimoteManager.F3FsUsed::1
 0064539D    mov         byte ptr [ecx+esi],dl
 006453A0    inc         esi
 006453A1    dec         eax
>006453A2    jne         006452B6
 006453A8    pop         edi
 006453A9    pop         esi
 006453AA    pop         ebx
 006453AB    ret
*}
end;

//006453AC
procedure TWiimoteManager.UseWiimoteDotGuitar;
begin
{*
 006453AC    push        ebx
 006453AD    push        esi
 006453AE    push        edi
 006453AF    mov         ebx,eax
 006453B1    cmp         byte ptr [ebx+123],0;TWiimoteManager.FUseWiimoteDotGuitar:Boolean
>006453B8    jne         00645682
 006453BE    mov         byte ptr [ebx+123],1;TWiimoteManager.FUseWiimoteDotGuitar:Boolean
 006453C5    mov         eax,dword ptr [ebx+70];TWiimoteManager.FMaxGuitarUsed:Integer
 006453C8    cmp         eax,dword ptr [ebx+6C];TWiimoteManager.FMaxWiimoteUsed:Integer
>006453CB    jle         00645585
 006453D1    mov         esi,eax
 006453D3    lea         edi,[esi+1]
 006453D6    push        edi
 006453D7    lea         eax,[ebx+94];TWiimoteManager.FWiimotesUsed::1
 006453DD    mov         ecx,1
 006453E2    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 006453E8    call        @DynArraySetLength
 006453ED    add         esp,4
 006453F0    push        edi
 006453F1    lea         eax,[ebx+0A8];TWiimoteManager.FForcesUsed::1
 006453F7    mov         ecx,1
 006453FC    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00645402    call        @DynArraySetLength
 00645407    add         esp,4
 0064540A    push        edi
 0064540B    lea         eax,[ebx+0AC];TWiimoteManager.FIRsUsed::1
 00645411    mov         ecx,1
 00645416    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 0064541C    call        @DynArraySetLength
 00645421    add         esp,4
 00645424    push        edi
 00645425    lea         eax,[ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 0064542B    mov         ecx,1
 00645430    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00645436    call        @DynArraySetLength
 0064543B    add         esp,4
 0064543E    push        edi
 0064543F    lea         eax,[ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 00645445    mov         ecx,1
 0064544A    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 00645450    call        @DynArraySetLength
 00645455    add         esp,4
 00645458    push        edi
 00645459    lea         eax,[ebx+0BC];TWiimoteManager.F3FsUsed::1
 0064545F    mov         ecx,1
 00645464    mov         edx,dword ptr ds:[638110];:TWiimoteManager.:1
 0064546A    call        @DynArraySetLength
 0064546F    add         esp,4
 00645472    mov         eax,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 00645478    call        @DynArrayHigh
 0064547D    test        eax,eax
>0064547F    jl          0064557A
 00645485    inc         eax
 00645486    xor         esi,esi
 00645488    mov         edx,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 0064548E    cmp         byte ptr [edx+esi],0
>00645492    jne         006454A4
 00645494    mov         edx,dword ptr [ebx+98];TWiimoteManager.FGuitarsUsed::1
 0064549A    cmp         byte ptr [edx+esi],0
>0064549E    jne         006454A4
 006454A0    xor         edx,edx
>006454A2    jmp         006454A6
 006454A4    mov         dl,1
 006454A6    mov         ecx,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 006454AC    mov         byte ptr [ecx+esi],dl
 006454AF    mov         edx,dword ptr [ebx+0A8];TWiimoteManager.FForcesUsed::1
 006454B5    cmp         byte ptr [edx+esi],0
>006454B9    jne         006454CB
 006454BB    mov         edx,dword ptr [ebx+0C0];TWiimoteManager.FGuitarForcesUsed::1
 006454C1    cmp         byte ptr [edx+esi],0
>006454C5    jne         006454CB
 006454C7    xor         edx,edx
>006454C9    jmp         006454CD
 006454CB    mov         dl,1
 006454CD    mov         ecx,dword ptr [ebx+0A8];TWiimoteManager.FForcesUsed::1
 006454D3    mov         byte ptr [ecx+esi],dl
 006454D6    mov         edx,dword ptr [ebx+0AC];TWiimoteManager.FIRsUsed::1
 006454DC    cmp         byte ptr [edx+esi],0
>006454E0    jne         006454F2
 006454E2    mov         edx,dword ptr [ebx+0C4];TWiimoteManager.FGuitarIRsUsed::1
 006454E8    cmp         byte ptr [edx+esi],0
>006454EC    jne         006454F2
 006454EE    xor         edx,edx
>006454F0    jmp         006454F4
 006454F2    mov         dl,1
 006454F4    mov         ecx,dword ptr [ebx+0AC];TWiimoteManager.FIRsUsed::1
 006454FA    mov         byte ptr [ecx+esi],dl
 006454FD    mov         edx,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00645503    cmp         byte ptr [edx+esi],0
>00645507    jne         00645519
 00645509    mov         edx,dword ptr [ebx+98];TWiimoteManager.FGuitarsUsed::1
 0064550F    cmp         byte ptr [edx+esi],0
>00645513    jne         00645519
 00645515    xor         edx,edx
>00645517    jmp         0064551B
 00645519    mov         dl,1
 0064551B    mov         ecx,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00645521    mov         byte ptr [ecx+esi],dl
 00645524    mov         edx,dword ptr [ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 0064552A    cmp         byte ptr [edx+esi],0
>0064552E    jne         00645540
 00645530    mov         edx,dword ptr [ebx+0C8];TWiimoteManager.FGuitarSpeakersUsed::1
 00645536    cmp         byte ptr [edx+esi],0
>0064553A    jne         00645540
 0064553C    xor         edx,edx
>0064553E    jmp         00645542
 00645540    mov         dl,1
 00645542    mov         ecx,dword ptr [ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 00645548    mov         byte ptr [ecx+esi],dl
 0064554B    mov         edx,dword ptr [ebx+0BC];TWiimoteManager.F3FsUsed::1
 00645551    cmp         byte ptr [edx+esi],0
>00645555    jne         00645567
 00645557    mov         edx,dword ptr [ebx+0CC];TWiimoteManager.FGuitar3FsUsed::1
 0064555D    cmp         byte ptr [edx+esi],0
>00645561    jne         00645567
 00645563    xor         edx,edx
>00645565    jmp         00645569
 00645567    mov         dl,1
 00645569    mov         ecx,dword ptr [ebx+0BC];TWiimoteManager.F3FsUsed::1
 0064556F    mov         byte ptr [ecx+esi],dl
 00645572    inc         esi
 00645573    dec         eax
>00645574    jne         00645488
 0064557A    mov         eax,dword ptr [ebx+70];TWiimoteManager.FMaxGuitarUsed:Integer
 0064557D    mov         dword ptr [ebx+6C],eax;TWiimoteManager.FMaxWiimoteUsed:Integer
>00645580    jmp         00645682
 00645585    test        eax,eax
>00645587    jl          00645682
 0064558D    inc         eax
 0064558E    xor         esi,esi
 00645590    mov         edx,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 00645596    cmp         byte ptr [edx+esi],0
>0064559A    jne         006455AC
 0064559C    mov         edx,dword ptr [ebx+98];TWiimoteManager.FGuitarsUsed::1
 006455A2    cmp         byte ptr [edx+esi],0
>006455A6    jne         006455AC
 006455A8    xor         edx,edx
>006455AA    jmp         006455AE
 006455AC    mov         dl,1
 006455AE    mov         ecx,dword ptr [ebx+94];TWiimoteManager.FWiimotesUsed::1
 006455B4    mov         byte ptr [ecx+esi],dl
 006455B7    mov         edx,dword ptr [ebx+0A8];TWiimoteManager.FForcesUsed::1
 006455BD    cmp         byte ptr [edx+esi],0
>006455C1    jne         006455D3
 006455C3    mov         edx,dword ptr [ebx+0C0];TWiimoteManager.FGuitarForcesUsed::1
 006455C9    cmp         byte ptr [edx+esi],0
>006455CD    jne         006455D3
 006455CF    xor         edx,edx
>006455D1    jmp         006455D5
 006455D3    mov         dl,1
 006455D5    mov         ecx,dword ptr [ebx+0A8];TWiimoteManager.FForcesUsed::1
 006455DB    mov         byte ptr [ecx+esi],dl
 006455DE    mov         edx,dword ptr [ebx+0AC];TWiimoteManager.FIRsUsed::1
 006455E4    cmp         byte ptr [edx+esi],0
>006455E8    jne         006455FA
 006455EA    mov         edx,dword ptr [ebx+0C4];TWiimoteManager.FGuitarIRsUsed::1
 006455F0    cmp         byte ptr [edx+esi],0
>006455F4    jne         006455FA
 006455F6    xor         edx,edx
>006455F8    jmp         006455FC
 006455FA    mov         dl,1
 006455FC    mov         ecx,dword ptr [ebx+0AC];TWiimoteManager.FIRsUsed::1
 00645602    mov         byte ptr [ecx+esi],dl
 00645605    mov         edx,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 0064560B    cmp         byte ptr [edx+esi],0
>0064560F    jne         00645621
 00645611    mov         edx,dword ptr [ebx+98];TWiimoteManager.FGuitarsUsed::1
 00645617    cmp         byte ptr [edx+esi],0
>0064561B    jne         00645621
 0064561D    xor         edx,edx
>0064561F    jmp         00645623
 00645621    mov         dl,1
 00645623    mov         ecx,dword ptr [ebx+0B0];TWiimoteManager.FExpansionsUsed::1
 00645629    mov         byte ptr [ecx+esi],dl
 0064562C    mov         edx,dword ptr [ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 00645632    cmp         byte ptr [edx+esi],0
>00645636    jne         00645648
 00645638    mov         edx,dword ptr [ebx+0C8];TWiimoteManager.FGuitarSpeakersUsed::1
 0064563E    cmp         byte ptr [edx+esi],0
>00645642    jne         00645648
 00645644    xor         edx,edx
>00645646    jmp         0064564A
 00645648    mov         dl,1
 0064564A    mov         ecx,dword ptr [ebx+0B8];TWiimoteManager.FSpeakersUsed::1
 00645650    mov         byte ptr [ecx+esi],dl
 00645653    mov         edx,dword ptr [ebx+0BC];TWiimoteManager.F3FsUsed::1
 00645659    cmp         byte ptr [edx+esi],0
>0064565D    jne         0064566F
 0064565F    mov         edx,dword ptr [ebx+0CC];TWiimoteManager.FGuitar3FsUsed::1
 00645665    cmp         byte ptr [edx+esi],0
>00645669    jne         0064566F
 0064566B    xor         edx,edx
>0064566D    jmp         00645671
 0064566F    mov         dl,1
 00645671    mov         ecx,dword ptr [ebx+0BC];TWiimoteManager.F3FsUsed::1
 00645677    mov         byte ptr [ecx+esi],dl
 0064567A    inc         esi
 0064567B    dec         eax
>0064567C    jne         00645590
 00645682    pop         edi
 00645683    pop         esi
 00645684    pop         ebx
 00645685    ret
*}
end;

//00645688
procedure TWiimoteManager.UseWiimoteDotTurntable;
begin
{*
 00645688    ret
*}
end;

//0064568C
function TNumberedObjectList.Add(AObject:TObject):Integer;
begin
{*
 0064568C    push        ebx
 0064568D    push        esi
 0064568E    push        edi
 0064568F    push        ebp
 00645690    push        ecx
 00645691    mov         dword ptr [esp],edx
 00645694    mov         edi,eax
 00645696    mov         esi,dword ptr [edi+8];TNumberedObjectList.FCount:Integer
 00645699    dec         esi
 0064569A    test        esi,esi
>0064569C    jl          006456C4
 0064569E    inc         esi
 0064569F    xor         ebx,ebx
 006456A1    mov         ebp,edi
 006456A3    mov         eax,ebp
 006456A5    mov         edx,ebx
 006456A7    call        TList.Get
 006456AC    test        eax,eax
>006456AE    jne         006456C0
 006456B0    mov         eax,ebp
 006456B2    mov         ecx,dword ptr [esp]
 006456B5    mov         edx,ebx
 006456B7    call        TList.Put
 006456BC    mov         eax,ebx
>006456BE    jmp         006456CE
 006456C0    inc         ebx
 006456C1    dec         esi
>006456C2    jne         006456A1
 006456C4    mov         eax,edi
 006456C6    mov         edx,dword ptr [esp]
 006456C9    call        TList.Add
 006456CE    pop         edx
 006456CF    pop         ebp
 006456D0    pop         edi
 006456D1    pop         esi
 006456D2    pop         ebx
 006456D3    ret
*}
end;

//006456D4
constructor TNumberedObjectList.Create;
begin
{*
 006456D4    push        ebx
 006456D5    push        esi
 006456D6    test        dl,dl
>006456D8    je          006456E2
 006456DA    add         esp,0FFFFFFF0
 006456DD    call        @ClassCreate
 006456E2    mov         ebx,edx
 006456E4    mov         esi,eax
 006456E6    xor         ecx,ecx
 006456E8    xor         edx,edx
 006456EA    mov         eax,esi
 006456EC    call        TObjectList.Create
 006456F1    mov         eax,esi
 006456F3    test        bl,bl
>006456F5    je          00645706
 006456F7    call        @AfterConstruction
 006456FC    pop         dword ptr fs:[0]
 00645703    add         esp,0C
 00645706    mov         eax,esi
 00645708    pop         esi
 00645709    pop         ebx
 0064570A    ret
*}
end;

//0064570C
function TNumberedObjectList.Remove(AObject:TObject):Integer;
begin
{*
 0064570C    push        ebx
 0064570D    push        esi
 0064570E    push        edi
 0064570F    push        ebp
 00645710    push        ecx
 00645711    mov         ebp,edx
 00645713    mov         ebx,eax
 00645715    mov         dword ptr [esp],0FFFFFFFF
 0064571C    mov         esi,dword ptr [ebx+8];TNumberedObjectList.FCount:Integer
 0064571F    dec         esi
 00645720    cmp         esi,0
>00645723    jl          00645757
 00645725    mov         edi,ebx
 00645727    mov         eax,edi
 00645729    mov         edx,esi
 0064572B    call        TList.Get
 00645730    cmp         ebp,eax
>00645732    jne         00645744
 00645734    mov         eax,edi
 00645736    xor         ecx,ecx
 00645738    mov         edx,esi
 0064573A    call        TList.Put
 0064573F    mov         dword ptr [esp],esi
>00645742    jmp         00645757
 00645744    dec         esi
 00645745    cmp         esi,0FFFFFFFF
>00645748    jne         00645725
>0064574A    jmp         00645757
 0064574C    mov         edx,dword ptr [ebx+8];TNumberedObjectList.FCount:Integer
 0064574F    dec         edx
 00645750    mov         eax,ebx
 00645752    call        TList.Delete
 00645757    mov         esi,dword ptr [ebx+8];TNumberedObjectList.FCount:Integer
 0064575A    test        esi,esi
>0064575C    jle         0064576C
 0064575E    mov         edx,esi
 00645760    dec         edx
 00645761    mov         eax,ebx
 00645763    call        TObjectList.GetItem
 00645768    test        eax,eax
>0064576A    je          0064574C
 0064576C    mov         eax,dword ptr [esp]
 0064576F    pop         edx
 00645770    pop         ebp
 00645771    pop         edi
 00645772    pop         esi
 00645773    pop         ebx
 00645774    ret
*}
end;

//00645778
function TNumberedObjectList.ValidCount:Integer;
begin
{*
 00645778    push        ebx
 00645779    push        esi
 0064577A    push        edi
 0064577B    push        ebp
 0064577C    mov         edi,eax
 0064577E    xor         ebp,ebp
 00645780    mov         ebx,dword ptr [edi+8];TNumberedObjectList.FCount:Integer
 00645783    dec         ebx
 00645784    test        ebx,ebx
>00645786    jl          0064579D
 00645788    inc         ebx
 00645789    xor         esi,esi
 0064578B    mov         eax,edi
 0064578D    mov         edx,esi
 0064578F    call        TList.Get
 00645794    test        eax,eax
>00645796    je          00645799
 00645798    inc         ebp
 00645799    inc         esi
 0064579A    dec         ebx
>0064579B    jne         0064578B
 0064579D    mov         eax,ebp
 0064579F    pop         ebp
 006457A0    pop         edi
 006457A1    pop         esi
 006457A2    pop         ebx
 006457A3    ret
*}
end;

//0064603C
{*function sub_0064603C(?:PUsb_dev_handle; ?:Integer; ?:?; ?:?):?;
begin
 0064603C    push        ebp
 0064603D    mov         ebp,esp
 0064603F    push        0
 00646041    push        ebx
 00646042    push        esi
 00646043    mov         esi,edx
 00646045    xor         edx,edx
 00646047    push        ebp
 00646048    push        6460AA
 0064604D    push        dword ptr fs:[edx]
 00646050    mov         dword ptr fs:[edx],esp
 00646053    movzx       edx,byte ptr [ecx]
 00646056    push        1388
 0064605B    mov         ebx,dword ptr [ebp+8]
 0064605E    push        ebx
 0064605F    push        ecx
 00646060    push        esi
 00646061    movzx       edx,dl
 00646064    or          dx,300
 00646069    movzx       edx,dx
 0064606C    push        edx
 0064606D    push        1
 0064606F    push        0A1
 00646074    push        eax
 00646075    mov         eax,[0078CE00];^gvar_0081D8F4:Pointer
 0064607A    mov         eax,dword ptr [eax]
 0064607C    call        eax
 0064607E    add         esp,20
 00646081    mov         ebx,eax
 00646083    lea         edx,[ebp-4]
 00646086    mov         eax,ebx
 00646088    call        IntToStr
 0064608D    test        ebx,ebx
 0064608F    setg        al
 00646092    mov         ebx,eax
 00646094    xor         eax,eax
 00646096    pop         edx
 00646097    pop         ecx
 00646098    pop         ecx
 00646099    mov         dword ptr fs:[eax],edx
 0064609C    push        6460B1
 006460A1    lea         eax,[ebp-4]
 006460A4    call        @UStrClr
 006460A9    ret
>006460AA    jmp         @HandleFinally
>006460AF    jmp         006460A1
 006460B1    mov         eax,ebx
 006460B3    pop         esi
 006460B4    pop         ebx
 006460B5    pop         ecx
 006460B6    pop         ebp
 006460B7    ret         4
end;*}

//006460BC
{*function sub_006460BC(?:PUsb_dev_handle; ?:Integer; ?:?; ?:?; ?:?):Boolean;
begin
 006460BC    push        ebp
 006460BD    mov         ebp,esp
 006460BF    push        ebx
 006460C0    push        1388
 006460C5    mov         ebx,dword ptr [ebp+8]
 006460C8    push        ebx
 006460C9    mov         ebx,dword ptr [ebp+0C]
 006460CC    push        ebx
 006460CD    push        edx
 006460CE    or          ecx,300
 006460D4    push        ecx
 006460D5    push        9
 006460D7    push        21
 006460D9    push        eax
 006460DA    mov         eax,[0078CE00];^gvar_0081D8F4:Pointer
 006460DF    mov         eax,dword ptr [eax]
 006460E1    call        eax
 006460E3    add         esp,20
 006460E6    test        eax,eax
 006460E8    setge       al
 006460EB    pop         ebx
 006460EC    pop         ebp
 006460ED    ret         8
end;*}

//006460F0
{*function sub_006460F0(?:PUsb_dev_handle; ?:Integer; ?:?; ?:?; ?:?):Boolean;
begin
 006460F0    push        ebp
 006460F1    mov         ebp,esp
 006460F3    push        ebx
 006460F4    push        3E8
 006460F9    mov         ebx,dword ptr [ebp+8]
 006460FC    push        ebx
 006460FD    mov         ebx,dword ptr [ebp+0C]
 00646100    push        ebx
 00646101    push        edx
 00646102    or          ecx,200
 00646108    push        ecx
 00646109    push        9
 0064610B    push        21
 0064610D    push        eax
 0064610E    mov         eax,[0078CE00];^gvar_0081D8F4:Pointer
 00646113    mov         eax,dword ptr [eax]
 00646115    call        eax
 00646117    add         esp,20
 0064611A    test        eax,eax
 0064611C    setge       al
 0064611F    pop         ebx
 00646120    pop         ebp
 00646121    ret         8
end;*}

//00646124
{*function sub_00646124(?:PUsb_dev_handle; ?:Integer; ?:?; ?:?; ?:?):Boolean;
begin
 00646124    push        ebp
 00646125    mov         ebp,esp
 00646127    push        ebx
 00646128    push        64
 0064612A    mov         ebx,dword ptr [ebp+8]
 0064612D    push        ebx
 0064612E    mov         ebx,dword ptr [ebp+0C]
 00646131    push        ebx
 00646132    push        edx
 00646133    or          ecx,100
 00646139    push        ecx
 0064613A    push        1
 0064613C    push        0A1
 00646141    push        eax
 00646142    mov         eax,[0078CE00];^gvar_0081D8F4:Pointer
 00646147    mov         eax,dword ptr [eax]
 00646149    call        eax
 0064614B    add         esp,20
 0064614E    test        eax,eax
 00646150    setge       al
 00646153    pop         ebx
 00646154    pop         ebp
 00646155    ret         8
end;*}

//00646158
{*procedure sub_00646158(?:string; ?:?);
begin
 00646158    push        ebp
 00646159    mov         ebp,esp
 0064615B    push        ecx
 0064615C    push        ebx
 0064615D    push        esi
 0064615E    push        edi
 0064615F    mov         esi,edx
 00646161    mov         dword ptr [ebp-4],eax
 00646164    mov         eax,dword ptr [ebp-4]
 00646167    call        @UStrAddRef
 0064616C    xor         eax,eax
 0064616E    push        ebp
 0064616F    push        64626A
 00646174    push        dword ptr fs:[eax]
 00646177    mov         dword ptr fs:[eax],esp
 0064617A    mov         edx,dword ptr [ebp-4]
 0064617D    mov         eax,edx
 0064617F    test        eax,eax
>00646181    je          00646188
 00646183    sub         eax,4
 00646186    mov         eax,dword ptr [eax]
 00646188    cmp         eax,0C
>0064618B    jne         00646231
 00646191    mov         eax,esi
 00646193    mov         edx,11
 00646198    call        @UStrSetLength
 0064619D    mov         ebx,1
 006461A2    mov         eax,esi
 006461A4    call        @UniqueStringU
 006461A9    lea         edx,[ebx+ebx*2]
 006461AC    mov         word ptr [eax+edx*2-2],3A
 006461B3    inc         ebx
 006461B4    cmp         ebx,6
>006461B7    jne         006461A2
 006461B9    xor         ebx,ebx
 006461BB    mov         eax,ebx
 006461BD    add         eax,eax
 006461BF    mov         edx,dword ptr [ebp-4]
 006461C2    movzx       eax,word ptr [edx+eax*2]
 006461C6    mov         edi,eax
 006461C8    mov         edx,eax
 006461CA    add         edx,0FFFFFF9F
 006461CD    sub         dx,1A
>006461D1    jae         006461DA
 006461D3    mov         edi,eax
 006461D5    and         di,0FFDF
 006461DA    mov         eax,esi
 006461DC    call        @UniqueStringU
 006461E1    lea         edx,[ebx+ebx*2]
 006461E4    mov         word ptr [eax+edx*2],di
 006461E8    mov         eax,ebx
 006461EA    add         eax,eax
 006461EC    mov         edx,dword ptr [ebp-4]
 006461EF    movzx       edi,word ptr [edx+eax*2+2]
 006461F4    mov         eax,ebx
 006461F6    add         eax,eax
 006461F8    mov         edx,dword ptr [ebp-4]
 006461FB    movzx       eax,word ptr [edx+eax*2+2]
 00646200    add         eax,0FFFFFF9F
 00646203    sub         ax,1A
>00646207    jae         0064621A
 00646209    mov         eax,ebx
 0064620B    add         eax,eax
 0064620D    mov         edx,dword ptr [ebp-4]
 00646210    movzx       edi,word ptr [edx+eax*2+2]
 00646215    and         di,0FFDF
 0064621A    mov         eax,esi
 0064621C    call        @UniqueStringU
 00646221    lea         edx,[ebx+ebx*2]
 00646224    mov         word ptr [eax+edx*2+2],di
 00646229    inc         ebx
 0064622A    cmp         ebx,6
>0064622D    jne         006461BB
>0064622F    jmp         00646254
 00646231    mov         eax,edx
 00646233    test        eax,eax
>00646235    je          0064623C
 00646237    sub         eax,4
 0064623A    mov         eax,dword ptr [eax]
 0064623C    cmp         eax,11
>0064623F    jne         0064624D
 00646241    mov         edx,esi
 00646243    mov         eax,dword ptr [ebp-4]
 00646246    call        UpperCase
>0064624B    jmp         00646254
 0064624D    mov         eax,esi
 0064624F    call        @UStrClr
 00646254    xor         eax,eax
 00646256    pop         edx
 00646257    pop         ecx
 00646258    pop         ecx
 00646259    mov         dword ptr fs:[eax],edx
 0064625C    push        646271
 00646261    lea         eax,[ebp-4]
 00646264    call        @UStrClr
 00646269    ret
>0064626A    jmp         @HandleFinally
>0064626F    jmp         00646261
 00646271    pop         edi
 00646272    pop         esi
 00646273    pop         ebx
 00646274    pop         ecx
 00646275    pop         ebp
 00646276    ret
end;*}

//00646278
procedure sub_00646278;
begin
{*
 00646278    push        ebp
 00646279    mov         ebp,esp
 0064627B    push        ebx
 0064627C    push        esi
 0064627D    push        edi
 0064627E    cmp         byte ptr ds:[78BDB8],0;gvar_0078BDB8
>00646285    jne         00646330
 0064628B    mov         byte ptr ds:[78BDB8],1;gvar_0078BDB8
 00646292    xor         eax,eax
 00646294    push        ebp
 00646295    push        646318
 0064629A    push        dword ptr fs:[eax]
 0064629D    mov         dword ptr fs:[eax],esp
 006462A0    push        646338;'HID.dll'
 006462A5    call        kernel32.LoadLibraryW
 006462AA    mov         [0078BDB4],eax;gvar_0078BDB4:HMODULE
 006462AF    call        005FCD64
 006462B4    test        al,al
>006462B6    je          006462F9
 006462B8    push        646348;'HidD_SetOutputReport'
 006462BD    mov         eax,[0078BDB4];0x0 gvar_0078BDB4:HMODULE
 006462C2    push        eax
 006462C3    call        GetProcAddress
 006462C8    mov         [0078BDA8],eax;gvar_0078BDA8:Pointer
 006462CD    push        646374;'HidD_SetFeatureReport'
 006462D2    mov         eax,[0078BDB4];0x0 gvar_0078BDB4:HMODULE
 006462D7    push        eax
 006462D8    call        GetProcAddress
 006462DD    mov         [0078BDAC],eax;gvar_0078BDAC:Pointer
 006462E2    push        6463A0;'HidD_GetInputReport'
 006462E7    mov         eax,[0078BDB4];0x0 gvar_0078BDB4:HMODULE
 006462EC    push        eax
 006462ED    call        GetProcAddress
 006462F2    mov         [0078BDB0],eax;gvar_0078BDB0:Pointer
>006462F7    jmp         0064630E
 006462F9    xor         eax,eax
 006462FB    mov         [0078BDA8],eax;gvar_0078BDA8:Pointer
 00646300    xor         eax,eax
 00646302    mov         [0078BDAC],eax;gvar_0078BDAC:Pointer
 00646307    xor         eax,eax
 00646309    mov         [0078BDB0],eax;gvar_0078BDB0:Pointer
 0064630E    xor         eax,eax
 00646310    pop         edx
 00646311    pop         ecx
 00646312    pop         ecx
 00646313    mov         dword ptr fs:[eax],edx
>00646316    jmp         00646330
>00646318    jmp         @HandleAnyException
 0064631D    xor         eax,eax
 0064631F    mov         [0078BDA8],eax;gvar_0078BDA8:Pointer
 00646324    xor         eax,eax
 00646326    mov         [0078BDB0],eax;gvar_0078BDB0:Pointer
 0064632B    call        @DoneExcept
 00646330    pop         edi
 00646331    pop         esi
 00646332    pop         ebx
 00646333    pop         ebp
 00646334    ret
*}
end;

//006463C8
procedure TManagedHidObject.CancelMessages;
begin
{*
 006463C8    push        ebp
 006463C9    mov         ebp,esp
 006463CB    push        ebx
 006463CC    push        esi
 006463CD    push        edi
 006463CE    mov         edx,dword ptr [eax+20];TManagedHidObject.Dev:TJvHidDevice
 006463D1    test        edx,edx
>006463D3    je          00646400
 006463D5    xor         ecx,ecx
 006463D7    push        ebp
 006463D8    push        6463F6
 006463DD    push        dword ptr fs:[ecx]
 006463E0    mov         dword ptr fs:[ecx],esp
 006463E3    mov         eax,dword ptr [edx+14];TJvHidDevice.FHidOverlappedWrite:Cardinal
 006463E6    push        eax
 006463E7    call        kernel32.CancelIo
 006463EC    xor         eax,eax
 006463EE    pop         edx
 006463EF    pop         ecx
 006463F0    pop         ecx
 006463F1    mov         dword ptr fs:[eax],edx
>006463F4    jmp         00646400
>006463F6    jmp         @HandleAnyException
 006463FB    call        @DoneExcept
 00646400    pop         edi
 00646401    pop         esi
 00646402    pop         ebx
 00646403    pop         ebp
 00646404    ret
*}
end;

//00646408
procedure TManagedHidObject.CheckIn;
begin
{*
 00646408    push        ebx
 00646409    mov         ebx,eax
 0064640B    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 0064640E    test        eax,eax
>00646410    je          00646436
 00646412    push        0
 00646414    push        0
 00646416    call        005DF390
 0064641B    lea         edx,[ebx+20];TManagedHidObject.Dev:TJvHidDevice
 0064641E    mov         eax,dword ptr [ebx+4];TManagedHidObject.FManager:TComponent
 00646421    mov         eax,dword ptr [eax+34]
 00646424    call        TJvHidDeviceController.CheckIn
 00646429    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 0064642C    call        TObject.Free
 00646431    xor         eax,eax
 00646433    mov         dword ptr [ebx+20],eax;TManagedHidObject.Dev:TJvHidDevice
 00646436    cmp         byte ptr [ebx+87],0;TManagedHidObject.UseLibUsb:Boolean
>0064643D    je          0064644D
 0064643F    mov         eax,dword ptr [ebx+68];TManagedHidObject.devh:PUsb_dev_handle
 00646442    push        eax
 00646443    mov         eax,[0078CD90];^gvar_0081D8E4:Pointer
 00646448    mov         eax,dword ptr [eax]
 0064644A    call        eax
 0064644C    pop         ecx
 0064644D    pop         ebx
 0064644E    ret
*}
end;

//00646450
constructor sub_00646450(Manager:TObject; Device:TObject);
begin
{*
 00646450    push        ebp
 00646451    mov         ebp,esp
 00646453    push        0
 00646455    push        0
 00646457    push        0
 00646459    push        ebx
 0064645A    push        esi
 0064645B    test        dl,dl
>0064645D    je          00646467
 0064645F    add         esp,0FFFFFFF0
 00646462    call        @ClassCreate
 00646467    mov         byte ptr [ebp-1],dl
 0064646A    mov         ebx,eax
 0064646C    xor         eax,eax
 0064646E    push        ebp
 0064646F    push        64651B
 00646474    push        dword ptr fs:[eax]
 00646477    mov         dword ptr fs:[eax],esp
 0064647A    mov         dword ptr [ebx+4],ecx;TManagedHidObject.FManager:TComponent
 0064647D    mov         eax,dword ptr [ebp+8]
 00646480    mov         dword ptr [ebx+20],eax;TManagedHidObject.Dev:TJvHidDevice
 00646483    mov         byte ptr [ebx+87],0;TManagedHidObject.UseLibUsb:Boolean
 0064648A    mov         dword ptr [ebx+1C],16;TManagedHidObject.OutReportLength:Integer
 00646491    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646494    test        eax,eax
>00646496    je          006464FD
 00646498    call        TJvHidDevice.OpenFile
 0064649D    mov         esi,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 006464A0    mov         dword ptr [esi+0A4],ebx;TJvHidDevice.?fA4:TManagedHidObject
 006464A6    mov         dword ptr [esi+0A0],6467BC;TJvHidDevice.FUnplug:TJvHidPlugEvent TManagedHidObject.DevUnp...
 006464B0    mov         eax,[0078D7D8];^gvar_0078BD1C
 006464B5    cmp         byte ptr [eax],0
>006464B8    je          006464D1
 006464BA    lea         edx,[ebp-8]
 006464BD    mov         eax,esi
 006464BF    call        005DEFB8
 006464C4    mov         edx,dword ptr [ebp-8]
 006464C7    lea         eax,[ebx+14];TManagedHidObject.Serial:string
 006464CA    call        @UStrFromWStr
>006464CF    jmp         006464D9
 006464D1    lea         eax,[ebx+14];TManagedHidObject.Serial:string
 006464D4    call        @UStrClr
 006464D9    lea         edx,[ebp-0C]
 006464DC    mov         eax,dword ptr [ebx+14];TManagedHidObject.Serial:string
 006464DF    call        00646158
 006464E4    mov         edx,dword ptr [ebp-0C]
 006464E7    lea         eax,[ebx+10];TManagedHidObject.BluetoothAddress:string
 006464EA    call        @UStrAsg
 006464EF    push        ebx
 006464F0    push        646790;TManagedHidObject.DevData
 006464F5    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 006464F8    call        005DF390
 006464FD    xor         eax,eax
 006464FF    pop         edx
 00646500    pop         ecx
 00646501    pop         ecx
 00646502    mov         dword ptr fs:[eax],edx
 00646505    push        646522
 0064650A    lea         eax,[ebp-0C]
 0064650D    call        @UStrClr
 00646512    lea         eax,[ebp-8]
 00646515    call        @WStrClr
 0064651A    ret
>0064651B    jmp         @HandleFinally
>00646520    jmp         0064650A
 00646522    mov         eax,ebx
 00646524    cmp         byte ptr [ebp-1],0
>00646528    je          00646539
 0064652A    call        @AfterConstruction
 0064652F    pop         dword ptr fs:[0]
 00646536    add         esp,0C
 00646539    mov         eax,ebx
 0064653B    pop         esi
 0064653C    pop         ebx
 0064653D    mov         esp,ebp
 0064653F    pop         ebp
 00646540    ret         4
*}
end;

//00646544
constructor sub_00646544(Manager:TObject; dev:PUsb_device);
begin
{*
 00646544    push        ebp
 00646545    mov         ebp,esp
 00646547    add         esp,0FFFFFFF0
 0064654A    push        ebx
 0064654B    push        esi
 0064654C    push        edi
 0064654D    test        dl,dl
>0064654F    je          00646559
 00646551    add         esp,0FFFFFFF0
 00646554    call        @ClassCreate
 00646559    mov         byte ptr [ebp-5],dl
 0064655C    mov         dword ptr [ebp-4],eax
 0064655F    mov         eax,dword ptr [ebp-4]
 00646562    mov         dword ptr [eax+4],ecx;TManagedHidObject.FManager:TComponent
 00646565    mov         eax,dword ptr [ebp-4]
 00646568    mov         edx,dword ptr [ebp+8]
 0064656B    mov         dword ptr [eax+64],edx;TManagedHidObject.LibUsbDev:PUsb_device
 0064656E    mov         eax,dword ptr [ebp-4]
 00646571    mov         byte ptr [eax+87],1;TManagedHidObject.UseLibUsb:Boolean
 00646578    mov         eax,dword ptr [ebp-4]
 0064657B    mov         dword ptr [eax+1C],31;TManagedHidObject.OutReportLength:Integer
 00646582    mov         eax,dword ptr [ebp+8]
 00646585    mov         eax,dword ptr [eax+21E]
 0064658B    mov         edx,dword ptr [ebp-4]
 0064658E    mov         dword ptr [edx+6C],eax;TManagedHidObject.cfg:PUsb_config_descriptor
 00646591    mov         eax,dword ptr [ebp+8]
 00646594    movzx       eax,byte ptr [eax+21D]
 0064659B    test        eax,eax
>0064659D    jle         006465F9
 0064659F    mov         dword ptr [ebp-0C],eax
 006465A2    mov         eax,dword ptr [ebp-4]
 006465A5    mov         eax,dword ptr [eax+6C];TManagedHidObject.cfg:PUsb_config_descriptor
 006465A8    movzx       eax,byte ptr [eax+4]
 006465AC    dec         eax
 006465AD    test        eax,eax
>006465AF    jl          006465ED
 006465B1    inc         eax
 006465B2    mov         dword ptr [ebp-10],eax
 006465B5    xor         edi,edi
 006465B7    mov         eax,dword ptr [ebp-4]
 006465BA    mov         eax,dword ptr [eax+6C];TManagedHidObject.cfg:PUsb_config_descriptor
 006465BD    mov         eax,dword ptr [eax+9]
 006465C0    lea         eax,[eax+edi*8]
 006465C3    mov         esi,dword ptr [eax]
 006465C5    mov         ebx,dword ptr [eax+4]
 006465C8    dec         ebx
 006465C9    test        ebx,ebx
>006465CB    jl          006465E7
 006465CD    inc         ebx
 006465CE    cmp         byte ptr [esi+5],3
>006465D2    jne         006465E1
 006465D4    mov         ecx,edi
 006465D6    mov         edx,dword ptr [ebp+8]
 006465D9    mov         eax,dword ptr [ebp-4]
 006465DC    call        00646828
 006465E1    add         esi,15
 006465E4    dec         ebx
>006465E5    jne         006465CE
 006465E7    inc         edi
 006465E8    dec         dword ptr [ebp-10]
>006465EB    jne         006465B7
 006465ED    mov         eax,dword ptr [ebp-4]
 006465F0    add         dword ptr [eax+6C],15;TManagedHidObject.cfg:PUsb_config_descriptor
 006465F4    dec         dword ptr [ebp-0C]
>006465F7    jne         006465A2
 006465F9    mov         eax,dword ptr [ebp-4]
 006465FC    cmp         byte ptr [ebp-5],0
>00646600    je          00646611
 00646602    call        @AfterConstruction
 00646607    pop         dword ptr fs:[0]
 0064660E    add         esp,0C
 00646611    mov         eax,dword ptr [ebp-4]
 00646614    pop         edi
 00646615    pop         esi
 00646616    pop         ebx
 00646617    mov         esp,ebp
 00646619    pop         ebp
 0064661A    ret         4
*}
end;

//00646620
constructor sub_00646620(Manager:TObject; dev:PUsb_device);
begin
{*
 00646620    push        ebp
 00646621    mov         ebp,esp
 00646623    push        ecx
 00646624    push        ebx
 00646625    push        esi
 00646626    push        edi
 00646627    test        dl,dl
>00646629    je          00646633
 0064662B    add         esp,0FFFFFFF0
 0064662E    call        @ClassCreate
 00646633    mov         byte ptr [ebp-1],dl
 00646636    mov         ebx,eax
 00646638    mov         esi,dword ptr [ebp+8]
 0064663B    mov         dword ptr [ebx+4],ecx;TManagedHidObject.FManager:TComponent
 0064663E    mov         dword ptr [ebx+64],esi;TManagedHidObject.LibUsbDev:PUsb_device
 00646641    mov         byte ptr [ebx+87],1;TManagedHidObject.UseLibUsb:Boolean
 00646648    xor         eax,eax
 0064664A    mov         dword ptr [ebx+1C],eax;TManagedHidObject.OutReportLength:Integer
 0064664D    mov         eax,dword ptr [esi+21E]
 00646653    mov         dword ptr [ebx+6C],eax;TManagedHidObject.cfg:PUsb_config_descriptor
 00646656    mov         byte ptr [ebx+18],0;TManagedHidObject.Connected:Boolean
 0064665A    push        esi
 0064665B    mov         eax,[0078DAAC];^gvar_0081D8E0:Pointer
 00646660    mov         eax,dword ptr [eax]
 00646662    call        eax
 00646664    pop         ecx
 00646665    mov         edi,eax
 00646667    mov         dword ptr [ebx+68],edi;TManagedHidObject.devh:PUsb_dev_handle
 0064666A    test        edi,edi
>0064666C    je          00646676
 0064666E    mov         byte ptr [ebx+18],1;TManagedHidObject.Connected:Boolean
 00646672    mov         byte ptr [ebx+75],0;TManagedHidObject.ClaimedInterface:Boolean
 00646676    mov         eax,ebx
 00646678    cmp         byte ptr [ebp-1],0
>0064667C    je          0064668D
 0064667E    call        @AfterConstruction
 00646683    pop         dword ptr fs:[0]
 0064668A    add         esp,0C
 0064668D    mov         eax,ebx
 0064668F    pop         edi
 00646690    pop         esi
 00646691    pop         ebx
 00646692    pop         ecx
 00646693    pop         ebp
 00646694    ret         4
*}
end;

//00646698
constructor sub_00646698(Manager:TObject; Device:TObject);
begin
{*
 00646698    push        ebp
 00646699    mov         ebp,esp
 0064669B    push        0
 0064669D    push        0
 0064669F    push        0
 006466A1    push        ebx
 006466A2    push        esi
 006466A3    test        dl,dl
>006466A5    je          006466AF
 006466A7    add         esp,0FFFFFFF0
 006466AA    call        @ClassCreate
 006466AF    mov         byte ptr [ebp-1],dl
 006466B2    mov         ebx,eax
 006466B4    xor         eax,eax
 006466B6    push        ebp
 006466B7    push        646768
 006466BC    push        dword ptr fs:[eax]
 006466BF    mov         dword ptr fs:[eax],esp
 006466C2    mov         byte ptr [ebx+88],1;TManagedHidObject.UseMotionInJoy:Boolean
 006466C9    mov         dword ptr [ebx+4],ecx;TManagedHidObject.FManager:TComponent
 006466CC    mov         eax,dword ptr [ebp+8]
 006466CF    mov         dword ptr [ebx+20],eax;TManagedHidObject.Dev:TJvHidDevice
 006466D2    mov         byte ptr [ebx+87],0;TManagedHidObject.UseLibUsb:Boolean
 006466D9    mov         dword ptr [ebx+1C],34;TManagedHidObject.OutReportLength:Integer
 006466E0    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 006466E3    test        eax,eax
>006466E5    je          0064674A
 006466E7    call        TJvHidDevice.OpenFile
 006466EC    mov         esi,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 006466EF    mov         dword ptr [esi+0A4],ebx;TJvHidDevice.?fA4:TManagedHidObject
 006466F5    mov         dword ptr [esi+0A0],6467BC;TJvHidDevice.FUnplug:TJvHidPlugEvent TManagedHidObject.DevUnp...
 006466FF    mov         eax,[0078D7D8];^gvar_0078BD1C
 00646704    cmp         byte ptr [eax],0
>00646707    je          00646720
 00646709    lea         edx,[ebp-8]
 0064670C    mov         eax,esi
 0064670E    call        005DEFB8
 00646713    mov         edx,dword ptr [ebp-8]
 00646716    lea         eax,[ebx+14];TManagedHidObject.Serial:string
 00646719    call        @UStrFromWStr
>0064671E    jmp         00646728
 00646720    lea         eax,[ebx+14];TManagedHidObject.Serial:string
 00646723    call        @UStrClr
 00646728    lea         edx,[ebp-0C]
 0064672B    mov         eax,dword ptr [ebx+14];TManagedHidObject.Serial:string
 0064672E    call        00646158
 00646733    mov         edx,dword ptr [ebp-0C]
 00646736    lea         eax,[ebx+10];TManagedHidObject.BluetoothAddress:string
 00646739    call        @UStrAsg
 0064673E    push        0
 00646740    push        0
 00646742    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646745    call        005DF390
 0064674A    xor         eax,eax
 0064674C    pop         edx
 0064674D    pop         ecx
 0064674E    pop         ecx
 0064674F    mov         dword ptr fs:[eax],edx
 00646752    push        64676F
 00646757    lea         eax,[ebp-0C]
 0064675A    call        @UStrClr
 0064675F    lea         eax,[ebp-8]
 00646762    call        @WStrClr
 00646767    ret
>00646768    jmp         @HandleFinally
>0064676D    jmp         00646757
 0064676F    mov         eax,ebx
 00646771    cmp         byte ptr [ebp-1],0
>00646775    je          00646786
 00646777    call        @AfterConstruction
 0064677C    pop         dword ptr fs:[0]
 00646783    add         esp,0C
 00646786    mov         eax,ebx
 00646788    pop         esi
 00646789    pop         ebx
 0064678A    mov         esp,ebp
 0064678C    pop         ebp
 0064678D    ret         4
*}
end;

//00646790
procedure TManagedHidObject.DevData(HidDev:TJvHidDevice; ReportID:Byte; Size:Word; Data:Pointer);
begin
{*
 00646790    push        ebp
 00646791    mov         ebp,esp
 00646793    push        ebx
 00646794    push        esi
 00646795    mov         ebx,ecx
 00646797    mov         esi,eax
 00646799    call        00600EA0
 0064679E    fstp        qword ptr [esi+8];TManagedHidObject.ReportTime:Double
 006467A1    wait
 006467A2    movzx       eax,word ptr [ebp+8]
 006467A6    push        eax
 006467A7    movzx       edx,bl
 006467AA    mov         ecx,dword ptr [ebp+0C]
 006467AD    mov         eax,esi
 006467AF    mov         ebx,dword ptr [eax]
 006467B1    call        dword ptr [ebx];TManagedHidObject.ReceiveReport
 006467B3    pop         esi
 006467B4    pop         ebx
 006467B5    pop         ebp
 006467B6    ret         8
*}
end;

//006467BC
procedure TManagedHidObject.DevUnplug(HidDev:TJvHidDevice);
begin
{*
 006467BC    push        ebp
 006467BD    mov         ebp,esp
 006467BF    push        ebx
 006467C0    push        esi
 006467C1    push        edi
 006467C2    xor         edx,edx
 006467C4    push        ebp
 006467C5    push        6467DE
 006467CA    push        dword ptr fs:[edx]
 006467CD    mov         dword ptr fs:[edx],esp
 006467D0    mov         byte ptr [eax+19],1;TManagedHidObject.Unplugged:Boolean
 006467D4    xor         eax,eax
 006467D6    pop         edx
 006467D7    pop         ecx
 006467D8    pop         ecx
 006467D9    mov         dword ptr fs:[eax],edx
>006467DC    jmp         006467E8
>006467DE    jmp         @HandleAnyException
 006467E3    call        @DoneExcept
 006467E8    pop         edi
 006467E9    pop         esi
 006467EA    pop         ebx
 006467EB    pop         ebp
 006467EC    ret
*}
end;

//006467F0
{*function TManagedHidObject.GetFeatureReport(ReportNumber:Byte; var report:?; length:Integer):Boolean;
begin
 006467F0    push        ebp
 006467F1    mov         ebp,esp
 006467F3    push        esi
 006467F4    push        edi
 006467F5    mov         esi,eax
 006467F7    mov         edi,dword ptr [ebp+8]
 006467FA    mov         byte ptr [ecx],dl
 006467FC    cmp         byte ptr [esi+87],0;TManagedHidObject.UseLibUsb:Boolean
>00646803    je          00646813
 00646805    push        edi
 00646806    mov         edx,dword ptr [esi+70];TManagedHidObject.itfnum:Integer
 00646809    mov         eax,dword ptr [esi+68];TManagedHidObject.devh:PUsb_dev_handle
 0064680C    call        0064603C
>00646811    jmp         0064681F
 00646813    mov         edx,ecx
 00646815    mov         eax,dword ptr [esi+20];TManagedHidObject.Dev:TJvHidDevice
 00646818    mov         ecx,edi
 0064681A    call        TJvHidDevice.GetFeature
 0064681F    pop         edi
 00646820    pop         esi
 00646821    pop         ebp
 00646822    ret         4
end;*}

//00646828
{*procedure sub_00646828(?:TManagedHidObject; ?:PUsb_device; ?:?);
begin
 00646828    push        ebx
 00646829    push        esi
 0064682A    push        edi
 0064682B    push        ebp
 0064682C    mov         esi,ecx
 0064682E    mov         ebp,edx
 00646830    mov         ebx,eax
 00646832    mov         byte ptr [ebx+18],0;TManagedHidObject.Connected:Boolean
 00646836    push        ebp
 00646837    mov         eax,[0078DAAC];^gvar_0081D8E0:Pointer
 0064683C    mov         eax,dword ptr [eax]
 0064683E    call        eax
 00646840    pop         ecx
 00646841    mov         edi,eax
 00646843    mov         dword ptr [ebx+68],edi;TManagedHidObject.devh:PUsb_dev_handle
 00646846    test        edi,edi
>00646848    je          00646930
 0064684E    lea         eax,[ebx+76];TManagedHidObject.FeatureF2:?
 00646851    xor         ecx,ecx
 00646853    mov         edx,11
 00646858    call        @FillChar
 0064685D    mov         byte ptr [ebx+76],0F2;TManagedHidObject.FeatureF2:?
 00646861    push        11
 00646863    lea         ecx,[ebx+76];TManagedHidObject.FeatureF2:?
 00646866    mov         edx,esi
 00646868    mov         eax,dword ptr [ebx+68];TManagedHidObject.devh:PUsb_dev_handle
 0064686B    call        0064603C
 00646870    test        al,al
>00646872    je          00646885
 00646874    mov         byte ptr [ebx+74],0;TManagedHidObject.SetConfig:Boolean
 00646878    mov         byte ptr [ebx+75],0;TManagedHidObject.ClaimedInterface:Boolean
 0064687C    mov         byte ptr [ebx+18],1;TManagedHidObject.Connected:Boolean
>00646880    jmp         00646930
 00646885    mov         eax,dword ptr [ebp+21E]
 0064688B    movzx       eax,byte ptr [eax+5]
 0064688F    push        eax
 00646890    mov         eax,dword ptr [ebx+68];TManagedHidObject.devh:PUsb_dev_handle
 00646893    push        eax
 00646894    mov         eax,[0078D184];^gvar_0081D900:Pointer
 00646899    mov         eax,dword ptr [eax]
 0064689B    call        eax
 0064689D    add         esp,8
 006468A0    mov         byte ptr [ebx+74],1;TManagedHidObject.SetConfig:Boolean
 006468A4    lea         eax,[ebx+76];TManagedHidObject.FeatureF2:?
 006468A7    xor         ecx,ecx
 006468A9    mov         edx,11
 006468AE    call        @FillChar
 006468B3    mov         byte ptr [ebx+76],0F2;TManagedHidObject.FeatureF2:?
 006468B7    push        11
 006468B9    lea         ecx,[ebx+76];TManagedHidObject.FeatureF2:?
 006468BC    mov         edx,esi
 006468BE    mov         eax,dword ptr [ebx+68];TManagedHidObject.devh:PUsb_dev_handle
 006468C1    call        0064603C
 006468C6    test        al,al
>006468C8    je          006468D4
 006468CA    mov         byte ptr [ebx+75],0;TManagedHidObject.ClaimedInterface:Boolean
 006468CE    mov         byte ptr [ebx+18],1;TManagedHidObject.Connected:Boolean
>006468D2    jmp         00646930
 006468D4    push        esi
 006468D5    mov         eax,dword ptr [ebx+68];TManagedHidObject.devh:PUsb_dev_handle
 006468D8    push        eax
 006468D9    mov         eax,[0078CB34];^gvar_0081D8F8:Pointer
 006468DE    mov         eax,dword ptr [eax]
 006468E0    call        eax
 006468E2    add         esp,8
 006468E5    test        eax,eax
 006468E7    sete        al
 006468EA    mov         byte ptr [ebx+75],al;TManagedHidObject.ClaimedInterface:Boolean
 006468ED    push        11
 006468EF    lea         ecx,[ebx+76];TManagedHidObject.FeatureF2:?
 006468F2    mov         edx,esi
 006468F4    mov         eax,dword ptr [ebx+68];TManagedHidObject.devh:PUsb_dev_handle
 006468F7    call        0064603C
 006468FC    test        al,al
>006468FE    je          00646906
 00646900    mov         byte ptr [ebx+18],1;TManagedHidObject.Connected:Boolean
>00646904    jmp         00646930
 00646906    cmp         byte ptr [ebx+75],0;TManagedHidObject.ClaimedInterface:Boolean
>0064690A    je          0064691D
 0064690C    push        esi
 0064690D    mov         eax,dword ptr [ebx+68];TManagedHidObject.devh:PUsb_dev_handle
 00646910    push        eax
 00646911    mov         eax,[0078D4B4];^gvar_0081D8FC:Pointer
 00646916    mov         eax,dword ptr [eax]
 00646918    call        eax
 0064691A    add         esp,8
 0064691D    mov         eax,dword ptr [ebx+68];TManagedHidObject.devh:PUsb_dev_handle
 00646920    push        eax
 00646921    mov         eax,[0078CD90];^gvar_0081D8E4:Pointer
 00646926    mov         eax,dword ptr [eax]
 00646928    call        eax
 0064692A    pop         ecx
 0064692B    xor         eax,eax
 0064692D    mov         dword ptr [ebx+68],eax;TManagedHidObject.devh:PUsb_dev_handle
 00646930    pop         ebp
 00646931    pop         edi
 00646932    pop         esi
 00646933    pop         ebx
 00646934    ret
end;*}

//00646938
{*function TManagedHidObject.ReadReport(var report:?; length:Integer):Boolean;
begin
 00646938    push        ebx
 00646939    push        esi
 0064693A    push        edi
 0064693B    push        ebp
 0064693C    mov         edi,ecx
 0064693E    mov         esi,edx
 00646940    mov         ebp,eax
 00646942    cmp         byte ptr [ebp+87],0;TManagedHidObject.UseLibUsb:Boolean
>00646949    je          0064696F
 0064694B    mov         eax,esi
 0064694D    xor         ecx,ecx
 0064694F    mov         edx,edi
 00646951    call        @FillChar
 00646956    push        esi
 00646957    push        edi
 00646958    mov         ecx,1
 0064695D    mov         edx,dword ptr [ebp+70];TManagedHidObject.itfnum:Integer
 00646960    mov         eax,dword ptr [ebp+68];TManagedHidObject.devh:PUsb_dev_handle
 00646963    call        00646124
 00646968    mov         ebx,eax
>0064696A    jmp         00646A23
 0064696F    cmp         dword ptr [ebp+28],0FFFFFFFF;TManagedHidObject.hInEvent:Cardinal
>00646973    jne         00646985
 00646975    push        0
 00646977    push        0
 00646979    push        0
 0064697B    push        0
 0064697D    call        kernel32.CreateEventW
 00646982    mov         dword ptr [ebp+28],eax;TManagedHidObject.hInEvent:Cardinal
 00646985    xor         edx,edx
 00646987    mov         eax,dword ptr [ebp+20];TManagedHidObject.Dev:TJvHidDevice
 0064698A    call        TJvHidDevice.OpenFileEx
 0064698F    lea         eax,[ebp+40];TManagedHidObject.OverlappedIn:_OVERLAPPED
 00646992    xor         ecx,ecx
 00646994    mov         edx,14
 00646999    call        @FillChar
 0064699E    mov         eax,dword ptr [ebp+28];TManagedHidObject.hInEvent:Cardinal
 006469A1    mov         dword ptr [ebp+50],eax
 006469A4    mov         eax,dword ptr [ebp+28];TManagedHidObject.hInEvent:Cardinal
 006469A7    push        eax
 006469A8    call        kernel32.ResetEvent
 006469AD    lea         eax,[ebp+40];TManagedHidObject.OverlappedIn:_OVERLAPPED
 006469B0    push        eax
 006469B1    lea         eax,[ebp+60];TManagedHidObject.BeenRead:Cardinal
 006469B4    push        eax
 006469B5    push        edi
 006469B6    push        esi
 006469B7    mov         eax,dword ptr [ebp+20];TManagedHidObject.Dev:TJvHidDevice
 006469BA    mov         eax,dword ptr [eax+10];TJvHidDevice.FHidOverlappedRead:Cardinal
 006469BD    push        eax
 006469BE    call        kernel32.ReadFile
 006469C3    test        eax,eax
>006469C5    je          00646A21
 006469C7    push        1F4
 006469CC    mov         eax,dword ptr [ebp+28];TManagedHidObject.hInEvent:Cardinal
 006469CF    push        eax
 006469D0    call        kernel32.WaitForSingleObject
 006469D5    sub         eax,1
>006469D8    jb          006469E3
 006469DA    sub         eax,101
>006469DF    je          00646A01
>006469E1    jmp         00646A11
 006469E3    push        0
 006469E5    lea         eax,[ebp+60];TManagedHidObject.BeenRead:Cardinal
 006469E8    push        eax
 006469E9    lea         eax,[ebp+40];TManagedHidObject.OverlappedIn:_OVERLAPPED
 006469EC    push        eax
 006469ED    mov         eax,dword ptr [ebp+20];TManagedHidObject.Dev:TJvHidDevice
 006469F0    mov         eax,dword ptr [eax+10];TJvHidDevice.FHidOverlappedRead:Cardinal
 006469F3    push        eax
 006469F4    call        kernel32.GetOverlappedResult
 006469F9    cmp         eax,1
 006469FC    sbb         ebx,ebx
 006469FE    inc         ebx
>006469FF    jmp         00646A23
 00646A01    xor         ebx,ebx
 00646A03    mov         eax,dword ptr [ebp+20];TManagedHidObject.Dev:TJvHidDevice
 00646A06    mov         eax,dword ptr [eax+10];TJvHidDevice.FHidOverlappedRead:Cardinal
 00646A09    push        eax
 00646A0A    call        kernel32.CancelIo
>00646A0F    jmp         00646A23
 00646A11    mov         eax,dword ptr [ebp+20];TManagedHidObject.Dev:TJvHidDevice
 00646A14    mov         eax,dword ptr [eax+10];TJvHidDevice.FHidOverlappedRead:Cardinal
 00646A17    push        eax
 00646A18    call        kernel32.CancelIo
 00646A1D    xor         ebx,ebx
>00646A1F    jmp         00646A23
 00646A21    xor         ebx,ebx
 00646A23    mov         eax,ebx
 00646A25    pop         ebp
 00646A26    pop         edi
 00646A27    pop         esi
 00646A28    pop         ebx
 00646A29    ret
end;*}

//00646A2C
{*function TManagedHidObject.ReadUsbReport(request:Integer; var report:?; length:Integer):Boolean;
begin
 00646A2C    push        ebp
 00646A2D    mov         ebp,esp
 00646A2F    push        ebx
 00646A30    push        esi
 00646A31    push        edi
 00646A32    mov         edi,ecx
 00646A34    mov         esi,edx
 00646A36    mov         ebx,eax
 00646A38    xor         eax,eax
 00646A3A    lea         edx,[ebx+8];TManagedHidObject.ReportTime:Double
 00646A3D    test        edx,edx
>00646A3F    je          00646A73
 00646A41    cmp         byte ptr [ebx+87],0;TManagedHidObject.UseLibUsb:Boolean
>00646A48    je          00646A73
 00646A4A    push        3E8
 00646A4F    mov         eax,dword ptr [ebp+8]
 00646A52    push        eax
 00646A53    push        edi
 00646A54    push        0
 00646A56    push        0
 00646A58    push        esi
 00646A59    push        0C0
 00646A5E    mov         eax,dword ptr [ebx+68];TManagedHidObject.devh:PUsb_dev_handle
 00646A61    push        eax
 00646A62    mov         eax,[0078CE00];^gvar_0081D8F4:Pointer
 00646A67    mov         eax,dword ptr [eax]
 00646A69    call        eax
 00646A6B    add         esp,20
 00646A6E    test        eax,eax
 00646A70    setge       al
 00646A73    pop         edi
 00646A74    pop         esi
 00646A75    pop         ebx
 00646A76    pop         ebp
 00646A77    ret         4
end;*}

//00646A7C
procedure TManagedHidObject.ReceiveReport(ReportID:Integer; Report:PByteArray; Size:Integer);
begin
{*
 00646A7C    push        ebp
 00646A7D    mov         ebp,esp
 00646A7F    pop         ebp
 00646A80    ret         4
*}
end;

//00646A84
{*procedure TManagedHidObject.SendFeatureReport(var report:?; length:Integer);
begin
 00646A84    push        ebx
 00646A85    push        esi
 00646A86    push        edi
 00646A87    mov         edi,ecx
 00646A89    mov         esi,edx
 00646A8B    mov         ebx,eax
 00646A8D    cmp         byte ptr [ebx+87],0;TManagedHidObject.UseLibUsb:Boolean
>00646A94    je          00646AB1
 00646A96    lea         eax,[esi+1]
 00646A99    push        eax
 00646A9A    push        edi
 00646A9B    movzx       ecx,byte ptr [esi]
 00646A9E    mov         edx,dword ptr [ebx+70];TManagedHidObject.itfnum:Integer
 00646AA1    mov         eax,dword ptr [ebx+68];TManagedHidObject.devh:PUsb_dev_handle
 00646AA4    call        006460BC
 00646AA9    mov         byte ptr [ebx+57],al;TManagedHidObject.WriteSuccess:Boolean
 00646AAC    mov         dword ptr [ebx+5C],edi;TManagedHidObject.Written:Cardinal
>00646AAF    jmp         00646AEC
 00646AB1    cmp         byte ptr [ebx+56],0;TManagedHidObject.UseHidWrite:Boolean
>00646AB5    je          00646ADD
 00646AB7    cmp         byte ptr [ebx+55],0;TManagedHidObject.HidWriteFailed:Boolean
>00646ABB    je          00646AC3
 00646ABD    mov         byte ptr [ebx+57],0;TManagedHidObject.WriteSuccess:Boolean
>00646AC1    jmp         00646AEC
 00646AC3    push        edi
 00646AC4    push        esi
 00646AC5    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646AC8    mov         eax,dword ptr [eax+0C];TJvHidDevice.FHidFileHandle:Cardinal
 00646ACB    push        eax
 00646ACC    call        dword ptr ds:[78BDAC]
 00646AD2    cmp         eax,1
 00646AD5    sbb         eax,eax
 00646AD7    inc         eax
 00646AD8    mov         byte ptr [ebx+57],al;TManagedHidObject.WriteSuccess:Boolean
>00646ADB    jmp         00646AEC
 00646ADD    mov         edx,esi
 00646ADF    mov         ecx,edi
 00646AE1    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646AE4    call        TJvHidDevice.SetFeature
 00646AE9    mov         byte ptr [ebx+57],al;TManagedHidObject.WriteSuccess:Boolean
 00646AEC    pop         edi
 00646AED    pop         esi
 00646AEE    pop         ebx
 00646AEF    ret
end;*}

//00646AF0
{*procedure TManagedHidObject.SendReport(var report:?; length:Integer);
begin
 00646AF0    push        ebx
 00646AF1    push        esi
 00646AF2    push        edi
 00646AF3    mov         edi,ecx
 00646AF5    mov         esi,edx
 00646AF7    mov         ebx,eax
 00646AF9    cmp         byte ptr [ebx+87],0;TManagedHidObject.UseLibUsb:Boolean
>00646B00    je          00646B23
 00646B02    lea         eax,[esi+1]
 00646B05    push        eax
 00646B06    push        edi
 00646B07    movzx       ecx,byte ptr [esi]
 00646B0A    mov         edx,dword ptr [ebx+70];TManagedHidObject.itfnum:Integer
 00646B0D    mov         eax,dword ptr [ebx+68];TManagedHidObject.devh:PUsb_dev_handle
 00646B10    call        006460F0
 00646B15    mov         byte ptr [ebx+57],al;TManagedHidObject.WriteSuccess:Boolean
 00646B18    mov         eax,dword ptr [ebx+1C];TManagedHidObject.OutReportLength:Integer
 00646B1B    mov         dword ptr [ebx+5C],eax;TManagedHidObject.Written:Cardinal
>00646B1E    jmp         00646C36
 00646B23    cmp         byte ptr [ebx+56],0;TManagedHidObject.UseHidWrite:Boolean
>00646B27    je          00646B55
 00646B29    cmp         byte ptr [ebx+55],0;TManagedHidObject.HidWriteFailed:Boolean
>00646B2D    je          00646B38
 00646B2F    mov         byte ptr [ebx+57],0;TManagedHidObject.WriteSuccess:Boolean
>00646B33    jmp         00646C36
 00646B38    push        edi
 00646B39    push        esi
 00646B3A    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646B3D    mov         eax,dword ptr [eax+0C];TJvHidDevice.FHidFileHandle:Cardinal
 00646B40    push        eax
 00646B41    call        dword ptr ds:[78BDA8]
 00646B47    cmp         eax,1
 00646B4A    sbb         eax,eax
 00646B4C    inc         eax
 00646B4D    mov         byte ptr [ebx+57],al;TManagedHidObject.WriteSuccess:Boolean
>00646B50    jmp         00646C36
 00646B55    cmp         dword ptr [ebx+24],0FFFFFFFF;TManagedHidObject.hEvent:Cardinal
>00646B59    jne         00646B6B
 00646B5B    push        0
 00646B5D    push        0
 00646B5F    push        0
 00646B61    push        0
 00646B63    call        kernel32.CreateEventW
 00646B68    mov         dword ptr [ebx+24],eax;TManagedHidObject.hEvent:Cardinal
 00646B6B    mov         dl,1
 00646B6D    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646B70    call        TJvHidDevice.OpenFileEx
 00646B75    lea         eax,[ebx+2C];TManagedHidObject.Overlapped:_OVERLAPPED
 00646B78    xor         ecx,ecx
 00646B7A    mov         edx,14
 00646B7F    call        @FillChar
 00646B84    mov         eax,dword ptr [ebx+24];TManagedHidObject.hEvent:Cardinal
 00646B87    mov         dword ptr [ebx+3C],eax
 00646B8A    cmp         byte ptr [ebx+58],0;TManagedHidObject.HungWrite:Boolean
>00646B8E    je          00646B9C
 00646B90    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646B93    mov         eax,dword ptr [eax+14];TJvHidDevice.FHidOverlappedWrite:Cardinal
 00646B96    push        eax
 00646B97    call        kernel32.CancelIo
 00646B9C    mov         eax,dword ptr [ebx+24];TManagedHidObject.hEvent:Cardinal
 00646B9F    push        eax
 00646BA0    call        kernel32.ResetEvent
 00646BA5    lea         eax,[ebx+2C];TManagedHidObject.Overlapped:_OVERLAPPED
 00646BA8    push        eax
 00646BA9    lea         eax,[ebx+5C];TManagedHidObject.Written:Cardinal
 00646BAC    push        eax
 00646BAD    push        edi
 00646BAE    push        esi
 00646BAF    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646BB2    mov         eax,dword ptr [eax+14];TJvHidDevice.FHidOverlappedWrite:Cardinal
 00646BB5    push        eax
 00646BB6    call        kernel32.WriteFile
 00646BBB    test        eax,eax
>00646BBD    je          00646C29
 00646BBF    push        1F4
 00646BC4    mov         eax,dword ptr [ebx+24];TManagedHidObject.hEvent:Cardinal
 00646BC7    push        eax
 00646BC8    call        kernel32.WaitForSingleObject
 00646BCD    sub         eax,1
>00646BD0    jb          00646BDB
 00646BD2    sub         eax,101
>00646BD7    je          00646C00
>00646BD9    jmp         00646C1B
 00646BDB    mov         byte ptr [ebx+58],0;TManagedHidObject.HungWrite:Boolean
 00646BDF    push        0
 00646BE1    lea         eax,[ebx+5C];TManagedHidObject.Written:Cardinal
 00646BE4    push        eax
 00646BE5    lea         eax,[ebx+2C];TManagedHidObject.Overlapped:_OVERLAPPED
 00646BE8    push        eax
 00646BE9    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646BEC    mov         eax,dword ptr [eax+14];TJvHidDevice.FHidOverlappedWrite:Cardinal
 00646BEF    push        eax
 00646BF0    call        kernel32.GetOverlappedResult
 00646BF5    cmp         eax,1
 00646BF8    sbb         eax,eax
 00646BFA    inc         eax
 00646BFB    mov         byte ptr [ebx+57],al;TManagedHidObject.WriteSuccess:Boolean
>00646BFE    jmp         00646C36
 00646C00    mov         byte ptr [ebx+58],1;TManagedHidObject.HungWrite:Boolean
 00646C04    xor         eax,eax
 00646C06    mov         dword ptr [ebx+5C],eax;TManagedHidObject.Written:Cardinal
 00646C09    mov         byte ptr [ebx+57],0;TManagedHidObject.WriteSuccess:Boolean
 00646C0D    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646C10    mov         eax,dword ptr [eax+14];TJvHidDevice.FHidOverlappedWrite:Cardinal
 00646C13    push        eax
 00646C14    call        kernel32.CancelIo
>00646C19    jmp         00646C36
 00646C1B    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646C1E    mov         eax,dword ptr [eax+14];TJvHidDevice.FHidOverlappedWrite:Cardinal
 00646C21    push        eax
 00646C22    call        kernel32.CancelIo
>00646C27    jmp         00646C36
 00646C29    mov         byte ptr [ebx+58],1;TManagedHidObject.HungWrite:Boolean
 00646C2D    xor         eax,eax
 00646C2F    mov         dword ptr [ebx+5C],eax;TManagedHidObject.Written:Cardinal
 00646C32    mov         byte ptr [ebx+57],0;TManagedHidObject.WriteSuccess:Boolean
 00646C36    pop         edi
 00646C37    pop         esi
 00646C38    pop         ebx
 00646C39    ret
end;*}

//00646C3C
{*procedure TManagedHidObject.SendReportBothWays(var report:?);
begin
 00646C3C    push        ebx
 00646C3D    push        esi
 00646C3E    mov         esi,edx
 00646C40    mov         ebx,eax
 00646C42    cmp         byte ptr [ebx+87],0;TManagedHidObject.UseLibUsb:Boolean
>00646C49    je          00646C5C
 00646C4B    mov         edx,esi
 00646C4D    mov         ecx,16
 00646C52    mov         eax,ebx
 00646C54    call        TManagedHidObject.SendReport
 00646C59    pop         esi
 00646C5A    pop         ebx
 00646C5B    ret
 00646C5C    call        00646278
 00646C61    mov         eax,dword ptr [ebx+1C];TManagedHidObject.OutReportLength:Integer
 00646C64    push        eax
 00646C65    push        esi
 00646C66    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646C69    mov         eax,dword ptr [eax+0C];TJvHidDevice.FHidFileHandle:Cardinal
 00646C6C    push        eax
 00646C6D    call        dword ptr ds:[78BDA8]
 00646C73    cmp         dword ptr [ebx+24],0FFFFFFFF;TManagedHidObject.hEvent:Cardinal
>00646C77    jne         00646C89
 00646C79    push        0
 00646C7B    push        0
 00646C7D    push        0
 00646C7F    push        0
 00646C81    call        kernel32.CreateEventW
 00646C86    mov         dword ptr [ebx+24],eax;TManagedHidObject.hEvent:Cardinal
 00646C89    mov         dl,1
 00646C8B    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646C8E    call        TJvHidDevice.OpenFileEx
 00646C93    lea         eax,[ebx+2C];TManagedHidObject.Overlapped:_OVERLAPPED
 00646C96    xor         ecx,ecx
 00646C98    mov         edx,14
 00646C9D    call        @FillChar
 00646CA2    mov         eax,dword ptr [ebx+24];TManagedHidObject.hEvent:Cardinal
 00646CA5    mov         dword ptr [ebx+3C],eax
 00646CA8    mov         eax,dword ptr [ebx+24];TManagedHidObject.hEvent:Cardinal
 00646CAB    push        eax
 00646CAC    call        kernel32.ResetEvent
 00646CB1    lea         eax,[ebx+2C];TManagedHidObject.Overlapped:_OVERLAPPED
 00646CB4    push        eax
 00646CB5    lea         eax,[ebx+5C];TManagedHidObject.Written:Cardinal
 00646CB8    push        eax
 00646CB9    mov         eax,dword ptr [ebx+1C];TManagedHidObject.OutReportLength:Integer
 00646CBC    push        eax
 00646CBD    push        esi
 00646CBE    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646CC1    mov         eax,dword ptr [eax+14];TJvHidDevice.FHidOverlappedWrite:Cardinal
 00646CC4    push        eax
 00646CC5    call        kernel32.WriteFile
 00646CCA    test        eax,eax
>00646CCC    je          00646D1C
 00646CCE    push        1F4
 00646CD3    mov         eax,dword ptr [ebx+24];TManagedHidObject.hEvent:Cardinal
 00646CD6    push        eax
 00646CD7    call        kernel32.WaitForSingleObject
 00646CDC    sub         eax,1
>00646CDF    jb          00646CEA
 00646CE1    sub         eax,101
>00646CE6    je          00646D02
>00646CE8    jmp         00646D10
 00646CEA    push        0
 00646CEC    lea         eax,[ebx+5C];TManagedHidObject.Written:Cardinal
 00646CEF    push        eax
 00646CF0    lea         eax,[ebx+2C];TManagedHidObject.Overlapped:_OVERLAPPED
 00646CF3    push        eax
 00646CF4    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646CF7    mov         eax,dword ptr [eax+14];TJvHidDevice.FHidOverlappedWrite:Cardinal
 00646CFA    push        eax
 00646CFB    call        kernel32.GetOverlappedResult
>00646D00    jmp         00646D1C
 00646D02    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646D05    mov         eax,dword ptr [eax+14];TJvHidDevice.FHidOverlappedWrite:Cardinal
 00646D08    push        eax
 00646D09    call        kernel32.CancelIo
>00646D0E    jmp         00646D1C
 00646D10    mov         eax,dword ptr [ebx+20];TManagedHidObject.Dev:TJvHidDevice
 00646D13    mov         eax,dword ptr [eax+14];TJvHidDevice.FHidOverlappedWrite:Cardinal
 00646D16    push        eax
 00646D17    call        kernel32.CancelIo
 00646D1C    pop         esi
 00646D1D    pop         ebx
 00646D1E    ret
end;*}

//00646D20
procedure TManagedHidObject.SetUsbValue(request:Integer; value:Integer);
begin
{*
 00646D20    cmp         byte ptr [eax+87],0;TManagedHidObject.UseLibUsb:Boolean
>00646D27    je          00646D48
 00646D29    push        0A0
 00646D2E    push        0
 00646D30    push        0
 00646D32    push        0
 00646D34    push        ecx
 00646D35    push        edx
 00646D36    push        40
 00646D38    mov         eax,dword ptr [eax+68];TManagedHidObject.devh:PUsb_dev_handle
 00646D3B    push        eax
 00646D3C    mov         eax,[0078CE00];^gvar_0081D8F4:Pointer
 00646D41    mov         eax,dword ptr [eax]
 00646D43    call        eax
 00646D45    add         esp,20
 00646D48    ret
*}
end;

//00646D4C
function TManagedHidObject.SwitchToHidWrite:Boolean;
begin
{*
 00646D4C    push        ebx
 00646D4D    push        esi
 00646D4E    mov         esi,eax
 00646D50    xor         ebx,ebx
 00646D52    call        00646278
 00646D57    cmp         dword ptr ds:[78BDA8],0;gvar_0078BDA8:Pointer
>00646D5E    jne         00646D6A
 00646D60    mov         byte ptr [esi+55],1;TManagedHidObject.HidWriteFailed:Boolean
 00646D64    mov         byte ptr [esi+56],0;TManagedHidObject.UseHidWrite:Boolean
>00646D68    jmp         00646D9F
 00646D6A    mov         byte ptr [esi+56],1;TManagedHidObject.UseHidWrite:Boolean
 00646D6E    cmp         dword ptr [esi+24],0FFFFFFFF;TManagedHidObject.hEvent:Cardinal
>00646D72    je          00646D8A
 00646D74    mov         eax,dword ptr [esi+20];TManagedHidObject.Dev:TJvHidDevice
 00646D77    mov         eax,dword ptr [eax+14];TJvHidDevice.FHidOverlappedWrite:Cardinal
 00646D7A    push        eax
 00646D7B    call        kernel32.CancelIo
 00646D80    mov         dl,1
 00646D82    mov         eax,dword ptr [esi+20];TManagedHidObject.Dev:TJvHidDevice
 00646D85    call        TJvHidDevice.CloseFileEx
 00646D8A    mov         byte ptr [esi+58],0;TManagedHidObject.HungWrite:Boolean
 00646D8E    xor         eax,eax
 00646D90    mov         dword ptr [esi+5C],eax;TManagedHidObject.Written:Cardinal
 00646D93    mov         byte ptr [esi+57],0;TManagedHidObject.WriteSuccess:Boolean
 00646D97    cmp         byte ptr [esi+55],0;TManagedHidObject.HidWriteFailed:Boolean
>00646D9B    jne         00646D9F
 00646D9D    mov         bl,1
 00646D9F    mov         eax,ebx
 00646DA1    pop         esi
 00646DA2    pop         ebx
 00646DA3    ret
*}
end;

//00648E90
constructor sub_00648E90(Manager:TObject; Device:TObject);
begin
{*
 00648E90    push        ebp
 00648E91    mov         ebp,esp
 00648E93    add         esp,0FFFFFFF4
 00648E96    push        ebx
 00648E97    test        dl,dl
>00648E99    je          00648EA3
 00648E9B    add         esp,0FFFFFFF0
 00648E9E    call        @ClassCreate
 00648EA3    mov         dword ptr [ebp-8],ecx
 00648EA6    mov         byte ptr [ebp-1],dl
 00648EA9    mov         ebx,eax
 00648EAB    mov         eax,dword ptr [ebp+8]
 00648EAE    push        eax
 00648EAF    mov         ecx,dword ptr [ebp-8]
 00648EB2    xor         edx,edx
 00648EB4    mov         eax,ebx
 00648EB6    call        00646450
 00648EBB    mov         dword ptr [ebx+2D8],9999999A;TAccelerometerObject.tolerance:Double
 00648EC5    mov         dword ptr [ebx+2DC],3FA99999;TAccelerometerObject.?f2DC:dword
 00648ECF    xor         eax,eax
 00648ED1    mov         dword ptr [ebx+358],eax;TAccelerometerObject.UpY:Double
 00648ED7    mov         dword ptr [ebx+35C],3FF00000;TAccelerometerObject.?f35C:TRotMat
 00648EE1    xor         eax,eax
 00648EE3    mov         dword ptr [ebx+368],eax;TAccelerometerObject.UpLng:Double
 00648EE9    mov         dword ptr [ebx+36C],3FF00000;TAccelerometerObject.?f36C:dword
 00648EF3    xor         eax,eax
 00648EF5    mov         dword ptr [ebx+340],eax;TAccelerometerObject.gy:Double
 00648EFB    mov         dword ptr [ebx+344],3FF00000;TAccelerometerObject.?f344:dword
 00648F05    xor         edx,edx
 00648F07    xor         eax,eax
 00648F09    cmp         eax,edx
 00648F0B    sete        cl
 00648F0E    movsx       ecx,cl
 00648F11    mov         dword ptr [ebp-0C],ecx
 00648F14    fild        dword ptr [ebp-0C]
 00648F17    lea         ecx,[edx+edx*2]
 00648F1A    lea         ecx,[ebx+ecx*8]
 00648F1D    fstp        qword ptr [ecx+eax*8+370]
 00648F24    wait
 00648F25    inc         eax
 00648F26    cmp         eax,3
>00648F29    jne         00648F09
 00648F2B    inc         edx
 00648F2C    cmp         edx,3
>00648F2F    jne         00648F07
 00648F31    xor         eax,eax
 00648F33    mov         dword ptr [ebx+2E0],eax;TAccelerometerObject.TooMuchShake:Double
 00648F39    mov         dword ptr [ebx+2E4],3FF80000;TAccelerometerObject.?f2E4:dword
 00648F43    mov         dl,1
 00648F45    mov         eax,[00646DA4];TAverager
 00648F4A    call        TAverager.Create;TAverager.Create
 00648F4F    mov         dword ptr [ebx+3F8],eax;TAccelerometerObject.ShakeAverager:TAverager
 00648F55    mov         dl,1
 00648F57    mov         eax,[00646DA4];TAverager
 00648F5C    call        TAverager.Create;TAverager.Create
 00648F61    mov         dword ptr [ebx+3FC],eax;TAccelerometerObject.RawAccXAverager:TAverager
 00648F67    mov         dl,1
 00648F69    mov         eax,[00646DA4];TAverager
 00648F6E    call        TAverager.Create;TAverager.Create
 00648F73    mov         dword ptr [ebx+400],eax;TAccelerometerObject.RawAccYAverager:TAverager
 00648F79    mov         dl,1
 00648F7B    mov         eax,[00646DA4];TAverager
 00648F80    call        TAverager.Create;TAverager.Create
 00648F85    mov         dword ptr [ebx+404],eax;TAccelerometerObject.RawAccZAverager:TAverager
 00648F8B    mov         dl,1
 00648F8D    mov         eax,[00646DA4];TAverager
 00648F92    call        TAverager.Create;TAverager.Create
 00648F97    mov         dword ptr [ebx+408],eax;TAccelerometerObject.RelAccAverager:TAverager
 00648F9D    mov         dl,1
 00648F9F    mov         eax,[00646DA4];TAverager
 00648FA4    call        TAverager.Create;TAverager.Create
 00648FA9    mov         dword ptr [ebx+40C],eax;TAccelerometerObject.RelAccXAverager:TAverager
 00648FAF    mov         dl,1
 00648FB1    mov         eax,[00646DA4];TAverager
 00648FB6    call        TAverager.Create;TAverager.Create
 00648FBB    mov         dword ptr [ebx+410],eax;TAccelerometerObject.RelAccYAverager:TAverager
 00648FC1    mov         dl,1
 00648FC3    mov         eax,[00646DA4];TAverager
 00648FC8    call        TAverager.Create;TAverager.Create
 00648FCD    mov         dword ptr [ebx+414],eax;TAccelerometerObject.RelAccZAverager:TAverager
 00648FD3    mov         eax,ebx
 00648FD5    cmp         byte ptr [ebp-1],0
>00648FD9    je          00648FEA
 00648FDB    call        @AfterConstruction
 00648FE0    pop         dword ptr fs:[0]
 00648FE7    add         esp,0C
 00648FEA    mov         eax,ebx
 00648FEC    pop         ebx
 00648FED    mov         esp,ebp
 00648FEF    pop         ebp
 00648FF0    ret         4
*}
end;

//00648FF4
constructor sub_00648FF4(Manager:TObject; dev:Pointer);
begin
{*
 00648FF4    push        ebp
 00648FF5    mov         ebp,esp
 00648FF7    add         esp,0FFFFFFF4
 00648FFA    push        ebx
 00648FFB    test        dl,dl
>00648FFD    je          00649007
 00648FFF    add         esp,0FFFFFFF0
 00649002    call        @ClassCreate
 00649007    mov         dword ptr [ebp-8],ecx
 0064900A    mov         byte ptr [ebp-1],dl
 0064900D    mov         ebx,eax
 0064900F    mov         eax,dword ptr [ebp+8]
 00649012    push        eax
 00649013    mov         ecx,dword ptr [ebp-8]
 00649016    xor         edx,edx
 00649018    mov         eax,ebx
 0064901A    call        00646544
 0064901F    mov         dword ptr [ebx+2D8],9999999A;TAccelerometerObject.tolerance:Double
 00649029    mov         dword ptr [ebx+2DC],3FA99999;TAccelerometerObject.?f2DC:dword
 00649033    xor         eax,eax
 00649035    mov         dword ptr [ebx+358],eax;TAccelerometerObject.UpY:Double
 0064903B    mov         dword ptr [ebx+35C],3FF00000;TAccelerometerObject.?f35C:TRotMat
 00649045    xor         eax,eax
 00649047    mov         dword ptr [ebx+368],eax;TAccelerometerObject.UpLng:Double
 0064904D    mov         dword ptr [ebx+36C],3FF00000;TAccelerometerObject.?f36C:dword
 00649057    xor         eax,eax
 00649059    mov         dword ptr [ebx+340],eax;TAccelerometerObject.gy:Double
 0064905F    mov         dword ptr [ebx+344],3FF00000;TAccelerometerObject.?f344:dword
 00649069    xor         edx,edx
 0064906B    xor         eax,eax
 0064906D    cmp         eax,edx
 0064906F    sete        cl
 00649072    movsx       ecx,cl
 00649075    mov         dword ptr [ebp-0C],ecx
 00649078    fild        dword ptr [ebp-0C]
 0064907B    lea         ecx,[edx+edx*2]
 0064907E    lea         ecx,[ebx+ecx*8]
 00649081    fstp        qword ptr [ecx+eax*8+370]
 00649088    wait
 00649089    inc         eax
 0064908A    cmp         eax,3
>0064908D    jne         0064906D
 0064908F    inc         edx
 00649090    cmp         edx,3
>00649093    jne         0064906B
 00649095    xor         eax,eax
 00649097    mov         dword ptr [ebx+2E0],eax;TAccelerometerObject.TooMuchShake:Double
 0064909D    mov         dword ptr [ebx+2E4],3FF80000;TAccelerometerObject.?f2E4:dword
 006490A7    mov         dl,1
 006490A9    mov         eax,[00646DA4];TAverager
 006490AE    call        TAverager.Create;TAverager.Create
 006490B3    mov         dword ptr [ebx+3F8],eax;TAccelerometerObject.ShakeAverager:TAverager
 006490B9    mov         dl,1
 006490BB    mov         eax,[00646DA4];TAverager
 006490C0    call        TAverager.Create;TAverager.Create
 006490C5    mov         dword ptr [ebx+3FC],eax;TAccelerometerObject.RawAccXAverager:TAverager
 006490CB    mov         dl,1
 006490CD    mov         eax,[00646DA4];TAverager
 006490D2    call        TAverager.Create;TAverager.Create
 006490D7    mov         dword ptr [ebx+400],eax;TAccelerometerObject.RawAccYAverager:TAverager
 006490DD    mov         dl,1
 006490DF    mov         eax,[00646DA4];TAverager
 006490E4    call        TAverager.Create;TAverager.Create
 006490E9    mov         dword ptr [ebx+404],eax;TAccelerometerObject.RawAccZAverager:TAverager
 006490EF    mov         dl,1
 006490F1    mov         eax,[00646DA4];TAverager
 006490F6    call        TAverager.Create;TAverager.Create
 006490FB    mov         dword ptr [ebx+408],eax;TAccelerometerObject.RelAccAverager:TAverager
 00649101    mov         dl,1
 00649103    mov         eax,[00646DA4];TAverager
 00649108    call        TAverager.Create;TAverager.Create
 0064910D    mov         dword ptr [ebx+40C],eax;TAccelerometerObject.RelAccXAverager:TAverager
 00649113    mov         dl,1
 00649115    mov         eax,[00646DA4];TAverager
 0064911A    call        TAverager.Create;TAverager.Create
 0064911F    mov         dword ptr [ebx+410],eax;TAccelerometerObject.RelAccYAverager:TAverager
 00649125    mov         dl,1
 00649127    mov         eax,[00646DA4];TAverager
 0064912C    call        TAverager.Create;TAverager.Create
 00649131    mov         dword ptr [ebx+414],eax;TAccelerometerObject.RelAccZAverager:TAverager
 00649137    mov         eax,ebx
 00649139    cmp         byte ptr [ebp-1],0
>0064913D    je          0064914E
 0064913F    call        @AfterConstruction
 00649144    pop         dword ptr fs:[0]
 0064914B    add         esp,0C
 0064914E    mov         eax,ebx
 00649150    pop         ebx
 00649151    mov         esp,ebp
 00649153    pop         ebp
 00649154    ret         4
*}
end;

//00649158
constructor sub_00649158(Manager:TObject; dev:Pointer);
begin
{*
 00649158    push        ebp
 00649159    mov         ebp,esp
 0064915B    add         esp,0FFFFFFF4
 0064915E    push        ebx
 0064915F    test        dl,dl
>00649161    je          0064916B
 00649163    add         esp,0FFFFFFF0
 00649166    call        @ClassCreate
 0064916B    mov         dword ptr [ebp-8],ecx
 0064916E    mov         byte ptr [ebp-1],dl
 00649171    mov         ebx,eax
 00649173    mov         eax,dword ptr [ebp+8]
 00649176    push        eax
 00649177    mov         ecx,dword ptr [ebp-8]
 0064917A    xor         edx,edx
 0064917C    mov         eax,ebx
 0064917E    call        00646620
 00649183    mov         dword ptr [ebx+2D8],9999999A;TAccelerometerObject.tolerance:Double
 0064918D    mov         dword ptr [ebx+2DC],3FA99999;TAccelerometerObject.?f2DC:dword
 00649197    xor         eax,eax
 00649199    mov         dword ptr [ebx+358],eax;TAccelerometerObject.UpY:Double
 0064919F    mov         dword ptr [ebx+35C],3FF00000;TAccelerometerObject.?f35C:TRotMat
 006491A9    xor         eax,eax
 006491AB    mov         dword ptr [ebx+368],eax;TAccelerometerObject.UpLng:Double
 006491B1    mov         dword ptr [ebx+36C],3FF00000;TAccelerometerObject.?f36C:dword
 006491BB    xor         eax,eax
 006491BD    mov         dword ptr [ebx+340],eax;TAccelerometerObject.gy:Double
 006491C3    mov         dword ptr [ebx+344],3FF00000;TAccelerometerObject.?f344:dword
 006491CD    xor         edx,edx
 006491CF    xor         eax,eax
 006491D1    cmp         eax,edx
 006491D3    sete        cl
 006491D6    movsx       ecx,cl
 006491D9    mov         dword ptr [ebp-0C],ecx
 006491DC    fild        dword ptr [ebp-0C]
 006491DF    lea         ecx,[edx+edx*2]
 006491E2    lea         ecx,[ebx+ecx*8]
 006491E5    fstp        qword ptr [ecx+eax*8+370]
 006491EC    wait
 006491ED    inc         eax
 006491EE    cmp         eax,3
>006491F1    jne         006491D1
 006491F3    inc         edx
 006491F4    cmp         edx,3
>006491F7    jne         006491CF
 006491F9    xor         eax,eax
 006491FB    mov         dword ptr [ebx+2E0],eax;TAccelerometerObject.TooMuchShake:Double
 00649201    mov         dword ptr [ebx+2E4],3FF80000;TAccelerometerObject.?f2E4:dword
 0064920B    mov         dl,1
 0064920D    mov         eax,[00646DA4];TAverager
 00649212    call        TAverager.Create;TAverager.Create
 00649217    mov         dword ptr [ebx+3F8],eax;TAccelerometerObject.ShakeAverager:TAverager
 0064921D    mov         dl,1
 0064921F    mov         eax,[00646DA4];TAverager
 00649224    call        TAverager.Create;TAverager.Create
 00649229    mov         dword ptr [ebx+3FC],eax;TAccelerometerObject.RawAccXAverager:TAverager
 0064922F    mov         dl,1
 00649231    mov         eax,[00646DA4];TAverager
 00649236    call        TAverager.Create;TAverager.Create
 0064923B    mov         dword ptr [ebx+400],eax;TAccelerometerObject.RawAccYAverager:TAverager
 00649241    mov         dl,1
 00649243    mov         eax,[00646DA4];TAverager
 00649248    call        TAverager.Create;TAverager.Create
 0064924D    mov         dword ptr [ebx+404],eax;TAccelerometerObject.RawAccZAverager:TAverager
 00649253    mov         dl,1
 00649255    mov         eax,[00646DA4];TAverager
 0064925A    call        TAverager.Create;TAverager.Create
 0064925F    mov         dword ptr [ebx+408],eax;TAccelerometerObject.RelAccAverager:TAverager
 00649265    mov         dl,1
 00649267    mov         eax,[00646DA4];TAverager
 0064926C    call        TAverager.Create;TAverager.Create
 00649271    mov         dword ptr [ebx+40C],eax;TAccelerometerObject.RelAccXAverager:TAverager
 00649277    mov         dl,1
 00649279    mov         eax,[00646DA4];TAverager
 0064927E    call        TAverager.Create;TAverager.Create
 00649283    mov         dword ptr [ebx+410],eax;TAccelerometerObject.RelAccYAverager:TAverager
 00649289    mov         dl,1
 0064928B    mov         eax,[00646DA4];TAverager
 00649290    call        TAverager.Create;TAverager.Create
 00649295    mov         dword ptr [ebx+414],eax;TAccelerometerObject.RelAccZAverager:TAverager
 0064929B    mov         eax,ebx
 0064929D    cmp         byte ptr [ebp-1],0
>006492A1    je          006492B2
 006492A3    call        @AfterConstruction
 006492A8    pop         dword ptr fs:[0]
 006492AF    add         esp,0C
 006492B2    mov         eax,ebx
 006492B4    pop         ebx
 006492B5    mov         esp,ebp
 006492B7    pop         ebp
 006492B8    ret         4
*}
end;

//006492BC
constructor sub_006492BC(Manager:TObject; Device:TObject);
begin
{*
 006492BC    push        ebp
 006492BD    mov         ebp,esp
 006492BF    add         esp,0FFFFFFF4
 006492C2    push        ebx
 006492C3    test        dl,dl
>006492C5    je          006492CF
 006492C7    add         esp,0FFFFFFF0
 006492CA    call        @ClassCreate
 006492CF    mov         dword ptr [ebp-8],ecx
 006492D2    mov         byte ptr [ebp-1],dl
 006492D5    mov         ebx,eax
 006492D7    mov         eax,dword ptr [ebp+8]
 006492DA    push        eax
 006492DB    mov         ecx,dword ptr [ebp-8]
 006492DE    xor         edx,edx
 006492E0    mov         eax,ebx
 006492E2    call        00646698
 006492E7    mov         dword ptr [ebx+2D8],9999999A;TAccelerometerObject.tolerance:Double
 006492F1    mov         dword ptr [ebx+2DC],3FA99999;TAccelerometerObject.?f2DC:dword
 006492FB    xor         eax,eax
 006492FD    mov         dword ptr [ebx+358],eax;TAccelerometerObject.UpY:Double
 00649303    mov         dword ptr [ebx+35C],3FF00000;TAccelerometerObject.?f35C:TRotMat
 0064930D    xor         eax,eax
 0064930F    mov         dword ptr [ebx+368],eax;TAccelerometerObject.UpLng:Double
 00649315    mov         dword ptr [ebx+36C],3FF00000;TAccelerometerObject.?f36C:dword
 0064931F    xor         eax,eax
 00649321    mov         dword ptr [ebx+340],eax;TAccelerometerObject.gy:Double
 00649327    mov         dword ptr [ebx+344],3FF00000;TAccelerometerObject.?f344:dword
 00649331    xor         edx,edx
 00649333    xor         eax,eax
 00649335    cmp         eax,edx
 00649337    sete        cl
 0064933A    movsx       ecx,cl
 0064933D    mov         dword ptr [ebp-0C],ecx
 00649340    fild        dword ptr [ebp-0C]
 00649343    lea         ecx,[edx+edx*2]
 00649346    lea         ecx,[ebx+ecx*8]
 00649349    fstp        qword ptr [ecx+eax*8+370]
 00649350    wait
 00649351    inc         eax
 00649352    cmp         eax,3
>00649355    jne         00649335
 00649357    inc         edx
 00649358    cmp         edx,3
>0064935B    jne         00649333
 0064935D    xor         eax,eax
 0064935F    mov         dword ptr [ebx+2E0],eax;TAccelerometerObject.TooMuchShake:Double
 00649365    mov         dword ptr [ebx+2E4],3FF80000;TAccelerometerObject.?f2E4:dword
 0064936F    mov         dl,1
 00649371    mov         eax,[00646DA4];TAverager
 00649376    call        TAverager.Create;TAverager.Create
 0064937B    mov         dword ptr [ebx+3F8],eax;TAccelerometerObject.ShakeAverager:TAverager
 00649381    mov         dl,1
 00649383    mov         eax,[00646DA4];TAverager
 00649388    call        TAverager.Create;TAverager.Create
 0064938D    mov         dword ptr [ebx+3FC],eax;TAccelerometerObject.RawAccXAverager:TAverager
 00649393    mov         dl,1
 00649395    mov         eax,[00646DA4];TAverager
 0064939A    call        TAverager.Create;TAverager.Create
 0064939F    mov         dword ptr [ebx+400],eax;TAccelerometerObject.RawAccYAverager:TAverager
 006493A5    mov         dl,1
 006493A7    mov         eax,[00646DA4];TAverager
 006493AC    call        TAverager.Create;TAverager.Create
 006493B1    mov         dword ptr [ebx+404],eax;TAccelerometerObject.RawAccZAverager:TAverager
 006493B7    mov         dl,1
 006493B9    mov         eax,[00646DA4];TAverager
 006493BE    call        TAverager.Create;TAverager.Create
 006493C3    mov         dword ptr [ebx+408],eax;TAccelerometerObject.RelAccAverager:TAverager
 006493C9    mov         dl,1
 006493CB    mov         eax,[00646DA4];TAverager
 006493D0    call        TAverager.Create;TAverager.Create
 006493D5    mov         dword ptr [ebx+40C],eax;TAccelerometerObject.RelAccXAverager:TAverager
 006493DB    mov         dl,1
 006493DD    mov         eax,[00646DA4];TAverager
 006493E2    call        TAverager.Create;TAverager.Create
 006493E7    mov         dword ptr [ebx+410],eax;TAccelerometerObject.RelAccYAverager:TAverager
 006493ED    mov         dl,1
 006493EF    mov         eax,[00646DA4];TAverager
 006493F4    call        TAverager.Create;TAverager.Create
 006493F9    mov         dword ptr [ebx+414],eax;TAccelerometerObject.RelAccZAverager:TAverager
 006493FF    mov         eax,ebx
 00649401    cmp         byte ptr [ebp-1],0
>00649405    je          00649416
 00649407    call        @AfterConstruction
 0064940C    pop         dword ptr fs:[0]
 00649413    add         esp,0C
 00649416    mov         eax,ebx
 00649418    pop         ebx
 00649419    mov         esp,ebp
 0064941B    pop         ebp
 0064941C    ret         4
*}
end;

//00649420
function TAccelerometerObject.CrossArms:Boolean;
begin
{*
 00649420    xor         eax,eax
 00649422    ret
*}
end;

//00649424
destructor TAccelerometerObject.Destroy();
begin
{*
 00649424    push        ebx
 00649425    push        esi
 00649426    call        @BeforeDestruction
 0064942B    mov         ebx,edx
 0064942D    mov         esi,eax
 0064942F    mov         eax,dword ptr [esi+3F8];TAccelerometerObject.ShakeAverager:TAverager
 00649435    call        TObject.Free
 0064943A    mov         eax,dword ptr [esi+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 00649440    call        TObject.Free
 00649445    mov         eax,dword ptr [esi+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064944B    call        TObject.Free
 00649450    mov         eax,dword ptr [esi+404];TAccelerometerObject.RawAccZAverager:TAverager
 00649456    call        TObject.Free
 0064945B    mov         eax,dword ptr [esi+408];TAccelerometerObject.RelAccAverager:TAverager
 00649461    call        TObject.Free
 00649466    mov         eax,dword ptr [esi+40C];TAccelerometerObject.RelAccXAverager:TAverager
 0064946C    call        TObject.Free
 00649471    mov         eax,dword ptr [esi+410];TAccelerometerObject.RelAccYAverager:TAverager
 00649477    call        TObject.Free
 0064947C    mov         eax,dword ptr [esi+414];TAccelerometerObject.RelAccZAverager:TAverager
 00649482    call        TObject.Free
 00649487    mov         edx,ebx
 00649489    and         dl,0FC
 0064948C    mov         eax,esi
 0064948E    call        TObject.Destroy
 00649493    test        bl,bl
>00649495    jle         0064949E
 00649497    mov         eax,esi
 00649499    call        @ClassDestroy
 0064949E    pop         esi
 0064949F    pop         ebx
 006494A0    ret
*}
end;

//006494A4
function TAccelerometerObject.DrumBeat:Boolean;
begin
{*
 006494A4    push        ebx
 006494A5    mov         ebx,eax
 006494A7    mov         eax,ebx
 006494A9    call        TAccelerometerObject.RawAccY
 006494AE    fcomp       dword ptr ds:[6494C0];19:Single
 006494B4    wait
 006494B5    fnstsw      al
 006494B7    sahf
 006494B8    seta        al
 006494BB    pop         ebx
 006494BC    ret
*}
end;

//006494C4
function TAccelerometerObject.DrumRoll:Boolean;
begin
{*
 006494C4    xor         eax,eax
 006494C6    ret
*}
end;

//006494C8
function TAccelerometerObject.OnTable:Boolean;
begin
{*
 006494C8    push        ebx
 006494C9    mov         ebx,eax
 006494CB    mov         eax,ebx
 006494CD    call        TAccelerometerObject.Shakiness
 006494D2    fld         tbyte ptr ds:[6494E4];0.2:Extended
 006494D8    fcompp
 006494DA    wait
 006494DB    fnstsw      al
 006494DD    sahf
 006494DE    setae       al
 006494E1    pop         ebx
 006494E2    ret
*}
end;

//006494F0
function TAccelerometerObject.RawAccX:Double;
begin
{*
 006494F0    add         esp,0FFFFFFF8
 006494F3    fld         tbyte ptr ds:[64950C];9.8:Extended
 006494F9    fmul        qword ptr [eax+338];TAccelerometerObject.gx:Double
 006494FF    fstp        qword ptr [esp]
 00649502    wait
 00649503    fld         qword ptr [esp]
 00649506    pop         ecx
 00649507    pop         edx
 00649508    ret
*}
end;

//00649518
function TAccelerometerObject.RawAccY:Double;
begin
{*
 00649518    add         esp,0FFFFFFF8
 0064951B    fld         tbyte ptr ds:[649534];9.8:Extended
 00649521    fmul        qword ptr [eax+340];TAccelerometerObject.gy:Double
 00649527    fstp        qword ptr [esp]
 0064952A    wait
 0064952B    fld         qword ptr [esp]
 0064952E    pop         ecx
 0064952F    pop         edx
 00649530    ret
*}
end;

//00649540
function TAccelerometerObject.RawAccZ:Double;
begin
{*
 00649540    add         esp,0FFFFFFF8
 00649543    fld         tbyte ptr ds:[64955C];9.8:Extended
 00649549    fmul        qword ptr [eax+348];TAccelerometerObject.gz:Double
 0064954F    fstp        qword ptr [esp]
 00649552    wait
 00649553    fld         qword ptr [esp]
 00649556    pop         ecx
 00649557    pop         edx
 00649558    ret
*}
end;

//00649568
procedure TAccelerometerObject.RelAcc;
begin
{*
 00649568    push        ebx
 00649569    add         esp,0FFFFFFE0
 0064956C    mov         ebx,eax
 0064956E    fld         qword ptr [ebx+338];TAccelerometerObject.gx:Double
 00649574    fsub        qword ptr [ebx+350];TAccelerometerObject.UpX:Double
 0064957A    fmul        st,st(0)
 0064957C    fstp        tbyte ptr [esp+8]
 00649580    wait
 00649581    fld         qword ptr [ebx+340];TAccelerometerObject.gy:Double
 00649587    fsub        qword ptr [ebx+358];TAccelerometerObject.UpY:Double
 0064958D    fmul        st,st(0)
 0064958F    fld         tbyte ptr [esp+8]
 00649593    faddp       st(1),st
 00649595    fstp        tbyte ptr [esp+14]
 00649599    wait
 0064959A    fld         qword ptr [ebx+348];TAccelerometerObject.gz:Double
 006495A0    fsub        qword ptr [ebx+360];TAccelerometerObject.UpZ:Double
 006495A6    fmul        st,st(0)
 006495A8    fld         tbyte ptr [esp+14]
 006495AC    faddp       st(1),st
 006495AE    add         esp,0FFFFFFF4
 006495B1    fstp        tbyte ptr [esp]
 006495B4    wait
 006495B5    call        Sqrt
 006495BA    fld         tbyte ptr ds:[6495D0];9.8:Extended
 006495C0    fmulp       st(1),st
 006495C2    fstp        qword ptr [esp]
 006495C5    wait
 006495C6    fld         qword ptr [esp]
 006495C9    add         esp,20
 006495CC    pop         ebx
 006495CD    ret
*}
end;

//006495DC
function TAccelerometerObject.RelAccX:Double;
begin
{*
 006495DC    add         esp,0FFFFFFF8
 006495DF    fld         qword ptr [eax+338];TAccelerometerObject.gx:Double
 006495E5    fsub        qword ptr [eax+350];TAccelerometerObject.UpX:Double
 006495EB    fld         tbyte ptr ds:[649600];9.8:Extended
 006495F1    fmulp       st(1),st
 006495F3    fstp        qword ptr [esp]
 006495F6    wait
 006495F7    fld         qword ptr [esp]
 006495FA    pop         ecx
 006495FB    pop         edx
 006495FC    ret
*}
end;

//0064960C
function TAccelerometerObject.RelAccY:Double;
begin
{*
 0064960C    add         esp,0FFFFFFF8
 0064960F    fld         qword ptr [eax+340];TAccelerometerObject.gy:Double
 00649615    fsub        qword ptr [eax+358];TAccelerometerObject.UpY:Double
 0064961B    fld         tbyte ptr ds:[649630];9.8:Extended
 00649621    fmulp       st(1),st
 00649623    fstp        qword ptr [esp]
 00649626    wait
 00649627    fld         qword ptr [esp]
 0064962A    pop         ecx
 0064962B    pop         edx
 0064962C    ret
*}
end;

//0064963C
function TAccelerometerObject.RelAccZ:Double;
begin
{*
 0064963C    add         esp,0FFFFFFF8
 0064963F    fld         qword ptr [eax+348];TAccelerometerObject.gz:Double
 00649645    fsub        qword ptr [eax+360];TAccelerometerObject.UpZ:Double
 0064964B    fld         tbyte ptr ds:[649660];9.8:Extended
 00649651    fmulp       st(1),st
 00649653    fstp        qword ptr [esp]
 00649656    wait
 00649657    fld         qword ptr [esp]
 0064965A    pop         ecx
 0064965B    pop         edx
 0064965C    ret
*}
end;

//0064966C
procedure TAccelerometerObject.ResetGyroCalibration;
begin
{*
 0064966C    push        ebx
 0064966D    mov         ebx,eax
 0064966F    mov         dl,1
 00649671    mov         eax,ebx
 00649673    mov         ecx,dword ptr [eax]
 00649675    call        dword ptr [ecx+8];TAccelerometerObject.ShowCalibrating
 00649678    mov         byte ptr [ebx+14B],0;TAccelerometerObject.GyrosCalibrated:Boolean
 0064967F    xor         eax,eax
 00649681    mov         dword ptr [ebx+14C],eax;TAccelerometerObject.GyroSetCount:Integer
 00649687    xor         eax,eax
 00649689    mov         dword ptr [ebx+198],eax;TAccelerometerObject.ZeroYawSpeedTotal:Double
 0064968F    mov         dword ptr [ebx+19C],eax;TAccelerometerObject.?f19C:dword
 00649695    xor         eax,eax
 00649697    mov         dword ptr [ebx+1A0],eax;TAccelerometerObject.ZeroPitchSpeedTotal:Double
 0064969D    mov         dword ptr [ebx+1A4],eax;TAccelerometerObject.?f1A4:dword
 006496A3    xor         eax,eax
 006496A5    mov         dword ptr [ebx+1A8],eax;TAccelerometerObject.ZeroRollSpeedTotal:Double
 006496AB    mov         dword ptr [ebx+1AC],eax;TAccelerometerObject.?f1AC:dword
 006496B1    xor         eax,eax
 006496B3    mov         dword ptr [ebx+1B0],eax;TAccelerometerObject.TotalGyroYaw:Double
 006496B9    mov         dword ptr [ebx+1B4],eax;TAccelerometerObject.?f1B4:dword
 006496BF    xor         eax,eax
 006496C1    mov         dword ptr [ebx+1B8],eax;TAccelerometerObject.TotalGyroPitch:Double
 006496C7    mov         dword ptr [ebx+1BC],eax;TAccelerometerObject.?f1BC:dword
 006496CD    xor         eax,eax
 006496CF    mov         dword ptr [ebx+1C0],eax;TAccelerometerObject.TotalGyroRoll:Double
 006496D5    mov         dword ptr [ebx+1C4],eax;TAccelerometerObject.?f1C4:dword
 006496DB    pop         ebx
 006496DC    ret
*}
end;

//006496E0
{*procedure TAccelerometerObject.SetYaw(YawDegrees:Double; ?:?);
begin
 006496E0    push        ebp
 006496E1    mov         ebp,esp
 006496E3    push        ebx
 006496E4    mov         ebx,eax
 006496E6    lea         eax,[ebx+3B8];TAccelerometerObject.Roll:Double
 006496EC    push        eax
 006496ED    lea         ecx,[ebx+3C0];TAccelerometerObject.Pitch:Double
 006496F3    lea         edx,[ebx+3C8];TAccelerometerObject.Yaw:Double
 006496F9    lea         eax,[ebx+370];TAccelerometerObject.RotMat:TRotMat
 006496FF    call        005C3550
 00649704    mov         eax,dword ptr [ebp+8]
 00649707    mov         dword ptr [ebx+3C8],eax;TAccelerometerObject.Yaw:Double
 0064970D    mov         eax,dword ptr [ebp+0C]
 00649710    mov         dword ptr [ebx+3CC],eax;TAccelerometerObject.?f3CC:dword
 00649716    push        dword ptr [ebx+3CC];TAccelerometerObject.?f3CC:dword
 0064971C    push        dword ptr [ebx+3C8];TAccelerometerObject.Yaw:Double
 00649722    push        dword ptr [ebx+3C4];TAccelerometerObject.?f3C4:dword
 00649728    push        dword ptr [ebx+3C0];TAccelerometerObject.Pitch:Double
 0064972E    push        dword ptr [ebx+3BC];TAccelerometerObject.?f3BC:dword
 00649734    push        dword ptr [ebx+3B8];TAccelerometerObject.Roll:Double
 0064973A    lea         eax,[ebx+370];TAccelerometerObject.RotMat:TRotMat
 00649740    call        005C361C
 00649745    pop         ebx
 00649746    pop         ebp
 00649747    ret         8
end;*}

//0064974C
function TAccelerometerObject.Shake:Boolean;
begin
{*
 0064974C    push        ebx
 0064974D    add         esp,0FFFFFFE8
 00649750    mov         ebx,eax
 00649752    mov         eax,ebx
 00649754    call        TAccelerometerObject.RelAccX
 00649759    fmul        st,st(0)
 0064975B    fstp        tbyte ptr [esp]
 0064975E    wait
 0064975F    mov         eax,ebx
 00649761    call        TAccelerometerObject.RelAccY
 00649766    fmul        st,st(0)
 00649768    fld         tbyte ptr [esp]
 0064976B    faddp       st(1),st
 0064976D    fstp        tbyte ptr [esp+0C]
 00649771    wait
 00649772    mov         eax,ebx
 00649774    call        TAccelerometerObject.RelAccZ
 00649779    fmul        st,st(0)
 0064977B    fld         tbyte ptr [esp+0C]
 0064977F    faddp       st(1),st
 00649781    fcomp       dword ptr ds:[649794];100:Single
 00649787    wait
 00649788    fnstsw      al
 0064978A    sahf
 0064978B    seta        al
 0064978E    add         esp,18
 00649791    pop         ebx
 00649792    ret
*}
end;

//00649798
function TAccelerometerObject.Shakiness:Double;
begin
{*
 00649798    add         esp,0FFFFFFF8
 0064979B    mov         eax,dword ptr [eax+3F8];TAccelerometerObject.ShakeAverager:TAverager
 006497A1    call        TAverager.GetAverage
 006497A6    fstp        qword ptr [esp]
 006497A9    wait
 006497AA    fld         qword ptr [esp]
 006497AD    pop         ecx
 006497AE    pop         edx
 006497AF    ret
*}
end;

//006497B0
procedure TAccelerometerObject.ShowCalibrating(value:Boolean);
begin
{*
 006497B0    ret
*}
end;

//006497B4
function TAccelerometerObject.Stabbing:Boolean;
begin
{*
 006497B4    push        ebx
 006497B5    add         esp,0FFFFFFC0
 006497B8    mov         ebx,eax
 006497BA    mov         edx,11
 006497BF    mov         eax,dword ptr [ebx+408];TAccelerometerObject.RelAccAverager:TAverager
 006497C5    call        TAverager.GetAvg
 006497CA    fcomp       dword ptr ds:[6498C4];9:Single
 006497D0    wait
 006497D1    fnstsw      al
 006497D3    sahf
>006497D4    jb          006498BA
 006497DA    mov         edx,11
 006497DF    mov         eax,dword ptr [ebx+40C];TAccelerometerObject.RelAccXAverager:TAverager
 006497E5    call        TAverager.GetAvg
 006497EA    fstp        qword ptr [esp]
 006497ED    wait
 006497EE    mov         edx,11
 006497F3    mov         eax,dword ptr [ebx+410];TAccelerometerObject.RelAccYAverager:TAverager
 006497F9    call        TAverager.GetAvg
 006497FE    fstp        qword ptr [esp+8]
 00649802    wait
 00649803    mov         edx,11
 00649808    mov         eax,dword ptr [ebx+414];TAccelerometerObject.RelAccZAverager:TAverager
 0064980E    call        TAverager.GetAvg
 00649813    fstp        qword ptr [esp+10]
 00649817    wait
 00649818    fld         qword ptr [esp]
 0064981B    fmul        st,st(0)
 0064981D    fstp        tbyte ptr [esp+28]
 00649821    wait
 00649822    fld         qword ptr [esp+8]
 00649826    fmul        st,st(0)
 00649828    fld         tbyte ptr [esp+28]
 0064982C    faddp       st(1),st
 0064982E    fstp        tbyte ptr [esp+34]
 00649832    wait
 00649833    fld         qword ptr [esp+10]
 00649837    fmul        st,st(0)
 00649839    fld         tbyte ptr [esp+34]
 0064983D    faddp       st(1),st
 0064983F    add         esp,0FFFFFFF4
 00649842    fstp        tbyte ptr [esp]
 00649845    wait
 00649846    call        Sqrt
 0064984B    fstp        qword ptr [esp+18]
 0064984F    wait
 00649850    fld         qword ptr [esp+18]
 00649854    fcomp       dword ptr ds:[6498C8];0:Single
 0064985A    wait
 0064985B    fnstsw      al
 0064985D    sahf
>0064985E    je          006498B6
 00649860    fld         qword ptr [esp]
 00649863    fmul        dword ptr ds:[6498C8];0:Single
 00649869    fld         qword ptr [esp+8]
 0064986D    fmul        dword ptr ds:[6498C8];0:Single
 00649873    faddp       st(1),st
 00649875    fld         qword ptr [esp+10]
 00649879    fmul        dword ptr ds:[6498CC];1:Single
 0064987F    faddp       st(1),st
 00649881    fdiv        qword ptr [esp+18]
 00649885    fstp        qword ptr [esp+20]
 00649889    wait
 0064988A    push        dword ptr [esp+24]
 0064988E    push        dword ptr [esp+24]
 00649892    call        00454A28
 00649897    fmul        dword ptr ds:[6498D0];180:Single
 0064989D    fld         tbyte ptr ds:[6498D4];3.14159265358979:Extended
 006498A3    fdivp       st(1),st
 006498A5    fabs
 006498A7    fcomp       dword ptr ds:[6498E0];40:Single
 006498AD    wait
 006498AE    fnstsw      al
 006498B0    sahf
 006498B1    setbe       al
>006498B4    jmp         006498BC
 006498B6    xor         eax,eax
>006498B8    jmp         006498BC
 006498BA    xor         eax,eax
 006498BC    add         esp,40
 006498BF    pop         ebx
 006498C0    ret
*}
end;

//006498E4
function TAccelerometerObject.SwingHorizontally:Boolean;
begin
{*
 006498E4    push        ebx
 006498E5    add         esp,0FFFFFFC0
 006498E8    mov         ebx,eax
 006498EA    mov         edx,0A
 006498EF    mov         eax,dword ptr [ebx+408];TAccelerometerObject.RelAccAverager:TAverager
 006498F5    call        TAverager.GetAvg
 006498FA    fcomp       dword ptr ds:[6499F4];10:Single
 00649900    wait
 00649901    fnstsw      al
 00649903    sahf
>00649904    jb          006499EA
 0064990A    mov         edx,0A
 0064990F    mov         eax,dword ptr [ebx+40C];TAccelerometerObject.RelAccXAverager:TAverager
 00649915    call        TAverager.GetAvg
 0064991A    fstp        qword ptr [esp]
 0064991D    wait
 0064991E    mov         edx,0A
 00649923    mov         eax,dword ptr [ebx+410];TAccelerometerObject.RelAccYAverager:TAverager
 00649929    call        TAverager.GetAvg
 0064992E    fstp        qword ptr [esp+8]
 00649932    wait
 00649933    mov         edx,0A
 00649938    mov         eax,dword ptr [ebx+414];TAccelerometerObject.RelAccZAverager:TAverager
 0064993E    call        TAverager.GetAvg
 00649943    fstp        qword ptr [esp+10]
 00649947    wait
 00649948    fld         qword ptr [esp]
 0064994B    fmul        st,st(0)
 0064994D    fstp        tbyte ptr [esp+28]
 00649951    wait
 00649952    fld         qword ptr [esp+8]
 00649956    fmul        st,st(0)
 00649958    fld         tbyte ptr [esp+28]
 0064995C    faddp       st(1),st
 0064995E    fstp        tbyte ptr [esp+34]
 00649962    wait
 00649963    fld         qword ptr [esp+10]
 00649967    fmul        st,st(0)
 00649969    fld         tbyte ptr [esp+34]
 0064996D    faddp       st(1),st
 0064996F    add         esp,0FFFFFFF4
 00649972    fstp        tbyte ptr [esp]
 00649975    wait
 00649976    call        Sqrt
 0064997B    fstp        qword ptr [esp+18]
 0064997F    wait
 00649980    fld         qword ptr [esp+18]
 00649984    fcomp       dword ptr ds:[6499F8];0:Single
 0064998A    wait
 0064998B    fnstsw      al
 0064998D    sahf
>0064998E    je          006499E6
 00649990    fld         qword ptr [esp]
 00649993    fmul        dword ptr ds:[6499FC];1:Single
 00649999    fld         qword ptr [esp+8]
 0064999D    fmul        dword ptr ds:[6499F8];0:Single
 006499A3    faddp       st(1),st
 006499A5    fld         qword ptr [esp+10]
 006499A9    fmul        dword ptr ds:[6499F8];0:Single
 006499AF    faddp       st(1),st
 006499B1    fdiv        qword ptr [esp+18]
 006499B5    fstp        qword ptr [esp+20]
 006499B9    wait
 006499BA    push        dword ptr [esp+24]
 006499BE    push        dword ptr [esp+24]
 006499C2    call        00454A28
 006499C7    fmul        dword ptr ds:[649A00];180:Single
 006499CD    fld         tbyte ptr ds:[649A04];3.14159265358979:Extended
 006499D3    fdivp       st(1),st
 006499D5    fabs
 006499D7    fcomp       dword ptr ds:[649A10];38:Single
 006499DD    wait
 006499DE    fnstsw      al
 006499E0    sahf
 006499E1    setbe       al
>006499E4    jmp         006499EC
 006499E6    xor         eax,eax
>006499E8    jmp         006499EC
 006499EA    xor         eax,eax
 006499EC    add         esp,40
 006499EF    pop         ebx
 006499F0    ret
*}
end;

//00649A14
procedure TAccelerometerObject.SwingVertically;
begin
{*
 00649A14    push        ebx
 00649A15    add         esp,0FFFFFFC0
 00649A18    mov         ebx,eax
 00649A1A    mov         edx,0F
 00649A1F    mov         eax,dword ptr [ebx+408];TAccelerometerObject.RelAccAverager:TAverager
 00649A25    call        TAverager.GetAvg
 00649A2A    fcomp       dword ptr ds:[649B24];9:Single
 00649A30    wait
 00649A31    fnstsw      al
 00649A33    sahf
>00649A34    jb          00649B1A
 00649A3A    mov         edx,0F
 00649A3F    mov         eax,dword ptr [ebx+40C];TAccelerometerObject.RelAccXAverager:TAverager
 00649A45    call        TAverager.GetAvg
 00649A4A    fstp        qword ptr [esp]
 00649A4D    wait
 00649A4E    mov         edx,0F
 00649A53    mov         eax,dword ptr [ebx+410];TAccelerometerObject.RelAccYAverager:TAverager
 00649A59    call        TAverager.GetAvg
 00649A5E    fstp        qword ptr [esp+8]
 00649A62    wait
 00649A63    mov         edx,0F
 00649A68    mov         eax,dword ptr [ebx+414];TAccelerometerObject.RelAccZAverager:TAverager
 00649A6E    call        TAverager.GetAvg
 00649A73    fstp        qword ptr [esp+10]
 00649A77    wait
 00649A78    fld         qword ptr [esp]
 00649A7B    fmul        st,st(0)
 00649A7D    fstp        tbyte ptr [esp+28]
 00649A81    wait
 00649A82    fld         qword ptr [esp+8]
 00649A86    fmul        st,st(0)
 00649A88    fld         tbyte ptr [esp+28]
 00649A8C    faddp       st(1),st
 00649A8E    fstp        tbyte ptr [esp+34]
 00649A92    wait
 00649A93    fld         qword ptr [esp+10]
 00649A97    fmul        st,st(0)
 00649A99    fld         tbyte ptr [esp+34]
 00649A9D    faddp       st(1),st
 00649A9F    add         esp,0FFFFFFF4
 00649AA2    fstp        tbyte ptr [esp]
 00649AA5    wait
 00649AA6    call        Sqrt
 00649AAB    fstp        qword ptr [esp+18]
 00649AAF    wait
 00649AB0    fld         qword ptr [esp+18]
 00649AB4    fcomp       dword ptr ds:[649B28];0:Single
 00649ABA    wait
 00649ABB    fnstsw      al
 00649ABD    sahf
>00649ABE    je          00649B16
 00649AC0    fld         qword ptr [esp]
 00649AC3    fmul        dword ptr ds:[649B28];0:Single
 00649AC9    fld         qword ptr [esp+8]
 00649ACD    fmul        dword ptr ds:[649B2C];1:Single
 00649AD3    faddp       st(1),st
 00649AD5    fld         qword ptr [esp+10]
 00649AD9    fmul        dword ptr ds:[649B28];0:Single
 00649ADF    faddp       st(1),st
 00649AE1    fdiv        qword ptr [esp+18]
 00649AE5    fstp        qword ptr [esp+20]
 00649AE9    wait
 00649AEA    push        dword ptr [esp+24]
 00649AEE    push        dword ptr [esp+24]
 00649AF2    call        00454A28
 00649AF7    fmul        dword ptr ds:[649B30];180:Single
 00649AFD    fld         tbyte ptr ds:[649B34];3.14159265358979:Extended
 00649B03    fdivp       st(1),st
 00649B05    fabs
 00649B07    fcomp       dword ptr ds:[649B40];38:Single
 00649B0D    wait
 00649B0E    fnstsw      al
 00649B10    sahf
 00649B11    setbe       al
>00649B14    jmp         00649B1C
 00649B16    xor         eax,eax
>00649B18    jmp         00649B1C
 00649B1A    xor         eax,eax
 00649B1C    add         esp,40
 00649B1F    pop         ebx
 00649B20    ret
*}
end;

//00649B44
{*procedure TAccelerometerObject.UpdateForces(TimeStamp:Double; ?:?; RawForceZ:Double; ?:?; RawForceY:Double; ?:?; RawForceX:Double; ?:?);
begin
 00649B44    push        ebp
 00649B45    mov         ebp,esp
 00649B47    add         esp,0FFFFFF08
 00649B4D    push        ebx
 00649B4E    push        esi
 00649B4F    push        edi
 00649B50    mov         esi,eax
 00649B52    mov         eax,dword ptr [ebp+8]
 00649B55    mov         dword ptr [esi+3E8],eax;TAccelerometerObject.LastForceTime:Double
 00649B5B    mov         eax,dword ptr [ebp+0C]
 00649B5E    mov         dword ptr [esi+3EC],eax;TAccelerometerObject.?f3EC:dword
 00649B64    mov         eax,dword ptr [esi+248];TAccelerometerObject.RawForceX:Double
 00649B6A    mov         dword ptr [ebp-20],eax
 00649B6D    mov         eax,dword ptr [esi+24C];TAccelerometerObject.?f24C:dword
 00649B73    mov         dword ptr [ebp-1C],eax
 00649B76    mov         eax,dword ptr [esi+250];TAccelerometerObject.RawForceY:Double
 00649B7C    mov         dword ptr [ebp-28],eax
 00649B7F    mov         eax,dword ptr [esi+254];TAccelerometerObject.?f254:dword
 00649B85    mov         dword ptr [ebp-24],eax
 00649B88    mov         eax,dword ptr [esi+258];TAccelerometerObject.RawForceZ:Double
 00649B8E    mov         dword ptr [ebp-30],eax
 00649B91    mov         eax,dword ptr [esi+25C];TAccelerometerObject.?f25C:dword
 00649B97    mov         dword ptr [ebp-2C],eax
 00649B9A    mov         eax,dword ptr [ebp+20]
 00649B9D    mov         dword ptr [esi+248],eax;TAccelerometerObject.RawForceX:Double
 00649BA3    mov         eax,dword ptr [ebp+24]
 00649BA6    mov         dword ptr [esi+24C],eax;TAccelerometerObject.?f24C:dword
 00649BAC    mov         eax,dword ptr [ebp+18]
 00649BAF    mov         dword ptr [esi+250],eax;TAccelerometerObject.RawForceY:Double
 00649BB5    mov         eax,dword ptr [ebp+1C]
 00649BB8    mov         dword ptr [esi+254],eax;TAccelerometerObject.?f254:dword
 00649BBE    mov         eax,dword ptr [ebp+10]
 00649BC1    mov         dword ptr [esi+258],eax;TAccelerometerObject.RawForceZ:Double
 00649BC7    mov         eax,dword ptr [ebp+14]
 00649BCA    mov         dword ptr [esi+25C],eax;TAccelerometerObject.?f25C:dword
 00649BD0    fld         qword ptr [ebp+20]
 00649BD3    fsub        qword ptr [ebp-20]
 00649BD6    fabs
 00649BD8    fstp        tbyte ptr [ebp-0EC]
 00649BDE    wait
 00649BDF    fld         qword ptr [ebp+18]
 00649BE2    fsub        qword ptr [ebp-28]
 00649BE5    fabs
 00649BE7    fld         tbyte ptr [ebp-0EC]
 00649BED    faddp       st(1),st
 00649BEF    fstp        tbyte ptr [ebp-0F8]
 00649BF5    wait
 00649BF6    fld         qword ptr [ebp+10]
 00649BF9    fsub        qword ptr [ebp-30]
 00649BFC    fabs
 00649BFE    fld         tbyte ptr [ebp-0F8]
 00649C04    faddp       st(1),st
 00649C06    fstp        qword ptr [ebp-38]
 00649C09    wait
 00649C0A    fld         qword ptr [esi+318];TAccelerometerObject.RawForcePerGX:Double
 00649C10    fcomp       dword ptr ds:[64B168];1000:Single
 00649C16    wait
 00649C17    fnstsw      al
 00649C19    sahf
>00649C1A    jbe         00649C29
 00649C1C    fld         qword ptr [ebp-38]
 00649C1F    fdiv        dword ptr ds:[64B16C];150:Single
 00649C25    fstp        qword ptr [ebp-38]
 00649C28    wait
 00649C29    push        dword ptr [ebp-34]
 00649C2C    push        dword ptr [ebp-38]
 00649C2F    mov         eax,dword ptr [esi+3F8];TAccelerometerObject.ShakeAverager:TAverager
 00649C35    call        TAverager.Update
 00649C3A    xor         ebx,ebx
 00649C3C    fld         qword ptr [esi+318];TAccelerometerObject.RawForcePerGX:Double
 00649C42    fcomp       dword ptr ds:[64B170];0:Single
 00649C48    wait
 00649C49    fnstsw      al
 00649C4B    sahf
>00649C4C    je          00649C64
 00649C4E    fld         qword ptr [ebp+20]
 00649C51    fsub        qword ptr [esi+300];TAccelerometerObject.RawZeroForceX:Double
 00649C57    fdiv        qword ptr [esi+318];TAccelerometerObject.RawForcePerGX:Double
 00649C5D    fstp        qword ptr [esi+338];TAccelerometerObject.gx:Double
 00649C63    wait
 00649C64    fld         qword ptr [esi+320];TAccelerometerObject.RawForcePerGY:Double
 00649C6A    fcomp       dword ptr ds:[64B170];0:Single
 00649C70    wait
 00649C71    fnstsw      al
 00649C73    sahf
>00649C74    je          00649C8C
 00649C76    fld         qword ptr [ebp+18]
 00649C79    fsub        qword ptr [esi+308];TAccelerometerObject.RawZeroForceY:Double
 00649C7F    fdiv        qword ptr [esi+320];TAccelerometerObject.RawForcePerGY:Double
 00649C85    fstp        qword ptr [esi+340];TAccelerometerObject.gy:Double
 00649C8B    wait
 00649C8C    fld         qword ptr [esi+328];TAccelerometerObject.RawForcePerGZ:Double
 00649C92    fcomp       dword ptr ds:[64B170];0:Single
 00649C98    wait
 00649C99    fnstsw      al
 00649C9B    sahf
>00649C9C    je          00649CB4
 00649C9E    fld         qword ptr [ebp+10]
 00649CA1    fsub        qword ptr [esi+310];TAccelerometerObject.RawZeroForceZ:Double
 00649CA7    fdiv        qword ptr [esi+328];TAccelerometerObject.RawForcePerGZ:Double
 00649CAD    fstp        qword ptr [esi+348];TAccelerometerObject.gz:Double
 00649CB3    wait
 00649CB4    fld         qword ptr [esi+338];TAccelerometerObject.gx:Double
 00649CBA    fmul        st,st(0)
 00649CBC    fstp        tbyte ptr [ebp-0EC]
 00649CC2    wait
 00649CC3    fld         qword ptr [esi+340];TAccelerometerObject.gy:Double
 00649CC9    fmul        st,st(0)
 00649CCB    fld         tbyte ptr [ebp-0EC]
 00649CD1    faddp       st(1),st
 00649CD3    fstp        tbyte ptr [ebp-0F8]
 00649CD9    wait
 00649CDA    fld         qword ptr [esi+348];TAccelerometerObject.gz:Double
 00649CE0    fmul        st,st(0)
 00649CE2    fld         tbyte ptr [ebp-0F8]
 00649CE8    faddp       st(1),st
 00649CEA    add         esp,0FFFFFFF4
 00649CED    fstp        tbyte ptr [esp]
 00649CF0    wait
 00649CF1    call        Sqrt
 00649CF6    fstp        qword ptr [esi+330];TAccelerometerObject.lng:Double
 00649CFC    wait
 00649CFD    cmp         byte ptr [esi+148],0;TAccelerometerObject.HasGyros:Boolean
>00649D04    je          00649D21
 00649D06    mov         eax,dword ptr [esi+3F8];TAccelerometerObject.ShakeAverager:TAverager
 00649D0C    call        TAverager.GetShortAverage
 00649D11    fcomp       dword ptr ds:[64B174];1.5:Single
 00649D17    wait
 00649D18    fnstsw      al
 00649D1A    sahf
>00649D1B    jbe         00649D21
 00649D1D    mov         dl,1
>00649D1F    jmp         00649D23
 00649D21    xor         edx,edx
 00649D23    test        dl,dl
>00649D25    jne         00649FCE
 00649D2B    fld         dword ptr ds:[64B178];1:Single
 00649D31    fsub        qword ptr [esi+2D8];TAccelerometerObject.tolerance:Double
 00649D37    fcomp       qword ptr [esi+330];TAccelerometerObject.lng:Double
 00649D3D    wait
 00649D3E    fnstsw      al
 00649D40    sahf
>00649D41    ja          00649FCE
 00649D47    fld         dword ptr ds:[64B178];1:Single
 00649D4D    fadd        qword ptr [esi+2D8];TAccelerometerObject.tolerance:Double
 00649D53    fcomp       qword ptr [esi+330];TAccelerometerObject.lng:Double
 00649D59    wait
 00649D5A    fnstsw      al
 00649D5C    sahf
>00649D5D    jb          00649FCE
 00649D63    mov         byte ptr [esi+90],0;TAccelerometerObject.TrackingState:TTrackingState
 00649D6A    fld         qword ptr [esi+338];TAccelerometerObject.gx:Double
 00649D70    fdiv        qword ptr [esi+330];TAccelerometerObject.lng:Double
 00649D76    fstp        qword ptr [ebp-60]
 00649D79    wait
 00649D7A    fld         qword ptr [esi+340];TAccelerometerObject.gy:Double
 00649D80    fdiv        qword ptr [esi+330];TAccelerometerObject.lng:Double
 00649D86    fstp        qword ptr [ebp-68]
 00649D89    wait
 00649D8A    fld         qword ptr [esi+348];TAccelerometerObject.gz:Double
 00649D90    fdiv        qword ptr [esi+330];TAccelerometerObject.lng:Double
 00649D96    fstp        qword ptr [ebp-70]
 00649D99    wait
 00649D9A    mov         eax,dword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 00649DA0    mov         dword ptr [ebp-8],eax
 00649DA3    mov         eax,dword ptr [esi+3BC];TAccelerometerObject.?f3BC:dword
 00649DA9    mov         dword ptr [ebp-4],eax
 00649DAC    push        dword ptr [ebp-5C]
 00649DAF    push        dword ptr [ebp-60]
 00649DB2    push        dword ptr [ebp-64]
 00649DB5    push        dword ptr [ebp-68]
 00649DB8    call        00454A9C
 00649DBD    fstp        qword ptr [ebp-78]
 00649DC0    wait
 00649DC1    fld         tbyte ptr ds:[64B17C];57.2957795130823:Extended
 00649DC7    fmul        qword ptr [ebp-78]
 00649DCA    fstp        qword ptr [ebp-80]
 00649DCD    wait
 00649DCE    fld         qword ptr [ebp-80]
 00649DD1    fchs
 00649DD3    fstp        qword ptr [ebp-50]
 00649DD6    wait
 00649DD7    fld         qword ptr [ebp-8]
 00649DDA    fcomp       dword ptr ds:[64B170];0:Single
 00649DE0    wait
 00649DE1    fnstsw      al
 00649DE3    sahf
>00649DE4    jne         00649DF2
 00649DE6    mov         eax,dword ptr [ebp-50]
 00649DE9    mov         dword ptr [ebp-8],eax
 00649DEC    mov         eax,dword ptr [ebp-4C]
 00649DEF    mov         dword ptr [ebp-4],eax
 00649DF2    fld         qword ptr [ebp-50]
 00649DF5    fsub        qword ptr [ebp-8]
 00649DF8    fstp        qword ptr [ebp-40]
 00649DFB    wait
 00649DFC    fld         qword ptr [ebp-40]
 00649DFF    fcomp       dword ptr ds:[64B188];180:Single
 00649E05    wait
 00649E06    fnstsw      al
 00649E08    sahf
>00649E09    jbe         00649E18
 00649E0B    fld         qword ptr [ebp-40]
 00649E0E    fsub        dword ptr ds:[64B18C];360:Single
 00649E14    fstp        qword ptr [ebp-40]
 00649E17    wait
 00649E18    fld         qword ptr [ebp-40]
 00649E1B    fcomp       dword ptr ds:[64B190];-180:Single
 00649E21    wait
 00649E22    fnstsw      al
 00649E24    sahf
>00649E25    ja          00649E34
 00649E27    fld         qword ptr [ebp-40]
 00649E2A    fadd        dword ptr ds:[64B18C];360:Single
 00649E30    fstp        qword ptr [ebp-40]
 00649E33    wait
 00649E34    fld         qword ptr [ebp-40]
 00649E37    fabs
 00649E39    fstp        qword ptr [ebp-40]
 00649E3C    wait
 00649E3D    fld         qword ptr [ebp-40]
 00649E40    fcomp       dword ptr ds:[64B194];90:Single
 00649E46    wait
 00649E47    fnstsw      al
 00649E49    sahf
>00649E4A    jbe         00649E6B
 00649E4C    mov         eax,dword ptr [esi+3F8];TAccelerometerObject.ShakeAverager:TAverager
 00649E52    call        TAverager.GetShortAverage
 00649E57    fcomp       dword ptr ds:[64B198];3.5:Single
 00649E5D    wait
 00649E5E    fnstsw      al
 00649E60    sahf
>00649E61    jae         00649E6B
 00649E63    xor         eax,eax
 00649E65    mov         dword ptr [ebp-40],eax
 00649E68    mov         dword ptr [ebp-3C],eax
 00649E6B    push        dword ptr [ebp-6C]
 00649E6E    push        dword ptr [ebp-70]
 00649E71    call        00454A5C
 00649E76    fstp        qword ptr [ebp-88]
 00649E7C    wait
 00649E7D    fld         tbyte ptr ds:[64B17C];57.2957795130823:Extended
 00649E83    fmul        qword ptr [ebp-88]
 00649E89    fstp        qword ptr [ebp-90]
 00649E8F    wait
 00649E90    mov         eax,dword ptr [ebp-90]
 00649E96    mov         dword ptr [ebp-58],eax
 00649E99    mov         eax,dword ptr [ebp-8C]
 00649E9F    mov         dword ptr [ebp-54],eax
 00649EA2    mov         eax,dword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 00649EA8    mov         dword ptr [ebp-10],eax
 00649EAB    mov         eax,dword ptr [esi+3C4];TAccelerometerObject.?f3C4:dword
 00649EB1    mov         dword ptr [ebp-0C],eax
 00649EB4    fld         qword ptr [ebp-10]
 00649EB7    fcomp       dword ptr ds:[64B170];0:Single
 00649EBD    wait
 00649EBE    fnstsw      al
 00649EC0    sahf
>00649EC1    jne         00649ECF
 00649EC3    mov         eax,dword ptr [ebp-58]
 00649EC6    mov         dword ptr [ebp-10],eax
 00649EC9    mov         eax,dword ptr [ebp-54]
 00649ECC    mov         dword ptr [ebp-0C],eax
 00649ECF    fld         qword ptr [ebp-58]
 00649ED2    fsub        qword ptr [ebp-10]
 00649ED5    fstp        qword ptr [ebp-48]
 00649ED8    wait
 00649ED9    fld         qword ptr [ebp-48]
 00649EDC    fcomp       dword ptr ds:[64B188];180:Single
 00649EE2    wait
 00649EE3    fnstsw      al
 00649EE5    sahf
>00649EE6    jbe         00649EF5
 00649EE8    fld         qword ptr [ebp-48]
 00649EEB    fsub        dword ptr ds:[64B18C];360:Single
 00649EF1    fstp        qword ptr [ebp-48]
 00649EF4    wait
 00649EF5    fld         qword ptr [ebp-48]
 00649EF8    fcomp       dword ptr ds:[64B190];-180:Single
 00649EFE    wait
 00649EFF    fnstsw      al
 00649F01    sahf
>00649F02    ja          00649F11
 00649F04    fld         qword ptr [ebp-48]
 00649F07    fadd        dword ptr ds:[64B18C];360:Single
 00649F0D    fstp        qword ptr [ebp-48]
 00649F10    wait
 00649F11    fld         qword ptr [ebp-48]
 00649F14    fabs
 00649F16    fstp        qword ptr [ebp-48]
 00649F19    wait
 00649F1A    fld         qword ptr [ebp-48]
 00649F1D    fcomp       dword ptr ds:[64B194];90:Single
 00649F23    wait
 00649F24    fnstsw      al
 00649F26    sahf
>00649F27    jbe         00649F48
 00649F29    mov         eax,dword ptr [esi+3F8];TAccelerometerObject.ShakeAverager:TAverager
 00649F2F    call        TAverager.GetShortAverage
 00649F34    fcomp       dword ptr ds:[64B198];3.5:Single
 00649F3A    wait
 00649F3B    fnstsw      al
 00649F3D    sahf
>00649F3E    jae         00649F48
 00649F40    xor         eax,eax
 00649F42    mov         dword ptr [ebp-48],eax
 00649F45    mov         dword ptr [ebp-44],eax
 00649F48    fld         qword ptr [ebp-40]
 00649F4B    fcomp       dword ptr ds:[64B194];90:Single
 00649F51    wait
 00649F52    fnstsw      al
 00649F54    sahf
>00649F55    jae         00649FC2
 00649F57    fld         qword ptr [ebp-48]
 00649F5A    fcomp       dword ptr ds:[64B194];90:Single
 00649F60    wait
 00649F61    fnstsw      al
 00649F63    sahf
>00649F64    jae         00649FC2
 00649F66    mov         bl,1
 00649F68    mov         eax,dword ptr [ebp-58]
 00649F6B    mov         dword ptr [esi+3C0],eax;TAccelerometerObject.Pitch:Double
 00649F71    mov         eax,dword ptr [ebp-54]
 00649F74    mov         dword ptr [esi+3C4],eax;TAccelerometerObject.?f3C4:dword
 00649F7A    mov         eax,dword ptr [ebp-50]
 00649F7D    mov         dword ptr [esi+3B8],eax;TAccelerometerObject.Roll:Double
 00649F83    mov         eax,dword ptr [ebp-4C]
 00649F86    mov         dword ptr [esi+3BC],eax;TAccelerometerObject.?f3BC:dword
 00649F8C    mov         eax,dword ptr [ebp-60]
 00649F8F    mov         dword ptr [esi+350],eax;TAccelerometerObject.UpX:Double
 00649F95    mov         eax,dword ptr [ebp-5C]
 00649F98    mov         dword ptr [esi+354],eax;TAccelerometerObject.?f354:TRotMat
 00649F9E    mov         eax,dword ptr [ebp-68]
 00649FA1    mov         dword ptr [esi+358],eax;TAccelerometerObject.UpY:Double
 00649FA7    mov         eax,dword ptr [ebp-64]
 00649FAA    mov         dword ptr [esi+35C],eax;TAccelerometerObject.?f35C:TRotMat
 00649FB0    mov         eax,dword ptr [ebp-70]
 00649FB3    mov         dword ptr [esi+360],eax;TAccelerometerObject.UpZ:Double
 00649FB9    mov         eax,dword ptr [ebp-6C]
 00649FBC    mov         dword ptr [esi+364],eax;TAccelerometerObject.?f364:TRotMat
 00649FC2    mov         byte ptr [esi+418],1;TAccelerometerObject.fresh:Boolean
>00649FC9    jmp         0064A1CF
 00649FCE    fld         tbyte ptr ds:[64B19C];1.15:Extended
 00649FD4    fcomp       qword ptr [esi+330];TAccelerometerObject.lng:Double
 00649FDA    wait
 00649FDB    fnstsw      al
 00649FDD    sahf
>00649FDE    jb          0064A11E
 00649FE4    fld         tbyte ptr ds:[64B1A8];0.85:Extended
 00649FEA    fcomp       qword ptr [esi+330];TAccelerometerObject.lng:Double
 00649FF0    wait
 00649FF1    fnstsw      al
 00649FF3    sahf
>00649FF4    ja          0064A11E
 00649FFA    fld         qword ptr [ebp-38]
 00649FFD    fcomp       dword ptr ds:[64B1B4];1.25:Single
 0064A003    wait
 0064A004    fnstsw      al
 0064A006    sahf
>0064A007    ja          0064A11E
 0064A00D    mov         eax,dword ptr [esi+3F8];TAccelerometerObject.ShakeAverager:TAverager
 0064A013    call        TAverager.GetShortAverage
 0064A018    fld         tbyte ptr ds:[64B1B8];0.4:Extended
 0064A01E    fcompp
 0064A020    wait
 0064A021    fnstsw      al
 0064A023    sahf
>0064A024    jb          0064A11E
 0064A02A    mov         eax,dword ptr [esi+3F8];TAccelerometerObject.ShakeAverager:TAverager
 0064A030    call        TAverager.GetAverage
 0064A035    fld         tbyte ptr ds:[64B1C4];0.8:Extended
 0064A03B    fcompp
 0064A03D    wait
 0064A03E    fnstsw      al
 0064A040    sahf
>0064A041    jb          0064A11E
 0064A047    mov         byte ptr [esi+90],1;TAccelerometerObject.TrackingState:TTrackingState
 0064A04E    mov         bl,1
 0064A050    fld         qword ptr [esi+338];TAccelerometerObject.gx:Double
 0064A056    fdiv        qword ptr [esi+330];TAccelerometerObject.lng:Double
 0064A05C    fstp        qword ptr [esi+350];TAccelerometerObject.UpX:Double
 0064A062    wait
 0064A063    fld         qword ptr [esi+340];TAccelerometerObject.gy:Double
 0064A069    fdiv        qword ptr [esi+330];TAccelerometerObject.lng:Double
 0064A06F    fstp        qword ptr [esi+358];TAccelerometerObject.UpY:Double
 0064A075    wait
 0064A076    fld         qword ptr [esi+348];TAccelerometerObject.gz:Double
 0064A07C    fdiv        qword ptr [esi+330];TAccelerometerObject.lng:Double
 0064A082    fstp        qword ptr [esi+360];TAccelerometerObject.UpZ:Double
 0064A088    wait
 0064A089    push        dword ptr [esi+354];TAccelerometerObject.?f354:TRotMat
 0064A08F    push        dword ptr [esi+350];TAccelerometerObject.UpX:Double
 0064A095    push        dword ptr [esi+35C];TAccelerometerObject.?f35C:TRotMat
 0064A09B    push        dword ptr [esi+358];TAccelerometerObject.UpY:Double
 0064A0A1    call        00454A9C
 0064A0A6    fstp        qword ptr [ebp-98]
 0064A0AC    wait
 0064A0AD    fld         tbyte ptr ds:[64B17C];57.2957795130823:Extended
 0064A0B3    fmul        qword ptr [ebp-98]
 0064A0B9    fstp        qword ptr [ebp-0A0]
 0064A0BF    wait
 0064A0C0    fld         qword ptr [ebp-0A0]
 0064A0C6    fchs
 0064A0C8    fstp        qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A0CE    wait
 0064A0CF    push        dword ptr [esi+364];TAccelerometerObject.?f364:TRotMat
 0064A0D5    push        dword ptr [esi+360];TAccelerometerObject.UpZ:Double
 0064A0DB    call        00454A5C
 0064A0E0    fstp        qword ptr [ebp-0A8]
 0064A0E6    wait
 0064A0E7    fld         tbyte ptr ds:[64B17C];57.2957795130823:Extended
 0064A0ED    fmul        qword ptr [ebp-0A8]
 0064A0F3    fstp        qword ptr [ebp-0B0]
 0064A0F9    wait
 0064A0FA    mov         eax,dword ptr [ebp-0B0]
 0064A100    mov         dword ptr [esi+3C0],eax;TAccelerometerObject.Pitch:Double
 0064A106    mov         eax,dword ptr [ebp-0AC]
 0064A10C    mov         dword ptr [esi+3C4],eax;TAccelerometerObject.?f3C4:dword
 0064A112    mov         byte ptr [esi+418],1;TAccelerometerObject.fresh:Boolean
>0064A119    jmp         0064A1CF
 0064A11E    mov         byte ptr [esi+90],2;TAccelerometerObject.TrackingState:TTrackingState
 0064A125    cmp         byte ptr [esi+148],0;TAccelerometerObject.HasGyros:Boolean
>0064A12C    je          0064A1BF
 0064A132    push        esi
 0064A133    lea         edi,[esi+370];TAccelerometerObject.RotMat:TRotMat
 0064A139    add         esi,1D0;TAccelerometerObject.GyroRotMat:TRotMat
 0064A13F    mov         ecx,12
 0064A144    rep movs    dword ptr [edi],dword ptr [esi]
 0064A146    pop         esi
 0064A147    mov         eax,dword ptr [esi+220];TAccelerometerObject.GyroPitch:Double
 0064A14D    mov         dword ptr [esi+3C0],eax;TAccelerometerObject.Pitch:Double
 0064A153    mov         eax,dword ptr [esi+224];TAccelerometerObject.?f224:dword
 0064A159    mov         dword ptr [esi+3C4],eax;TAccelerometerObject.?f3C4:dword
 0064A15F    mov         eax,dword ptr [esi+228];TAccelerometerObject.GyroRoll:Double
 0064A165    mov         dword ptr [esi+3B8],eax;TAccelerometerObject.Roll:Double
 0064A16B    mov         eax,dword ptr [esi+22C];TAccelerometerObject.?f22C:dword
 0064A171    mov         dword ptr [esi+3BC],eax;TAccelerometerObject.?f3BC:dword
 0064A177    mov         eax,dword ptr [esi+1D8];TAccelerometerObject.GyroRotMat:TRotMat
 0064A17D    mov         dword ptr [esi+350],eax;TAccelerometerObject.UpX:Double
 0064A183    mov         eax,dword ptr [esi+1DC];TAccelerometerObject.GyroRotMat:TRotMat
 0064A189    mov         dword ptr [esi+354],eax;TAccelerometerObject.?f354:TRotMat
 0064A18F    mov         eax,dword ptr [esi+1F0];TAccelerometerObject.GyroRotMat:TRotMat
 0064A195    mov         dword ptr [esi+358],eax;TAccelerometerObject.UpY:Double
 0064A19B    mov         eax,dword ptr [esi+1F4];TAccelerometerObject.GyroRotMat:TRotMat
 0064A1A1    mov         dword ptr [esi+35C],eax;TAccelerometerObject.?f35C:TRotMat
 0064A1A7    mov         eax,dword ptr [esi+208];TAccelerometerObject.GyroRotMat:TRotMat
 0064A1AD    mov         dword ptr [esi+360],eax;TAccelerometerObject.UpZ:Double
 0064A1B3    mov         eax,dword ptr [esi+20C];TAccelerometerObject.GyroRotMat:TRotMat
 0064A1B9    mov         dword ptr [esi+364],eax;TAccelerometerObject.?f364:TRotMat
 0064A1BF    cmp         byte ptr [esi+418],0;TAccelerometerObject.fresh:Boolean
>0064A1C6    je          0064A1CF
 0064A1C8    mov         byte ptr [esi+418],0;TAccelerometerObject.fresh:Boolean
 0064A1CF    test        bl,bl
>0064A1D1    je          0064A28B
 0064A1D7    cmp         byte ptr [esi+148],0;TAccelerometerObject.HasGyros:Boolean
>0064A1DE    je          0064A28B
 0064A1E4    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A1EA    fabs
 0064A1EC    fcomp       dword ptr ds:[64B1D0];70:Single
 0064A1F2    wait
 0064A1F3    fnstsw      al
 0064A1F5    sahf
>0064A1F6    jbe         0064A28B
 0064A1FC    push        esi
 0064A1FD    lea         edi,[esi+370];TAccelerometerObject.RotMat:TRotMat
 0064A203    add         esi,1D0;TAccelerometerObject.GyroRotMat:TRotMat
 0064A209    mov         ecx,12
 0064A20E    rep movs    dword ptr [edi],dword ptr [esi]
 0064A210    pop         esi
 0064A211    mov         eax,dword ptr [esi+220];TAccelerometerObject.GyroPitch:Double
 0064A217    mov         dword ptr [esi+3C0],eax;TAccelerometerObject.Pitch:Double
 0064A21D    mov         eax,dword ptr [esi+224];TAccelerometerObject.?f224:dword
 0064A223    mov         dword ptr [esi+3C4],eax;TAccelerometerObject.?f3C4:dword
 0064A229    mov         eax,dword ptr [esi+228];TAccelerometerObject.GyroRoll:Double
 0064A22F    mov         dword ptr [esi+3B8],eax;TAccelerometerObject.Roll:Double
 0064A235    mov         eax,dword ptr [esi+22C];TAccelerometerObject.?f22C:dword
 0064A23B    mov         dword ptr [esi+3BC],eax;TAccelerometerObject.?f3BC:dword
 0064A241    mov         eax,dword ptr [esi+1D8];TAccelerometerObject.GyroRotMat:TRotMat
 0064A247    mov         dword ptr [esi+350],eax;TAccelerometerObject.UpX:Double
 0064A24D    mov         eax,dword ptr [esi+1DC];TAccelerometerObject.GyroRotMat:TRotMat
 0064A253    mov         dword ptr [esi+354],eax;TAccelerometerObject.?f354:TRotMat
 0064A259    mov         eax,dword ptr [esi+1F0];TAccelerometerObject.GyroRotMat:TRotMat
 0064A25F    mov         dword ptr [esi+358],eax;TAccelerometerObject.UpY:Double
 0064A265    mov         eax,dword ptr [esi+1F4];TAccelerometerObject.GyroRotMat:TRotMat
 0064A26B    mov         dword ptr [esi+35C],eax;TAccelerometerObject.?f35C:TRotMat
 0064A271    mov         eax,dword ptr [esi+208];TAccelerometerObject.GyroRotMat:TRotMat
 0064A277    mov         dword ptr [esi+360],eax;TAccelerometerObject.UpZ:Double
 0064A27D    mov         eax,dword ptr [esi+20C];TAccelerometerObject.GyroRotMat:TRotMat
 0064A283    mov         dword ptr [esi+364],eax;TAccelerometerObject.?f364:TRotMat
 0064A289    xor         ebx,ebx
 0064A28B    test        bl,bl
 0064A28D    push        dword ptr [esi+3CC];TAccelerometerObject.?f3CC:dword
 0064A293    push        dword ptr [esi+3C8];TAccelerometerObject.Yaw:Double
 0064A299    push        dword ptr [esi+3C4];TAccelerometerObject.?f3C4:dword
 0064A29F    push        dword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A2A5    push        dword ptr [esi+3BC];TAccelerometerObject.?f3BC:dword
 0064A2AB    push        dword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A2B1    lea         eax,[esi+370];TAccelerometerObject.RotMat:TRotMat
 0064A2B7    call        005C361C
 0064A2BC    fld         qword ptr [esi+330];TAccelerometerObject.lng:Double
 0064A2C2    fcomp       dword ptr ds:[64B170];0:Single
 0064A2C8    wait
 0064A2C9    fnstsw      al
 0064A2CB    sahf
>0064A2CC    je          0064A3ED
 0064A2D2    push        dword ptr [esi+33C];TAccelerometerObject.?f33C:dword
 0064A2D8    push        dword ptr [esi+338];TAccelerometerObject.gx:Double
 0064A2DE    push        dword ptr [esi+344];TAccelerometerObject.?f344:dword
 0064A2E4    push        dword ptr [esi+340];TAccelerometerObject.gy:Double
 0064A2EA    call        00454A9C
 0064A2EF    fstp        qword ptr [ebp-0B8]
 0064A2F5    wait
 0064A2F6    fld         tbyte ptr ds:[64B17C];57.2957795130823:Extended
 0064A2FC    fmul        qword ptr [ebp-0B8]
 0064A302    fstp        qword ptr [ebp-0C0]
 0064A308    wait
 0064A309    fld         qword ptr [ebp-0C0]
 0064A30F    fchs
 0064A311    fstp        qword ptr [esi+3D0];TAccelerometerObject.SmoothRoll:Double
 0064A317    wait
 0064A318    fld         qword ptr [esi+348];TAccelerometerObject.gz:Double
 0064A31E    fdiv        qword ptr [esi+330];TAccelerometerObject.lng:Double
 0064A324    add         esp,0FFFFFFF4
 0064A327    fstp        tbyte ptr [esp]
 0064A32A    wait
 0064A32B    call        00454A44
 0064A330    fstp        tbyte ptr [ebp-0D0]
 0064A336    wait
 0064A337    fld         tbyte ptr [ebp-0D0]
 0064A33D    fld         tbyte ptr ds:[64B17C];57.2957795130823:Extended
 0064A343    fmulp       st(1),st
 0064A345    fstp        tbyte ptr [ebp-0E0]
 0064A34B    wait
 0064A34C    fld         tbyte ptr [ebp-0E0]
 0064A352    fstp        qword ptr [esi+3D8];TAccelerometerObject.SmoothPitch:Double
 0064A358    wait
 0064A359    mov         eax,dword ptr [esi+3E0];TAccelerometerObject.SteeringAngle:Double
 0064A35F    mov         dword ptr [ebp-18],eax
 0064A362    mov         eax,dword ptr [esi+3E4];TAccelerometerObject.?f3E4:dword
 0064A368    mov         dword ptr [ebp-14],eax
 0064A36B    mov         eax,esi
 0064A36D    mov         edx,dword ptr [eax]
 0064A36F    call        dword ptr [edx+4];TAccelerometerObject.UpdateSteering
 0064A372    fld         qword ptr [esi+3E0];TAccelerometerObject.SteeringAngle:Double
 0064A378    fsub        qword ptr [ebp-18]
 0064A37B    fabs
 0064A37D    fcomp       dword ptr ds:[64B188];180:Single
 0064A383    wait
 0064A384    fnstsw      al
 0064A386    sahf
>0064A387    jbe         0064A3ED
 0064A389    fld         qword ptr [ebp-18]
 0064A38C    fcomp       dword ptr ds:[64B170];0:Single
 0064A392    wait
 0064A393    fnstsw      al
 0064A395    sahf
>0064A396    jb          0064A3BC
 0064A398    fld         qword ptr [ebp-18]
 0064A39B    fcomp       dword ptr ds:[64B18C];360:Single
 0064A3A1    wait
 0064A3A2    fnstsw      al
 0064A3A4    sahf
>0064A3A5    ja          0064A3BC
 0064A3A7    fld         qword ptr [esi+3E0];TAccelerometerObject.SteeringAngle:Double
 0064A3AD    fadd        dword ptr ds:[64B18C];360:Single
 0064A3B3    fstp        qword ptr [esi+3E0];TAccelerometerObject.SteeringAngle:Double
 0064A3B9    wait
>0064A3BA    jmp         0064A3ED
 0064A3BC    fld         qword ptr [ebp-18]
 0064A3BF    fcomp       dword ptr ds:[64B170];0:Single
 0064A3C5    wait
 0064A3C6    fnstsw      al
 0064A3C8    sahf
>0064A3C9    jae         0064A3ED
 0064A3CB    fld         qword ptr [ebp-18]
 0064A3CE    fcomp       dword ptr ds:[64B1D4];-360:Single
 0064A3D4    wait
 0064A3D5    fnstsw      al
 0064A3D7    sahf
>0064A3D8    jb          0064A3ED
 0064A3DA    fld         qword ptr [esi+3E0];TAccelerometerObject.SteeringAngle:Double
 0064A3E0    fsub        dword ptr ds:[64B18C];360:Single
 0064A3E6    fstp        qword ptr [esi+3E0];TAccelerometerObject.SteeringAngle:Double
 0064A3EC    wait
 0064A3ED    mov         eax,esi
 0064A3EF    call        TAccelerometerObject.RawAccX
 0064A3F4    add         esp,0FFFFFFF8
 0064A3F7    fstp        qword ptr [esp]
 0064A3FA    wait
 0064A3FB    mov         eax,dword ptr [esi+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064A401    call        TAverager.Update
 0064A406    mov         eax,esi
 0064A408    call        TAccelerometerObject.RawAccY
 0064A40D    add         esp,0FFFFFFF8
 0064A410    fstp        qword ptr [esp]
 0064A413    wait
 0064A414    mov         eax,dword ptr [esi+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064A41A    call        TAverager.Update
 0064A41F    mov         eax,esi
 0064A421    call        TAccelerometerObject.RawAccZ
 0064A426    add         esp,0FFFFFFF8
 0064A429    fstp        qword ptr [esp]
 0064A42C    wait
 0064A42D    mov         eax,dword ptr [esi+404];TAccelerometerObject.RawAccZAverager:TAverager
 0064A433    call        TAverager.Update
 0064A438    mov         eax,esi
 0064A43A    call        TAccelerometerObject.RelAccX
 0064A43F    add         esp,0FFFFFFF8
 0064A442    fstp        qword ptr [esp]
 0064A445    wait
 0064A446    mov         eax,dword ptr [esi+40C];TAccelerometerObject.RelAccXAverager:TAverager
 0064A44C    call        TAverager.Update
 0064A451    mov         eax,esi
 0064A453    call        TAccelerometerObject.RelAccY
 0064A458    add         esp,0FFFFFFF8
 0064A45B    fstp        qword ptr [esp]
 0064A45E    wait
 0064A45F    mov         eax,dword ptr [esi+410];TAccelerometerObject.RelAccYAverager:TAverager
 0064A465    call        TAverager.Update
 0064A46A    mov         eax,esi
 0064A46C    call        TAccelerometerObject.RelAccZ
 0064A471    add         esp,0FFFFFFF8
 0064A474    fstp        qword ptr [esp]
 0064A477    wait
 0064A478    mov         eax,dword ptr [esi+414];TAccelerometerObject.RelAccZAverager:TAverager
 0064A47E    call        TAverager.Update
 0064A483    mov         eax,esi
 0064A485    call        TAccelerometerObject.RelAcc
 0064A48A    add         esp,0FFFFFFF8
 0064A48D    fstp        qword ptr [esp]
 0064A490    wait
 0064A491    mov         eax,dword ptr [esi+408];TAccelerometerObject.RelAccAverager:TAverager
 0064A497    call        TAverager.Update
 0064A49C    mov         edx,10
 0064A4A1    mov         eax,dword ptr [esi+408];TAccelerometerObject.RelAccAverager:TAverager
 0064A4A7    call        TAverager.GetAvg
 0064A4AC    fcomp       dword ptr ds:[64B1D8];3:Single
 0064A4B2    wait
 0064A4B3    fnstsw      al
 0064A4B5    sahf
>0064A4B6    jb          0064A4CC
 0064A4B8    xor         eax,eax
 0064A4BA    mov         dword ptr [esi+3F0],eax;TAccelerometerObject.LowRelAccTime:Double
 0064A4C0    mov         dword ptr [esi+3F4],7FF00000;TAccelerometerObject.?f3F4:dword
>0064A4CA    jmp         0064A4F0
 0064A4CC    fld         qword ptr [esi+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064A4D2    fcomp       dword ptr ds:[64B1DC];INF:Single
 0064A4D8    wait
 0064A4D9    fnstsw      al
 0064A4DB    sahf
>0064A4DC    jne         0064A4F0
 0064A4DE    mov         eax,dword ptr [ebp+8]
 0064A4E1    mov         dword ptr [esi+3F0],eax;TAccelerometerObject.LowRelAccTime:Double
 0064A4E7    mov         eax,dword ptr [ebp+0C]
 0064A4EA    mov         dword ptr [esi+3F4],eax;TAccelerometerObject.?f3F4:dword
 0064A4F0    push        dword ptr [ebp+0C]
 0064A4F3    push        dword ptr [ebp+8]
 0064A4F6    mov         eax,esi
 0064A4F8    call        TAccelerometerObject.UpdateGestureStates
 0064A4FD    cmp         byte ptr [esi+419],0;TAccelerometerObject.UpThenUpsideDown:Boolean
>0064A504    jne         0064A699
 0064A50A    cmp         byte ptr [esi+41A],0;TAccelerometerObject.DownThenUpsideDown:Boolean
>0064A511    jne         0064A699
 0064A517    cmp         byte ptr [esi+41B],0;TAccelerometerObject.LeftThenUpsideDown:Boolean
>0064A51E    jne         0064A699
 0064A524    cmp         byte ptr [esi+41C],0;TAccelerometerObject.RightThenUpsideDown:Boolean
>0064A52B    jne         0064A699
 0064A531    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A537    fcomp       dword ptr ds:[64B1E0];55:Single
 0064A53D    wait
 0064A53E    fnstsw      al
 0064A540    sahf
>0064A541    jae         0064A555
 0064A543    fld         qword ptr [esi+3D8];TAccelerometerObject.SmoothPitch:Double
 0064A549    fcomp       dword ptr ds:[64B1E0];55:Single
 0064A54F    wait
 0064A550    fnstsw      al
 0064A552    sahf
>0064A553    jbe         0064A561
 0064A555    mov         byte ptr [esi+419],1;TAccelerometerObject.UpThenUpsideDown:Boolean
>0064A55C    jmp         0064A7EE
 0064A561    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A567    fcomp       dword ptr ds:[64B1E4];-55:Single
 0064A56D    wait
 0064A56E    fnstsw      al
 0064A570    sahf
>0064A571    jbe         0064A585
 0064A573    fld         qword ptr [esi+3D8];TAccelerometerObject.SmoothPitch:Double
 0064A579    fcomp       dword ptr ds:[64B1E8];-60:Single
 0064A57F    wait
 0064A580    fnstsw      al
 0064A582    sahf
>0064A583    jae         0064A591
 0064A585    mov         byte ptr [esi+41A],1;TAccelerometerObject.DownThenUpsideDown:Boolean
>0064A58C    jmp         0064A7EE
 0064A591    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A597    fcomp       dword ptr ds:[64B1EC];-80:Single
 0064A59D    wait
 0064A59E    fnstsw      al
 0064A5A0    sahf
>0064A5A1    ja          0064A5B5
 0064A5A3    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A5A9    fcomp       dword ptr ds:[64B1F0];-120:Single
 0064A5AF    wait
 0064A5B0    fnstsw      al
 0064A5B2    sahf
>0064A5B3    jae         0064A5D9
 0064A5B5    fld         qword ptr [esi+3D0];TAccelerometerObject.SmoothRoll:Double
 0064A5BB    fcomp       dword ptr ds:[64B1EC];-80:Single
 0064A5C1    wait
 0064A5C2    fnstsw      al
 0064A5C4    sahf
>0064A5C5    ja          0064A60D
 0064A5C7    fld         qword ptr [esi+3D0];TAccelerometerObject.SmoothRoll:Double
 0064A5CD    fcomp       dword ptr ds:[64B1F4];-100:Single
 0064A5D3    wait
 0064A5D4    fnstsw      al
 0064A5D6    sahf
>0064A5D7    jb          0064A60D
 0064A5D9    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A5DF    fabs
 0064A5E1    fcomp       dword ptr ds:[64B1F8];60:Single
 0064A5E7    wait
 0064A5E8    fnstsw      al
 0064A5EA    sahf
>0064A5EB    jae         0064A60D
 0064A5ED    fld         qword ptr [esi+3D8];TAccelerometerObject.SmoothPitch:Double
 0064A5F3    fabs
 0064A5F5    fcomp       dword ptr ds:[64B1F8];60:Single
 0064A5FB    wait
 0064A5FC    fnstsw      al
 0064A5FE    sahf
>0064A5FF    jae         0064A60D
 0064A601    mov         byte ptr [esi+41B],1;TAccelerometerObject.LeftThenUpsideDown:Boolean
>0064A608    jmp         0064A7EE
 0064A60D    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A613    fcomp       dword ptr ds:[64B1FC];80:Single
 0064A619    wait
 0064A61A    fnstsw      al
 0064A61C    sahf
>0064A61D    jb          0064A631
 0064A61F    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A625    fcomp       dword ptr ds:[64B200];120:Single
 0064A62B    wait
 0064A62C    fnstsw      al
 0064A62E    sahf
>0064A62F    jbe         0064A65D
 0064A631    fld         qword ptr [esi+3D0];TAccelerometerObject.SmoothRoll:Double
 0064A637    fcomp       dword ptr ds:[64B1FC];80:Single
 0064A63D    wait
 0064A63E    fnstsw      al
 0064A640    sahf
>0064A641    jb          0064A7EE
 0064A647    fld         qword ptr [esi+3D0];TAccelerometerObject.SmoothRoll:Double
 0064A64D    fcomp       dword ptr ds:[64B204];100:Single
 0064A653    wait
 0064A654    fnstsw      al
 0064A656    sahf
>0064A657    ja          0064A7EE
 0064A65D    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A663    fabs
 0064A665    fcomp       dword ptr ds:[64B1F8];60:Single
 0064A66B    wait
 0064A66C    fnstsw      al
 0064A66E    sahf
>0064A66F    jae         0064A7EE
 0064A675    fld         qword ptr [esi+3D8];TAccelerometerObject.SmoothPitch:Double
 0064A67B    fabs
 0064A67D    fcomp       dword ptr ds:[64B1F8];60:Single
 0064A683    wait
 0064A684    fnstsw      al
 0064A686    sahf
>0064A687    jae         0064A7EE
 0064A68D    mov         byte ptr [esi+41C],1;TAccelerometerObject.RightThenUpsideDown:Boolean
>0064A694    jmp         0064A7EE
 0064A699    cmp         byte ptr [esi+41C],0;TAccelerometerObject.RightThenUpsideDown:Boolean
>0064A6A0    jne         0064A6AB
 0064A6A2    cmp         byte ptr [esi+41B],0;TAccelerometerObject.LeftThenUpsideDown:Boolean
>0064A6A9    je          0064A724
 0064A6AB    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A6B1    fcomp       dword ptr ds:[64B208];-50:Single
 0064A6B7    wait
 0064A6B8    fnstsw      al
 0064A6BA    sahf
>0064A6BB    jb          0064A7EE
 0064A6C1    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A6C7    fcomp       dword ptr ds:[64B20C];50:Single
 0064A6CD    wait
 0064A6CE    fnstsw      al
 0064A6D0    sahf
>0064A6D1    ja          0064A7EE
 0064A6D7    fld         qword ptr [esi+3D0];TAccelerometerObject.SmoothRoll:Double
 0064A6DD    fcomp       dword ptr ds:[64B208];-50:Single
 0064A6E3    wait
 0064A6E4    fnstsw      al
 0064A6E6    sahf
>0064A6E7    jb          0064A7EE
 0064A6ED    fld         qword ptr [esi+3D0];TAccelerometerObject.SmoothRoll:Double
 0064A6F3    fcomp       dword ptr ds:[64B20C];50:Single
 0064A6F9    wait
 0064A6FA    fnstsw      al
 0064A6FC    sahf
>0064A6FD    ja          0064A7EE
 0064A703    mov         byte ptr [esi+419],0;TAccelerometerObject.UpThenUpsideDown:Boolean
 0064A70A    mov         byte ptr [esi+41A],0;TAccelerometerObject.DownThenUpsideDown:Boolean
 0064A711    mov         byte ptr [esi+41B],0;TAccelerometerObject.LeftThenUpsideDown:Boolean
 0064A718    mov         byte ptr [esi+41C],0;TAccelerometerObject.RightThenUpsideDown:Boolean
>0064A71F    jmp         0064A7EE
 0064A724    cmp         byte ptr [esi+419],0;TAccelerometerObject.UpThenUpsideDown:Boolean
>0064A72B    jne         0064A73A
 0064A72D    cmp         byte ptr [esi+41A],0;TAccelerometerObject.DownThenUpsideDown:Boolean
>0064A734    je          0064A7EE
 0064A73A    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A740    fcomp       dword ptr ds:[64B208];-50:Single
 0064A746    wait
 0064A747    fnstsw      al
 0064A749    sahf
>0064A74A    jb          0064A7EE
 0064A750    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A756    fcomp       dword ptr ds:[64B20C];50:Single
 0064A75C    wait
 0064A75D    fnstsw      al
 0064A75F    sahf
>0064A760    ja          0064A7EE
 0064A766    fld         qword ptr [esi+3D0];TAccelerometerObject.SmoothRoll:Double
 0064A76C    fcomp       dword ptr ds:[64B1EC];-80:Single
 0064A772    wait
 0064A773    fnstsw      al
 0064A775    sahf
>0064A776    jb          0064A7EE
 0064A778    fld         qword ptr [esi+3D0];TAccelerometerObject.SmoothRoll:Double
 0064A77E    fcomp       dword ptr ds:[64B1FC];80:Single
 0064A784    wait
 0064A785    fnstsw      al
 0064A787    sahf
>0064A788    ja          0064A7EE
 0064A78A    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A790    fcomp       dword ptr ds:[64B210];-45:Single
 0064A796    wait
 0064A797    fnstsw      al
 0064A799    sahf
>0064A79A    jb          0064A7EE
 0064A79C    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A7A2    fcomp       dword ptr ds:[64B214];45:Single
 0064A7A8    wait
 0064A7A9    fnstsw      al
 0064A7AB    sahf
>0064A7AC    ja          0064A7EE
 0064A7AE    fld         qword ptr [esi+3D8];TAccelerometerObject.SmoothPitch:Double
 0064A7B4    fcomp       dword ptr ds:[64B210];-45:Single
 0064A7BA    wait
 0064A7BB    fnstsw      al
 0064A7BD    sahf
>0064A7BE    jb          0064A7EE
 0064A7C0    fld         qword ptr [esi+3D8];TAccelerometerObject.SmoothPitch:Double
 0064A7C6    fcomp       dword ptr ds:[64B214];45:Single
 0064A7CC    wait
 0064A7CD    fnstsw      al
 0064A7CF    sahf
>0064A7D0    ja          0064A7EE
 0064A7D2    mov         byte ptr [esi+419],0;TAccelerometerObject.UpThenUpsideDown:Boolean
 0064A7D9    mov         byte ptr [esi+41A],0;TAccelerometerObject.DownThenUpsideDown:Boolean
 0064A7E0    mov         byte ptr [esi+41B],0;TAccelerometerObject.LeftThenUpsideDown:Boolean
 0064A7E7    mov         byte ptr [esi+41C],0;TAccelerometerObject.RightThenUpsideDown:Boolean
 0064A7EE    cmp         byte ptr [esi+419],0;TAccelerometerObject.UpThenUpsideDown:Boolean
>0064A7F5    jne         0064A812
 0064A7F7    cmp         byte ptr [esi+41A],0;TAccelerometerObject.DownThenUpsideDown:Boolean
>0064A7FE    jne         0064A812
 0064A800    cmp         byte ptr [esi+41B],0;TAccelerometerObject.LeftThenUpsideDown:Boolean
>0064A807    jne         0064A812
 0064A809    cmp         byte ptr [esi+41C],0;TAccelerometerObject.RightThenUpsideDown:Boolean
>0064A810    je          0064A816
 0064A812    xor         eax,eax
>0064A814    jmp         0064A818
 0064A816    mov         al,1
 0064A818    mov         byte ptr [esi+41D],al;TAccelerometerObject.NothingThenUpsideDown:Boolean
 0064A81E    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A824    fcomp       dword ptr ds:[64B1F4];-100:Single
 0064A82A    wait
 0064A82B    fnstsw      al
 0064A82D    sahf
>0064A82E    jbe         0064A846
 0064A830    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A836    fcomp       dword ptr ds:[64B204];100:Single
 0064A83C    wait
 0064A83D    fnstsw      al
 0064A83F    sahf
>0064A840    jb          0064A93D
 0064A846    cmp         byte ptr [esi+419],0;TAccelerometerObject.UpThenUpsideDown:Boolean
>0064A84D    jne         0064A85C
 0064A84F    cmp         byte ptr [esi+41D],0;TAccelerometerObject.NothingThenUpsideDown:Boolean
>0064A856    je          0064A922
 0064A85C    mov         eax,esi
 0064A85E    mov         edx,dword ptr ds:[619ED4];TNunchukObject
 0064A864    call        @IsClass
 0064A869    test        al,al
>0064A86B    je          0064A8CD
 0064A86D    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A873    fcomp       dword ptr ds:[64B218];145:Single
 0064A879    wait
 0064A87A    fnstsw      al
 0064A87C    sahf
>0064A87D    jae         0064A895
 0064A87F    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A885    fcomp       dword ptr ds:[64B21C];-145:Single
 0064A88B    wait
 0064A88C    fnstsw      al
 0064A88E    sahf
>0064A88F    ja          0064A983
 0064A895    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A89B    fcomp       dword ptr ds:[64B214];45:Single
 0064A8A1    wait
 0064A8A2    fnstsw      al
 0064A8A4    sahf
>0064A8A5    jae         0064A983
 0064A8AB    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A8B1    fcomp       dword ptr ds:[64B220];-20:Single
 0064A8B7    wait
 0064A8B8    fnstsw      al
 0064A8BA    sahf
>0064A8BB    jbe         0064A983
 0064A8C1    mov         byte ptr [esi+434],1;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064A8C8    jmp         0064A983
 0064A8CD    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A8D3    fcomp       dword ptr ds:[64B224];140:Single
 0064A8D9    wait
 0064A8DA    fnstsw      al
 0064A8DC    sahf
>0064A8DD    jae         0064A8F5
 0064A8DF    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A8E5    fcomp       dword ptr ds:[64B228];-140:Single
 0064A8EB    wait
 0064A8EC    fnstsw      al
 0064A8EE    sahf
>0064A8EF    ja          0064A983
 0064A8F5    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A8FB    fcomp       dword ptr ds:[64B22C];30:Single
 0064A901    wait
 0064A902    fnstsw      al
 0064A904    sahf
>0064A905    jae         0064A983
 0064A907    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A90D    fcomp       dword ptr ds:[64B230];-30:Single
 0064A913    wait
 0064A914    fnstsw      al
 0064A916    sahf
>0064A917    jbe         0064A983
 0064A919    mov         byte ptr [esi+434],1;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064A920    jmp         0064A983
 0064A922    cmp         byte ptr [esi+41A],0;TAccelerometerObject.DownThenUpsideDown:Boolean
>0064A929    jne         0064A983
 0064A92B    cmp         byte ptr [esi+41B],0;TAccelerometerObject.LeftThenUpsideDown:Boolean
>0064A932    jne         0064A983
 0064A934    cmp         byte ptr [esi+41C],0;TAccelerometerObject.RightThenUpsideDown:Boolean
>0064A93B    jmp         0064A983
 0064A93D    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A943    fcomp       dword ptr ds:[64B234];-70:Single
 0064A949    wait
 0064A94A    fnstsw      al
 0064A94C    sahf
>0064A94D    jb          0064A983
 0064A94F    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A955    fcomp       dword ptr ds:[64B1D0];70:Single
 0064A95B    wait
 0064A95C    fnstsw      al
 0064A95E    sahf
>0064A95F    ja          0064A983
 0064A961    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A967    fcomp       dword ptr ds:[64B20C];50:Single
 0064A96D    wait
 0064A96E    fnstsw      al
 0064A970    sahf
>0064A971    jae         0064A983
 0064A973    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A979    fcomp       dword ptr ds:[64B208];-50:Single
 0064A97F    wait
 0064A980    fnstsw      al
 0064A982    sahf
 0064A983    cmp         byte ptr [esi+434],0;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064A98A    je          0064AA4B
 0064A990    mov         eax,esi
 0064A992    mov         edx,dword ptr ds:[619ED4];TNunchukObject
 0064A998    call        @IsClass
 0064A99D    test        al,al
>0064A99F    je          0064A9F7
 0064A9A1    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A9A7    fcomp       dword ptr ds:[64B20C];50:Single
 0064A9AD    wait
 0064A9AE    fnstsw      al
 0064A9B0    sahf
>0064A9B1    jae         0064A9C5
 0064A9B3    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A9B9    fcomp       dword ptr ds:[64B208];-50:Single
 0064A9BF    wait
 0064A9C0    fnstsw      al
 0064A9C2    sahf
>0064A9C3    ja          0064A9E9
 0064A9C5    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A9CB    fcomp       dword ptr ds:[64B194];90:Single
 0064A9D1    wait
 0064A9D2    fnstsw      al
 0064A9D4    sahf
>0064A9D5    jae         0064A9E9
 0064A9D7    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064A9DD    fcomp       dword ptr ds:[64B230];-30:Single
 0064A9E3    wait
 0064A9E4    fnstsw      al
 0064A9E6    sahf
>0064A9E7    ja          0064A9ED
 0064A9E9    xor         eax,eax
>0064A9EB    jmp         0064A9EF
 0064A9ED    mov         al,1
 0064A9EF    mov         byte ptr [esi+434],al;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064A9F5    jmp         0064AA4B
 0064A9F7    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064A9FD    fcomp       dword ptr ds:[64B1F8];60:Single
 0064AA03    wait
 0064AA04    fnstsw      al
 0064AA06    sahf
>0064AA07    jae         0064AA1B
 0064AA09    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AA0F    fcomp       dword ptr ds:[64B1E8];-60:Single
 0064AA15    wait
 0064AA16    fnstsw      al
 0064AA18    sahf
>0064AA19    ja          0064AA3F
 0064AA1B    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AA21    fcomp       dword ptr ds:[64B1F8];60:Single
 0064AA27    wait
 0064AA28    fnstsw      al
 0064AA2A    sahf
>0064AA2B    jae         0064AA3F
 0064AA2D    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AA33    fcomp       dword ptr ds:[64B238];-40:Single
 0064AA39    wait
 0064AA3A    fnstsw      al
 0064AA3C    sahf
>0064AA3D    ja          0064AA43
 0064AA3F    xor         eax,eax
>0064AA41    jmp         0064AA45
 0064AA43    mov         al,1
 0064AA45    mov         byte ptr [esi+434],al;TAccelerometerObject.UpsideDownOnShoulder:Boolean
 0064AA4B    cmp         byte ptr [esi+430],0;TAccelerometerObject.LookingAtWatch:Boolean
>0064AA52    je          0064AAC1
 0064AA54    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AA5A    fcomp       dword ptr ds:[64B23C];40:Single
 0064AA60    wait
 0064AA61    fnstsw      al
 0064AA63    sahf
>0064AA64    jae         0064AA9C
 0064AA66    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AA6C    fcomp       dword ptr ds:[64B23C];40:Single
 0064AA72    wait
 0064AA73    fnstsw      al
 0064AA75    sahf
>0064AA76    ja          0064AAB4
 0064AA78    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AA7E    fcomp       dword ptr ds:[64B1F4];-100:Single
 0064AA84    wait
 0064AA85    fnstsw      al
 0064AA87    sahf
>0064AA88    jb          0064AAB4
 0064AA8A    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AA90    fcomp       dword ptr ds:[64B210];-45:Single
 0064AA96    wait
 0064AA97    fnstsw      al
 0064AA99    sahf
>0064AA9A    jb          0064AAB4
 0064AA9C    mov         eax,esi
 0064AA9E    call        TAccelerometerObject.OnTable
 0064AAA3    test        al,al
>0064AAA5    jne         0064AAB4
 0064AAA7    cmp         byte ptr [esi+434],0;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064AAAE    jne         0064AAB4
 0064AAB0    xor         eax,eax
>0064AAB2    jmp         0064AAB6
 0064AAB4    mov         al,1
 0064AAB6    mov         byte ptr [esi+430],al;TAccelerometerObject.LookingAtWatch:Boolean
>0064AABC    jmp         0064B077
 0064AAC1    cmp         byte ptr [esi+431],0;TAccelerometerObject.LookingAtWatchRH:Boolean
>0064AAC8    je          0064AB37
 0064AACA    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AAD0    fcomp       dword ptr ds:[64B23C];40:Single
 0064AAD6    wait
 0064AAD7    fnstsw      al
 0064AAD9    sahf
>0064AADA    jae         0064AB12
 0064AADC    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AAE2    fcomp       dword ptr ds:[64B238];-40:Single
 0064AAE8    wait
 0064AAE9    fnstsw      al
 0064AAEB    sahf
>0064AAEC    jb          0064AB2A
 0064AAEE    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AAF4    fcomp       dword ptr ds:[64B204];100:Single
 0064AAFA    wait
 0064AAFB    fnstsw      al
 0064AAFD    sahf
>0064AAFE    ja          0064AB2A
 0064AB00    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AB06    fcomp       dword ptr ds:[64B210];-45:Single
 0064AB0C    wait
 0064AB0D    fnstsw      al
 0064AB0F    sahf
>0064AB10    jb          0064AB2A
 0064AB12    mov         eax,esi
 0064AB14    call        TAccelerometerObject.OnTable
 0064AB19    test        al,al
>0064AB1B    jne         0064AB2A
 0064AB1D    cmp         byte ptr [esi+434],0;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064AB24    jne         0064AB2A
 0064AB26    xor         eax,eax
>0064AB28    jmp         0064AB2C
 0064AB2A    mov         al,1
 0064AB2C    mov         byte ptr [esi+431],al;TAccelerometerObject.LookingAtWatchRH:Boolean
>0064AB32    jmp         0064B077
 0064AB37    cmp         byte ptr [esi+432],0;TAccelerometerObject.LookingAtLeftPalm:Boolean
>0064AB3E    je          0064AB87
 0064AB40    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AB46    fcomp       dword ptr ds:[64B240];-130:Single
 0064AB4C    wait
 0064AB4D    fnstsw      al
 0064AB4F    sahf
>0064AB50    jbe         0064AB64
 0064AB52    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AB58    fcomp       dword ptr ds:[64B210];-45:Single
 0064AB5E    wait
 0064AB5F    fnstsw      al
 0064AB61    sahf
>0064AB62    jb          0064AB7A
 0064AB64    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AB6A    fcomp       dword ptr ds:[64B214];45:Single
 0064AB70    wait
 0064AB71    fnstsw      al
 0064AB73    sahf
>0064AB74    ja          0064AB7A
 0064AB76    xor         eax,eax
>0064AB78    jmp         0064AB7C
 0064AB7A    mov         al,1
 0064AB7C    mov         byte ptr [esi+432],al;TAccelerometerObject.LookingAtLeftPalm:Boolean
>0064AB82    jmp         0064B077
 0064AB87    cmp         byte ptr [esi+433],0;TAccelerometerObject.LookingAtRightPalm:Boolean
>0064AB8E    je          0064ABD7
 0064AB90    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AB96    fcomp       dword ptr ds:[64B244];130:Single
 0064AB9C    wait
 0064AB9D    fnstsw      al
 0064AB9F    sahf
>0064ABA0    jae         0064ABB4
 0064ABA2    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064ABA8    fcomp       dword ptr ds:[64B214];45:Single
 0064ABAE    wait
 0064ABAF    fnstsw      al
 0064ABB1    sahf
>0064ABB2    ja          0064ABCA
 0064ABB4    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064ABBA    fcomp       dword ptr ds:[64B214];45:Single
 0064ABC0    wait
 0064ABC1    fnstsw      al
 0064ABC3    sahf
>0064ABC4    ja          0064ABCA
 0064ABC6    xor         eax,eax
>0064ABC8    jmp         0064ABCC
 0064ABCA    mov         al,1
 0064ABCC    mov         byte ptr [esi+433],al;TAccelerometerObject.LookingAtRightPalm:Boolean
>0064ABD2    jmp         0064B077
 0064ABD7    mov         eax,esi
 0064ABD9    mov         edx,dword ptr ds:[619ED4];TNunchukObject
 0064ABDF    call        @IsClass
 0064ABE4    test        al,al
>0064ABE6    je          0064AD6D
 0064ABEC    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064ABF2    fcomp       dword ptr ds:[64B1D0];70:Single
 0064ABF8    wait
 0064ABF9    fnstsw      al
 0064ABFB    sahf
>0064ABFC    jb          0064AC48
 0064ABFE    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AC04    fcomp       dword ptr ds:[64B248];160:Single
 0064AC0A    wait
 0064AC0B    fnstsw      al
 0064AC0D    sahf
>0064AC0E    ja          0064AC48
 0064AC10    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AC16    fcomp       dword ptr ds:[64B230];-30:Single
 0064AC1C    wait
 0064AC1D    fnstsw      al
 0064AC1F    sahf
>0064AC20    jb          0064AC48
 0064AC22    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AC28    fcomp       dword ptr ds:[64B22C];30:Single
 0064AC2E    wait
 0064AC2F    fnstsw      al
 0064AC31    sahf
>0064AC32    ja          0064AC48
 0064AC34    mov         eax,esi
 0064AC36    call        TAccelerometerObject.OnTable
 0064AC3B    test        al,al
>0064AC3D    jne         0064AC48
 0064AC3F    cmp         byte ptr [esi+434],0;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064AC46    je          0064AC4C
 0064AC48    xor         eax,eax
>0064AC4A    jmp         0064AC4E
 0064AC4C    mov         al,1
 0064AC4E    mov         byte ptr [esi+430],al;TAccelerometerObject.LookingAtWatch:Boolean
 0064AC54    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AC5A    fcomp       dword ptr ds:[64B234];-70:Single
 0064AC60    wait
 0064AC61    fnstsw      al
 0064AC63    sahf
>0064AC64    ja          0064ACB0
 0064AC66    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AC6C    fcomp       dword ptr ds:[64B24C];-160:Single
 0064AC72    wait
 0064AC73    fnstsw      al
 0064AC75    sahf
>0064AC76    jb          0064ACB0
 0064AC78    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AC7E    fcomp       dword ptr ds:[64B230];-30:Single
 0064AC84    wait
 0064AC85    fnstsw      al
 0064AC87    sahf
>0064AC88    jb          0064ACB0
 0064AC8A    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AC90    fcomp       dword ptr ds:[64B22C];30:Single
 0064AC96    wait
 0064AC97    fnstsw      al
 0064AC99    sahf
>0064AC9A    ja          0064ACB0
 0064AC9C    mov         eax,esi
 0064AC9E    call        TAccelerometerObject.OnTable
 0064ACA3    test        al,al
>0064ACA5    jne         0064ACB0
 0064ACA7    cmp         byte ptr [esi+434],0;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064ACAE    je          0064ACB4
 0064ACB0    xor         eax,eax
>0064ACB2    jmp         0064ACB6
 0064ACB4    mov         al,1
 0064ACB6    mov         byte ptr [esi+431],al;TAccelerometerObject.LookingAtWatchRH:Boolean
 0064ACBC    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064ACC2    fcomp       dword ptr ds:[64B234];-70:Single
 0064ACC8    wait
 0064ACC9    fnstsw      al
 0064ACCB    sahf
>0064ACCC    ja          0064AD06
 0064ACCE    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064ACD4    fcomp       dword ptr ds:[64B250];-115:Single
 0064ACDA    wait
 0064ACDB    fnstsw      al
 0064ACDD    sahf
>0064ACDE    jb          0064AD06
 0064ACE0    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064ACE6    fcomp       dword ptr ds:[64B22C];30:Single
 0064ACEC    wait
 0064ACED    fnstsw      al
 0064ACEF    sahf
>0064ACF0    jbe         0064AD06
 0064ACF2    mov         eax,esi
 0064ACF4    call        TAccelerometerObject.OnTable
 0064ACF9    test        al,al
>0064ACFB    jne         0064AD06
 0064ACFD    cmp         byte ptr [esi+434],0;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064AD04    je          0064AD0A
 0064AD06    xor         eax,eax
>0064AD08    jmp         0064AD0C
 0064AD0A    mov         al,1
 0064AD0C    mov         byte ptr [esi+432],al;TAccelerometerObject.LookingAtLeftPalm:Boolean
 0064AD12    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AD18    fcomp       dword ptr ds:[64B1D0];70:Single
 0064AD1E    wait
 0064AD1F    fnstsw      al
 0064AD21    sahf
>0064AD22    jb          0064AD5C
 0064AD24    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AD2A    fcomp       dword ptr ds:[64B254];115:Single
 0064AD30    wait
 0064AD31    fnstsw      al
 0064AD33    sahf
>0064AD34    ja          0064AD5C
 0064AD36    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AD3C    fcomp       dword ptr ds:[64B22C];30:Single
 0064AD42    wait
 0064AD43    fnstsw      al
 0064AD45    sahf
>0064AD46    jbe         0064AD5C
 0064AD48    mov         eax,esi
 0064AD4A    call        TAccelerometerObject.OnTable
 0064AD4F    test        al,al
>0064AD51    jne         0064AD5C
 0064AD53    cmp         byte ptr [esi+434],0;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064AD5A    je          0064AD60
 0064AD5C    xor         eax,eax
>0064AD5E    jmp         0064AD62
 0064AD60    mov         al,1
 0064AD62    mov         byte ptr [esi+433],al;TAccelerometerObject.LookingAtRightPalm:Boolean
>0064AD68    jmp         0064B077
 0064AD6D    mov         eax,esi
 0064AD6F    mov         edx,dword ptr ds:[629714];TSixaxisObject
 0064AD75    call        @IsClass
 0064AD7A    test        al,al
>0064AD7C    je          0064AEFB
 0064AD82    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AD88    fcomp       dword ptr ds:[64B258];95:Single
 0064AD8E    wait
 0064AD8F    fnstsw      al
 0064AD91    sahf
>0064AD92    jb          0064ADD3
 0064AD94    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AD9A    fcomp       dword ptr ds:[64B16C];150:Single
 0064ADA0    wait
 0064ADA1    fnstsw      al
 0064ADA3    sahf
>0064ADA4    ja          0064ADD3
 0064ADA6    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064ADAC    fcomp       dword ptr ds:[64B25C];10:Single
 0064ADB2    wait
 0064ADB3    fnstsw      al
 0064ADB5    sahf
>0064ADB6    ja          0064ADD3
 0064ADB8    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064ADBE    fcomp       dword ptr ds:[64B220];-20:Single
 0064ADC4    wait
 0064ADC5    fnstsw      al
 0064ADC7    sahf
>0064ADC8    jb          0064ADD3
 0064ADCA    cmp         byte ptr [esi+434],0;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064ADD1    je          0064ADD7
 0064ADD3    xor         eax,eax
>0064ADD5    jmp         0064ADD9
 0064ADD7    mov         al,1
 0064ADD9    mov         byte ptr [esi+430],al;TAccelerometerObject.LookingAtWatch:Boolean
 0064ADDF    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064ADE5    fcomp       dword ptr ds:[64B260];-95:Single
 0064ADEB    wait
 0064ADEC    fnstsw      al
 0064ADEE    sahf
>0064ADEF    ja          0064AE30
 0064ADF1    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064ADF7    fcomp       dword ptr ds:[64B264];-150:Single
 0064ADFD    wait
 0064ADFE    fnstsw      al
 0064AE00    sahf
>0064AE01    jb          0064AE30
 0064AE03    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AE09    fcomp       dword ptr ds:[64B268];-10:Single
 0064AE0F    wait
 0064AE10    fnstsw      al
 0064AE12    sahf
>0064AE13    jb          0064AE30
 0064AE15    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AE1B    fcomp       dword ptr ds:[64B26C];20:Single
 0064AE21    wait
 0064AE22    fnstsw      al
 0064AE24    sahf
>0064AE25    ja          0064AE30
 0064AE27    cmp         byte ptr [esi+434],0;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064AE2E    je          0064AE34
 0064AE30    xor         eax,eax
>0064AE32    jmp         0064AE36
 0064AE34    mov         al,1
 0064AE36    mov         byte ptr [esi+431],al;TAccelerometerObject.LookingAtWatchRH:Boolean
 0064AE3C    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AE42    fcomp       dword ptr ds:[64B270];-75:Single
 0064AE48    wait
 0064AE49    fnstsw      al
 0064AE4B    sahf
>0064AE4C    ja          0064AE8D
 0064AE4E    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AE54    fcomp       dword ptr ds:[64B240];-130:Single
 0064AE5A    wait
 0064AE5B    fnstsw      al
 0064AE5D    sahf
>0064AE5E    jb          0064AE8D
 0064AE60    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AE66    fcomp       dword ptr ds:[64B274];25:Single
 0064AE6C    wait
 0064AE6D    fnstsw      al
 0064AE6F    sahf
>0064AE70    jb          0064AE8D
 0064AE72    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AE78    fcomp       dword ptr ds:[64B1D0];70:Single
 0064AE7E    wait
 0064AE7F    fnstsw      al
 0064AE81    sahf
>0064AE82    ja          0064AE8D
 0064AE84    cmp         byte ptr [esi+434],0;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064AE8B    je          0064AE91
 0064AE8D    xor         eax,eax
>0064AE8F    jmp         0064AE93
 0064AE91    mov         al,1
 0064AE93    mov         byte ptr [esi+432],al;TAccelerometerObject.LookingAtLeftPalm:Boolean
 0064AE99    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AE9F    fcomp       dword ptr ds:[64B278];75:Single
 0064AEA5    wait
 0064AEA6    fnstsw      al
 0064AEA8    sahf
>0064AEA9    jb          0064AEEA
 0064AEAB    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AEB1    fcomp       dword ptr ds:[64B244];130:Single
 0064AEB7    wait
 0064AEB8    fnstsw      al
 0064AEBA    sahf
>0064AEBB    ja          0064AEEA
 0064AEBD    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AEC3    fcomp       dword ptr ds:[64B274];25:Single
 0064AEC9    wait
 0064AECA    fnstsw      al
 0064AECC    sahf
>0064AECD    jb          0064AEEA
 0064AECF    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AED5    fcomp       dword ptr ds:[64B1D0];70:Single
 0064AEDB    wait
 0064AEDC    fnstsw      al
 0064AEDE    sahf
>0064AEDF    ja          0064AEEA
 0064AEE1    cmp         byte ptr [esi+434],0;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064AEE8    je          0064AEEE
 0064AEEA    xor         eax,eax
>0064AEEC    jmp         0064AEF0
 0064AEEE    mov         al,1
 0064AEF0    mov         byte ptr [esi+433],al;TAccelerometerObject.LookingAtRightPalm:Boolean
>0064AEF6    jmp         0064B077
 0064AEFB    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AF01    fcomp       dword ptr ds:[64B258];95:Single
 0064AF07    wait
 0064AF08    fnstsw      al
 0064AF0A    sahf
>0064AF0B    jb          0064AF57
 0064AF0D    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AF13    fcomp       dword ptr ds:[64B188];180:Single
 0064AF19    wait
 0064AF1A    fnstsw      al
 0064AF1C    sahf
>0064AF1D    ja          0064AF57
 0064AF1F    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AF25    fcomp       dword ptr ds:[64B238];-40:Single
 0064AF2B    wait
 0064AF2C    fnstsw      al
 0064AF2E    sahf
>0064AF2F    jb          0064AF57
 0064AF31    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AF37    fcomp       dword ptr ds:[64B22C];30:Single
 0064AF3D    wait
 0064AF3E    fnstsw      al
 0064AF40    sahf
>0064AF41    ja          0064AF57
 0064AF43    mov         eax,esi
 0064AF45    call        TAccelerometerObject.OnTable
 0064AF4A    test        al,al
>0064AF4C    jne         0064AF57
 0064AF4E    cmp         byte ptr [esi+434],0;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064AF55    je          0064AF5B
 0064AF57    xor         eax,eax
>0064AF59    jmp         0064AF5D
 0064AF5B    mov         al,1
 0064AF5D    mov         byte ptr [esi+430],al;TAccelerometerObject.LookingAtWatch:Boolean
 0064AF63    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AF69    fcomp       dword ptr ds:[64B260];-95:Single
 0064AF6F    wait
 0064AF70    fnstsw      al
 0064AF72    sahf
>0064AF73    ja          0064AFBF
 0064AF75    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AF7B    fcomp       dword ptr ds:[64B190];-180:Single
 0064AF81    wait
 0064AF82    fnstsw      al
 0064AF84    sahf
>0064AF85    jb          0064AFBF
 0064AF87    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AF8D    fcomp       dword ptr ds:[64B238];-40:Single
 0064AF93    wait
 0064AF94    fnstsw      al
 0064AF96    sahf
>0064AF97    jb          0064AFBF
 0064AF99    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AF9F    fcomp       dword ptr ds:[64B22C];30:Single
 0064AFA5    wait
 0064AFA6    fnstsw      al
 0064AFA8    sahf
>0064AFA9    ja          0064AFBF
 0064AFAB    mov         eax,esi
 0064AFAD    call        TAccelerometerObject.OnTable
 0064AFB2    test        al,al
>0064AFB4    jne         0064AFBF
 0064AFB6    cmp         byte ptr [esi+434],0;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064AFBD    je          0064AFC3
 0064AFBF    xor         eax,eax
>0064AFC1    jmp         0064AFC5
 0064AFC3    mov         al,1
 0064AFC5    mov         byte ptr [esi+431],al;TAccelerometerObject.LookingAtWatchRH:Boolean
 0064AFCB    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AFD1    fcomp       dword ptr ds:[64B27C];-65:Single
 0064AFD7    wait
 0064AFD8    fnstsw      al
 0064AFDA    sahf
>0064AFDB    ja          0064B015
 0064AFDD    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064AFE3    fcomp       dword ptr ds:[64B280];-110:Single
 0064AFE9    wait
 0064AFEA    fnstsw      al
 0064AFEC    sahf
>0064AFED    jb          0064B015
 0064AFEF    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064AFF5    fcomp       dword ptr ds:[64B22C];30:Single
 0064AFFB    wait
 0064AFFC    fnstsw      al
 0064AFFE    sahf
>0064AFFF    jbe         0064B015
 0064B001    mov         eax,esi
 0064B003    call        TAccelerometerObject.OnTable
 0064B008    test        al,al
>0064B00A    jne         0064B015
 0064B00C    cmp         byte ptr [esi+434],0;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064B013    je          0064B019
 0064B015    xor         eax,eax
>0064B017    jmp         0064B01B
 0064B019    mov         al,1
 0064B01B    mov         byte ptr [esi+432],al;TAccelerometerObject.LookingAtLeftPalm:Boolean
 0064B021    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064B027    fcomp       dword ptr ds:[64B284];65:Single
 0064B02D    wait
 0064B02E    fnstsw      al
 0064B030    sahf
>0064B031    jb          0064B06B
 0064B033    fld         qword ptr [esi+3B8];TAccelerometerObject.Roll:Double
 0064B039    fcomp       dword ptr ds:[64B288];110:Single
 0064B03F    wait
 0064B040    fnstsw      al
 0064B042    sahf
>0064B043    ja          0064B06B
 0064B045    fld         qword ptr [esi+3C0];TAccelerometerObject.Pitch:Double
 0064B04B    fcomp       dword ptr ds:[64B22C];30:Single
 0064B051    wait
 0064B052    fnstsw      al
 0064B054    sahf
>0064B055    jbe         0064B06B
 0064B057    mov         eax,esi
 0064B059    call        TAccelerometerObject.OnTable
 0064B05E    test        al,al
>0064B060    jne         0064B06B
 0064B062    cmp         byte ptr [esi+434],0;TAccelerometerObject.UpsideDownOnShoulder:Boolean
>0064B069    je          0064B06F
 0064B06B    xor         eax,eax
>0064B06D    jmp         0064B071
 0064B06F    mov         al,1
 0064B071    mov         byte ptr [esi+433],al;TAccelerometerObject.LookingAtRightPalm:Boolean
 0064B077    mov         eax,esi
 0064B079    call        TAccelerometerObject.RawAccX
 0064B07E    fcomp       dword ptr ds:[64B28C];-3:Single
 0064B084    wait
 0064B085    fnstsw      al
 0064B087    sahf
>0064B088    jae         0064B0A5
 0064B08A    mov         eax,esi
 0064B08C    call        TAccelerometerObject.RawAccY
 0064B091    fld         tbyte ptr ds:[64B290];9.8:Extended
 0064B097    fsubp       st(1),st
 0064B099    fcomp       dword ptr ds:[64B28C];-3:Single
 0064B09F    wait
 0064B0A0    fnstsw      al
 0064B0A2    sahf
>0064B0A3    jb          0064B0A9
 0064B0A5    xor         eax,eax
>0064B0A7    jmp         0064B0AB
 0064B0A9    mov         al,1
 0064B0AB    mov         byte ptr [esi+435],al;TAccelerometerObject.q1:Boolean
 0064B0B1    mov         eax,esi
 0064B0B3    call        TAccelerometerObject.RawAccX
 0064B0B8    fcomp       dword ptr ds:[64B28C];-3:Single
 0064B0BE    wait
 0064B0BF    fnstsw      al
 0064B0C1    sahf
>0064B0C2    jae         0064B0DF
 0064B0C4    mov         eax,esi
 0064B0C6    call        TAccelerometerObject.RawAccY
 0064B0CB    fld         tbyte ptr ds:[64B290];9.8:Extended
 0064B0D1    fsubp       st(1),st
 0064B0D3    fcomp       dword ptr ds:[64B1D8];3:Single
 0064B0D9    wait
 0064B0DA    fnstsw      al
 0064B0DC    sahf
>0064B0DD    ja          0064B0E3
 0064B0DF    xor         eax,eax
>0064B0E1    jmp         0064B0E5
 0064B0E3    mov         al,1
 0064B0E5    mov         byte ptr [esi+436],al;TAccelerometerObject.q2:Boolean
 0064B0EB    mov         eax,esi
 0064B0ED    call        TAccelerometerObject.RawAccX
 0064B0F2    fcomp       dword ptr ds:[64B1D8];3:Single
 0064B0F8    wait
 0064B0F9    fnstsw      al
 0064B0FB    sahf
>0064B0FC    jbe         0064B119
 0064B0FE    mov         eax,esi
 0064B100    call        TAccelerometerObject.RawAccY
 0064B105    fld         tbyte ptr ds:[64B290];9.8:Extended
 0064B10B    fsubp       st(1),st
 0064B10D    fcomp       dword ptr ds:[64B1D8];3:Single
 0064B113    wait
 0064B114    fnstsw      al
 0064B116    sahf
>0064B117    ja          0064B11D
 0064B119    xor         eax,eax
>0064B11B    jmp         0064B11F
 0064B11D    mov         al,1
 0064B11F    mov         byte ptr [esi+437],al;TAccelerometerObject.q3:Boolean
 0064B125    mov         eax,esi
 0064B127    call        TAccelerometerObject.RawAccX
 0064B12C    fcomp       dword ptr ds:[64B1D8];3:Single
 0064B132    wait
 0064B133    fnstsw      al
 0064B135    sahf
>0064B136    jbe         0064B153
 0064B138    mov         eax,esi
 0064B13A    call        TAccelerometerObject.RawAccY
 0064B13F    fld         tbyte ptr ds:[64B290];9.8:Extended
 0064B145    fsubp       st(1),st
 0064B147    fcomp       dword ptr ds:[64B28C];-3:Single
 0064B14D    wait
 0064B14E    fnstsw      al
 0064B150    sahf
>0064B151    jb          0064B157
 0064B153    xor         eax,eax
>0064B155    jmp         0064B159
 0064B157    mov         al,1
 0064B159    mov         byte ptr [esi+438],al;TAccelerometerObject.q4:Boolean
 0064B15F    pop         edi
 0064B160    pop         esi
 0064B161    pop         ebx
 0064B162    mov         esp,ebp
 0064B164    pop         ebp
 0064B165    ret         20
end;*}

//0064B29C
procedure TAccelerometerObject.UpdateGestureStates(Timestamp:Double);
begin
{*
 0064B29C    push        ebp
 0064B29D    mov         ebp,esp
 0064B29F    push        ebx
 0064B2A0    mov         ebx,eax
 0064B2A2    cmp         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
>0064B2A9    jne         0064B3C2
 0064B2AF    mov         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
 0064B2B6    mov         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
 0064B2BD    mov         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
 0064B2C4    mov         byte ptr [ebx+423],0;TAccelerometerObject.UnSwishLeft:Boolean
 0064B2CB    mov         byte ptr [ebx+425],0;TAccelerometerObject.AntiSwish:Boolean
 0064B2D2    mov         byte ptr [ebx+426],0;TAccelerometerObject.AntiSwishLeft:Boolean
 0064B2D9    mov         byte ptr [ebx+428],0;TAccelerometerObject.AntiUnswish:Boolean
 0064B2E0    mov         byte ptr [ebx+429],0;TAccelerometerObject.AntiUnswishLeft:Boolean
 0064B2E7    mov         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
 0064B2EE    mov         edx,1C
 0064B2F3    mov         eax,dword ptr [ebx+410];TAccelerometerObject.RelAccYAverager:TAverager
 0064B2F9    call        TAverager.GetAvg
 0064B2FE    fcomp       dword ptr ds:[64E78C];-4:Single
 0064B304    wait
 0064B305    fnstsw      al
 0064B307    sahf
>0064B308    jae         0064B323
 0064B30A    mov         byte ptr [ebx+41E],1;TAccelerometerObject.GestureState:TGestureState
 0064B311    cmp         byte ptr [ebx+42E],0;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064B318    jne         0064B356
 0064B31A    mov         byte ptr [ebx+42E],1;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064B321    jmp         0064B356
 0064B323    mov         edx,1C
 0064B328    mov         eax,dword ptr [ebx+410];TAccelerometerObject.RelAccYAverager:TAverager
 0064B32E    call        TAverager.GetAvg
 0064B333    fcomp       dword ptr ds:[64E790];4:Single
 0064B339    wait
 0064B33A    fnstsw      al
 0064B33C    sahf
>0064B33D    jbe         0064B356
 0064B33F    mov         byte ptr [ebx+41E],0B;TAccelerometerObject.GestureState:TGestureState
 0064B346    cmp         byte ptr [ebx+42E],0;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064B34D    jne         0064B356
 0064B34F    mov         byte ptr [ebx+42E],12;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064B356    mov         edx,1C
 0064B35B    mov         eax,dword ptr [ebx+40C];TAccelerometerObject.RelAccXAverager:TAverager
 0064B361    call        TAverager.GetAvg
 0064B366    fld         tbyte ptr ds:[64E794];-3.8:Extended
 0064B36C    fcompp
 0064B36E    wait
 0064B36F    fnstsw      al
 0064B371    sahf
>0064B372    jbe         0064B38D
 0064B374    mov         byte ptr [ebx+41E],15;TAccelerometerObject.GestureState:TGestureState
 0064B37B    cmp         byte ptr [ebx+42E],0;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064B382    jne         0064B3C2
 0064B384    mov         byte ptr [ebx+42E],23;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064B38B    jmp         0064B3C2
 0064B38D    mov         edx,1C
 0064B392    mov         eax,dword ptr [ebx+40C];TAccelerometerObject.RelAccXAverager:TAverager
 0064B398    call        TAverager.GetAvg
 0064B39D    fld         tbyte ptr ds:[64E7A0];3.8:Extended
 0064B3A3    fcompp
 0064B3A5    wait
 0064B3A6    fnstsw      al
 0064B3A8    sahf
>0064B3A9    jae         0064B3C2
 0064B3AB    mov         byte ptr [ebx+41E],1F;TAccelerometerObject.GestureState:TGestureState
 0064B3B2    cmp         byte ptr [ebx+42E],0;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064B3B9    jne         0064B3C2
 0064B3BB    mov         byte ptr [ebx+42E],34;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064B3C2    cmp         byte ptr [ebx+41E],1;TAccelerometerObject.GestureState:TGestureState
>0064B3C9    jne         0064B57B
 0064B3CF    mov         edx,0A
 0064B3D4    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064B3DA    call        TAverager.GetAvg
 0064B3DF    fcomp       dword ptr ds:[64E7AC];3:Single
 0064B3E5    wait
 0064B3E6    fnstsw      al
 0064B3E8    sahf
>0064B3E9    jbe         0064B416
 0064B3EB    mov         edx,0F
 0064B3F0    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064B3F6    call        TAverager.GetAvg
 0064B3FB    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064B401    fsubp       st(1),st
 0064B403    fcomp       dword ptr ds:[64E7BC];2:Single
 0064B409    wait
 0064B40A    fnstsw      al
 0064B40C    sahf
>0064B40D    jbe         0064B416
 0064B40F    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064B416    mov         edx,0A
 0064B41B    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064B421    call        TAverager.GetAvg
 0064B426    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064B42C    wait
 0064B42D    fnstsw      al
 0064B42F    sahf
>0064B430    jae         0064B45D
 0064B432    mov         edx,0F
 0064B437    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064B43D    call        TAverager.GetAvg
 0064B442    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064B448    fsubp       st(1),st
 0064B44A    fcomp       dword ptr ds:[64E7BC];2:Single
 0064B450    wait
 0064B451    fnstsw      al
 0064B453    sahf
>0064B454    jbe         0064B45D
 0064B456    mov         byte ptr [ebx+420],1;TAccelerometerObject.SwishLeft:Boolean
 0064B45D    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064B464    je          0064B4C4
 0064B466    mov         edx,0A
 0064B46B    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064B471    call        TAverager.GetAvg
 0064B476    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064B47C    wait
 0064B47D    fnstsw      al
 0064B47F    sahf
>0064B480    jae         0064B4C4
 0064B482    mov         edx,0F
 0064B487    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064B48D    call        TAverager.GetAvg
 0064B492    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064B498    fsubp       st(1),st
 0064B49A    fcomp       dword ptr ds:[64E7BC];2:Single
 0064B4A0    wait
 0064B4A1    fnstsw      al
 0064B4A3    sahf
>0064B4A4    jbe         0064B4C4
 0064B4A6    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064B4AD    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064B4B4    jne         0064B4C4
 0064B4B6    mov         byte ptr [ebx+42E],6;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064B4BD    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064B4C4    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064B4CB    je          0064B52B
 0064B4CD    mov         edx,0A
 0064B4D2    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064B4D8    call        TAverager.GetAvg
 0064B4DD    fcomp       dword ptr ds:[64E7AC];3:Single
 0064B4E3    wait
 0064B4E4    fnstsw      al
 0064B4E6    sahf
>0064B4E7    jbe         0064B52B
 0064B4E9    mov         edx,0F
 0064B4EE    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064B4F4    call        TAverager.GetAvg
 0064B4F9    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064B4FF    fsubp       st(1),st
 0064B501    fcomp       dword ptr ds:[64E7BC];2:Single
 0064B507    wait
 0064B508    fnstsw      al
 0064B50A    sahf
>0064B50B    jbe         0064B52B
 0064B50D    mov         byte ptr [ebx+423],1;TAccelerometerObject.UnSwishLeft:Boolean
 0064B514    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064B51B    jne         0064B52B
 0064B51D    mov         byte ptr [ebx+42E],0C;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064B524    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064B52B    mov         edx,11
 0064B530    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064B536    call        TAverager.GetAvg
 0064B53B    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064B541    fsubp       st(1),st
 0064B543    fcomp       dword ptr ds:[64E7AC];3:Single
 0064B549    wait
 0064B54A    fnstsw      al
 0064B54C    sahf
>0064B54D    jbe         0064B556
 0064B54F    mov         byte ptr [ebx+41E],2;TAccelerometerObject.GestureState:TGestureState
 0064B556    fld         qword ptr [ebp+8]
 0064B559    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064B55F    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064B565    fcompp
 0064B567    wait
 0064B568    fnstsw      al
 0064B56A    sahf
>0064B56B    jae         0064B57B
 0064B56D    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064B574    mov         byte ptr [ebx+42C],1;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064B57B    cmp         byte ptr [ebx+41E],2;TAccelerometerObject.GestureState:TGestureState
>0064B582    jne         0064B7F8
 0064B588    mov         edx,0A
 0064B58D    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064B593    call        TAverager.GetAvg
 0064B598    fcomp       dword ptr ds:[64E7AC];3:Single
 0064B59E    wait
 0064B59F    fnstsw      al
 0064B5A1    sahf
>0064B5A2    jbe         0064B5CF
 0064B5A4    mov         edx,0F
 0064B5A9    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064B5AF    call        TAverager.GetAvg
 0064B5B4    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064B5BA    fsubp       st(1),st
 0064B5BC    fcomp       dword ptr ds:[64E7BC];2:Single
 0064B5C2    wait
 0064B5C3    fnstsw      al
 0064B5C5    sahf
>0064B5C6    jbe         0064B5CF
 0064B5C8    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064B5CF    mov         edx,0A
 0064B5D4    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064B5DA    call        TAverager.GetAvg
 0064B5DF    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064B5E5    wait
 0064B5E6    fnstsw      al
 0064B5E8    sahf
>0064B5E9    jae         0064B616
 0064B5EB    mov         edx,0F
 0064B5F0    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064B5F6    call        TAverager.GetAvg
 0064B5FB    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064B601    fsubp       st(1),st
 0064B603    fcomp       dword ptr ds:[64E7BC];2:Single
 0064B609    wait
 0064B60A    fnstsw      al
 0064B60C    sahf
>0064B60D    jbe         0064B616
 0064B60F    mov         byte ptr [ebx+420],1;TAccelerometerObject.SwishLeft:Boolean
 0064B616    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064B61D    je          0064B67D
 0064B61F    mov         edx,0A
 0064B624    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064B62A    call        TAverager.GetAvg
 0064B62F    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064B635    wait
 0064B636    fnstsw      al
 0064B638    sahf
>0064B639    jae         0064B67D
 0064B63B    mov         edx,0F
 0064B640    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064B646    call        TAverager.GetAvg
 0064B64B    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064B651    fsubp       st(1),st
 0064B653    fcomp       dword ptr ds:[64E7BC];2:Single
 0064B659    wait
 0064B65A    fnstsw      al
 0064B65C    sahf
>0064B65D    jbe         0064B67D
 0064B65F    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064B666    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064B66D    jne         0064B67D
 0064B66F    mov         byte ptr [ebx+42E],6;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064B676    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064B67D    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064B684    je          0064B6E4
 0064B686    mov         edx,0A
 0064B68B    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064B691    call        TAverager.GetAvg
 0064B696    fcomp       dword ptr ds:[64E7AC];3:Single
 0064B69C    wait
 0064B69D    fnstsw      al
 0064B69F    sahf
>0064B6A0    jbe         0064B6E4
 0064B6A2    mov         edx,0F
 0064B6A7    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064B6AD    call        TAverager.GetAvg
 0064B6B2    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064B6B8    fsubp       st(1),st
 0064B6BA    fcomp       dword ptr ds:[64E7BC];2:Single
 0064B6C0    wait
 0064B6C1    fnstsw      al
 0064B6C3    sahf
>0064B6C4    jbe         0064B6E4
 0064B6C6    mov         byte ptr [ebx+423],1;TAccelerometerObject.UnSwishLeft:Boolean
 0064B6CD    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064B6D4    jne         0064B6E4
 0064B6D6    mov         byte ptr [ebx+42E],0C;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064B6DD    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064B6E4    fld         qword ptr [ebp+8]
 0064B6E7    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064B6ED    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064B6F3    fcompp
 0064B6F5    wait
 0064B6F6    fnstsw      al
 0064B6F8    sahf
>0064B6F9    jae         0064B73F
 0064B6FB    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064B702    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064B709    je          0064B71D
 0064B70B    cmp         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
>0064B712    je          0064B71D
 0064B714    mov         byte ptr [ebx+42C],6;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
>0064B71B    jmp         0064B73F
 0064B71D    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064B724    je          0064B738
 0064B726    cmp         byte ptr [ebx+423],0;TAccelerometerObject.UnSwishLeft:Boolean
>0064B72D    je          0064B738
 0064B72F    mov         byte ptr [ebx+42C],0C;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
>0064B736    jmp         0064B73F
 0064B738    mov         byte ptr [ebx+42C],1;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064B73F    mov         edx,11
 0064B744    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064B74A    call        TAverager.GetAvg
 0064B74F    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064B755    fsubp       st(1),st
 0064B757    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064B75D    wait
 0064B75E    fnstsw      al
 0064B760    sahf
>0064B761    jae         0064B7F8
 0064B767    mov         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
 0064B76E    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064B775    je          0064B7AC
 0064B777    cmp         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
>0064B77E    je          0064B7AC
 0064B780    mov         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
 0064B787    mov         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
 0064B78E    mov         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
 0064B795    mov         byte ptr [ebx+423],0;TAccelerometerObject.UnSwishLeft:Boolean
 0064B79C    mov         byte ptr [ebx+41E],7;TAccelerometerObject.GestureState:TGestureState
 0064B7A3    mov         byte ptr [ebx+42E],7;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064B7AA    jmp         0064B7F8
 0064B7AC    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064B7B3    je          0064B7EA
 0064B7B5    cmp         byte ptr [ebx+423],0;TAccelerometerObject.UnSwishLeft:Boolean
>0064B7BC    je          0064B7EA
 0064B7BE    mov         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
 0064B7C5    mov         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
 0064B7CC    mov         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
 0064B7D3    mov         byte ptr [ebx+423],0;TAccelerometerObject.UnSwishLeft:Boolean
 0064B7DA    mov         byte ptr [ebx+41E],9;TAccelerometerObject.GestureState:TGestureState
 0064B7E1    mov         byte ptr [ebx+42E],0D;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064B7E8    jmp         0064B7F8
 0064B7EA    mov         byte ptr [ebx+41E],3;TAccelerometerObject.GestureState:TGestureState
 0064B7F1    mov         byte ptr [ebx+42E],2;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064B7F8    cmp         byte ptr [ebx+41E],3;TAccelerometerObject.GestureState:TGestureState
>0064B7FF    jne         0064B858
 0064B801    fld         qword ptr [ebp+8]
 0064B804    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064B80A    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064B810    fcompp
 0064B812    wait
 0064B813    fnstsw      al
 0064B815    sahf
>0064B816    jae         0064B826
 0064B818    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064B81F    mov         byte ptr [ebx+42C],2;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064B826    mov         edx,11
 0064B82B    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064B831    call        TAverager.GetAvg
 0064B836    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064B83C    fsubp       st(1),st
 0064B83E    fcomp       dword ptr ds:[64E7AC];3:Single
 0064B844    wait
 0064B845    fnstsw      al
 0064B847    sahf
>0064B848    jbe         0064B858
 0064B84A    mov         byte ptr [ebx+41E],4;TAccelerometerObject.GestureState:TGestureState
 0064B851    mov         byte ptr [ebx+42E],3;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064B858    cmp         byte ptr [ebx+41E],4;TAccelerometerObject.GestureState:TGestureState
>0064B85F    jne         0064B914
 0064B865    mov         edx,32
 0064B86A    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064B870    call        TAverager.GetAvg
 0064B875    fcomp       dword ptr ds:[64E7D0];5:Single
 0064B87B    wait
 0064B87C    fnstsw      al
 0064B87E    sahf
>0064B87F    jbe         0064B88A
 0064B881    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
>0064B888    jmp         0064B8AD
 0064B88A    mov         edx,32
 0064B88F    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064B895    call        TAverager.GetAvg
 0064B89A    fcomp       dword ptr ds:[64E7D4];-5:Single
 0064B8A0    wait
 0064B8A1    fnstsw      al
 0064B8A3    sahf
>0064B8A4    jae         0064B8AD
 0064B8A6    mov         byte ptr [ebx+420],1;TAccelerometerObject.SwishLeft:Boolean
 0064B8AD    fld         qword ptr [ebp+8]
 0064B8B0    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064B8B6    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064B8BC    fcompp
 0064B8BE    wait
 0064B8BF    fnstsw      al
 0064B8C1    sahf
>0064B8C2    jae         0064B8D2
 0064B8C4    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064B8CB    mov         byte ptr [ebx+42C],3;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064B8D2    mov         edx,11
 0064B8D7    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064B8DD    call        TAverager.GetAvg
 0064B8E2    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064B8E8    fsubp       st(1),st
 0064B8EA    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064B8F0    wait
 0064B8F1    fnstsw      al
 0064B8F3    sahf
>0064B8F4    jae         0064B914
 0064B8F6    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064B8FD    jne         0064B906
 0064B8FF    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
 0064B906    mov         byte ptr [ebx+41E],5;TAccelerometerObject.GestureState:TGestureState
 0064B90D    mov         byte ptr [ebx+42E],4;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064B914    cmp         byte ptr [ebx+41E],5;TAccelerometerObject.GestureState:TGestureState
>0064B91B    jne         0064B974
 0064B91D    fld         qword ptr [ebp+8]
 0064B920    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064B926    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064B92C    fcompp
 0064B92E    wait
 0064B92F    fnstsw      al
 0064B931    sahf
>0064B932    jae         0064B942
 0064B934    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064B93B    mov         byte ptr [ebx+42C],4;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064B942    mov         edx,11
 0064B947    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064B94D    call        TAverager.GetAvg
 0064B952    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064B958    fsubp       st(1),st
 0064B95A    fcomp       dword ptr ds:[64E7AC];3:Single
 0064B960    wait
 0064B961    fnstsw      al
 0064B963    sahf
>0064B964    jbe         0064B974
 0064B966    mov         byte ptr [ebx+41E],6;TAccelerometerObject.GestureState:TGestureState
 0064B96D    mov         byte ptr [ebx+42E],5;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064B974    cmp         byte ptr [ebx+41E],6;TAccelerometerObject.GestureState:TGestureState
>0064B97B    jne         0064B984
 0064B97D    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064B984    cmp         byte ptr [ebx+41E],7;TAccelerometerObject.GestureState:TGestureState
>0064B98B    jne         0064BB3B
 0064B991    fld         qword ptr [ebp+8]
 0064B994    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064B99A    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064B9A0    fcompp
 0064B9A2    wait
 0064B9A3    fnstsw      al
 0064B9A5    sahf
>0064B9A6    jae         0064B9B6
 0064B9A8    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064B9AF    mov         byte ptr [ebx+42C],7;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064B9B6    mov         edx,0A
 0064B9BB    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064B9C1    call        TAverager.GetAvg
 0064B9C6    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064B9CC    wait
 0064B9CD    fnstsw      al
 0064B9CF    sahf
>0064B9D0    jae         0064B9FD
 0064B9D2    mov         edx,0F
 0064B9D7    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064B9DD    call        TAverager.GetAvg
 0064B9E2    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064B9E8    fsubp       st(1),st
 0064B9EA    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064B9F0    wait
 0064B9F1    fnstsw      al
 0064B9F3    sahf
>0064B9F4    jae         0064B9FD
 0064B9F6    mov         byte ptr [ebx+425],1;TAccelerometerObject.AntiSwish:Boolean
 0064B9FD    cmp         byte ptr [ebx+425],0;TAccelerometerObject.AntiSwish:Boolean
>0064BA04    je          0064BA5B
 0064BA06    mov         edx,0A
 0064BA0B    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064BA11    call        TAverager.GetAvg
 0064BA16    fcomp       dword ptr ds:[64E7AC];3:Single
 0064BA1C    wait
 0064BA1D    fnstsw      al
 0064BA1F    sahf
>0064BA20    jbe         0064BA5B
 0064BA22    mov         edx,0F
 0064BA27    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BA2D    call        TAverager.GetAvg
 0064BA32    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BA38    fsubp       st(1),st
 0064BA3A    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064BA40    wait
 0064BA41    fnstsw      al
 0064BA43    sahf
>0064BA44    jae         0064BA5B
 0064BA46    mov         byte ptr [ebx+428],1;TAccelerometerObject.AntiUnswish:Boolean
 0064BA4D    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064BA54    mov         byte ptr [ebx+42E],45;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064BA5B    mov         edx,0A
 0064BA60    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064BA66    call        TAverager.GetAvg
 0064BA6B    fcomp       dword ptr ds:[64E7AC];3:Single
 0064BA71    wait
 0064BA72    fnstsw      al
 0064BA74    sahf
>0064BA75    jbe         0064BAA2
 0064BA77    mov         edx,0F
 0064BA7C    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BA82    call        TAverager.GetAvg
 0064BA87    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BA8D    fsubp       st(1),st
 0064BA8F    fcomp       dword ptr ds:[64E7BC];2:Single
 0064BA95    wait
 0064BA96    fnstsw      al
 0064BA98    sahf
>0064BA99    jbe         0064BAA2
 0064BA9B    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064BAA2    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064BAA9    je          0064BB09
 0064BAAB    mov         edx,0A
 0064BAB0    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064BAB6    call        TAverager.GetAvg
 0064BABB    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064BAC1    wait
 0064BAC2    fnstsw      al
 0064BAC4    sahf
>0064BAC5    jae         0064BB09
 0064BAC7    mov         edx,0F
 0064BACC    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BAD2    call        TAverager.GetAvg
 0064BAD7    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BADD    fsubp       st(1),st
 0064BADF    fcomp       dword ptr ds:[64E7BC];2:Single
 0064BAE5    wait
 0064BAE6    fnstsw      al
 0064BAE8    sahf
>0064BAE9    jbe         0064BB09
 0064BAEB    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064BAF2    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064BAF9    jne         0064BB09
 0064BAFB    mov         byte ptr [ebx+42E],0A;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064BB02    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064BB09    mov         edx,11
 0064BB0E    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BB14    call        TAverager.GetAvg
 0064BB19    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BB1F    fsubp       st(1),st
 0064BB21    fcomp       dword ptr ds:[64E7AC];3:Single
 0064BB27    wait
 0064BB28    fnstsw      al
 0064BB2A    sahf
>0064BB2B    jbe         0064BB3B
 0064BB2D    mov         byte ptr [ebx+41E],8;TAccelerometerObject.GestureState:TGestureState
 0064BB34    mov         byte ptr [ebx+42E],8;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064BB3B    cmp         byte ptr [ebx+41E],8;TAccelerometerObject.GestureState:TGestureState
>0064BB42    jne         0064BD26
 0064BB48    mov         edx,0A
 0064BB4D    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064BB53    call        TAverager.GetAvg
 0064BB58    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064BB5E    wait
 0064BB5F    fnstsw      al
 0064BB61    sahf
>0064BB62    jae         0064BB8F
 0064BB64    mov         edx,0F
 0064BB69    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BB6F    call        TAverager.GetAvg
 0064BB74    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BB7A    fsubp       st(1),st
 0064BB7C    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064BB82    wait
 0064BB83    fnstsw      al
 0064BB85    sahf
>0064BB86    jae         0064BB8F
 0064BB88    mov         byte ptr [ebx+425],1;TAccelerometerObject.AntiSwish:Boolean
 0064BB8F    cmp         byte ptr [ebx+425],0;TAccelerometerObject.AntiSwish:Boolean
>0064BB96    je          0064BBED
 0064BB98    mov         edx,0A
 0064BB9D    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064BBA3    call        TAverager.GetAvg
 0064BBA8    fcomp       dword ptr ds:[64E7AC];3:Single
 0064BBAE    wait
 0064BBAF    fnstsw      al
 0064BBB1    sahf
>0064BBB2    jbe         0064BBED
 0064BBB4    mov         edx,0F
 0064BBB9    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BBBF    call        TAverager.GetAvg
 0064BBC4    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BBCA    fsubp       st(1),st
 0064BBCC    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064BBD2    wait
 0064BBD3    fnstsw      al
 0064BBD5    sahf
>0064BBD6    jae         0064BBED
 0064BBD8    mov         byte ptr [ebx+428],1;TAccelerometerObject.AntiUnswish:Boolean
 0064BBDF    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064BBE6    mov         byte ptr [ebx+42E],45;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064BBED    mov         edx,0A
 0064BBF2    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064BBF8    call        TAverager.GetAvg
 0064BBFD    fcomp       dword ptr ds:[64E7AC];3:Single
 0064BC03    wait
 0064BC04    fnstsw      al
 0064BC06    sahf
>0064BC07    jbe         0064BC34
 0064BC09    mov         edx,0F
 0064BC0E    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BC14    call        TAverager.GetAvg
 0064BC19    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BC1F    fsubp       st(1),st
 0064BC21    fcomp       dword ptr ds:[64E7BC];2:Single
 0064BC27    wait
 0064BC28    fnstsw      al
 0064BC2A    sahf
>0064BC2B    jbe         0064BC34
 0064BC2D    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064BC34    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064BC3B    je          0064BC9B
 0064BC3D    mov         edx,0A
 0064BC42    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064BC48    call        TAverager.GetAvg
 0064BC4D    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064BC53    wait
 0064BC54    fnstsw      al
 0064BC56    sahf
>0064BC57    jae         0064BC9B
 0064BC59    mov         edx,0F
 0064BC5E    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BC64    call        TAverager.GetAvg
 0064BC69    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BC6F    fsubp       st(1),st
 0064BC71    fcomp       dword ptr ds:[64E7BC];2:Single
 0064BC77    wait
 0064BC78    fnstsw      al
 0064BC7A    sahf
>0064BC7B    jbe         0064BC9B
 0064BC7D    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064BC84    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064BC8B    jne         0064BC9B
 0064BC8D    mov         byte ptr [ebx+42E],0A;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064BC94    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064BC9B    fld         qword ptr [ebp+8]
 0064BC9E    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064BCA4    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064BCAA    fcompp
 0064BCAC    wait
 0064BCAD    fnstsw      al
 0064BCAF    sahf
>0064BCB0    jae         0064BCDB
 0064BCB2    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064BCB9    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064BCC0    je          0064BCCB
 0064BCC2    cmp         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
>0064BCC9    jne         0064BCD4
 0064BCCB    mov         byte ptr [ebx+42C],8;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
>0064BCD2    jmp         0064BCDB
 0064BCD4    mov         byte ptr [ebx+42C],0A;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064BCDB    mov         edx,11
 0064BCE0    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BCE6    call        TAverager.GetAvg
 0064BCEB    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BCF1    fsubp       st(1),st
 0064BCF3    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064BCF9    wait
 0064BCFA    fnstsw      al
 0064BCFC    sahf
>0064BCFD    jae         0064BD26
 0064BCFF    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064BD06    je          0064BD18
 0064BD08    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064BD0F    mov         byte ptr [ebx+42E],0B;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064BD16    jmp         0064BD26
 0064BD18    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064BD1F    mov         byte ptr [ebx+42E],9;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064BD26    cmp         byte ptr [ebx+41E],9;TAccelerometerObject.GestureState:TGestureState
>0064BD2D    jne         0064BEDD
 0064BD33    fld         qword ptr [ebp+8]
 0064BD36    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064BD3C    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064BD42    fcompp
 0064BD44    wait
 0064BD45    fnstsw      al
 0064BD47    sahf
>0064BD48    jae         0064BD58
 0064BD4A    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064BD51    mov         byte ptr [ebx+42C],0D;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064BD58    mov         edx,0A
 0064BD5D    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064BD63    call        TAverager.GetAvg
 0064BD68    fcomp       dword ptr ds:[64E7AC];3:Single
 0064BD6E    wait
 0064BD6F    fnstsw      al
 0064BD71    sahf
>0064BD72    jbe         0064BD9F
 0064BD74    mov         edx,0F
 0064BD79    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BD7F    call        TAverager.GetAvg
 0064BD84    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BD8A    fsubp       st(1),st
 0064BD8C    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064BD92    wait
 0064BD93    fnstsw      al
 0064BD95    sahf
>0064BD96    jae         0064BD9F
 0064BD98    mov         byte ptr [ebx+426],1;TAccelerometerObject.AntiSwishLeft:Boolean
 0064BD9F    cmp         byte ptr [ebx+426],0;TAccelerometerObject.AntiSwishLeft:Boolean
>0064BDA6    je          0064BDFD
 0064BDA8    mov         edx,0A
 0064BDAD    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064BDB3    call        TAverager.GetAvg
 0064BDB8    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064BDBE    wait
 0064BDBF    fnstsw      al
 0064BDC1    sahf
>0064BDC2    jae         0064BDFD
 0064BDC4    mov         edx,0F
 0064BDC9    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BDCF    call        TAverager.GetAvg
 0064BDD4    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BDDA    fsubp       st(1),st
 0064BDDC    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064BDE2    wait
 0064BDE3    fnstsw      al
 0064BDE5    sahf
>0064BDE6    jae         0064BDFD
 0064BDE8    mov         byte ptr [ebx+429],1;TAccelerometerObject.AntiUnswishLeft:Boolean
 0064BDEF    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064BDF6    mov         byte ptr [ebx+42E],46;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064BDFD    mov         edx,0A
 0064BE02    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064BE08    call        TAverager.GetAvg
 0064BE0D    fcomp       dword ptr ds:[64E7AC];3:Single
 0064BE13    wait
 0064BE14    fnstsw      al
 0064BE16    sahf
>0064BE17    jbe         0064BE44
 0064BE19    mov         edx,0F
 0064BE1E    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BE24    call        TAverager.GetAvg
 0064BE29    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BE2F    fsubp       st(1),st
 0064BE31    fcomp       dword ptr ds:[64E7BC];2:Single
 0064BE37    wait
 0064BE38    fnstsw      al
 0064BE3A    sahf
>0064BE3B    jbe         0064BE44
 0064BE3D    mov         byte ptr [ebx+420],1;TAccelerometerObject.SwishLeft:Boolean
 0064BE44    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064BE4B    je          0064BEAB
 0064BE4D    mov         edx,0A
 0064BE52    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064BE58    call        TAverager.GetAvg
 0064BE5D    fcomp       dword ptr ds:[64E7AC];3:Single
 0064BE63    wait
 0064BE64    fnstsw      al
 0064BE66    sahf
>0064BE67    jbe         0064BEAB
 0064BE69    mov         edx,0F
 0064BE6E    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BE74    call        TAverager.GetAvg
 0064BE79    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BE7F    fsubp       st(1),st
 0064BE81    fcomp       dword ptr ds:[64E7BC];2:Single
 0064BE87    wait
 0064BE88    fnstsw      al
 0064BE8A    sahf
>0064BE8B    jbe         0064BEAB
 0064BE8D    mov         byte ptr [ebx+423],1;TAccelerometerObject.UnSwishLeft:Boolean
 0064BE94    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064BE9B    jne         0064BEAB
 0064BE9D    mov         byte ptr [ebx+42E],10;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064BEA4    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064BEAB    mov         edx,11
 0064BEB0    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BEB6    call        TAverager.GetAvg
 0064BEBB    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BEC1    fsubp       st(1),st
 0064BEC3    fcomp       dword ptr ds:[64E7AC];3:Single
 0064BEC9    wait
 0064BECA    fnstsw      al
 0064BECC    sahf
>0064BECD    jbe         0064BEDD
 0064BECF    mov         byte ptr [ebx+41E],0A;TAccelerometerObject.GestureState:TGestureState
 0064BED6    mov         byte ptr [ebx+42E],0E;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064BEDD    cmp         byte ptr [ebx+41E],0A;TAccelerometerObject.GestureState:TGestureState
>0064BEE4    jne         0064C0CF
 0064BEEA    mov         edx,0A
 0064BEEF    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064BEF5    call        TAverager.GetAvg
 0064BEFA    fcomp       dword ptr ds:[64E7AC];3:Single
 0064BF00    wait
 0064BF01    fnstsw      al
 0064BF03    sahf
>0064BF04    jbe         0064BF31
 0064BF06    mov         edx,0F
 0064BF0B    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BF11    call        TAverager.GetAvg
 0064BF16    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BF1C    fsubp       st(1),st
 0064BF1E    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064BF24    wait
 0064BF25    fnstsw      al
 0064BF27    sahf
>0064BF28    jae         0064BF31
 0064BF2A    mov         byte ptr [ebx+426],1;TAccelerometerObject.AntiSwishLeft:Boolean
 0064BF31    cmp         byte ptr [ebx+426],0;TAccelerometerObject.AntiSwishLeft:Boolean
>0064BF38    je          0064BF8F
 0064BF3A    mov         edx,0A
 0064BF3F    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064BF45    call        TAverager.GetAvg
 0064BF4A    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064BF50    wait
 0064BF51    fnstsw      al
 0064BF53    sahf
>0064BF54    jae         0064BF8F
 0064BF56    mov         edx,0F
 0064BF5B    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BF61    call        TAverager.GetAvg
 0064BF66    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BF6C    fsubp       st(1),st
 0064BF6E    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064BF74    wait
 0064BF75    fnstsw      al
 0064BF77    sahf
>0064BF78    jae         0064BF8F
 0064BF7A    mov         byte ptr [ebx+429],1;TAccelerometerObject.AntiUnswishLeft:Boolean
 0064BF81    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064BF88    mov         byte ptr [ebx+42E],46;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064BF8F    mov         edx,0A
 0064BF94    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064BF9A    call        TAverager.GetAvg
 0064BF9F    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064BFA5    wait
 0064BFA6    fnstsw      al
 0064BFA8    sahf
>0064BFA9    jae         0064BFD6
 0064BFAB    mov         edx,0F
 0064BFB0    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064BFB6    call        TAverager.GetAvg
 0064BFBB    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064BFC1    fsubp       st(1),st
 0064BFC3    fcomp       dword ptr ds:[64E7BC];2:Single
 0064BFC9    wait
 0064BFCA    fnstsw      al
 0064BFCC    sahf
>0064BFCD    jbe         0064BFD6
 0064BFCF    mov         byte ptr [ebx+420],1;TAccelerometerObject.SwishLeft:Boolean
 0064BFD6    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064BFDD    je          0064C03D
 0064BFDF    mov         edx,0A
 0064BFE4    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064BFEA    call        TAverager.GetAvg
 0064BFEF    fcomp       dword ptr ds:[64E7AC];3:Single
 0064BFF5    wait
 0064BFF6    fnstsw      al
 0064BFF8    sahf
>0064BFF9    jbe         0064C03D
 0064BFFB    mov         edx,0F
 0064C000    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C006    call        TAverager.GetAvg
 0064C00B    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C011    fsubp       st(1),st
 0064C013    fcomp       dword ptr ds:[64E7BC];2:Single
 0064C019    wait
 0064C01A    fnstsw      al
 0064C01C    sahf
>0064C01D    jbe         0064C03D
 0064C01F    mov         byte ptr [ebx+423],1;TAccelerometerObject.UnSwishLeft:Boolean
 0064C026    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064C02D    jne         0064C03D
 0064C02F    mov         byte ptr [ebx+42E],10;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064C036    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064C03D    fld         qword ptr [ebp+8]
 0064C040    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064C046    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064C04C    fcompp
 0064C04E    wait
 0064C04F    fnstsw      al
 0064C051    sahf
>0064C052    jae         0064C07D
 0064C054    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064C05B    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064C062    je          0064C06D
 0064C064    cmp         byte ptr [ebx+423],0;TAccelerometerObject.UnSwishLeft:Boolean
>0064C06B    jne         0064C076
 0064C06D    mov         byte ptr [ebx+42C],0E;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
>0064C074    jmp         0064C07D
 0064C076    mov         byte ptr [ebx+42C],10;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064C07D    mov         edx,11
 0064C082    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C088    call        TAverager.GetAvg
 0064C08D    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C093    fsubp       st(1),st
 0064C095    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064C09B    wait
 0064C09C    fnstsw      al
 0064C09E    sahf
>0064C09F    jae         0064C0CF
 0064C0A1    mov         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
 0064C0A8    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064C0AF    je          0064C0C1
 0064C0B1    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064C0B8    mov         byte ptr [ebx+42E],11;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064C0BF    jmp         0064C0CF
 0064C0C1    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064C0C8    mov         byte ptr [ebx+42E],0F;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064C0CF    cmp         byte ptr [ebx+41E],15;TAccelerometerObject.GestureState:TGestureState
>0064C0D6    jne         0064C280
 0064C0DC    mov         edx,0A
 0064C0E1    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C0E7    call        TAverager.GetAvg
 0064C0EC    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C0F2    fsubp       st(1),st
 0064C0F4    fcomp       dword ptr ds:[64E7AC];3:Single
 0064C0FA    wait
 0064C0FB    fnstsw      al
 0064C0FD    sahf
>0064C0FE    jbe         0064C123
 0064C100    mov         edx,0F
 0064C105    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C10B    call        TAverager.GetAvg
 0064C110    fcomp       dword ptr ds:[64E7BC];2:Single
 0064C116    wait
 0064C117    fnstsw      al
 0064C119    sahf
>0064C11A    jbe         0064C123
 0064C11C    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064C123    mov         edx,0A
 0064C128    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C12E    call        TAverager.GetAvg
 0064C133    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C139    fsubp       st(1),st
 0064C13B    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064C141    wait
 0064C142    fnstsw      al
 0064C144    sahf
>0064C145    jae         0064C16A
 0064C147    mov         edx,0F
 0064C14C    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C152    call        TAverager.GetAvg
 0064C157    fcomp       dword ptr ds:[64E7BC];2:Single
 0064C15D    wait
 0064C15E    fnstsw      al
 0064C160    sahf
>0064C161    jbe         0064C16A
 0064C163    mov         byte ptr [ebx+421],1;TAccelerometerObject.SwishDown:Boolean
 0064C16A    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064C171    je          0064C1D1
 0064C173    mov         edx,0A
 0064C178    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C17E    call        TAverager.GetAvg
 0064C183    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C189    fsubp       st(1),st
 0064C18B    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064C191    wait
 0064C192    fnstsw      al
 0064C194    sahf
>0064C195    jae         0064C1D1
 0064C197    mov         edx,0F
 0064C19C    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C1A2    call        TAverager.GetAvg
 0064C1A7    fcomp       dword ptr ds:[64E7BC];2:Single
 0064C1AD    wait
 0064C1AE    fnstsw      al
 0064C1B0    sahf
>0064C1B1    jbe         0064C1D1
 0064C1B3    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064C1BA    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064C1C1    jne         0064C1D1
 0064C1C3    mov         byte ptr [ebx+42E],28;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064C1CA    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064C1D1    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064C1D8    je          0064C238
 0064C1DA    mov         edx,0A
 0064C1DF    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C1E5    call        TAverager.GetAvg
 0064C1EA    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C1F0    fsubp       st(1),st
 0064C1F2    fcomp       dword ptr ds:[64E7AC];3:Single
 0064C1F8    wait
 0064C1F9    fnstsw      al
 0064C1FB    sahf
>0064C1FC    jbe         0064C238
 0064C1FE    mov         edx,0F
 0064C203    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C209    call        TAverager.GetAvg
 0064C20E    fcomp       dword ptr ds:[64E7BC];2:Single
 0064C214    wait
 0064C215    fnstsw      al
 0064C217    sahf
>0064C218    jbe         0064C238
 0064C21A    mov         byte ptr [ebx+424],1;TAccelerometerObject.UnSwishDown:Boolean
 0064C221    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064C228    jne         0064C238
 0064C22A    mov         byte ptr [ebx+42E],2E;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064C231    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064C238    mov         edx,11
 0064C23D    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C243    call        TAverager.GetAvg
 0064C248    fcomp       dword ptr ds:[64E7AC];3:Single
 0064C24E    wait
 0064C24F    fnstsw      al
 0064C251    sahf
>0064C252    jbe         0064C25B
 0064C254    mov         byte ptr [ebx+41E],16;TAccelerometerObject.GestureState:TGestureState
 0064C25B    fld         qword ptr [ebp+8]
 0064C25E    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064C264    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064C26A    fcompp
 0064C26C    wait
 0064C26D    fnstsw      al
 0064C26F    sahf
>0064C270    jae         0064C280
 0064C272    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064C279    mov         byte ptr [ebx+42C],23;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064C280    cmp         byte ptr [ebx+41E],16;TAccelerometerObject.GestureState:TGestureState
>0064C287    jne         0064C4F5
 0064C28D    mov         edx,0A
 0064C292    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C298    call        TAverager.GetAvg
 0064C29D    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C2A3    fsubp       st(1),st
 0064C2A5    fcomp       dword ptr ds:[64E7AC];3:Single
 0064C2AB    wait
 0064C2AC    fnstsw      al
 0064C2AE    sahf
>0064C2AF    jbe         0064C2D4
 0064C2B1    mov         edx,0F
 0064C2B6    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C2BC    call        TAverager.GetAvg
 0064C2C1    fcomp       dword ptr ds:[64E7BC];2:Single
 0064C2C7    wait
 0064C2C8    fnstsw      al
 0064C2CA    sahf
>0064C2CB    jbe         0064C2D4
 0064C2CD    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064C2D4    mov         edx,0A
 0064C2D9    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C2DF    call        TAverager.GetAvg
 0064C2E4    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C2EA    fsubp       st(1),st
 0064C2EC    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064C2F2    wait
 0064C2F3    fnstsw      al
 0064C2F5    sahf
>0064C2F6    jae         0064C31B
 0064C2F8    mov         edx,0F
 0064C2FD    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C303    call        TAverager.GetAvg
 0064C308    fcomp       dword ptr ds:[64E7BC];2:Single
 0064C30E    wait
 0064C30F    fnstsw      al
 0064C311    sahf
>0064C312    jbe         0064C31B
 0064C314    mov         byte ptr [ebx+421],1;TAccelerometerObject.SwishDown:Boolean
 0064C31B    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064C322    je          0064C382
 0064C324    mov         edx,0A
 0064C329    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C32F    call        TAverager.GetAvg
 0064C334    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C33A    fsubp       st(1),st
 0064C33C    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064C342    wait
 0064C343    fnstsw      al
 0064C345    sahf
>0064C346    jae         0064C382
 0064C348    mov         edx,0F
 0064C34D    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C353    call        TAverager.GetAvg
 0064C358    fcomp       dword ptr ds:[64E7BC];2:Single
 0064C35E    wait
 0064C35F    fnstsw      al
 0064C361    sahf
>0064C362    jbe         0064C382
 0064C364    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064C36B    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064C372    jne         0064C382
 0064C374    mov         byte ptr [ebx+42E],28;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064C37B    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064C382    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064C389    je          0064C3E9
 0064C38B    mov         edx,0A
 0064C390    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C396    call        TAverager.GetAvg
 0064C39B    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C3A1    fsubp       st(1),st
 0064C3A3    fcomp       dword ptr ds:[64E7AC];3:Single
 0064C3A9    wait
 0064C3AA    fnstsw      al
 0064C3AC    sahf
>0064C3AD    jbe         0064C3E9
 0064C3AF    mov         edx,0F
 0064C3B4    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C3BA    call        TAverager.GetAvg
 0064C3BF    fcomp       dword ptr ds:[64E7BC];2:Single
 0064C3C5    wait
 0064C3C6    fnstsw      al
 0064C3C8    sahf
>0064C3C9    jbe         0064C3E9
 0064C3CB    mov         byte ptr [ebx+424],1;TAccelerometerObject.UnSwishDown:Boolean
 0064C3D2    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064C3D9    jne         0064C3E9
 0064C3DB    mov         byte ptr [ebx+42E],2E;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064C3E2    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064C3E9    fld         qword ptr [ebp+8]
 0064C3EC    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064C3F2    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064C3F8    fcompp
 0064C3FA    wait
 0064C3FB    fnstsw      al
 0064C3FD    sahf
>0064C3FE    jae         0064C444
 0064C400    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064C407    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064C40E    je          0064C422
 0064C410    cmp         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
>0064C417    je          0064C422
 0064C419    mov         byte ptr [ebx+42C],28;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
>0064C420    jmp         0064C444
 0064C422    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064C429    je          0064C43D
 0064C42B    cmp         byte ptr [ebx+424],0;TAccelerometerObject.UnSwishDown:Boolean
>0064C432    je          0064C43D
 0064C434    mov         byte ptr [ebx+42C],2E;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
>0064C43B    jmp         0064C444
 0064C43D    mov         byte ptr [ebx+42C],23;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064C444    mov         edx,11
 0064C449    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C44F    call        TAverager.GetAvg
 0064C454    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064C45A    wait
 0064C45B    fnstsw      al
 0064C45D    sahf
>0064C45E    jae         0064C4F5
 0064C464    mov         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
 0064C46B    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064C472    je          0064C4A9
 0064C474    cmp         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
>0064C47B    je          0064C4A9
 0064C47D    mov         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
 0064C484    mov         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
 0064C48B    mov         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
 0064C492    mov         byte ptr [ebx+424],0;TAccelerometerObject.UnSwishDown:Boolean
 0064C499    mov         byte ptr [ebx+41E],1B;TAccelerometerObject.GestureState:TGestureState
 0064C4A0    mov         byte ptr [ebx+42E],29;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064C4A7    jmp         0064C4F5
 0064C4A9    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064C4B0    je          0064C4E7
 0064C4B2    cmp         byte ptr [ebx+424],0;TAccelerometerObject.UnSwishDown:Boolean
>0064C4B9    je          0064C4E7
 0064C4BB    mov         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
 0064C4C2    mov         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
 0064C4C9    mov         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
 0064C4D0    mov         byte ptr [ebx+424],0;TAccelerometerObject.UnSwishDown:Boolean
 0064C4D7    mov         byte ptr [ebx+41E],1D;TAccelerometerObject.GestureState:TGestureState
 0064C4DE    mov         byte ptr [ebx+42E],2F;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064C4E5    jmp         0064C4F5
 0064C4E7    mov         byte ptr [ebx+41E],17;TAccelerometerObject.GestureState:TGestureState
 0064C4EE    mov         byte ptr [ebx+42E],24;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064C4F5    cmp         byte ptr [ebx+41E],17;TAccelerometerObject.GestureState:TGestureState
>0064C4FC    jne         0064C54D
 0064C4FE    fld         qword ptr [ebp+8]
 0064C501    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064C507    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064C50D    fcompp
 0064C50F    wait
 0064C510    fnstsw      al
 0064C512    sahf
>0064C513    jae         0064C523
 0064C515    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064C51C    mov         byte ptr [ebx+42C],24;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064C523    mov         edx,11
 0064C528    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C52E    call        TAverager.GetAvg
 0064C533    fcomp       dword ptr ds:[64E7AC];3:Single
 0064C539    wait
 0064C53A    fnstsw      al
 0064C53C    sahf
>0064C53D    jbe         0064C54D
 0064C53F    mov         byte ptr [ebx+41E],18;TAccelerometerObject.GestureState:TGestureState
 0064C546    mov         byte ptr [ebx+42E],25;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064C54D    cmp         byte ptr [ebx+41E],18;TAccelerometerObject.GestureState:TGestureState
>0064C554    jne         0064C611
 0064C55A    mov         edx,32
 0064C55F    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C565    call        TAverager.GetAvg
 0064C56A    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C570    fsubp       st(1),st
 0064C572    fcomp       dword ptr ds:[64E7D0];5:Single
 0064C578    wait
 0064C579    fnstsw      al
 0064C57B    sahf
>0064C57C    jbe         0064C587
 0064C57E    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
>0064C585    jmp         0064C5B2
 0064C587    mov         edx,32
 0064C58C    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C592    call        TAverager.GetAvg
 0064C597    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C59D    fsubp       st(1),st
 0064C59F    fcomp       dword ptr ds:[64E7D4];-5:Single
 0064C5A5    wait
 0064C5A6    fnstsw      al
 0064C5A8    sahf
>0064C5A9    jae         0064C5B2
 0064C5AB    mov         byte ptr [ebx+421],1;TAccelerometerObject.SwishDown:Boolean
 0064C5B2    fld         qword ptr [ebp+8]
 0064C5B5    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064C5BB    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064C5C1    fcompp
 0064C5C3    wait
 0064C5C4    fnstsw      al
 0064C5C6    sahf
>0064C5C7    jae         0064C5D7
 0064C5C9    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064C5D0    mov         byte ptr [ebx+42C],25;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064C5D7    mov         edx,11
 0064C5DC    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C5E2    call        TAverager.GetAvg
 0064C5E7    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064C5ED    wait
 0064C5EE    fnstsw      al
 0064C5F0    sahf
>0064C5F1    jae         0064C611
 0064C5F3    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064C5FA    jne         0064C603
 0064C5FC    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
 0064C603    mov         byte ptr [ebx+41E],19;TAccelerometerObject.GestureState:TGestureState
 0064C60A    mov         byte ptr [ebx+42E],26;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064C611    cmp         byte ptr [ebx+41E],19;TAccelerometerObject.GestureState:TGestureState
>0064C618    jne         0064C669
 0064C61A    fld         qword ptr [ebp+8]
 0064C61D    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064C623    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064C629    fcompp
 0064C62B    wait
 0064C62C    fnstsw      al
 0064C62E    sahf
>0064C62F    jae         0064C63F
 0064C631    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064C638    mov         byte ptr [ebx+42C],26;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064C63F    mov         edx,11
 0064C644    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C64A    call        TAverager.GetAvg
 0064C64F    fcomp       dword ptr ds:[64E7AC];3:Single
 0064C655    wait
 0064C656    fnstsw      al
 0064C658    sahf
>0064C659    jbe         0064C669
 0064C65B    mov         byte ptr [ebx+41E],1A;TAccelerometerObject.GestureState:TGestureState
 0064C662    mov         byte ptr [ebx+42E],27;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064C669    cmp         byte ptr [ebx+41E],1A;TAccelerometerObject.GestureState:TGestureState
>0064C670    jne         0064C679
 0064C672    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064C679    cmp         byte ptr [ebx+41E],1B;TAccelerometerObject.GestureState:TGestureState
>0064C680    jne         0064C828
 0064C686    fld         qword ptr [ebp+8]
 0064C689    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064C68F    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064C695    fcompp
 0064C697    wait
 0064C698    fnstsw      al
 0064C69A    sahf
>0064C69B    jae         0064C6AB
 0064C69D    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064C6A4    mov         byte ptr [ebx+42C],29;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064C6AB    mov         edx,0A
 0064C6B0    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C6B6    call        TAverager.GetAvg
 0064C6BB    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C6C1    fsubp       st(1),st
 0064C6C3    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064C6C9    wait
 0064C6CA    fnstsw      al
 0064C6CC    sahf
>0064C6CD    jae         0064C6F2
 0064C6CF    mov         edx,0F
 0064C6D4    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C6DA    call        TAverager.GetAvg
 0064C6DF    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064C6E5    wait
 0064C6E6    fnstsw      al
 0064C6E8    sahf
>0064C6E9    jae         0064C6F2
 0064C6EB    mov         byte ptr [ebx+425],1;TAccelerometerObject.AntiSwish:Boolean
 0064C6F2    cmp         byte ptr [ebx+425],0;TAccelerometerObject.AntiSwish:Boolean
>0064C6F9    je          0064C750
 0064C6FB    mov         edx,0A
 0064C700    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C706    call        TAverager.GetAvg
 0064C70B    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C711    fsubp       st(1),st
 0064C713    fcomp       dword ptr ds:[64E7AC];3:Single
 0064C719    wait
 0064C71A    fnstsw      al
 0064C71C    sahf
>0064C71D    jbe         0064C750
 0064C71F    mov         edx,0F
 0064C724    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C72A    call        TAverager.GetAvg
 0064C72F    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064C735    wait
 0064C736    fnstsw      al
 0064C738    sahf
>0064C739    jae         0064C750
 0064C73B    mov         byte ptr [ebx+428],1;TAccelerometerObject.AntiUnswish:Boolean
 0064C742    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064C749    mov         byte ptr [ebx+42E],46;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064C750    mov         edx,0A
 0064C755    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C75B    call        TAverager.GetAvg
 0064C760    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C766    fsubp       st(1),st
 0064C768    fcomp       dword ptr ds:[64E7AC];3:Single
 0064C76E    wait
 0064C76F    fnstsw      al
 0064C771    sahf
>0064C772    jbe         0064C797
 0064C774    mov         edx,0F
 0064C779    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C77F    call        TAverager.GetAvg
 0064C784    fcomp       dword ptr ds:[64E7BC];2:Single
 0064C78A    wait
 0064C78B    fnstsw      al
 0064C78D    sahf
>0064C78E    jbe         0064C797
 0064C790    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064C797    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064C79E    je          0064C7FE
 0064C7A0    mov         edx,0A
 0064C7A5    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C7AB    call        TAverager.GetAvg
 0064C7B0    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C7B6    fsubp       st(1),st
 0064C7B8    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064C7BE    wait
 0064C7BF    fnstsw      al
 0064C7C1    sahf
>0064C7C2    jae         0064C7FE
 0064C7C4    mov         edx,0F
 0064C7C9    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C7CF    call        TAverager.GetAvg
 0064C7D4    fcomp       dword ptr ds:[64E7BC];2:Single
 0064C7DA    wait
 0064C7DB    fnstsw      al
 0064C7DD    sahf
>0064C7DE    jbe         0064C7FE
 0064C7E0    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064C7E7    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064C7EE    jne         0064C7FE
 0064C7F0    mov         byte ptr [ebx+42E],2C;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064C7F7    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064C7FE    mov         edx,11
 0064C803    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C809    call        TAverager.GetAvg
 0064C80E    fcomp       dword ptr ds:[64E7AC];3:Single
 0064C814    wait
 0064C815    fnstsw      al
 0064C817    sahf
>0064C818    jbe         0064C828
 0064C81A    mov         byte ptr [ebx+41E],1C;TAccelerometerObject.GestureState:TGestureState
 0064C821    mov         byte ptr [ebx+42E],2A;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064C828    cmp         byte ptr [ebx+41E],1C;TAccelerometerObject.GestureState:TGestureState
>0064C82F    jne         0064CA0B
 0064C835    mov         edx,0A
 0064C83A    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C840    call        TAverager.GetAvg
 0064C845    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C84B    fsubp       st(1),st
 0064C84D    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064C853    wait
 0064C854    fnstsw      al
 0064C856    sahf
>0064C857    jae         0064C87C
 0064C859    mov         edx,0F
 0064C85E    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C864    call        TAverager.GetAvg
 0064C869    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064C86F    wait
 0064C870    fnstsw      al
 0064C872    sahf
>0064C873    jae         0064C87C
 0064C875    mov         byte ptr [ebx+425],1;TAccelerometerObject.AntiSwish:Boolean
 0064C87C    cmp         byte ptr [ebx+425],0;TAccelerometerObject.AntiSwish:Boolean
>0064C883    je          0064C8DA
 0064C885    mov         edx,0A
 0064C88A    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C890    call        TAverager.GetAvg
 0064C895    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C89B    fsubp       st(1),st
 0064C89D    fcomp       dword ptr ds:[64E7AC];3:Single
 0064C8A3    wait
 0064C8A4    fnstsw      al
 0064C8A6    sahf
>0064C8A7    jbe         0064C8DA
 0064C8A9    mov         edx,0F
 0064C8AE    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C8B4    call        TAverager.GetAvg
 0064C8B9    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064C8BF    wait
 0064C8C0    fnstsw      al
 0064C8C2    sahf
>0064C8C3    jae         0064C8DA
 0064C8C5    mov         byte ptr [ebx+428],1;TAccelerometerObject.AntiUnswish:Boolean
 0064C8CC    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064C8D3    mov         byte ptr [ebx+42E],46;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064C8DA    mov         edx,0A
 0064C8DF    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C8E5    call        TAverager.GetAvg
 0064C8EA    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C8F0    fsubp       st(1),st
 0064C8F2    fcomp       dword ptr ds:[64E7AC];3:Single
 0064C8F8    wait
 0064C8F9    fnstsw      al
 0064C8FB    sahf
>0064C8FC    jbe         0064C921
 0064C8FE    mov         edx,0F
 0064C903    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C909    call        TAverager.GetAvg
 0064C90E    fcomp       dword ptr ds:[64E7BC];2:Single
 0064C914    wait
 0064C915    fnstsw      al
 0064C917    sahf
>0064C918    jbe         0064C921
 0064C91A    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064C921    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064C928    je          0064C988
 0064C92A    mov         edx,0A
 0064C92F    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064C935    call        TAverager.GetAvg
 0064C93A    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064C940    fsubp       st(1),st
 0064C942    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064C948    wait
 0064C949    fnstsw      al
 0064C94B    sahf
>0064C94C    jae         0064C988
 0064C94E    mov         edx,0F
 0064C953    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C959    call        TAverager.GetAvg
 0064C95E    fcomp       dword ptr ds:[64E7BC];2:Single
 0064C964    wait
 0064C965    fnstsw      al
 0064C967    sahf
>0064C968    jbe         0064C988
 0064C96A    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064C971    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064C978    jne         0064C988
 0064C97A    mov         byte ptr [ebx+42E],2C;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064C981    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064C988    fld         qword ptr [ebp+8]
 0064C98B    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064C991    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064C997    fcompp
 0064C999    wait
 0064C99A    fnstsw      al
 0064C99C    sahf
>0064C99D    jae         0064C9C8
 0064C99F    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064C9A6    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064C9AD    je          0064C9B8
 0064C9AF    cmp         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
>0064C9B6    jne         0064C9C1
 0064C9B8    mov         byte ptr [ebx+42C],2A;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
>0064C9BF    jmp         0064C9C8
 0064C9C1    mov         byte ptr [ebx+42C],2C;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064C9C8    mov         edx,11
 0064C9CD    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064C9D3    call        TAverager.GetAvg
 0064C9D8    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064C9DE    wait
 0064C9DF    fnstsw      al
 0064C9E1    sahf
>0064C9E2    jae         0064CA0B
 0064C9E4    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064C9EB    je          0064C9FD
 0064C9ED    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064C9F4    mov         byte ptr [ebx+42E],2D;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064C9FB    jmp         0064CA0B
 0064C9FD    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064CA04    mov         byte ptr [ebx+42E],2B;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064CA0B    cmp         byte ptr [ebx+41E],1D;TAccelerometerObject.GestureState:TGestureState
>0064CA12    jne         0064CBBA
 0064CA18    fld         qword ptr [ebp+8]
 0064CA1B    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064CA21    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064CA27    fcompp
 0064CA29    wait
 0064CA2A    fnstsw      al
 0064CA2C    sahf
>0064CA2D    jae         0064CA3D
 0064CA2F    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064CA36    mov         byte ptr [ebx+42C],2F;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064CA3D    mov         edx,0A
 0064CA42    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064CA48    call        TAverager.GetAvg
 0064CA4D    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064CA53    fsubp       st(1),st
 0064CA55    fcomp       dword ptr ds:[64E7AC];3:Single
 0064CA5B    wait
 0064CA5C    fnstsw      al
 0064CA5E    sahf
>0064CA5F    jbe         0064CA84
 0064CA61    mov         edx,0F
 0064CA66    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CA6C    call        TAverager.GetAvg
 0064CA71    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064CA77    wait
 0064CA78    fnstsw      al
 0064CA7A    sahf
>0064CA7B    jae         0064CA84
 0064CA7D    mov         byte ptr [ebx+427],1;TAccelerometerObject.AntiSwishDown:Boolean
 0064CA84    cmp         byte ptr [ebx+427],0;TAccelerometerObject.AntiSwishDown:Boolean
>0064CA8B    je          0064CAE2
 0064CA8D    mov         edx,0A
 0064CA92    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064CA98    call        TAverager.GetAvg
 0064CA9D    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064CAA3    fsubp       st(1),st
 0064CAA5    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064CAAB    wait
 0064CAAC    fnstsw      al
 0064CAAE    sahf
>0064CAAF    jae         0064CAE2
 0064CAB1    mov         edx,0F
 0064CAB6    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CABC    call        TAverager.GetAvg
 0064CAC1    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064CAC7    wait
 0064CAC8    fnstsw      al
 0064CACA    sahf
>0064CACB    jae         0064CAE2
 0064CACD    mov         byte ptr [ebx+42A],1;TAccelerometerObject.AntiUnswishDown:Boolean
 0064CAD4    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064CADB    mov         byte ptr [ebx+42E],45;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064CAE2    mov         edx,0A
 0064CAE7    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064CAED    call        TAverager.GetAvg
 0064CAF2    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064CAF8    fsubp       st(1),st
 0064CAFA    fcomp       dword ptr ds:[64E7AC];3:Single
 0064CB00    wait
 0064CB01    fnstsw      al
 0064CB03    sahf
>0064CB04    jbe         0064CB29
 0064CB06    mov         edx,0F
 0064CB0B    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CB11    call        TAverager.GetAvg
 0064CB16    fcomp       dword ptr ds:[64E7BC];2:Single
 0064CB1C    wait
 0064CB1D    fnstsw      al
 0064CB1F    sahf
>0064CB20    jbe         0064CB29
 0064CB22    mov         byte ptr [ebx+421],1;TAccelerometerObject.SwishDown:Boolean
 0064CB29    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064CB30    je          0064CB90
 0064CB32    mov         edx,0A
 0064CB37    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064CB3D    call        TAverager.GetAvg
 0064CB42    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064CB48    fsubp       st(1),st
 0064CB4A    fcomp       dword ptr ds:[64E7AC];3:Single
 0064CB50    wait
 0064CB51    fnstsw      al
 0064CB53    sahf
>0064CB54    jbe         0064CB90
 0064CB56    mov         edx,0F
 0064CB5B    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CB61    call        TAverager.GetAvg
 0064CB66    fcomp       dword ptr ds:[64E7BC];2:Single
 0064CB6C    wait
 0064CB6D    fnstsw      al
 0064CB6F    sahf
>0064CB70    jbe         0064CB90
 0064CB72    mov         byte ptr [ebx+424],1;TAccelerometerObject.UnSwishDown:Boolean
 0064CB79    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064CB80    jne         0064CB90
 0064CB82    mov         byte ptr [ebx+42E],32;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064CB89    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064CB90    mov         edx,11
 0064CB95    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CB9B    call        TAverager.GetAvg
 0064CBA0    fcomp       dword ptr ds:[64E7AC];3:Single
 0064CBA6    wait
 0064CBA7    fnstsw      al
 0064CBA9    sahf
>0064CBAA    jbe         0064CBBA
 0064CBAC    mov         byte ptr [ebx+41E],1E;TAccelerometerObject.GestureState:TGestureState
 0064CBB3    mov         byte ptr [ebx+42E],30;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064CBBA    cmp         byte ptr [ebx+41E],1E;TAccelerometerObject.GestureState:TGestureState
>0064CBC1    jne         0064CD9D
 0064CBC7    mov         edx,0A
 0064CBCC    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064CBD2    call        TAverager.GetAvg
 0064CBD7    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064CBDD    fsubp       st(1),st
 0064CBDF    fcomp       dword ptr ds:[64E7AC];3:Single
 0064CBE5    wait
 0064CBE6    fnstsw      al
 0064CBE8    sahf
>0064CBE9    jbe         0064CC0E
 0064CBEB    mov         edx,0F
 0064CBF0    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CBF6    call        TAverager.GetAvg
 0064CBFB    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064CC01    wait
 0064CC02    fnstsw      al
 0064CC04    sahf
>0064CC05    jae         0064CC0E
 0064CC07    mov         byte ptr [ebx+427],1;TAccelerometerObject.AntiSwishDown:Boolean
 0064CC0E    cmp         byte ptr [ebx+427],0;TAccelerometerObject.AntiSwishDown:Boolean
>0064CC15    je          0064CC6C
 0064CC17    mov         edx,0A
 0064CC1C    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064CC22    call        TAverager.GetAvg
 0064CC27    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064CC2D    fsubp       st(1),st
 0064CC2F    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064CC35    wait
 0064CC36    fnstsw      al
 0064CC38    sahf
>0064CC39    jae         0064CC6C
 0064CC3B    mov         edx,0F
 0064CC40    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CC46    call        TAverager.GetAvg
 0064CC4B    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064CC51    wait
 0064CC52    fnstsw      al
 0064CC54    sahf
>0064CC55    jae         0064CC6C
 0064CC57    mov         byte ptr [ebx+42A],1;TAccelerometerObject.AntiUnswishDown:Boolean
 0064CC5E    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064CC65    mov         byte ptr [ebx+42E],45;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064CC6C    mov         edx,0A
 0064CC71    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064CC77    call        TAverager.GetAvg
 0064CC7C    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064CC82    fsubp       st(1),st
 0064CC84    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064CC8A    wait
 0064CC8B    fnstsw      al
 0064CC8D    sahf
>0064CC8E    jae         0064CCB3
 0064CC90    mov         edx,0F
 0064CC95    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CC9B    call        TAverager.GetAvg
 0064CCA0    fcomp       dword ptr ds:[64E7BC];2:Single
 0064CCA6    wait
 0064CCA7    fnstsw      al
 0064CCA9    sahf
>0064CCAA    jbe         0064CCB3
 0064CCAC    mov         byte ptr [ebx+421],1;TAccelerometerObject.SwishDown:Boolean
 0064CCB3    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064CCBA    je          0064CD1A
 0064CCBC    mov         edx,0A
 0064CCC1    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064CCC7    call        TAverager.GetAvg
 0064CCCC    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064CCD2    fsubp       st(1),st
 0064CCD4    fcomp       dword ptr ds:[64E7AC];3:Single
 0064CCDA    wait
 0064CCDB    fnstsw      al
 0064CCDD    sahf
>0064CCDE    jbe         0064CD1A
 0064CCE0    mov         edx,0F
 0064CCE5    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CCEB    call        TAverager.GetAvg
 0064CCF0    fcomp       dword ptr ds:[64E7BC];2:Single
 0064CCF6    wait
 0064CCF7    fnstsw      al
 0064CCF9    sahf
>0064CCFA    jbe         0064CD1A
 0064CCFC    mov         byte ptr [ebx+424],1;TAccelerometerObject.UnSwishDown:Boolean
 0064CD03    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064CD0A    jne         0064CD1A
 0064CD0C    mov         byte ptr [ebx+42E],32;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064CD13    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064CD1A    fld         qword ptr [ebp+8]
 0064CD1D    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064CD23    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064CD29    fcompp
 0064CD2B    wait
 0064CD2C    fnstsw      al
 0064CD2E    sahf
>0064CD2F    jae         0064CD5A
 0064CD31    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064CD38    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064CD3F    je          0064CD4A
 0064CD41    cmp         byte ptr [ebx+424],0;TAccelerometerObject.UnSwishDown:Boolean
>0064CD48    jne         0064CD53
 0064CD4A    mov         byte ptr [ebx+42C],30;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
>0064CD51    jmp         0064CD5A
 0064CD53    mov         byte ptr [ebx+42C],32;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064CD5A    mov         edx,11
 0064CD5F    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CD65    call        TAverager.GetAvg
 0064CD6A    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064CD70    wait
 0064CD71    fnstsw      al
 0064CD73    sahf
>0064CD74    jae         0064CD9D
 0064CD76    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064CD7D    je          0064CD8F
 0064CD7F    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064CD86    mov         byte ptr [ebx+42E],33;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064CD8D    jmp         0064CD9D
 0064CD8F    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064CD96    mov         byte ptr [ebx+42E],31;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064CD9D    cmp         byte ptr [ebx+41E],1F;TAccelerometerObject.GestureState:TGestureState
>0064CDA4    jne         0064CF4E
 0064CDAA    mov         edx,0A
 0064CDAF    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064CDB5    call        TAverager.GetAvg
 0064CDBA    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064CDC0    fsubp       st(1),st
 0064CDC2    fcomp       dword ptr ds:[64E7AC];3:Single
 0064CDC8    wait
 0064CDC9    fnstsw      al
 0064CDCB    sahf
>0064CDCC    jbe         0064CDF1
 0064CDCE    mov         edx,0F
 0064CDD3    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CDD9    call        TAverager.GetAvg
 0064CDDE    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064CDE4    wait
 0064CDE5    fnstsw      al
 0064CDE7    sahf
>0064CDE8    jae         0064CDF1
 0064CDEA    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064CDF1    mov         edx,0A
 0064CDF6    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064CDFC    call        TAverager.GetAvg
 0064CE01    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064CE07    fsubp       st(1),st
 0064CE09    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064CE0F    wait
 0064CE10    fnstsw      al
 0064CE12    sahf
>0064CE13    jae         0064CE38
 0064CE15    mov         edx,0F
 0064CE1A    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CE20    call        TAverager.GetAvg
 0064CE25    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064CE2B    wait
 0064CE2C    fnstsw      al
 0064CE2E    sahf
>0064CE2F    jae         0064CE38
 0064CE31    mov         byte ptr [ebx+421],1;TAccelerometerObject.SwishDown:Boolean
 0064CE38    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064CE3F    je          0064CE9F
 0064CE41    mov         edx,0A
 0064CE46    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064CE4C    call        TAverager.GetAvg
 0064CE51    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064CE57    fsubp       st(1),st
 0064CE59    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064CE5F    wait
 0064CE60    fnstsw      al
 0064CE62    sahf
>0064CE63    jae         0064CE9F
 0064CE65    mov         edx,0F
 0064CE6A    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CE70    call        TAverager.GetAvg
 0064CE75    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064CE7B    wait
 0064CE7C    fnstsw      al
 0064CE7E    sahf
>0064CE7F    jae         0064CE9F
 0064CE81    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064CE88    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064CE8F    jne         0064CE9F
 0064CE91    mov         byte ptr [ebx+42E],39;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064CE98    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064CE9F    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064CEA6    je          0064CF06
 0064CEA8    mov         edx,0A
 0064CEAD    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064CEB3    call        TAverager.GetAvg
 0064CEB8    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064CEBE    fsubp       st(1),st
 0064CEC0    fcomp       dword ptr ds:[64E7AC];3:Single
 0064CEC6    wait
 0064CEC7    fnstsw      al
 0064CEC9    sahf
>0064CECA    jbe         0064CF06
 0064CECC    mov         edx,0F
 0064CED1    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CED7    call        TAverager.GetAvg
 0064CEDC    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064CEE2    wait
 0064CEE3    fnstsw      al
 0064CEE5    sahf
>0064CEE6    jae         0064CF06
 0064CEE8    mov         byte ptr [ebx+424],1;TAccelerometerObject.UnSwishDown:Boolean
 0064CEEF    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064CEF6    jne         0064CF06
 0064CEF8    mov         byte ptr [ebx+42E],3F;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064CEFF    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064CF06    mov         edx,11
 0064CF0B    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CF11    call        TAverager.GetAvg
 0064CF16    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064CF1C    wait
 0064CF1D    fnstsw      al
 0064CF1F    sahf
>0064CF20    jae         0064CF29
 0064CF22    mov         byte ptr [ebx+41E],20;TAccelerometerObject.GestureState:TGestureState
 0064CF29    fld         qword ptr [ebp+8]
 0064CF2C    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064CF32    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064CF38    fcompp
 0064CF3A    wait
 0064CF3B    fnstsw      al
 0064CF3D    sahf
>0064CF3E    jae         0064CF4E
 0064CF40    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064CF47    mov         byte ptr [ebx+42C],34;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064CF4E    cmp         byte ptr [ebx+41E],20;TAccelerometerObject.GestureState:TGestureState
>0064CF55    jne         0064D1D1
 0064CF5B    mov         edx,0A
 0064CF60    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064CF66    call        TAverager.GetAvg
 0064CF6B    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064CF71    fsubp       st(1),st
 0064CF73    fcomp       dword ptr ds:[64E7AC];3:Single
 0064CF79    wait
 0064CF7A    fnstsw      al
 0064CF7C    sahf
>0064CF7D    jbe         0064CFA2
 0064CF7F    mov         edx,0F
 0064CF84    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CF8A    call        TAverager.GetAvg
 0064CF8F    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064CF95    wait
 0064CF96    fnstsw      al
 0064CF98    sahf
>0064CF99    jae         0064CFA2
 0064CF9B    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064CFA2    mov         edx,0A
 0064CFA7    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064CFAD    call        TAverager.GetAvg
 0064CFB2    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064CFB8    fsubp       st(1),st
 0064CFBA    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064CFC0    wait
 0064CFC1    fnstsw      al
 0064CFC3    sahf
>0064CFC4    jae         0064CFE9
 0064CFC6    mov         edx,0F
 0064CFCB    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064CFD1    call        TAverager.GetAvg
 0064CFD6    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064CFDC    wait
 0064CFDD    fnstsw      al
 0064CFDF    sahf
>0064CFE0    jae         0064CFE9
 0064CFE2    mov         byte ptr [ebx+421],1;TAccelerometerObject.SwishDown:Boolean
 0064CFE9    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064CFF0    je          0064D050
 0064CFF2    mov         edx,0A
 0064CFF7    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064CFFD    call        TAverager.GetAvg
 0064D002    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D008    fsubp       st(1),st
 0064D00A    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064D010    wait
 0064D011    fnstsw      al
 0064D013    sahf
>0064D014    jae         0064D050
 0064D016    mov         edx,0F
 0064D01B    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D021    call        TAverager.GetAvg
 0064D026    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064D02C    wait
 0064D02D    fnstsw      al
 0064D02F    sahf
>0064D030    jae         0064D050
 0064D032    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064D039    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064D040    jne         0064D050
 0064D042    mov         byte ptr [ebx+42E],39;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D049    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064D050    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064D057    je          0064D0B7
 0064D059    mov         edx,0A
 0064D05E    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D064    call        TAverager.GetAvg
 0064D069    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D06F    fsubp       st(1),st
 0064D071    fcomp       dword ptr ds:[64E7AC];3:Single
 0064D077    wait
 0064D078    fnstsw      al
 0064D07A    sahf
>0064D07B    jbe         0064D0B7
 0064D07D    mov         edx,0F
 0064D082    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D088    call        TAverager.GetAvg
 0064D08D    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064D093    wait
 0064D094    fnstsw      al
 0064D096    sahf
>0064D097    jae         0064D0B7
 0064D099    mov         byte ptr [ebx+424],1;TAccelerometerObject.UnSwishDown:Boolean
 0064D0A0    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064D0A7    jne         0064D0B7
 0064D0A9    mov         byte ptr [ebx+42E],3F;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D0B0    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064D0B7    fld         qword ptr [ebp+8]
 0064D0BA    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064D0C0    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064D0C6    fcompp
 0064D0C8    wait
 0064D0C9    fnstsw      al
 0064D0CB    sahf
>0064D0CC    jae         0064D120
 0064D0CE    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064D0D5    je          0064D0F0
 0064D0D7    cmp         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
>0064D0DE    je          0064D0F0
 0064D0E0    mov         byte ptr [ebx+42C],39;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064D0E7    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
>0064D0EE    jmp         0064D120
 0064D0F0    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064D0F7    je          0064D112
 0064D0F9    cmp         byte ptr [ebx+424],0;TAccelerometerObject.UnSwishDown:Boolean
>0064D100    je          0064D112
 0064D102    mov         byte ptr [ebx+42C],3F;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064D109    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
>0064D110    jmp         0064D120
 0064D112    mov         byte ptr [ebx+42C],34;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064D119    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064D120    mov         edx,11
 0064D125    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D12B    call        TAverager.GetAvg
 0064D130    fcomp       dword ptr ds:[64E7AC];3:Single
 0064D136    wait
 0064D137    fnstsw      al
 0064D139    sahf
>0064D13A    jbe         0064D1D1
 0064D140    mov         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
 0064D147    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064D14E    je          0064D185
 0064D150    cmp         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
>0064D157    je          0064D185
 0064D159    mov         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
 0064D160    mov         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
 0064D167    mov         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
 0064D16E    mov         byte ptr [ebx+424],0;TAccelerometerObject.UnSwishDown:Boolean
 0064D175    mov         byte ptr [ebx+41E],25;TAccelerometerObject.GestureState:TGestureState
 0064D17C    mov         byte ptr [ebx+42E],3A;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064D183    jmp         0064D1D1
 0064D185    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064D18C    je          0064D1C3
 0064D18E    cmp         byte ptr [ebx+424],0;TAccelerometerObject.UnSwishDown:Boolean
>0064D195    je          0064D1C3
 0064D197    mov         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
 0064D19E    mov         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
 0064D1A5    mov         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
 0064D1AC    mov         byte ptr [ebx+424],0;TAccelerometerObject.UnSwishDown:Boolean
 0064D1B3    mov         byte ptr [ebx+41E],27;TAccelerometerObject.GestureState:TGestureState
 0064D1BA    mov         byte ptr [ebx+42E],40;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064D1C1    jmp         0064D1D1
 0064D1C3    mov         byte ptr [ebx+41E],21;TAccelerometerObject.GestureState:TGestureState
 0064D1CA    mov         byte ptr [ebx+42E],35;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D1D1    cmp         byte ptr [ebx+41E],21;TAccelerometerObject.GestureState:TGestureState
>0064D1D8    jne         0064D229
 0064D1DA    fld         qword ptr [ebp+8]
 0064D1DD    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064D1E3    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064D1E9    fcompp
 0064D1EB    wait
 0064D1EC    fnstsw      al
 0064D1EE    sahf
>0064D1EF    jae         0064D1FF
 0064D1F1    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064D1F8    mov         byte ptr [ebx+42C],35;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064D1FF    mov         edx,11
 0064D204    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D20A    call        TAverager.GetAvg
 0064D20F    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064D215    wait
 0064D216    fnstsw      al
 0064D218    sahf
>0064D219    jae         0064D229
 0064D21B    mov         byte ptr [ebx+41E],22;TAccelerometerObject.GestureState:TGestureState
 0064D222    mov         byte ptr [ebx+42E],36;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D229    cmp         byte ptr [ebx+41E],22;TAccelerometerObject.GestureState:TGestureState
>0064D230    jne         0064D2ED
 0064D236    mov         edx,32
 0064D23B    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D241    call        TAverager.GetAvg
 0064D246    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D24C    fsubp       st(1),st
 0064D24E    fcomp       dword ptr ds:[64E7D0];5:Single
 0064D254    wait
 0064D255    fnstsw      al
 0064D257    sahf
>0064D258    jbe         0064D263
 0064D25A    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
>0064D261    jmp         0064D28E
 0064D263    mov         edx,32
 0064D268    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D26E    call        TAverager.GetAvg
 0064D273    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D279    fsubp       st(1),st
 0064D27B    fcomp       dword ptr ds:[64E7D4];-5:Single
 0064D281    wait
 0064D282    fnstsw      al
 0064D284    sahf
>0064D285    jae         0064D28E
 0064D287    mov         byte ptr [ebx+421],1;TAccelerometerObject.SwishDown:Boolean
 0064D28E    fld         qword ptr [ebp+8]
 0064D291    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064D297    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064D29D    fcompp
 0064D29F    wait
 0064D2A0    fnstsw      al
 0064D2A2    sahf
>0064D2A3    jae         0064D2B3
 0064D2A5    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064D2AC    mov         byte ptr [ebx+42C],36;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064D2B3    mov         edx,11
 0064D2B8    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D2BE    call        TAverager.GetAvg
 0064D2C3    fcomp       dword ptr ds:[64E7AC];3:Single
 0064D2C9    wait
 0064D2CA    fnstsw      al
 0064D2CC    sahf
>0064D2CD    jbe         0064D2ED
 0064D2CF    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064D2D6    jne         0064D2DF
 0064D2D8    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
 0064D2DF    mov         byte ptr [ebx+41E],23;TAccelerometerObject.GestureState:TGestureState
 0064D2E6    mov         byte ptr [ebx+42E],37;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D2ED    cmp         byte ptr [ebx+41E],23;TAccelerometerObject.GestureState:TGestureState
>0064D2F4    jne         0064D345
 0064D2F6    fld         qword ptr [ebp+8]
 0064D2F9    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064D2FF    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064D305    fcompp
 0064D307    wait
 0064D308    fnstsw      al
 0064D30A    sahf
>0064D30B    jae         0064D31B
 0064D30D    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064D314    mov         byte ptr [ebx+42C],37;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064D31B    mov         edx,11
 0064D320    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D326    call        TAverager.GetAvg
 0064D32B    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064D331    wait
 0064D332    fnstsw      al
 0064D334    sahf
>0064D335    jae         0064D345
 0064D337    mov         byte ptr [ebx+41E],24;TAccelerometerObject.GestureState:TGestureState
 0064D33E    mov         byte ptr [ebx+42E],38;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D345    cmp         byte ptr [ebx+41E],24;TAccelerometerObject.GestureState:TGestureState
>0064D34C    jne         0064D355
 0064D34E    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064D355    cmp         byte ptr [ebx+41E],25;TAccelerometerObject.GestureState:TGestureState
>0064D35C    jne         0064D504
 0064D362    fld         qword ptr [ebp+8]
 0064D365    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064D36B    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064D371    fcompp
 0064D373    wait
 0064D374    fnstsw      al
 0064D376    sahf
>0064D377    jae         0064D387
 0064D379    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064D380    mov         byte ptr [ebx+42C],3A;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064D387    mov         edx,0A
 0064D38C    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D392    call        TAverager.GetAvg
 0064D397    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D39D    fsubp       st(1),st
 0064D39F    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064D3A5    wait
 0064D3A6    fnstsw      al
 0064D3A8    sahf
>0064D3A9    jae         0064D3CE
 0064D3AB    mov         edx,0F
 0064D3B0    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D3B6    call        TAverager.GetAvg
 0064D3BB    fcomp       dword ptr ds:[64E7BC];2:Single
 0064D3C1    wait
 0064D3C2    fnstsw      al
 0064D3C4    sahf
>0064D3C5    jbe         0064D3CE
 0064D3C7    mov         byte ptr [ebx+425],1;TAccelerometerObject.AntiSwish:Boolean
 0064D3CE    cmp         byte ptr [ebx+425],0;TAccelerometerObject.AntiSwish:Boolean
>0064D3D5    je          0064D42C
 0064D3D7    mov         edx,0A
 0064D3DC    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D3E2    call        TAverager.GetAvg
 0064D3E7    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D3ED    fsubp       st(1),st
 0064D3EF    fcomp       dword ptr ds:[64E7AC];3:Single
 0064D3F5    wait
 0064D3F6    fnstsw      al
 0064D3F8    sahf
>0064D3F9    jbe         0064D42C
 0064D3FB    mov         edx,0F
 0064D400    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D406    call        TAverager.GetAvg
 0064D40B    fcomp       dword ptr ds:[64E7BC];2:Single
 0064D411    wait
 0064D412    fnstsw      al
 0064D414    sahf
>0064D415    jbe         0064D42C
 0064D417    mov         byte ptr [ebx+428],1;TAccelerometerObject.AntiUnswish:Boolean
 0064D41E    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064D425    mov         byte ptr [ebx+42E],45;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D42C    mov         edx,0A
 0064D431    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D437    call        TAverager.GetAvg
 0064D43C    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D442    fsubp       st(1),st
 0064D444    fcomp       dword ptr ds:[64E7AC];3:Single
 0064D44A    wait
 0064D44B    fnstsw      al
 0064D44D    sahf
>0064D44E    jbe         0064D473
 0064D450    mov         edx,0F
 0064D455    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D45B    call        TAverager.GetAvg
 0064D460    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064D466    wait
 0064D467    fnstsw      al
 0064D469    sahf
>0064D46A    jae         0064D473
 0064D46C    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064D473    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064D47A    je          0064D4DA
 0064D47C    mov         edx,0A
 0064D481    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D487    call        TAverager.GetAvg
 0064D48C    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D492    fsubp       st(1),st
 0064D494    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064D49A    wait
 0064D49B    fnstsw      al
 0064D49D    sahf
>0064D49E    jae         0064D4DA
 0064D4A0    mov         edx,0F
 0064D4A5    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D4AB    call        TAverager.GetAvg
 0064D4B0    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064D4B6    wait
 0064D4B7    fnstsw      al
 0064D4B9    sahf
>0064D4BA    jae         0064D4DA
 0064D4BC    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064D4C3    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064D4CA    jne         0064D4DA
 0064D4CC    mov         byte ptr [ebx+42E],3D;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D4D3    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064D4DA    mov         edx,11
 0064D4DF    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D4E5    call        TAverager.GetAvg
 0064D4EA    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064D4F0    wait
 0064D4F1    fnstsw      al
 0064D4F3    sahf
>0064D4F4    jae         0064D504
 0064D4F6    mov         byte ptr [ebx+41E],26;TAccelerometerObject.GestureState:TGestureState
 0064D4FD    mov         byte ptr [ebx+42E],3B;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D504    cmp         byte ptr [ebx+41E],26;TAccelerometerObject.GestureState:TGestureState
>0064D50B    jne         0064D6E7
 0064D511    mov         edx,0A
 0064D516    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D51C    call        TAverager.GetAvg
 0064D521    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D527    fsubp       st(1),st
 0064D529    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064D52F    wait
 0064D530    fnstsw      al
 0064D532    sahf
>0064D533    jae         0064D558
 0064D535    mov         edx,0F
 0064D53A    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D540    call        TAverager.GetAvg
 0064D545    fcomp       dword ptr ds:[64E7BC];2:Single
 0064D54B    wait
 0064D54C    fnstsw      al
 0064D54E    sahf
>0064D54F    jbe         0064D558
 0064D551    mov         byte ptr [ebx+425],1;TAccelerometerObject.AntiSwish:Boolean
 0064D558    cmp         byte ptr [ebx+425],0;TAccelerometerObject.AntiSwish:Boolean
>0064D55F    je          0064D5B6
 0064D561    mov         edx,0A
 0064D566    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D56C    call        TAverager.GetAvg
 0064D571    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D577    fsubp       st(1),st
 0064D579    fcomp       dword ptr ds:[64E7AC];3:Single
 0064D57F    wait
 0064D580    fnstsw      al
 0064D582    sahf
>0064D583    jbe         0064D5B6
 0064D585    mov         edx,0F
 0064D58A    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D590    call        TAverager.GetAvg
 0064D595    fcomp       dword ptr ds:[64E7BC];2:Single
 0064D59B    wait
 0064D59C    fnstsw      al
 0064D59E    sahf
>0064D59F    jbe         0064D5B6
 0064D5A1    mov         byte ptr [ebx+428],1;TAccelerometerObject.AntiUnswish:Boolean
 0064D5A8    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064D5AF    mov         byte ptr [ebx+42E],45;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D5B6    mov         edx,0A
 0064D5BB    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D5C1    call        TAverager.GetAvg
 0064D5C6    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D5CC    fsubp       st(1),st
 0064D5CE    fcomp       dword ptr ds:[64E7AC];3:Single
 0064D5D4    wait
 0064D5D5    fnstsw      al
 0064D5D7    sahf
>0064D5D8    jbe         0064D5FD
 0064D5DA    mov         edx,0F
 0064D5DF    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D5E5    call        TAverager.GetAvg
 0064D5EA    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064D5F0    wait
 0064D5F1    fnstsw      al
 0064D5F3    sahf
>0064D5F4    jae         0064D5FD
 0064D5F6    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064D5FD    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064D604    je          0064D664
 0064D606    mov         edx,0A
 0064D60B    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D611    call        TAverager.GetAvg
 0064D616    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D61C    fsubp       st(1),st
 0064D61E    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064D624    wait
 0064D625    fnstsw      al
 0064D627    sahf
>0064D628    jae         0064D664
 0064D62A    mov         edx,0F
 0064D62F    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D635    call        TAverager.GetAvg
 0064D63A    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064D640    wait
 0064D641    fnstsw      al
 0064D643    sahf
>0064D644    jae         0064D664
 0064D646    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064D64D    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064D654    jne         0064D664
 0064D656    mov         byte ptr [ebx+42E],3D;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D65D    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064D664    fld         qword ptr [ebp+8]
 0064D667    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064D66D    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064D673    fcompp
 0064D675    wait
 0064D676    fnstsw      al
 0064D678    sahf
>0064D679    jae         0064D6A4
 0064D67B    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064D682    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064D689    je          0064D694
 0064D68B    cmp         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
>0064D692    jne         0064D69D
 0064D694    mov         byte ptr [ebx+42C],3B;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
>0064D69B    jmp         0064D6A4
 0064D69D    mov         byte ptr [ebx+42C],3D;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064D6A4    mov         edx,11
 0064D6A9    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D6AF    call        TAverager.GetAvg
 0064D6B4    fcomp       dword ptr ds:[64E7AC];3:Single
 0064D6BA    wait
 0064D6BB    fnstsw      al
 0064D6BD    sahf
>0064D6BE    jbe         0064D6E7
 0064D6C0    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064D6C7    je          0064D6D9
 0064D6C9    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064D6D0    mov         byte ptr [ebx+42E],3E;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064D6D7    jmp         0064D6E7
 0064D6D9    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064D6E0    mov         byte ptr [ebx+42E],3C;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D6E7    cmp         byte ptr [ebx+41E],27;TAccelerometerObject.GestureState:TGestureState
>0064D6EE    jne         0064D896
 0064D6F4    fld         qword ptr [ebp+8]
 0064D6F7    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064D6FD    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064D703    fcompp
 0064D705    wait
 0064D706    fnstsw      al
 0064D708    sahf
>0064D709    jae         0064D719
 0064D70B    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064D712    mov         byte ptr [ebx+42C],40;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064D719    mov         edx,0A
 0064D71E    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D724    call        TAverager.GetAvg
 0064D729    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D72F    fsubp       st(1),st
 0064D731    fcomp       dword ptr ds:[64E7AC];3:Single
 0064D737    wait
 0064D738    fnstsw      al
 0064D73A    sahf
>0064D73B    jbe         0064D760
 0064D73D    mov         edx,0F
 0064D742    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D748    call        TAverager.GetAvg
 0064D74D    fcomp       dword ptr ds:[64E7BC];2:Single
 0064D753    wait
 0064D754    fnstsw      al
 0064D756    sahf
>0064D757    jbe         0064D760
 0064D759    mov         byte ptr [ebx+427],1;TAccelerometerObject.AntiSwishDown:Boolean
 0064D760    cmp         byte ptr [ebx+427],0;TAccelerometerObject.AntiSwishDown:Boolean
>0064D767    je          0064D7BE
 0064D769    mov         edx,0A
 0064D76E    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D774    call        TAverager.GetAvg
 0064D779    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D77F    fsubp       st(1),st
 0064D781    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064D787    wait
 0064D788    fnstsw      al
 0064D78A    sahf
>0064D78B    jae         0064D7BE
 0064D78D    mov         edx,0F
 0064D792    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D798    call        TAverager.GetAvg
 0064D79D    fcomp       dword ptr ds:[64E7BC];2:Single
 0064D7A3    wait
 0064D7A4    fnstsw      al
 0064D7A6    sahf
>0064D7A7    jbe         0064D7BE
 0064D7A9    mov         byte ptr [ebx+42A],1;TAccelerometerObject.AntiUnswishDown:Boolean
 0064D7B0    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064D7B7    mov         byte ptr [ebx+42E],46;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D7BE    mov         edx,0A
 0064D7C3    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D7C9    call        TAverager.GetAvg
 0064D7CE    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D7D4    fsubp       st(1),st
 0064D7D6    fcomp       dword ptr ds:[64E7AC];3:Single
 0064D7DC    wait
 0064D7DD    fnstsw      al
 0064D7DF    sahf
>0064D7E0    jbe         0064D805
 0064D7E2    mov         edx,0F
 0064D7E7    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D7ED    call        TAverager.GetAvg
 0064D7F2    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064D7F8    wait
 0064D7F9    fnstsw      al
 0064D7FB    sahf
>0064D7FC    jae         0064D805
 0064D7FE    mov         byte ptr [ebx+421],1;TAccelerometerObject.SwishDown:Boolean
 0064D805    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064D80C    je          0064D86C
 0064D80E    mov         edx,0A
 0064D813    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D819    call        TAverager.GetAvg
 0064D81E    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D824    fsubp       st(1),st
 0064D826    fcomp       dword ptr ds:[64E7AC];3:Single
 0064D82C    wait
 0064D82D    fnstsw      al
 0064D82F    sahf
>0064D830    jbe         0064D86C
 0064D832    mov         edx,0F
 0064D837    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D83D    call        TAverager.GetAvg
 0064D842    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064D848    wait
 0064D849    fnstsw      al
 0064D84B    sahf
>0064D84C    jae         0064D86C
 0064D84E    mov         byte ptr [ebx+424],1;TAccelerometerObject.UnSwishDown:Boolean
 0064D855    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064D85C    jne         0064D86C
 0064D85E    mov         byte ptr [ebx+42E],43;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D865    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064D86C    mov         edx,11
 0064D871    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D877    call        TAverager.GetAvg
 0064D87C    fcomp       dword ptr ds:[64E7AC];3:Single
 0064D882    wait
 0064D883    fnstsw      al
 0064D885    sahf
>0064D886    jbe         0064D896
 0064D888    mov         byte ptr [ebx+41E],28;TAccelerometerObject.GestureState:TGestureState
 0064D88F    mov         byte ptr [ebx+42E],41;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D896    cmp         byte ptr [ebx+41E],28;TAccelerometerObject.GestureState:TGestureState
>0064D89D    jne         0064DA79
 0064D8A3    mov         edx,0A
 0064D8A8    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D8AE    call        TAverager.GetAvg
 0064D8B3    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D8B9    fsubp       st(1),st
 0064D8BB    fcomp       dword ptr ds:[64E7AC];3:Single
 0064D8C1    wait
 0064D8C2    fnstsw      al
 0064D8C4    sahf
>0064D8C5    jbe         0064D8EA
 0064D8C7    mov         edx,0F
 0064D8CC    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D8D2    call        TAverager.GetAvg
 0064D8D7    fcomp       dword ptr ds:[64E7BC];2:Single
 0064D8DD    wait
 0064D8DE    fnstsw      al
 0064D8E0    sahf
>0064D8E1    jbe         0064D8EA
 0064D8E3    mov         byte ptr [ebx+427],1;TAccelerometerObject.AntiSwishDown:Boolean
 0064D8EA    cmp         byte ptr [ebx+427],0;TAccelerometerObject.AntiSwishDown:Boolean
>0064D8F1    je          0064D948
 0064D8F3    mov         edx,0A
 0064D8F8    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D8FE    call        TAverager.GetAvg
 0064D903    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D909    fsubp       st(1),st
 0064D90B    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064D911    wait
 0064D912    fnstsw      al
 0064D914    sahf
>0064D915    jae         0064D948
 0064D917    mov         edx,0F
 0064D91C    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D922    call        TAverager.GetAvg
 0064D927    fcomp       dword ptr ds:[64E7BC];2:Single
 0064D92D    wait
 0064D92E    fnstsw      al
 0064D930    sahf
>0064D931    jbe         0064D948
 0064D933    mov         byte ptr [ebx+42A],1;TAccelerometerObject.AntiUnswishDown:Boolean
 0064D93A    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064D941    mov         byte ptr [ebx+42E],46;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D948    mov         edx,0A
 0064D94D    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D953    call        TAverager.GetAvg
 0064D958    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D95E    fsubp       st(1),st
 0064D960    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064D966    wait
 0064D967    fnstsw      al
 0064D969    sahf
>0064D96A    jae         0064D98F
 0064D96C    mov         edx,0F
 0064D971    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D977    call        TAverager.GetAvg
 0064D97C    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064D982    wait
 0064D983    fnstsw      al
 0064D985    sahf
>0064D986    jae         0064D98F
 0064D988    mov         byte ptr [ebx+421],1;TAccelerometerObject.SwishDown:Boolean
 0064D98F    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064D996    je          0064D9F6
 0064D998    mov         edx,0A
 0064D99D    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064D9A3    call        TAverager.GetAvg
 0064D9A8    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064D9AE    fsubp       st(1),st
 0064D9B0    fcomp       dword ptr ds:[64E7AC];3:Single
 0064D9B6    wait
 0064D9B7    fnstsw      al
 0064D9B9    sahf
>0064D9BA    jbe         0064D9F6
 0064D9BC    mov         edx,0F
 0064D9C1    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064D9C7    call        TAverager.GetAvg
 0064D9CC    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064D9D2    wait
 0064D9D3    fnstsw      al
 0064D9D5    sahf
>0064D9D6    jae         0064D9F6
 0064D9D8    mov         byte ptr [ebx+424],1;TAccelerometerObject.UnSwishDown:Boolean
 0064D9DF    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064D9E6    jne         0064D9F6
 0064D9E8    mov         byte ptr [ebx+42E],43;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064D9EF    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064D9F6    fld         qword ptr [ebp+8]
 0064D9F9    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064D9FF    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064DA05    fcompp
 0064DA07    wait
 0064DA08    fnstsw      al
 0064DA0A    sahf
>0064DA0B    jae         0064DA36
 0064DA0D    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064DA14    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064DA1B    je          0064DA26
 0064DA1D    cmp         byte ptr [ebx+424],0;TAccelerometerObject.UnSwishDown:Boolean
>0064DA24    jne         0064DA2F
 0064DA26    mov         byte ptr [ebx+42C],41;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
>0064DA2D    jmp         0064DA36
 0064DA2F    mov         byte ptr [ebx+42C],43;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064DA36    mov         edx,11
 0064DA3B    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064DA41    call        TAverager.GetAvg
 0064DA46    fcomp       dword ptr ds:[64E7AC];3:Single
 0064DA4C    wait
 0064DA4D    fnstsw      al
 0064DA4F    sahf
>0064DA50    jbe         0064DA79
 0064DA52    cmp         byte ptr [ebx+421],0;TAccelerometerObject.SwishDown:Boolean
>0064DA59    je          0064DA6B
 0064DA5B    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064DA62    mov         byte ptr [ebx+42E],44;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064DA69    jmp         0064DA79
 0064DA6B    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064DA72    mov         byte ptr [ebx+42E],42;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064DA79    cmp         byte ptr [ebx+41E],0B;TAccelerometerObject.GestureState:TGestureState
>0064DA80    jne         0064DC32
 0064DA86    mov         edx,0A
 0064DA8B    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064DA91    call        TAverager.GetAvg
 0064DA96    fcomp       dword ptr ds:[64E7AC];3:Single
 0064DA9C    wait
 0064DA9D    fnstsw      al
 0064DA9F    sahf
>0064DAA0    jbe         0064DACD
 0064DAA2    mov         edx,0F
 0064DAA7    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064DAAD    call        TAverager.GetAvg
 0064DAB2    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064DAB8    fsubp       st(1),st
 0064DABA    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064DAC0    wait
 0064DAC1    fnstsw      al
 0064DAC3    sahf
>0064DAC4    jae         0064DACD
 0064DAC6    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064DACD    mov         edx,0A
 0064DAD2    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064DAD8    call        TAverager.GetAvg
 0064DADD    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064DAE3    wait
 0064DAE4    fnstsw      al
 0064DAE6    sahf
>0064DAE7    jae         0064DB14
 0064DAE9    mov         edx,0F
 0064DAEE    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064DAF4    call        TAverager.GetAvg
 0064DAF9    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064DAFF    fsubp       st(1),st
 0064DB01    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064DB07    wait
 0064DB08    fnstsw      al
 0064DB0A    sahf
>0064DB0B    jae         0064DB14
 0064DB0D    mov         byte ptr [ebx+420],1;TAccelerometerObject.SwishLeft:Boolean
 0064DB14    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064DB1B    je          0064DB7B
 0064DB1D    mov         edx,0A
 0064DB22    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064DB28    call        TAverager.GetAvg
 0064DB2D    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064DB33    wait
 0064DB34    fnstsw      al
 0064DB36    sahf
>0064DB37    jae         0064DB7B
 0064DB39    mov         edx,0F
 0064DB3E    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064DB44    call        TAverager.GetAvg
 0064DB49    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064DB4F    fsubp       st(1),st
 0064DB51    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064DB57    wait
 0064DB58    fnstsw      al
 0064DB5A    sahf
>0064DB5B    jae         0064DB7B
 0064DB5D    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064DB64    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064DB6B    jne         0064DB7B
 0064DB6D    mov         byte ptr [ebx+42E],17;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064DB74    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064DB7B    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064DB82    je          0064DBE2
 0064DB84    mov         edx,0A
 0064DB89    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064DB8F    call        TAverager.GetAvg
 0064DB94    fcomp       dword ptr ds:[64E7AC];3:Single
 0064DB9A    wait
 0064DB9B    fnstsw      al
 0064DB9D    sahf
>0064DB9E    jbe         0064DBE2
 0064DBA0    mov         edx,0F
 0064DBA5    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064DBAB    call        TAverager.GetAvg
 0064DBB0    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064DBB6    fsubp       st(1),st
 0064DBB8    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064DBBE    wait
 0064DBBF    fnstsw      al
 0064DBC1    sahf
>0064DBC2    jae         0064DBE2
 0064DBC4    mov         byte ptr [ebx+423],1;TAccelerometerObject.UnSwishLeft:Boolean
 0064DBCB    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064DBD2    jne         0064DBE2
 0064DBD4    mov         byte ptr [ebx+42E],1D;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064DBDB    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064DBE2    mov         edx,11
 0064DBE7    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064DBED    call        TAverager.GetAvg
 0064DBF2    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064DBF8    fsubp       st(1),st
 0064DBFA    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064DC00    wait
 0064DC01    fnstsw      al
 0064DC03    sahf
>0064DC04    jae         0064DC0D
 0064DC06    mov         byte ptr [ebx+41E],0C;TAccelerometerObject.GestureState:TGestureState
 0064DC0D    fld         qword ptr [ebp+8]
 0064DC10    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064DC16    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064DC1C    fcompp
 0064DC1E    wait
 0064DC1F    fnstsw      al
 0064DC21    sahf
>0064DC22    jae         0064DC32
 0064DC24    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064DC2B    mov         byte ptr [ebx+42C],12;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064DC32    cmp         byte ptr [ebx+41E],0C;TAccelerometerObject.GestureState:TGestureState
>0064DC39    jne         0064DEAF
 0064DC3F    mov         edx,0A
 0064DC44    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064DC4A    call        TAverager.GetAvg
 0064DC4F    fcomp       dword ptr ds:[64E7AC];3:Single
 0064DC55    wait
 0064DC56    fnstsw      al
 0064DC58    sahf
>0064DC59    jbe         0064DC86
 0064DC5B    mov         edx,0F
 0064DC60    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064DC66    call        TAverager.GetAvg
 0064DC6B    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064DC71    fsubp       st(1),st
 0064DC73    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064DC79    wait
 0064DC7A    fnstsw      al
 0064DC7C    sahf
>0064DC7D    jae         0064DC86
 0064DC7F    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064DC86    mov         edx,0A
 0064DC8B    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064DC91    call        TAverager.GetAvg
 0064DC96    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064DC9C    wait
 0064DC9D    fnstsw      al
 0064DC9F    sahf
>0064DCA0    jae         0064DCCD
 0064DCA2    mov         edx,0F
 0064DCA7    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064DCAD    call        TAverager.GetAvg
 0064DCB2    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064DCB8    fsubp       st(1),st
 0064DCBA    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064DCC0    wait
 0064DCC1    fnstsw      al
 0064DCC3    sahf
>0064DCC4    jae         0064DCCD
 0064DCC6    mov         byte ptr [ebx+420],1;TAccelerometerObject.SwishLeft:Boolean
 0064DCCD    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064DCD4    je          0064DD34
 0064DCD6    mov         edx,0A
 0064DCDB    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064DCE1    call        TAverager.GetAvg
 0064DCE6    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064DCEC    wait
 0064DCED    fnstsw      al
 0064DCEF    sahf
>0064DCF0    jae         0064DD34
 0064DCF2    mov         edx,0F
 0064DCF7    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064DCFD    call        TAverager.GetAvg
 0064DD02    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064DD08    fsubp       st(1),st
 0064DD0A    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064DD10    wait
 0064DD11    fnstsw      al
 0064DD13    sahf
>0064DD14    jae         0064DD34
 0064DD16    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064DD1D    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064DD24    jne         0064DD34
 0064DD26    mov         byte ptr [ebx+42E],17;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064DD2D    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064DD34    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064DD3B    je          0064DD9B
 0064DD3D    mov         edx,0A
 0064DD42    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064DD48    call        TAverager.GetAvg
 0064DD4D    fcomp       dword ptr ds:[64E7AC];3:Single
 0064DD53    wait
 0064DD54    fnstsw      al
 0064DD56    sahf
>0064DD57    jbe         0064DD9B
 0064DD59    mov         edx,0F
 0064DD5E    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064DD64    call        TAverager.GetAvg
 0064DD69    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064DD6F    fsubp       st(1),st
 0064DD71    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064DD77    wait
 0064DD78    fnstsw      al
 0064DD7A    sahf
>0064DD7B    jae         0064DD9B
 0064DD7D    mov         byte ptr [ebx+423],1;TAccelerometerObject.UnSwishLeft:Boolean
 0064DD84    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064DD8B    jne         0064DD9B
 0064DD8D    mov         byte ptr [ebx+42E],1D;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064DD94    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064DD9B    fld         qword ptr [ebp+8]
 0064DD9E    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064DDA4    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064DDAA    fcompp
 0064DDAC    wait
 0064DDAD    fnstsw      al
 0064DDAF    sahf
>0064DDB0    jae         0064DDF6
 0064DDB2    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064DDB9    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064DDC0    je          0064DDD4
 0064DDC2    cmp         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
>0064DDC9    je          0064DDD4
 0064DDCB    mov         byte ptr [ebx+42C],17;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
>0064DDD2    jmp         0064DDF6
 0064DDD4    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064DDDB    je          0064DDEF
 0064DDDD    cmp         byte ptr [ebx+423],0;TAccelerometerObject.UnSwishLeft:Boolean
>0064DDE4    je          0064DDEF
 0064DDE6    mov         byte ptr [ebx+42C],1D;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
>0064DDED    jmp         0064DDF6
 0064DDEF    mov         byte ptr [ebx+42C],12;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064DDF6    mov         edx,11
 0064DDFB    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064DE01    call        TAverager.GetAvg
 0064DE06    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064DE0C    fsubp       st(1),st
 0064DE0E    fcomp       dword ptr ds:[64E7AC];3:Single
 0064DE14    wait
 0064DE15    fnstsw      al
 0064DE17    sahf
>0064DE18    jbe         0064DEAF
 0064DE1E    mov         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
 0064DE25    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064DE2C    je          0064DE63
 0064DE2E    cmp         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
>0064DE35    je          0064DE63
 0064DE37    mov         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
 0064DE3E    mov         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
 0064DE45    mov         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
 0064DE4C    mov         byte ptr [ebx+423],0;TAccelerometerObject.UnSwishLeft:Boolean
 0064DE53    mov         byte ptr [ebx+41E],11;TAccelerometerObject.GestureState:TGestureState
 0064DE5A    mov         byte ptr [ebx+42E],18;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064DE61    jmp         0064DEAF
 0064DE63    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064DE6A    je          0064DEA1
 0064DE6C    cmp         byte ptr [ebx+423],0;TAccelerometerObject.UnSwishLeft:Boolean
>0064DE73    je          0064DEA1
 0064DE75    mov         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
 0064DE7C    mov         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
 0064DE83    mov         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
 0064DE8A    mov         byte ptr [ebx+423],0;TAccelerometerObject.UnSwishLeft:Boolean
 0064DE91    mov         byte ptr [ebx+41E],13;TAccelerometerObject.GestureState:TGestureState
 0064DE98    mov         byte ptr [ebx+42E],1E;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064DE9F    jmp         0064DEAF
 0064DEA1    mov         byte ptr [ebx+41E],0D;TAccelerometerObject.GestureState:TGestureState
 0064DEA8    mov         byte ptr [ebx+42E],13;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064DEAF    cmp         byte ptr [ebx+41E],0D;TAccelerometerObject.GestureState:TGestureState
>0064DEB6    jne         0064DF0F
 0064DEB8    fld         qword ptr [ebp+8]
 0064DEBB    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064DEC1    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064DEC7    fcompp
 0064DEC9    wait
 0064DECA    fnstsw      al
 0064DECC    sahf
>0064DECD    jae         0064DEDD
 0064DECF    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064DED6    mov         byte ptr [ebx+42C],13;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064DEDD    mov         edx,11
 0064DEE2    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064DEE8    call        TAverager.GetAvg
 0064DEED    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064DEF3    fsubp       st(1),st
 0064DEF5    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064DEFB    wait
 0064DEFC    fnstsw      al
 0064DEFE    sahf
>0064DEFF    jae         0064DF0F
 0064DF01    mov         byte ptr [ebx+41E],0E;TAccelerometerObject.GestureState:TGestureState
 0064DF08    mov         byte ptr [ebx+42E],14;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064DF0F    cmp         byte ptr [ebx+41E],0E;TAccelerometerObject.GestureState:TGestureState
>0064DF16    jne         0064DFCB
 0064DF1C    mov         edx,32
 0064DF21    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064DF27    call        TAverager.GetAvg
 0064DF2C    fcomp       dword ptr ds:[64E7D0];5:Single
 0064DF32    wait
 0064DF33    fnstsw      al
 0064DF35    sahf
>0064DF36    jbe         0064DF41
 0064DF38    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
>0064DF3F    jmp         0064DF64
 0064DF41    mov         edx,32
 0064DF46    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064DF4C    call        TAverager.GetAvg
 0064DF51    fcomp       dword ptr ds:[64E7D4];-5:Single
 0064DF57    wait
 0064DF58    fnstsw      al
 0064DF5A    sahf
>0064DF5B    jae         0064DF64
 0064DF5D    mov         byte ptr [ebx+420],1;TAccelerometerObject.SwishLeft:Boolean
 0064DF64    fld         qword ptr [ebp+8]
 0064DF67    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064DF6D    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064DF73    fcompp
 0064DF75    wait
 0064DF76    fnstsw      al
 0064DF78    sahf
>0064DF79    jae         0064DF89
 0064DF7B    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064DF82    mov         byte ptr [ebx+42C],14;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064DF89    mov         edx,11
 0064DF8E    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064DF94    call        TAverager.GetAvg
 0064DF99    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064DF9F    fsubp       st(1),st
 0064DFA1    fcomp       dword ptr ds:[64E7AC];3:Single
 0064DFA7    wait
 0064DFA8    fnstsw      al
 0064DFAA    sahf
>0064DFAB    jbe         0064DFCB
 0064DFAD    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064DFB4    jne         0064DFBD
 0064DFB6    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
 0064DFBD    mov         byte ptr [ebx+41E],0F;TAccelerometerObject.GestureState:TGestureState
 0064DFC4    mov         byte ptr [ebx+42E],15;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064DFCB    cmp         byte ptr [ebx+41E],0F;TAccelerometerObject.GestureState:TGestureState
>0064DFD2    jne         0064E02B
 0064DFD4    fld         qword ptr [ebp+8]
 0064DFD7    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064DFDD    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064DFE3    fcompp
 0064DFE5    wait
 0064DFE6    fnstsw      al
 0064DFE8    sahf
>0064DFE9    jae         0064DFF9
 0064DFEB    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064DFF2    mov         byte ptr [ebx+42C],15;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064DFF9    mov         edx,11
 0064DFFE    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E004    call        TAverager.GetAvg
 0064E009    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E00F    fsubp       st(1),st
 0064E011    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064E017    wait
 0064E018    fnstsw      al
 0064E01A    sahf
>0064E01B    jae         0064E02B
 0064E01D    mov         byte ptr [ebx+41E],10;TAccelerometerObject.GestureState:TGestureState
 0064E024    mov         byte ptr [ebx+42E],16;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064E02B    cmp         byte ptr [ebx+41E],10;TAccelerometerObject.GestureState:TGestureState
>0064E032    jne         0064E03B
 0064E034    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064E03B    cmp         byte ptr [ebx+41E],11;TAccelerometerObject.GestureState:TGestureState
>0064E042    jne         0064E1F2
 0064E048    fld         qword ptr [ebp+8]
 0064E04B    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064E051    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064E057    fcompp
 0064E059    wait
 0064E05A    fnstsw      al
 0064E05C    sahf
>0064E05D    jae         0064E06D
 0064E05F    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064E066    mov         byte ptr [ebx+42C],18;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064E06D    mov         edx,0A
 0064E072    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E078    call        TAverager.GetAvg
 0064E07D    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064E083    wait
 0064E084    fnstsw      al
 0064E086    sahf
>0064E087    jae         0064E0B4
 0064E089    mov         edx,0F
 0064E08E    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E094    call        TAverager.GetAvg
 0064E099    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E09F    fsubp       st(1),st
 0064E0A1    fcomp       dword ptr ds:[64E7BC];2:Single
 0064E0A7    wait
 0064E0A8    fnstsw      al
 0064E0AA    sahf
>0064E0AB    jbe         0064E0B4
 0064E0AD    mov         byte ptr [ebx+425],1;TAccelerometerObject.AntiSwish:Boolean
 0064E0B4    cmp         byte ptr [ebx+425],0;TAccelerometerObject.AntiSwish:Boolean
>0064E0BB    je          0064E112
 0064E0BD    mov         edx,0A
 0064E0C2    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E0C8    call        TAverager.GetAvg
 0064E0CD    fcomp       dword ptr ds:[64E7AC];3:Single
 0064E0D3    wait
 0064E0D4    fnstsw      al
 0064E0D6    sahf
>0064E0D7    jbe         0064E112
 0064E0D9    mov         edx,0F
 0064E0DE    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E0E4    call        TAverager.GetAvg
 0064E0E9    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E0EF    fsubp       st(1),st
 0064E0F1    fcomp       dword ptr ds:[64E7BC];2:Single
 0064E0F7    wait
 0064E0F8    fnstsw      al
 0064E0FA    sahf
>0064E0FB    jbe         0064E112
 0064E0FD    mov         byte ptr [ebx+428],1;TAccelerometerObject.AntiUnswish:Boolean
 0064E104    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064E10B    mov         byte ptr [ebx+42E],46;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064E112    mov         edx,0A
 0064E117    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E11D    call        TAverager.GetAvg
 0064E122    fcomp       dword ptr ds:[64E7AC];3:Single
 0064E128    wait
 0064E129    fnstsw      al
 0064E12B    sahf
>0064E12C    jbe         0064E159
 0064E12E    mov         edx,0F
 0064E133    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E139    call        TAverager.GetAvg
 0064E13E    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E144    fsubp       st(1),st
 0064E146    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064E14C    wait
 0064E14D    fnstsw      al
 0064E14F    sahf
>0064E150    jae         0064E159
 0064E152    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064E159    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064E160    je          0064E1C0
 0064E162    mov         edx,0A
 0064E167    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E16D    call        TAverager.GetAvg
 0064E172    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064E178    wait
 0064E179    fnstsw      al
 0064E17B    sahf
>0064E17C    jae         0064E1C0
 0064E17E    mov         edx,0F
 0064E183    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E189    call        TAverager.GetAvg
 0064E18E    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E194    fsubp       st(1),st
 0064E196    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064E19C    wait
 0064E19D    fnstsw      al
 0064E19F    sahf
>0064E1A0    jae         0064E1C0
 0064E1A2    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064E1A9    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064E1B0    jne         0064E1C0
 0064E1B2    mov         byte ptr [ebx+42E],1B;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064E1B9    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064E1C0    mov         edx,11
 0064E1C5    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E1CB    call        TAverager.GetAvg
 0064E1D0    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E1D6    fsubp       st(1),st
 0064E1D8    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064E1DE    wait
 0064E1DF    fnstsw      al
 0064E1E1    sahf
>0064E1E2    jae         0064E1F2
 0064E1E4    mov         byte ptr [ebx+41E],12;TAccelerometerObject.GestureState:TGestureState
 0064E1EB    mov         byte ptr [ebx+42E],19;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064E1F2    cmp         byte ptr [ebx+41E],12;TAccelerometerObject.GestureState:TGestureState
>0064E1F9    jne         0064E3DD
 0064E1FF    mov         edx,0A
 0064E204    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E20A    call        TAverager.GetAvg
 0064E20F    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064E215    wait
 0064E216    fnstsw      al
 0064E218    sahf
>0064E219    jae         0064E246
 0064E21B    mov         edx,0F
 0064E220    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E226    call        TAverager.GetAvg
 0064E22B    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E231    fsubp       st(1),st
 0064E233    fcomp       dword ptr ds:[64E7BC];2:Single
 0064E239    wait
 0064E23A    fnstsw      al
 0064E23C    sahf
>0064E23D    jbe         0064E246
 0064E23F    mov         byte ptr [ebx+425],1;TAccelerometerObject.AntiSwish:Boolean
 0064E246    cmp         byte ptr [ebx+425],0;TAccelerometerObject.AntiSwish:Boolean
>0064E24D    je          0064E2A4
 0064E24F    mov         edx,0A
 0064E254    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E25A    call        TAverager.GetAvg
 0064E25F    fcomp       dword ptr ds:[64E7AC];3:Single
 0064E265    wait
 0064E266    fnstsw      al
 0064E268    sahf
>0064E269    jbe         0064E2A4
 0064E26B    mov         edx,0F
 0064E270    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E276    call        TAverager.GetAvg
 0064E27B    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E281    fsubp       st(1),st
 0064E283    fcomp       dword ptr ds:[64E7BC];2:Single
 0064E289    wait
 0064E28A    fnstsw      al
 0064E28C    sahf
>0064E28D    jbe         0064E2A4
 0064E28F    mov         byte ptr [ebx+428],1;TAccelerometerObject.AntiUnswish:Boolean
 0064E296    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064E29D    mov         byte ptr [ebx+42E],46;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064E2A4    mov         edx,0A
 0064E2A9    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E2AF    call        TAverager.GetAvg
 0064E2B4    fcomp       dword ptr ds:[64E7AC];3:Single
 0064E2BA    wait
 0064E2BB    fnstsw      al
 0064E2BD    sahf
>0064E2BE    jbe         0064E2EB
 0064E2C0    mov         edx,0F
 0064E2C5    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E2CB    call        TAverager.GetAvg
 0064E2D0    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E2D6    fsubp       st(1),st
 0064E2D8    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064E2DE    wait
 0064E2DF    fnstsw      al
 0064E2E1    sahf
>0064E2E2    jae         0064E2EB
 0064E2E4    mov         byte ptr [ebx+41F],1;TAccelerometerObject.Swish:Boolean
 0064E2EB    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064E2F2    je          0064E352
 0064E2F4    mov         edx,0A
 0064E2F9    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E2FF    call        TAverager.GetAvg
 0064E304    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064E30A    wait
 0064E30B    fnstsw      al
 0064E30D    sahf
>0064E30E    jae         0064E352
 0064E310    mov         edx,0F
 0064E315    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E31B    call        TAverager.GetAvg
 0064E320    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E326    fsubp       st(1),st
 0064E328    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064E32E    wait
 0064E32F    fnstsw      al
 0064E331    sahf
>0064E332    jae         0064E352
 0064E334    mov         byte ptr [ebx+422],1;TAccelerometerObject.UnSwish:Boolean
 0064E33B    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064E342    jne         0064E352
 0064E344    mov         byte ptr [ebx+42E],1B;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064E34B    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064E352    fld         qword ptr [ebp+8]
 0064E355    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064E35B    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064E361    fcompp
 0064E363    wait
 0064E364    fnstsw      al
 0064E366    sahf
>0064E367    jae         0064E392
 0064E369    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064E370    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064E377    je          0064E382
 0064E379    cmp         byte ptr [ebx+422],0;TAccelerometerObject.UnSwish:Boolean
>0064E380    jne         0064E38B
 0064E382    mov         byte ptr [ebx+42C],19;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
>0064E389    jmp         0064E392
 0064E38B    mov         byte ptr [ebx+42C],1B;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064E392    mov         edx,11
 0064E397    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E39D    call        TAverager.GetAvg
 0064E3A2    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E3A8    fsubp       st(1),st
 0064E3AA    fcomp       dword ptr ds:[64E7AC];3:Single
 0064E3B0    wait
 0064E3B1    fnstsw      al
 0064E3B3    sahf
>0064E3B4    jbe         0064E3DD
 0064E3B6    cmp         byte ptr [ebx+41F],0;TAccelerometerObject.Swish:Boolean
>0064E3BD    je          0064E3CF
 0064E3BF    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064E3C6    mov         byte ptr [ebx+42E],1C;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064E3CD    jmp         0064E3DD
 0064E3CF    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064E3D6    mov         byte ptr [ebx+42E],1A;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064E3DD    cmp         byte ptr [ebx+41E],13;TAccelerometerObject.GestureState:TGestureState
>0064E3E4    jne         0064E594
 0064E3EA    fld         qword ptr [ebp+8]
 0064E3ED    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064E3F3    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064E3F9    fcompp
 0064E3FB    wait
 0064E3FC    fnstsw      al
 0064E3FE    sahf
>0064E3FF    jae         0064E40F
 0064E401    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064E408    mov         byte ptr [ebx+42C],1E;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064E40F    mov         edx,0A
 0064E414    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E41A    call        TAverager.GetAvg
 0064E41F    fcomp       dword ptr ds:[64E7AC];3:Single
 0064E425    wait
 0064E426    fnstsw      al
 0064E428    sahf
>0064E429    jbe         0064E456
 0064E42B    mov         edx,0F
 0064E430    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E436    call        TAverager.GetAvg
 0064E43B    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E441    fsubp       st(1),st
 0064E443    fcomp       dword ptr ds:[64E7BC];2:Single
 0064E449    wait
 0064E44A    fnstsw      al
 0064E44C    sahf
>0064E44D    jbe         0064E456
 0064E44F    mov         byte ptr [ebx+426],1;TAccelerometerObject.AntiSwishLeft:Boolean
 0064E456    cmp         byte ptr [ebx+426],0;TAccelerometerObject.AntiSwishLeft:Boolean
>0064E45D    je          0064E4B4
 0064E45F    mov         edx,0A
 0064E464    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E46A    call        TAverager.GetAvg
 0064E46F    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064E475    wait
 0064E476    fnstsw      al
 0064E478    sahf
>0064E479    jae         0064E4B4
 0064E47B    mov         edx,0F
 0064E480    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E486    call        TAverager.GetAvg
 0064E48B    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E491    fsubp       st(1),st
 0064E493    fcomp       dword ptr ds:[64E7BC];2:Single
 0064E499    wait
 0064E49A    fnstsw      al
 0064E49C    sahf
>0064E49D    jbe         0064E4B4
 0064E49F    mov         byte ptr [ebx+429],1;TAccelerometerObject.AntiUnswishLeft:Boolean
 0064E4A6    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064E4AD    mov         byte ptr [ebx+42E],45;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064E4B4    mov         edx,0A
 0064E4B9    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E4BF    call        TAverager.GetAvg
 0064E4C4    fcomp       dword ptr ds:[64E7AC];3:Single
 0064E4CA    wait
 0064E4CB    fnstsw      al
 0064E4CD    sahf
>0064E4CE    jbe         0064E4FB
 0064E4D0    mov         edx,0F
 0064E4D5    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E4DB    call        TAverager.GetAvg
 0064E4E0    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E4E6    fsubp       st(1),st
 0064E4E8    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064E4EE    wait
 0064E4EF    fnstsw      al
 0064E4F1    sahf
>0064E4F2    jae         0064E4FB
 0064E4F4    mov         byte ptr [ebx+420],1;TAccelerometerObject.SwishLeft:Boolean
 0064E4FB    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064E502    je          0064E562
 0064E504    mov         edx,0A
 0064E509    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E50F    call        TAverager.GetAvg
 0064E514    fcomp       dword ptr ds:[64E7AC];3:Single
 0064E51A    wait
 0064E51B    fnstsw      al
 0064E51D    sahf
>0064E51E    jbe         0064E562
 0064E520    mov         edx,0F
 0064E525    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E52B    call        TAverager.GetAvg
 0064E530    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E536    fsubp       st(1),st
 0064E538    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064E53E    wait
 0064E53F    fnstsw      al
 0064E541    sahf
>0064E542    jae         0064E562
 0064E544    mov         byte ptr [ebx+423],1;TAccelerometerObject.UnSwishLeft:Boolean
 0064E54B    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064E552    jne         0064E562
 0064E554    mov         byte ptr [ebx+42E],21;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064E55B    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064E562    mov         edx,11
 0064E567    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E56D    call        TAverager.GetAvg
 0064E572    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E578    fsubp       st(1),st
 0064E57A    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064E580    wait
 0064E581    fnstsw      al
 0064E583    sahf
>0064E584    jae         0064E594
 0064E586    mov         byte ptr [ebx+41E],14;TAccelerometerObject.GestureState:TGestureState
 0064E58D    mov         byte ptr [ebx+42E],1F;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064E594    cmp         byte ptr [ebx+41E],14;TAccelerometerObject.GestureState:TGestureState
>0064E59B    jne         0064E786
 0064E5A1    mov         edx,0A
 0064E5A6    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E5AC    call        TAverager.GetAvg
 0064E5B1    fcomp       dword ptr ds:[64E7AC];3:Single
 0064E5B7    wait
 0064E5B8    fnstsw      al
 0064E5BA    sahf
>0064E5BB    jbe         0064E5E8
 0064E5BD    mov         edx,0F
 0064E5C2    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E5C8    call        TAverager.GetAvg
 0064E5CD    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E5D3    fsubp       st(1),st
 0064E5D5    fcomp       dword ptr ds:[64E7BC];2:Single
 0064E5DB    wait
 0064E5DC    fnstsw      al
 0064E5DE    sahf
>0064E5DF    jbe         0064E5E8
 0064E5E1    mov         byte ptr [ebx+426],1;TAccelerometerObject.AntiSwishLeft:Boolean
 0064E5E8    cmp         byte ptr [ebx+426],0;TAccelerometerObject.AntiSwishLeft:Boolean
>0064E5EF    je          0064E646
 0064E5F1    mov         edx,0A
 0064E5F6    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E5FC    call        TAverager.GetAvg
 0064E601    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064E607    wait
 0064E608    fnstsw      al
 0064E60A    sahf
>0064E60B    jae         0064E646
 0064E60D    mov         edx,0F
 0064E612    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E618    call        TAverager.GetAvg
 0064E61D    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E623    fsubp       st(1),st
 0064E625    fcomp       dword ptr ds:[64E7BC];2:Single
 0064E62B    wait
 0064E62C    fnstsw      al
 0064E62E    sahf
>0064E62F    jbe         0064E646
 0064E631    mov         byte ptr [ebx+429],1;TAccelerometerObject.AntiUnswishLeft:Boolean
 0064E638    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064E63F    mov         byte ptr [ebx+42E],45;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064E646    mov         edx,0A
 0064E64B    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E651    call        TAverager.GetAvg
 0064E656    fcomp       dword ptr ds:[64E7C0];-3:Single
 0064E65C    wait
 0064E65D    fnstsw      al
 0064E65F    sahf
>0064E660    jae         0064E68D
 0064E662    mov         edx,0F
 0064E667    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E66D    call        TAverager.GetAvg
 0064E672    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E678    fsubp       st(1),st
 0064E67A    fcomp       dword ptr ds:[64E7BC];2:Single
 0064E680    wait
 0064E681    fnstsw      al
 0064E683    sahf
>0064E684    jbe         0064E68D
 0064E686    mov         byte ptr [ebx+420],1;TAccelerometerObject.SwishLeft:Boolean
 0064E68D    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064E694    je          0064E6F4
 0064E696    mov         edx,0A
 0064E69B    mov         eax,dword ptr [ebx+3FC];TAccelerometerObject.RawAccXAverager:TAverager
 0064E6A1    call        TAverager.GetAvg
 0064E6A6    fcomp       dword ptr ds:[64E7AC];3:Single
 0064E6AC    wait
 0064E6AD    fnstsw      al
 0064E6AF    sahf
>0064E6B0    jbe         0064E6F4
 0064E6B2    mov         edx,0F
 0064E6B7    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E6BD    call        TAverager.GetAvg
 0064E6C2    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E6C8    fsubp       st(1),st
 0064E6CA    fcomp       dword ptr ds:[64E7D8];-2:Single
 0064E6D0    wait
 0064E6D1    fnstsw      al
 0064E6D3    sahf
>0064E6D4    jae         0064E6F4
 0064E6D6    mov         byte ptr [ebx+423],1;TAccelerometerObject.UnSwishLeft:Boolean
 0064E6DD    cmp         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
>0064E6E4    jne         0064E6F4
 0064E6E6    mov         byte ptr [ebx+42E],21;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064E6ED    mov         byte ptr [ebx+42B],1;TAccelerometerObject.SwishReported:Boolean
 0064E6F4    fld         qword ptr [ebp+8]
 0064E6F7    fsub        qword ptr [ebx+3F0];TAccelerometerObject.LowRelAccTime:Double
 0064E6FD    fld         tbyte ptr ds:[64E7C4];0.4:Extended
 0064E703    fcompp
 0064E705    wait
 0064E706    fnstsw      al
 0064E708    sahf
>0064E709    jae         0064E734
 0064E70B    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064E712    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064E719    je          0064E724
 0064E71B    cmp         byte ptr [ebx+423],0;TAccelerometerObject.UnSwishLeft:Boolean
>0064E722    jne         0064E72D
 0064E724    mov         byte ptr [ebx+42C],1F;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
>0064E72B    jmp         0064E734
 0064E72D    mov         byte ptr [ebx+42C],21;TAccelerometerObject.NextWaggleGesture:TWaggleGesture
 0064E734    mov         edx,11
 0064E739    mov         eax,dword ptr [ebx+400];TAccelerometerObject.RawAccYAverager:TAverager
 0064E73F    call        TAverager.GetAvg
 0064E744    fld         tbyte ptr ds:[64E7B0];9.8:Extended
 0064E74A    fsubp       st(1),st
 0064E74C    fcomp       dword ptr ds:[64E7AC];3:Single
 0064E752    wait
 0064E753    fnstsw      al
 0064E755    sahf
>0064E756    jbe         0064E786
 0064E758    mov         byte ptr [ebx+42B],0;TAccelerometerObject.SwishReported:Boolean
 0064E75F    cmp         byte ptr [ebx+420],0;TAccelerometerObject.SwishLeft:Boolean
>0064E766    je          0064E778
 0064E768    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064E76F    mov         byte ptr [ebx+42E],22;TAccelerometerObject.NextPartialGesture:TWaggleGesture
>0064E776    jmp         0064E786
 0064E778    mov         byte ptr [ebx+41E],0;TAccelerometerObject.GestureState:TGestureState
 0064E77F    mov         byte ptr [ebx+42E],20;TAccelerometerObject.NextPartialGesture:TWaggleGesture
 0064E786    pop         ebx
 0064E787    pop         ebp
 0064E788    ret         8
*}
end;

//0064E7DC
{*procedure TAccelerometerObject.UpdateGyros(TimeStamp:Double; ?:?; RawGyroRoll:Double; ?:?; RawGyroPitch:Double; ?:?; RawGyroYaw:Double; ?:?);
begin
 0064E7DC    push        ebp
 0064E7DD    mov         ebp,esp
 0064E7DF    add         esp,0FFFFFFB0
 0064E7E2    push        ebx
 0064E7E3    push        esi
 0064E7E4    push        edi
 0064E7E5    mov         ebx,eax
 0064E7E7    fld         qword ptr [ebp+18]
 0064E7EA    fcomp       dword ptr ds:[64ED70];0:Single
 0064E7F0    wait
 0064E7F1    fnstsw      al
 0064E7F3    sahf
>0064E7F4    jne         0064E80E
 0064E7F6    fld         qword ptr [ebp+10]
 0064E7F9    fcomp       dword ptr ds:[64ED70];0:Single
 0064E7FF    wait
 0064E800    fnstsw      al
 0064E802    sahf
>0064E803    jne         0064E80E
 0064E805    mov         byte ptr [ebx+149],1;TAccelerometerObject.HasYawGyro:Boolean
>0064E80C    jmp         0064E81C
 0064E80E    mov         byte ptr [ebx+149],1;TAccelerometerObject.HasYawGyro:Boolean
 0064E815    mov         byte ptr [ebx+148],1;TAccelerometerObject.HasGyros:Boolean
 0064E81C    fld         qword ptr [ebx+1C8];TAccelerometerObject.LastGyroTime:Double
 0064E822    fcomp       dword ptr ds:[64ED70];0:Single
 0064E828    wait
 0064E829    fnstsw      al
 0064E82B    sahf
>0064E82C    je          0064E84C
 0064E82E    fld         qword ptr [ebx+1C8];TAccelerometerObject.LastGyroTime:Double
 0064E834    fcomp       qword ptr [ebp+8]
 0064E837    wait
 0064E838    fnstsw      al
 0064E83A    sahf
>0064E83B    jae         0064E84C
 0064E83D    fld         qword ptr [ebp+8]
 0064E840    fsub        qword ptr [ebx+1C8];TAccelerometerObject.LastGyroTime:Double
 0064E846    fstp        qword ptr [ebp-8]
 0064E849    wait
>0064E84A    jmp         0064E854
 0064E84C    xor         eax,eax
 0064E84E    mov         dword ptr [ebp-8],eax
 0064E851    mov         dword ptr [ebp-4],eax
 0064E854    mov         eax,dword ptr [ebp+8]
 0064E857    mov         dword ptr [ebx+1C8],eax;TAccelerometerObject.LastGyroTime:Double
 0064E85D    mov         eax,dword ptr [ebp+0C]
 0064E860    mov         dword ptr [ebx+1CC],eax;TAccelerometerObject.?f1CC:dword
 0064E866    mov         eax,dword ptr [ebp+20]
 0064E869    mov         dword ptr [ebx+150],eax;TAccelerometerObject.RawGyroYaw:Double
 0064E86F    mov         eax,dword ptr [ebp+24]
 0064E872    mov         dword ptr [ebx+154],eax;TAccelerometerObject.?f154:dword
 0064E878    mov         eax,dword ptr [ebp+18]
 0064E87B    mov         dword ptr [ebx+158],eax;TAccelerometerObject.RawGyroPitch:Double
 0064E881    mov         eax,dword ptr [ebp+1C]
 0064E884    mov         dword ptr [ebx+15C],eax;TAccelerometerObject.?f15C:dword
 0064E88A    mov         eax,dword ptr [ebp+10]
 0064E88D    mov         dword ptr [ebx+160],eax;TAccelerometerObject.RawGyroRoll:Double
 0064E893    mov         eax,dword ptr [ebp+14]
 0064E896    mov         dword ptr [ebx+164],eax;TAccelerometerObject.?f164:dword
 0064E89C    cmp         byte ptr [ebx+14B],0;TAccelerometerObject.GyrosCalibrated:Boolean
>0064E8A3    jne         0064E95B
 0064E8A9    cmp         byte ptr [ebx+218],0;TAccelerometerObject.FastYaw:Boolean
>0064E8B0    jne         0064E95B
 0064E8B6    cmp         byte ptr [ebx+219],0;TAccelerometerObject.FastPitch:Boolean
>0064E8BD    jne         0064E95B
 0064E8C3    cmp         byte ptr [ebx+21A],0;TAccelerometerObject.FastRoll:Boolean
>0064E8CA    jne         0064E95B
 0064E8D0    fld         qword ptr [ebx+198];TAccelerometerObject.ZeroYawSpeedTotal:Double
 0064E8D6    fadd        qword ptr [ebp+20]
 0064E8D9    fstp        qword ptr [ebx+198];TAccelerometerObject.ZeroYawSpeedTotal:Double
 0064E8DF    wait
 0064E8E0    fld         qword ptr [ebx+1A0];TAccelerometerObject.ZeroPitchSpeedTotal:Double
 0064E8E6    fadd        qword ptr [ebp+18]
 0064E8E9    fstp        qword ptr [ebx+1A0];TAccelerometerObject.ZeroPitchSpeedTotal:Double
 0064E8EF    wait
 0064E8F0    fld         qword ptr [ebx+1A8];TAccelerometerObject.ZeroRollSpeedTotal:Double
 0064E8F6    fadd        qword ptr [ebp+10]
 0064E8F9    fstp        qword ptr [ebx+1A8];TAccelerometerObject.ZeroRollSpeedTotal:Double
 0064E8FF    wait
 0064E900    inc         dword ptr [ebx+14C];TAccelerometerObject.GyroSetCount:Integer
 0064E906    fild        dword ptr [ebx+14C];TAccelerometerObject.GyroSetCount:Integer
 0064E90C    fdivr       qword ptr [ebx+198];TAccelerometerObject.ZeroYawSpeedTotal:Double
 0064E912    fstp        qword ptr [ebx+180];TAccelerometerObject.ZeroYawSpeed:Double
 0064E918    wait
 0064E919    fild        dword ptr [ebx+14C];TAccelerometerObject.GyroSetCount:Integer
 0064E91F    fdivr       qword ptr [ebx+1A0];TAccelerometerObject.ZeroPitchSpeedTotal:Double
 0064E925    fstp        qword ptr [ebx+188];TAccelerometerObject.ZeroPitchSpeed:Double
 0064E92B    wait
 0064E92C    fild        dword ptr [ebx+14C];TAccelerometerObject.GyroSetCount:Integer
 0064E932    fdivr       qword ptr [ebx+1A8];TAccelerometerObject.ZeroRollSpeedTotal:Double
 0064E938    fstp        qword ptr [ebx+190];TAccelerometerObject.ZeroRollSpeed:Double
 0064E93E    wait
 0064E93F    cmp         dword ptr [ebx+14C],12C;TAccelerometerObject.GyroSetCount:Integer
>0064E949    jl          0064E95B
 0064E94B    mov         byte ptr [ebx+14B],1;TAccelerometerObject.GyrosCalibrated:Boolean
 0064E952    xor         edx,edx
 0064E954    mov         eax,ebx
 0064E956    mov         ecx,dword ptr [eax]
 0064E958    call        dword ptr [ecx+8];TAccelerometerObject.ShowCalibrating
 0064E95B    cmp         byte ptr [ebx+14A],0;TAccelerometerObject.HasStandardGyros:Boolean
>0064E962    je          0064EAC7
 0064E968    fld         qword ptr [ebp+20]
 0064E96B    fsub        qword ptr [ebx+180];TAccelerometerObject.ZeroYawSpeed:Double
 0064E971    fmul        qword ptr [ebx+230];TAccelerometerObject.DegPerGyro:Double
 0064E977    fstp        qword ptr [ebx+168];TAccelerometerObject.YawSpeed:Double
 0064E97D    wait
 0064E97E    fld         qword ptr [ebx+168];TAccelerometerObject.YawSpeed:Double
 0064E984    fabs
 0064E986    fld         tbyte ptr ds:[64ED74];4.1:Extended
 0064E98C    fcompp
 0064E98E    wait
 0064E98F    fnstsw      al
 0064E991    sahf
>0064E992    jb          0064E9A4
 0064E994    xor         eax,eax
 0064E996    mov         dword ptr [ebx+168],eax;TAccelerometerObject.YawSpeed:Double
 0064E99C    mov         dword ptr [ebx+16C],eax;TAccelerometerObject.?f16C:dword
>0064E9A2    jmp         0064E9CB
 0064E9A4    fld         qword ptr [ebx+168];TAccelerometerObject.YawSpeed:Double
 0064E9AA    fabs
 0064E9AC    fcomp       dword ptr ds:[64ED80];1:Single
 0064E9B2    wait
 0064E9B3    fnstsw      al
 0064E9B5    sahf
>0064E9B6    ja          0064E9CB
 0064E9B8    fld         qword ptr [ebx+168];TAccelerometerObject.YawSpeed:Double
 0064E9BE    fdiv        dword ptr ds:[64ED84];2:Single
 0064E9C4    fstp        qword ptr [ebx+168];TAccelerometerObject.YawSpeed:Double
 0064E9CA    wait
 0064E9CB    cmp         byte ptr [ebx+148],0;TAccelerometerObject.HasGyros:Boolean
>0064E9D2    je          0064EAA6
 0064E9D8    fld         qword ptr [ebp+18]
 0064E9DB    fsub        qword ptr [ebx+188];TAccelerometerObject.ZeroPitchSpeed:Double
 0064E9E1    fmul        qword ptr [ebx+238];TAccelerometerObject.DegPerGyroPitch:Double
 0064E9E7    fstp        qword ptr [ebx+170];TAccelerometerObject.PitchSpeed:Double
 0064E9ED    wait
 0064E9EE    fld         qword ptr [ebx+170];TAccelerometerObject.PitchSpeed:Double
 0064E9F4    fabs
 0064E9F6    fcomp       dword ptr ds:[64ED84];2:Single
 0064E9FC    wait
 0064E9FD    fnstsw      al
 0064E9FF    sahf
>0064EA00    ja          0064EA12
 0064EA02    xor         eax,eax
 0064EA04    mov         dword ptr [ebx+170],eax;TAccelerometerObject.PitchSpeed:Double
 0064EA0A    mov         dword ptr [ebx+174],eax;TAccelerometerObject.?f174:dword
>0064EA10    jmp         0064EA39
 0064EA12    fld         qword ptr [ebx+170];TAccelerometerObject.PitchSpeed:Double
 0064EA18    fabs
 0064EA1A    fcomp       dword ptr ds:[64ED80];1:Single
 0064EA20    wait
 0064EA21    fnstsw      al
 0064EA23    sahf
>0064EA24    ja          0064EA39
 0064EA26    fld         qword ptr [ebx+170];TAccelerometerObject.PitchSpeed:Double
 0064EA2C    fdiv        dword ptr ds:[64ED84];2:Single
 0064EA32    fstp        qword ptr [ebx+170];TAccelerometerObject.PitchSpeed:Double
 0064EA38    wait
 0064EA39    fld         qword ptr [ebp+10]
 0064EA3C    fsub        qword ptr [ebx+190];TAccelerometerObject.ZeroRollSpeed:Double
 0064EA42    fmul        qword ptr [ebx+240];TAccelerometerObject.DegPerGyroRoll:Double
 0064EA48    fstp        qword ptr [ebx+178];TAccelerometerObject.RollSpeed:Double
 0064EA4E    wait
 0064EA4F    fld         qword ptr [ebx+178];TAccelerometerObject.RollSpeed:Double
 0064EA55    fabs
 0064EA57    fcomp       dword ptr ds:[64ED88];1.5:Single
 0064EA5D    wait
 0064EA5E    fnstsw      al
 0064EA60    sahf
>0064EA61    ja          0064EA76
 0064EA63    xor         eax,eax
 0064EA65    mov         dword ptr [ebx+178],eax;TAccelerometerObject.RollSpeed:Double
 0064EA6B    mov         dword ptr [ebx+17C],eax;TAccelerometerObject.?f17C:dword
>0064EA71    jmp         0064EC61
 0064EA76    fld         qword ptr [ebx+178];TAccelerometerObject.RollSpeed:Double
 0064EA7C    fabs
 0064EA7E    fcomp       dword ptr ds:[64ED80];1:Single
 0064EA84    wait
 0064EA85    fnstsw      al
 0064EA87    sahf
>0064EA88    ja          0064EC61
 0064EA8E    fld         qword ptr [ebx+178];TAccelerometerObject.RollSpeed:Double
 0064EA94    fdiv        dword ptr ds:[64ED84];2:Single
 0064EA9A    fstp        qword ptr [ebx+178];TAccelerometerObject.RollSpeed:Double
 0064EAA0    wait
>0064EAA1    jmp         0064EC61
 0064EAA6    xor         eax,eax
 0064EAA8    mov         dword ptr [ebx+170],eax;TAccelerometerObject.PitchSpeed:Double
 0064EAAE    mov         dword ptr [ebx+174],eax;TAccelerometerObject.?f174:dword
 0064EAB4    xor         eax,eax
 0064EAB6    mov         dword ptr [ebx+178],eax;TAccelerometerObject.RollSpeed:Double
 0064EABC    mov         dword ptr [ebx+17C],eax;TAccelerometerObject.?f17C:dword
>0064EAC2    jmp         0064EC61
 0064EAC7    cmp         byte ptr [ebx+149],0;TAccelerometerObject.HasYawGyro:Boolean
>0064EACE    je          0064EB34
 0064EAD0    cmp         byte ptr [ebx+148],0;TAccelerometerObject.HasGyros:Boolean
>0064EAD7    jne         0064EB34
 0064EAD9    fld         qword ptr [ebp+20]
 0064EADC    fsub        qword ptr [ebx+180];TAccelerometerObject.ZeroYawSpeed:Double
 0064EAE2    fchs
 0064EAE4    fmul        qword ptr [ebx+230];TAccelerometerObject.DegPerGyro:Double
 0064EAEA    fstp        qword ptr [ebx+168];TAccelerometerObject.YawSpeed:Double
 0064EAF0    wait
 0064EAF1    fld         qword ptr [ebx+168];TAccelerometerObject.YawSpeed:Double
 0064EAF7    fabs
 0064EAF9    fcomp       dword ptr ds:[64ED84];2:Single
 0064EAFF    wait
 0064EB00    fnstsw      al
 0064EB02    sahf
>0064EB03    ja          0064EB13
 0064EB05    xor         eax,eax
 0064EB07    mov         dword ptr [ebx+168],eax;TAccelerometerObject.YawSpeed:Double
 0064EB0D    mov         dword ptr [ebx+16C],eax;TAccelerometerObject.?f16C:dword
 0064EB13    xor         eax,eax
 0064EB15    mov         dword ptr [ebx+170],eax;TAccelerometerObject.PitchSpeed:Double
 0064EB1B    mov         dword ptr [ebx+174],eax;TAccelerometerObject.?f174:dword
 0064EB21    xor         eax,eax
 0064EB23    mov         dword ptr [ebx+178],eax;TAccelerometerObject.RollSpeed:Double
 0064EB29    mov         dword ptr [ebx+17C],eax;TAccelerometerObject.?f17C:dword
>0064EB2F    jmp         0064EC61
 0064EB34    cmp         byte ptr [ebx+218],0;TAccelerometerObject.FastYaw:Boolean
>0064EB3B    je          0064EB5F
 0064EB3D    fld         qword ptr [ebp+20]
 0064EB40    fsub        qword ptr [ebx+180];TAccelerometerObject.ZeroYawSpeed:Double
 0064EB46    fadd        dword ptr ds:[64ED8C];80:Single
 0064EB4C    fchs
 0064EB4E    fld         tbyte ptr ds:[64ED90];4.3:Extended
 0064EB54    fdivp       st(1),st
 0064EB56    fstp        qword ptr [ebx+168];TAccelerometerObject.YawSpeed:Double
 0064EB5C    wait
>0064EB5D    jmp         0064EB9B
 0064EB5F    fld         qword ptr [ebp+20]
 0064EB62    fsub        qword ptr [ebx+180];TAccelerometerObject.ZeroYawSpeed:Double
 0064EB68    fchs
 0064EB6A    fdiv        dword ptr ds:[64ED9C];20:Single
 0064EB70    fstp        qword ptr [ebx+168];TAccelerometerObject.YawSpeed:Double
 0064EB76    wait
 0064EB77    fld         qword ptr [ebx+168];TAccelerometerObject.YawSpeed:Double
 0064EB7D    fabs
 0064EB7F    fld         tbyte ptr ds:[64EDA0];0.8:Extended
 0064EB85    fcompp
 0064EB87    wait
 0064EB88    fnstsw      al
 0064EB8A    sahf
>0064EB8B    jb          0064EB9B
 0064EB8D    xor         eax,eax
 0064EB8F    mov         dword ptr [ebx+168],eax;TAccelerometerObject.YawSpeed:Double
 0064EB95    mov         dword ptr [ebx+16C],eax;TAccelerometerObject.?f16C:dword
 0064EB9B    cmp         byte ptr [ebx+219],0;TAccelerometerObject.FastPitch:Boolean
>0064EBA2    je          0064EBC6
 0064EBA4    fld         qword ptr [ebp+18]
 0064EBA7    fsub        qword ptr [ebx+188];TAccelerometerObject.ZeroPitchSpeed:Double
 0064EBAD    fadd        dword ptr ds:[64ED8C];80:Single
 0064EBB3    fchs
 0064EBB5    fld         tbyte ptr ds:[64ED90];4.3:Extended
 0064EBBB    fdivp       st(1),st
 0064EBBD    fstp        qword ptr [ebx+170];TAccelerometerObject.PitchSpeed:Double
 0064EBC3    wait
>0064EBC4    jmp         0064EC02
 0064EBC6    fld         qword ptr [ebp+18]
 0064EBC9    fsub        qword ptr [ebx+188];TAccelerometerObject.ZeroPitchSpeed:Double
 0064EBCF    fchs
 0064EBD1    fdiv        dword ptr ds:[64ED9C];20:Single
 0064EBD7    fstp        qword ptr [ebx+170];TAccelerometerObject.PitchSpeed:Double
 0064EBDD    wait
 0064EBDE    fld         qword ptr [ebx+170];TAccelerometerObject.PitchSpeed:Double
 0064EBE4    fabs
 0064EBE6    fld         tbyte ptr ds:[64EDA0];0.8:Extended
 0064EBEC    fcompp
 0064EBEE    wait
 0064EBEF    fnstsw      al
 0064EBF1    sahf
>0064EBF2    jb          0064EC02
 0064EBF4    xor         eax,eax
 0064EBF6    mov         dword ptr [ebx+170],eax;TAccelerometerObject.PitchSpeed:Double
 0064EBFC    mov         dword ptr [ebx+174],eax;TAccelerometerObject.?f174:dword
 0064EC02    cmp         byte ptr [ebx+21A],0;TAccelerometerObject.FastRoll:Boolean
>0064EC09    je          0064EC25
 0064EC0B    fld         qword ptr [ebp+10]
 0064EC0E    fsub        qword ptr [ebx+190];TAccelerometerObject.ZeroRollSpeed:Double
 0064EC14    fchs
 0064EC16    fdiv        dword ptr ds:[64EDAC];4.5:Single
 0064EC1C    fstp        qword ptr [ebx+178];TAccelerometerObject.RollSpeed:Double
 0064EC22    wait
>0064EC23    jmp         0064EC61
 0064EC25    fld         qword ptr [ebp+10]
 0064EC28    fsub        qword ptr [ebx+190];TAccelerometerObject.ZeroRollSpeed:Double
 0064EC2E    fchs
 0064EC30    fdiv        dword ptr ds:[64ED9C];20:Single
 0064EC36    fstp        qword ptr [ebx+178];TAccelerometerObject.RollSpeed:Double
 0064EC3C    wait
 0064EC3D    fld         qword ptr [ebx+178];TAccelerometerObject.RollSpeed:Double
 0064EC43    fabs
 0064EC45    fld         tbyte ptr ds:[64EDA0];0.8:Extended
 0064EC4B    fcompp
 0064EC4D    wait
 0064EC4E    fnstsw      al
 0064EC50    sahf
>0064EC51    jb          0064EC61
 0064EC53    xor         eax,eax
 0064EC55    mov         dword ptr [ebx+178],eax;TAccelerometerObject.RollSpeed:Double
 0064EC5B    mov         dword ptr [ebx+17C],eax;TAccelerometerObject.?f17C:dword
 0064EC61    cmp         byte ptr [ebx+14B],0;TAccelerometerObject.GyrosCalibrated:Boolean
>0064EC68    je          0064ED51
 0064EC6E    fld         qword ptr [ebx+168];TAccelerometerObject.YawSpeed:Double
 0064EC74    fmul        qword ptr [ebp-8]
 0064EC77    fadd        qword ptr [ebx+1B0];TAccelerometerObject.TotalGyroYaw:Double
 0064EC7D    fstp        qword ptr [ebx+1B0];TAccelerometerObject.TotalGyroYaw:Double
 0064EC83    wait
 0064EC84    cmp         byte ptr [ebx+148],0;TAccelerometerObject.HasGyros:Boolean
>0064EC8B    je          0064ECBB
 0064EC8D    fld         qword ptr [ebx+170];TAccelerometerObject.PitchSpeed:Double
 0064EC93    fmul        qword ptr [ebp-8]
 0064EC96    fadd        qword ptr [ebx+1B8];TAccelerometerObject.TotalGyroPitch:Double
 0064EC9C    fstp        qword ptr [ebx+1B8];TAccelerometerObject.TotalGyroPitch:Double
 0064ECA2    wait
 0064ECA3    fld         qword ptr [ebx+178];TAccelerometerObject.RollSpeed:Double
 0064ECA9    fmul        qword ptr [ebp-8]
 0064ECAC    fadd        qword ptr [ebx+1C0];TAccelerometerObject.TotalGyroRoll:Double
 0064ECB2    fstp        qword ptr [ebx+1C0];TAccelerometerObject.TotalGyroRoll:Double
 0064ECB8    wait
>0064ECB9    jmp         0064ECEB
 0064ECBB    mov         eax,dword ptr [ebx+3C0];TAccelerometerObject.Pitch:Double
 0064ECC1    mov         dword ptr [ebx+1B8],eax;TAccelerometerObject.TotalGyroPitch:Double
 0064ECC7    mov         eax,dword ptr [ebx+3C4];TAccelerometerObject.?f3C4:dword
 0064ECCD    mov         dword ptr [ebx+1BC],eax;TAccelerometerObject.?f1BC:dword
 0064ECD3    mov         eax,dword ptr [ebx+3B8];TAccelerometerObject.Roll:Double
 0064ECD9    mov         dword ptr [ebx+1C0],eax;TAccelerometerObject.TotalGyroRoll:Double
 0064ECDF    mov         eax,dword ptr [ebx+3BC];TAccelerometerObject.?f3BC:dword
 0064ECE5    mov         dword ptr [ebx+1C4],eax;TAccelerometerObject.?f1C4:dword
 0064ECEB    push        dword ptr [ebx+16C];TAccelerometerObject.?f16C:dword
 0064ECF1    push        dword ptr [ebx+168];TAccelerometerObject.YawSpeed:Double
 0064ECF7    push        dword ptr [ebx+174];TAccelerometerObject.?f174:dword
 0064ECFD    push        dword ptr [ebx+170];TAccelerometerObject.PitchSpeed:Double
 0064ED03    push        dword ptr [ebx+17C];TAccelerometerObject.?f17C:dword
 0064ED09    push        dword ptr [ebx+178];TAccelerometerObject.RollSpeed:Double
 0064ED0F    push        dword ptr [ebp-4]
 0064ED12    push        dword ptr [ebp-8]
 0064ED15    lea         eax,[ebp-50]
 0064ED18    call        005C40B0
 0064ED1D    lea         eax,[ebx+1D0];TAccelerometerObject.GyroRotMat:TRotMat
 0064ED23    lea         ecx,[ebx+370];TAccelerometerObject.RotMat:TRotMat
 0064ED29    lea         edx,[ebp-50]
 0064ED2C    call        005C3CB0
 0064ED31    lea         eax,[ebx+228];TAccelerometerObject.GyroRoll:Double
 0064ED37    push        eax
 0064ED38    lea         ecx,[ebx+220];TAccelerometerObject.GyroPitch:Double
 0064ED3E    lea         edx,[ebx+3C8];TAccelerometerObject.Yaw:Double
 0064ED44    lea         eax,[ebx+1D0];TAccelerometerObject.GyroRotMat:TRotMat
 0064ED4A    call        005C3550
>0064ED4F    jmp         0064ED64
 0064ED51    lea         esi,[ebx+370];TAccelerometerObject.RotMat:TRotMat
 0064ED57    lea         edi,[ebx+1D0];TAccelerometerObject.GyroRotMat:TRotMat
 0064ED5D    mov         ecx,12
 0064ED62    rep movs    dword ptr [edi],dword ptr [esi]
 0064ED64    pop         edi
 0064ED65    pop         esi
 0064ED66    pop         ebx
 0064ED67    mov         esp,ebp
 0064ED69    pop         ebp
 0064ED6A    ret         20
end;*}

//0064EDB0
{*procedure TAccelerometerObject.UpdateMagnets(TimeStamp:Double; RawMagnetZ:Double; ?:?; RawMagnetY:Double; ?:?; RawMagnetX:Double; ?:?);
begin
 0064EDB0    push        ebp
 0064EDB1    mov         ebp,esp
 0064EDB3    add         esp,0FFFFFFE8
 0064EDB6    push        ebx
 0064EDB7    mov         ebx,eax
 0064EDB9    mov         byte ptr [ebx+91],1;TAccelerometerObject.HasMagnet:Boolean
 0064EDC0    mov         eax,dword ptr [ebp+20]
 0064EDC3    mov         dword ptr [ebx+98],eax;TAccelerometerObject.RawMagnetX:Double
 0064EDC9    mov         eax,dword ptr [ebp+24]
 0064EDCC    mov         dword ptr [ebx+9C],eax;TAccelerometerObject.?f9C:dword
 0064EDD2    mov         eax,dword ptr [ebp+18]
 0064EDD5    mov         dword ptr [ebx+0A0],eax;TAccelerometerObject.RawMagnetY:Double
 0064EDDB    mov         eax,dword ptr [ebp+1C]
 0064EDDE    mov         dword ptr [ebx+0A4],eax;TAccelerometerObject.?fA4:dword
 0064EDE4    mov         eax,dword ptr [ebp+10]
 0064EDE7    mov         dword ptr [ebx+0A8],eax;TAccelerometerObject.RawMagnetZ:Double
 0064EDED    mov         eax,dword ptr [ebp+14]
 0064EDF0    mov         dword ptr [ebx+0AC],eax;TAccelerometerObject.?fAC:dword
 0064EDF6    fld         qword ptr [ebp+20]
 0064EDF9    fcomp       qword ptr [ebx+0B0];TAccelerometerObject.MinMagX:Double
 0064EDFF    wait
 0064EE00    fnstsw      al
 0064EE02    sahf
>0064EE03    jae         0064EE19
 0064EE05    mov         eax,dword ptr [ebp+20]
 0064EE08    mov         dword ptr [ebx+0B0],eax;TAccelerometerObject.MinMagX:Double
 0064EE0E    mov         eax,dword ptr [ebp+24]
 0064EE11    mov         dword ptr [ebx+0B4],eax;TAccelerometerObject.?fB4:dword
>0064EE17    jmp         0064EE3A
 0064EE19    fld         qword ptr [ebp+20]
 0064EE1C    fcomp       qword ptr [ebx+0B8];TAccelerometerObject.MaxMagX:Double
 0064EE22    wait
 0064EE23    fnstsw      al
 0064EE25    sahf
>0064EE26    jbe         0064EE3A
 0064EE28    mov         eax,dword ptr [ebp+20]
 0064EE2B    mov         dword ptr [ebx+0B8],eax;TAccelerometerObject.MaxMagX:Double
 0064EE31    mov         eax,dword ptr [ebp+24]
 0064EE34    mov         dword ptr [ebx+0BC],eax;TAccelerometerObject.?fBC:dword
 0064EE3A    fld         qword ptr [ebp+18]
 0064EE3D    fcomp       qword ptr [ebx+0C0];TAccelerometerObject.MinMagY:Double
 0064EE43    wait
 0064EE44    fnstsw      al
 0064EE46    sahf
>0064EE47    jae         0064EE5D
 0064EE49    mov         eax,dword ptr [ebp+18]
 0064EE4C    mov         dword ptr [ebx+0C0],eax;TAccelerometerObject.MinMagY:Double
 0064EE52    mov         eax,dword ptr [ebp+1C]
 0064EE55    mov         dword ptr [ebx+0C4],eax;TAccelerometerObject.?fC4:dword
>0064EE5B    jmp         0064EE7E
 0064EE5D    fld         qword ptr [ebp+18]
 0064EE60    fcomp       qword ptr [ebx+0C8];TAccelerometerObject.MaxMagY:Double
 0064EE66    wait
 0064EE67    fnstsw      al
 0064EE69    sahf
>0064EE6A    jbe         0064EE7E
 0064EE6C    mov         eax,dword ptr [ebp+18]
 0064EE6F    mov         dword ptr [ebx+0C8],eax;TAccelerometerObject.MaxMagY:Double
 0064EE75    mov         eax,dword ptr [ebp+1C]
 0064EE78    mov         dword ptr [ebx+0CC],eax;TAccelerometerObject.?fCC:dword
 0064EE7E    fld         qword ptr [ebp+10]
 0064EE81    fcomp       qword ptr [ebx+0D0];TAccelerometerObject.MinMagZ:Double
 0064EE87    wait
 0064EE88    fnstsw      al
 0064EE8A    sahf
>0064EE8B    jae         0064EEA1
 0064EE8D    mov         eax,dword ptr [ebp+10]
 0064EE90    mov         dword ptr [ebx+0D0],eax;TAccelerometerObject.MinMagZ:Double
 0064EE96    mov         eax,dword ptr [ebp+14]
 0064EE99    mov         dword ptr [ebx+0D4],eax;TAccelerometerObject.?fD4:dword
>0064EE9F    jmp         0064EEC2
 0064EEA1    fld         qword ptr [ebp+10]
 0064EEA4    fcomp       qword ptr [ebx+0D8];TAccelerometerObject.MaxMagZ:Double
 0064EEAA    wait
 0064EEAB    fnstsw      al
 0064EEAD    sahf
>0064EEAE    jbe         0064EEC2
 0064EEB0    mov         eax,dword ptr [ebp+10]
 0064EEB3    mov         dword ptr [ebx+0D8],eax;TAccelerometerObject.MaxMagZ:Double
 0064EEB9    mov         eax,dword ptr [ebp+14]
 0064EEBC    mov         dword ptr [ebx+0DC],eax;TAccelerometerObject.?fDC:dword
 0064EEC2    fld         qword ptr [ebx+0B8];TAccelerometerObject.MaxMagX:Double
 0064EEC8    fcomp       qword ptr [ebx+0B0];TAccelerometerObject.MinMagX:Double
 0064EECE    wait
 0064EECF    fnstsw      al
 0064EED1    sahf
>0064EED2    jbe         0064EF0A
 0064EED4    fld         qword ptr [ebx+0B8];TAccelerometerObject.MaxMagX:Double
 0064EEDA    fadd        qword ptr [ebx+0B0];TAccelerometerObject.MinMagX:Double
 0064EEE0    fmul        dword ptr ds:[64F1C0];0.5:Single
 0064EEE6    fsubr       qword ptr [ebp+20]
 0064EEE9    fld         qword ptr [ebx+0B8];TAccelerometerObject.MaxMagX:Double
 0064EEEF    fadd        qword ptr [ebx+0B0];TAccelerometerObject.MinMagX:Double
 0064EEF5    fmul        dword ptr ds:[64F1C0];0.5:Single
 0064EEFB    fsubr       qword ptr [ebx+0B8];TAccelerometerObject.MaxMagX:Double
 0064EF01    fdivp       st(1),st
 0064EF03    fstp        qword ptr [ebx+0E0];TAccelerometerObject.gMX:Double
 0064EF09    wait
 0064EF0A    fld         qword ptr [ebx+0C8];TAccelerometerObject.MaxMagY:Double
 0064EF10    fcomp       qword ptr [ebx+0C0];TAccelerometerObject.MinMagY:Double
 0064EF16    wait
 0064EF17    fnstsw      al
 0064EF19    sahf
>0064EF1A    jbe         0064EF52
 0064EF1C    fld         qword ptr [ebx+0C8];TAccelerometerObject.MaxMagY:Double
 0064EF22    fadd        qword ptr [ebx+0C0];TAccelerometerObject.MinMagY:Double
 0064EF28    fmul        dword ptr ds:[64F1C0];0.5:Single
 0064EF2E    fsubr       qword ptr [ebp+18]
 0064EF31    fld         qword ptr [ebx+0C8];TAccelerometerObject.MaxMagY:Double
 0064EF37    fadd        qword ptr [ebx+0C0];TAccelerometerObject.MinMagY:Double
 0064EF3D    fmul        dword ptr ds:[64F1C0];0.5:Single
 0064EF43    fsubr       qword ptr [ebx+0C8];TAccelerometerObject.MaxMagY:Double
 0064EF49    fdivp       st(1),st
 0064EF4B    fstp        qword ptr [ebx+0E8];TAccelerometerObject.gMY:Double
 0064EF51    wait
 0064EF52    fld         qword ptr [ebx+0D8];TAccelerometerObject.MaxMagZ:Double
 0064EF58    fcomp       qword ptr [ebx+0D0];TAccelerometerObject.MinMagZ:Double
 0064EF5E    wait
 0064EF5F    fnstsw      al
 0064EF61    sahf
>0064EF62    jbe         0064EF9A
 0064EF64    fld         qword ptr [ebx+0D8];TAccelerometerObject.MaxMagZ:Double
 0064EF6A    fadd        qword ptr [ebx+0D0];TAccelerometerObject.MinMagZ:Double
 0064EF70    fmul        dword ptr ds:[64F1C0];0.5:Single
 0064EF76    fsubr       qword ptr [ebp+10]
 0064EF79    fld         qword ptr [ebx+0D8];TAccelerometerObject.MaxMagZ:Double
 0064EF7F    fadd        qword ptr [ebx+0D0];TAccelerometerObject.MinMagZ:Double
 0064EF85    fmul        dword ptr ds:[64F1C0];0.5:Single
 0064EF8B    fsubr       qword ptr [ebx+0D8];TAccelerometerObject.MaxMagZ:Double
 0064EF91    fdivp       st(1),st
 0064EF93    fstp        qword ptr [ebx+0F0];TAccelerometerObject.gMZ:Double
 0064EF99    wait
 0064EF9A    fld         qword ptr [ebx+0E0];TAccelerometerObject.gMX:Double
 0064EFA0    fmul        st,st(0)
 0064EFA2    fstp        tbyte ptr [ebp-0C]
 0064EFA5    wait
 0064EFA6    fld         qword ptr [ebx+0E8];TAccelerometerObject.gMY:Double
 0064EFAC    fmul        st,st(0)
 0064EFAE    fld         tbyte ptr [ebp-0C]
 0064EFB1    faddp       st(1),st
 0064EFB3    fstp        tbyte ptr [ebp-18]
 0064EFB6    wait
 0064EFB7    fld         qword ptr [ebx+0F0];TAccelerometerObject.gMZ:Double
 0064EFBD    fmul        st,st(0)
 0064EFBF    fld         tbyte ptr [ebp-18]
 0064EFC2    faddp       st(1),st
 0064EFC4    add         esp,0FFFFFFF4
 0064EFC7    fstp        tbyte ptr [esp]
 0064EFCA    wait
 0064EFCB    call        Sqrt
 0064EFD0    fstp        qword ptr [ebx+0F8];TAccelerometerObject.lngM:Double
 0064EFD6    wait
 0064EFD7    fld         qword ptr [ebx+0F8];TAccelerometerObject.lngM:Double
 0064EFDD    fcomp       dword ptr ds:[64F1C4];0:Single
 0064EFE3    wait
 0064EFE4    fnstsw      al
 0064EFE6    sahf
>0064EFE7    jbe         0064F022
 0064EFE9    fld         qword ptr [ebx+0E0];TAccelerometerObject.gMX:Double
 0064EFEF    fdiv        qword ptr [ebx+0F8];TAccelerometerObject.lngM:Double
 0064EFF5    fstp        qword ptr [ebx+100];TAccelerometerObject.MNorthX:Double
 0064EFFB    wait
 0064EFFC    fld         qword ptr [ebx+0E8];TAccelerometerObject.gMY:Double
 0064F002    fdiv        qword ptr [ebx+0F8];TAccelerometerObject.lngM:Double
 0064F008    fstp        qword ptr [ebx+108];TAccelerometerObject.MNorthY:Double
 0064F00E    wait
 0064F00F    fld         qword ptr [ebx+0F0];TAccelerometerObject.gMZ:Double
 0064F015    fdiv        qword ptr [ebx+0F8];TAccelerometerObject.lngM:Double
 0064F01B    fstp        qword ptr [ebx+110];TAccelerometerObject.MNorthZ:Double
 0064F021    wait
 0064F022    push        dword ptr [ebx+354];TAccelerometerObject.?f354:TRotMat
 0064F028    push        dword ptr [ebx+350];TAccelerometerObject.UpX:Double
 0064F02E    push        dword ptr [ebx+35C];TAccelerometerObject.?f35C:TRotMat
 0064F034    push        dword ptr [ebx+358];TAccelerometerObject.UpY:Double
 0064F03A    push        dword ptr [ebx+364];TAccelerometerObject.?f364:TRotMat
 0064F040    push        dword ptr [ebx+360];TAccelerometerObject.UpZ:Double
 0064F046    push        dword ptr [ebx+104];TAccelerometerObject.?f104:dword
 0064F04C    push        dword ptr [ebx+100];TAccelerometerObject.MNorthX:Double
 0064F052    push        dword ptr [ebx+10C];TAccelerometerObject.?f10C:dword
 0064F058    push        dword ptr [ebx+108];TAccelerometerObject.MNorthY:Double
 0064F05E    push        dword ptr [ebx+114];TAccelerometerObject.?f114:dword
 0064F064    push        dword ptr [ebx+110];TAccelerometerObject.MNorthZ:Double
 0064F06A    lea         ecx,[ebx+128];TAccelerometerObject.EastZ:Double
 0064F070    lea         edx,[ebx+120];TAccelerometerObject.EastY:Double
 0064F076    lea         eax,[ebx+118];TAccelerometerObject.EastX:Double
 0064F07C    call        005C3FE0
 0064F081    push        dword ptr [ebx+11C];TAccelerometerObject.?f11C:dword
 0064F087    push        dword ptr [ebx+118];TAccelerometerObject.EastX:Double
 0064F08D    push        dword ptr [ebx+124];TAccelerometerObject.?f124:dword
 0064F093    push        dword ptr [ebx+120];TAccelerometerObject.EastY:Double
 0064F099    push        dword ptr [ebx+12C];TAccelerometerObject.?f12C:dword
 0064F09F    push        dword ptr [ebx+128];TAccelerometerObject.EastZ:Double
 0064F0A5    push        dword ptr [ebx+354];TAccelerometerObject.?f354:TRotMat
 0064F0AB    push        dword ptr [ebx+350];TAccelerometerObject.UpX:Double
 0064F0B1    push        dword ptr [ebx+35C];TAccelerometerObject.?f35C:TRotMat
 0064F0B7    push        dword ptr [ebx+358];TAccelerometerObject.UpY:Double
 0064F0BD    push        dword ptr [ebx+364];TAccelerometerObject.?f364:TRotMat
 0064F0C3    push        dword ptr [ebx+360];TAccelerometerObject.UpZ:Double
 0064F0C9    lea         ecx,[ebx+140];TAccelerometerObject.NorthZ:Double
 0064F0CF    lea         edx,[ebx+138];TAccelerometerObject.NorthY:Double
 0064F0D5    lea         eax,[ebx+130];TAccelerometerObject.NorthX:Double
 0064F0DB    call        005C3FE0
 0064F0E0    mov         eax,dword ptr [ebx+118];TAccelerometerObject.EastX:Double
 0064F0E6    mov         dword ptr [ebx+370],eax;TAccelerometerObject.RotMat:TRotMat
 0064F0EC    mov         eax,dword ptr [ebx+11C];TAccelerometerObject.?f11C:dword
 0064F0F2    mov         dword ptr [ebx+374],eax;TAccelerometerObject.RotMat:TRotMat
 0064F0F8    mov         eax,dword ptr [ebx+350];TAccelerometerObject.UpX:Double
 0064F0FE    mov         dword ptr [ebx+378],eax;TAccelerometerObject.RotMat:TRotMat
 0064F104    mov         eax,dword ptr [ebx+354];TAccelerometerObject.?f354:TRotMat
 0064F10A    mov         dword ptr [ebx+37C],eax;TAccelerometerObject.RotMat:TRotMat
 0064F110    mov         eax,dword ptr [ebx+130];TAccelerometerObject.NorthX:Double
 0064F116    mov         dword ptr [ebx+380],eax;TAccelerometerObject.RotMat:TRotMat
 0064F11C    mov         eax,dword ptr [ebx+134];TAccelerometerObject.?f134:dword
 0064F122    mov         dword ptr [ebx+384],eax;TAccelerometerObject.RotMat:TRotMat
 0064F128    mov         eax,dword ptr [ebx+120];TAccelerometerObject.EastY:Double
 0064F12E    mov         dword ptr [ebx+388],eax;TAccelerometerObject.RotMat:TRotMat
 0064F134    mov         eax,dword ptr [ebx+124];TAccelerometerObject.?f124:dword
 0064F13A    mov         dword ptr [ebx+38C],eax;TAccelerometerObject.RotMat:TRotMat
 0064F140    mov         eax,dword ptr [ebx+358];TAccelerometerObject.UpY:Double
 0064F146    mov         dword ptr [ebx+390],eax;TAccelerometerObject.RotMat:TRotMat
 0064F14C    mov         eax,dword ptr [ebx+35C];TAccelerometerObject.?f35C:TRotMat
 0064F152    mov         dword ptr [ebx+394],eax;TAccelerometerObject.RotMat:TRotMat
 0064F158    mov         eax,dword ptr [ebx+138];TAccelerometerObject.NorthY:Double
 0064F15E    mov         dword ptr [ebx+398],eax;TAccelerometerObject.RotMat:TRotMat
 0064F164    mov         eax,dword ptr [ebx+13C];TAccelerometerObject.?f13C:dword
 0064F16A    mov         dword ptr [ebx+39C],eax;TAccelerometerObject.RotMat:TRotMat
 0064F170    mov         eax,dword ptr [ebx+128];TAccelerometerObject.EastZ:Double
 0064F176    mov         dword ptr [ebx+3A0],eax;TAccelerometerObject.RotMat:TRotMat
 0064F17C    mov         eax,dword ptr [ebx+12C];TAccelerometerObject.?f12C:dword
 0064F182    mov         dword ptr [ebx+3A4],eax;TAccelerometerObject.RotMat:TRotMat
 0064F188    mov         eax,dword ptr [ebx+360];TAccelerometerObject.UpZ:Double
 0064F18E    mov         dword ptr [ebx+3A8],eax;TAccelerometerObject.RotMat:TRotMat
 0064F194    mov         eax,dword ptr [ebx+364];TAccelerometerObject.?f364:TRotMat
 0064F19A    mov         dword ptr [ebx+3AC],eax;TAccelerometerObject.RotMat:TRotMat
 0064F1A0    mov         eax,dword ptr [ebx+140];TAccelerometerObject.NorthZ:Double
 0064F1A6    mov         dword ptr [ebx+3B0],eax;TAccelerometerObject.RotMat:TRotMat
 0064F1AC    mov         eax,dword ptr [ebx+144];TAccelerometerObject.?f144:dword
 0064F1B2    mov         dword ptr [ebx+3B4],eax;TAccelerometerObject.RotMat:TRotMat
 0064F1B8    pop         ebx
 0064F1B9    mov         esp,ebp
 0064F1BB    pop         ebp
 0064F1BC    ret         20
end;*}

//0064F1C8
procedure TAccelerometerObject.UpdateSteering;
begin
{*
 0064F1C8    push        ebx
 0064F1C9    add         esp,0FFFFFF78
 0064F1CF    mov         ebx,eax
 0064F1D1    fld         qword ptr [ebx+338];TAccelerometerObject.gx:Double
 0064F1D7    fabs
 0064F1D9    fstp        tbyte ptr [esp+7C]
 0064F1DD    wait
 0064F1DE    fld         qword ptr [ebx+340];TAccelerometerObject.gy:Double
 0064F1E4    fabs
 0064F1E6    fld         tbyte ptr [esp+7C]
 0064F1EA    fcompp
 0064F1EC    wait
 0064F1ED    fnstsw      al
 0064F1EF    sahf
>0064F1F0    jbe         0064F2AE
 0064F1F6    fld         qword ptr [ebx+338];TAccelerometerObject.gx:Double
 0064F1FC    fcomp       dword ptr ds:[64F368];0:Single
 0064F202    wait
 0064F203    fnstsw      al
 0064F205    sahf
>0064F206    jbe         0064F241
 0064F208    fld         qword ptr [ebx+348];TAccelerometerObject.gz:Double
 0064F20E    fdiv        qword ptr [ebx+330];TAccelerometerObject.lng:Double
 0064F214    add         esp,0FFFFFFF4
 0064F217    fstp        tbyte ptr [esp]
 0064F21A    wait
 0064F21B    call        00454A44
 0064F220    fstp        tbyte ptr [esp]
 0064F223    wait
 0064F224    fld         tbyte ptr [esp]
 0064F227    fld         tbyte ptr ds:[64F36C];57.2957795130823:Extended
 0064F22D    fmulp       st(1),st
 0064F22F    fstp        tbyte ptr [esp+10]
 0064F233    wait
 0064F234    fld         tbyte ptr [esp+10]
 0064F238    fstp        qword ptr [ebx+3E0];TAccelerometerObject.SteeringAngle:Double
 0064F23E    wait
>0064F23F    jmp         0064F280
 0064F241    fld         qword ptr [ebx+348];TAccelerometerObject.gz:Double
 0064F247    fdiv        qword ptr [ebx+330];TAccelerometerObject.lng:Double
 0064F24D    add         esp,0FFFFFFF4
 0064F250    fstp        tbyte ptr [esp]
 0064F253    wait
 0064F254    call        00454A44
 0064F259    fstp        tbyte ptr [esp+20]
 0064F25D    wait
 0064F25E    fld         tbyte ptr [esp+20]
 0064F262    fld         tbyte ptr ds:[64F36C];57.2957795130823:Extended
 0064F268    fmulp       st(1),st
 0064F26A    fstp        tbyte ptr [esp+30]
 0064F26E    wait
 0064F26F    fld         tbyte ptr [esp+30]
 0064F273    fsubr       dword ptr ds:[64F378];180:Single
 0064F279    fstp        qword ptr [ebx+3E0];TAccelerometerObject.SteeringAngle:Double
 0064F27F    wait
 0064F280    fld         qword ptr [ebx+3E0];TAccelerometerObject.SteeringAngle:Double
 0064F286    fcomp       dword ptr ds:[64F378];180:Single
 0064F28C    wait
 0064F28D    fnstsw      al
 0064F28F    sahf
>0064F290    jbe         0064F35F
 0064F296    fld         qword ptr [ebx+3E0];TAccelerometerObject.SteeringAngle:Double
 0064F29C    fsub        dword ptr ds:[64F37C];360:Single
 0064F2A2    fstp        qword ptr [ebx+3E0];TAccelerometerObject.SteeringAngle:Double
 0064F2A8    wait
>0064F2A9    jmp         0064F35F
 0064F2AE    fld         qword ptr [ebx+340];TAccelerometerObject.gy:Double
 0064F2B4    fcomp       dword ptr ds:[64F368];0:Single
 0064F2BA    wait
 0064F2BB    fnstsw      al
 0064F2BD    sahf
>0064F2BE    jbe         0064F2FB
 0064F2C0    fld         qword ptr [ebx+348];TAccelerometerObject.gz:Double
 0064F2C6    fdiv        qword ptr [ebx+330];TAccelerometerObject.lng:Double
 0064F2CC    add         esp,0FFFFFFF4
 0064F2CF    fstp        tbyte ptr [esp]
 0064F2D2    wait
 0064F2D3    call        00454A44
 0064F2D8    fstp        tbyte ptr [esp+40]
 0064F2DC    wait
 0064F2DD    fld         tbyte ptr [esp+40]
 0064F2E1    fld         tbyte ptr ds:[64F36C];57.2957795130823:Extended
 0064F2E7    fmulp       st(1),st
 0064F2E9    fstp        tbyte ptr [esp+50]
 0064F2ED    wait
 0064F2EE    fld         tbyte ptr [esp+50]
 0064F2F2    fstp        qword ptr [ebx+3E0];TAccelerometerObject.SteeringAngle:Double
 0064F2F8    wait
>0064F2F9    jmp         0064F33A
 0064F2FB    fld         qword ptr [ebx+348];TAccelerometerObject.gz:Double
 0064F301    fdiv        qword ptr [ebx+330];TAccelerometerObject.lng:Double
 0064F307    add         esp,0FFFFFFF4
 0064F30A    fstp        tbyte ptr [esp]
 0064F30D    wait
 0064F30E    call        00454A44
 0064F313    fstp        tbyte ptr [esp+60]
 0064F317    wait
 0064F318    fld         tbyte ptr [esp+60]
 0064F31C    fld         tbyte ptr ds:[64F36C];57.2957795130823:Extended
 0064F322    fmulp       st(1),st
 0064F324    fstp        tbyte ptr [esp+70]
 0064F328    wait
 0064F329    fld         tbyte ptr [esp+70]
 0064F32D    fsubr       dword ptr ds:[64F378];180:Single
 0064F333    fstp        qword ptr [ebx+3E0];TAccelerometerObject.SteeringAngle:Double
 0064F339    wait
 0064F33A    fld         qword ptr [ebx+3E0];TAccelerometerObject.SteeringAngle:Double
 0064F340    fcomp       dword ptr ds:[64F378];180:Single
 0064F346    wait
 0064F347    fnstsw      al
 0064F349    sahf
>0064F34A    jbe         0064F35F
 0064F34C    fld         qword ptr [ebx+3E0];TAccelerometerObject.SteeringAngle:Double
 0064F352    fsub        dword ptr ds:[64F37C];360:Single
 0064F358    fstp        qword ptr [ebx+3E0];TAccelerometerObject.SteeringAngle:Double
 0064F35E    wait
 0064F35F    add         esp,88
 0064F365    pop         ebx
 0064F366    ret
*}
end;

//0064F380
constructor TAverager.Create;
begin
{*
 0064F380    test        dl,dl
>0064F382    je          0064F38C
 0064F384    add         esp,0FFFFFFF0
 0064F387    call        @ClassCreate
 0064F38C    mov         dword ptr [eax+4],3C;TAverager.Frames:Integer
 0064F393    xor         ecx,ecx
 0064F395    mov         dword ptr [eax+8],ecx;TAverager.ValidFrames:Integer
 0064F398    test        dl,dl
>0064F39A    je          0064F3AB
 0064F39C    call        @AfterConstruction
 0064F3A1    pop         dword ptr fs:[0]
 0064F3A8    add         esp,0C
 0064F3AB    ret
*}
end;

//0064F3AC
function TAverager.GetAverage:Double;
begin
{*
 0064F3AC    push        ebx
 0064F3AD    push        esi
 0064F3AE    push        edi
 0064F3AF    add         esp,0FFFFFFF0
 0064F3B2    mov         esi,eax
 0064F3B4    xor         eax,eax
 0064F3B6    mov         dword ptr [esp+8],eax
 0064F3BA    mov         dword ptr [esp+0C],eax
 0064F3BE    mov         eax,dword ptr [esi+8];TAverager.ValidFrames:Integer
 0064F3C1    test        eax,eax
>0064F3C3    jne         0064F3D0
 0064F3C5    xor         eax,eax
 0064F3C7    mov         dword ptr [esp],eax
 0064F3CA    mov         dword ptr [esp+4],eax
>0064F3CE    jmp         0064F3FD
 0064F3D0    mov         ebx,eax
 0064F3D2    dec         ebx
 0064F3D3    test        ebx,ebx
>0064F3D5    jl          0064F3F2
 0064F3D7    inc         ebx
 0064F3D8    xor         edi,edi
 0064F3DA    mov         edx,edi
 0064F3DC    neg         edx
 0064F3DE    mov         eax,esi
 0064F3E0    call        TAverager.GetFrame
 0064F3E5    fadd        qword ptr [esp+8]
 0064F3E9    fstp        qword ptr [esp+8]
 0064F3ED    wait
 0064F3EE    inc         edi
 0064F3EF    dec         ebx
>0064F3F0    jne         0064F3DA
 0064F3F2    fild        dword ptr [esi+8];TAverager.ValidFrames:Integer
 0064F3F5    fdivr       qword ptr [esp+8]
 0064F3F9    fstp        qword ptr [esp]
 0064F3FC    wait
 0064F3FD    fld         qword ptr [esp]
 0064F400    add         esp,10
 0064F403    pop         edi
 0064F404    pop         esi
 0064F405    pop         ebx
 0064F406    ret
*}
end;

//0064F408
function TAverager.GetAvg(NumberOfFrames:Integer):Double;
begin
{*
 0064F408    push        ebx
 0064F409    push        esi
 0064F40A    push        edi
 0064F40B    push        ebp
 0064F40C    add         esp,0FFFFFFEC
 0064F40F    mov         edi,eax
 0064F411    xor         eax,eax
 0064F413    mov         dword ptr [esp+8],eax
 0064F417    mov         dword ptr [esp+0C],eax
 0064F41B    mov         eax,dword ptr [edi+8];TAverager.ValidFrames:Integer
 0064F41E    test        eax,eax
>0064F420    jne         0064F42D
 0064F422    xor         eax,eax
 0064F424    mov         dword ptr [esp],eax
 0064F427    mov         dword ptr [esp+4],eax
>0064F42B    jmp         0064F46A
 0064F42D    mov         ebp,eax
 0064F42F    lea         eax,[edx+1]
 0064F432    cmp         ebp,eax
>0064F434    jle         0064F438
 0064F436    mov         ebp,eax
 0064F438    mov         ebx,ebp
 0064F43A    dec         ebx
 0064F43B    test        ebx,ebx
>0064F43D    jl          0064F45A
 0064F43F    inc         ebx
 0064F440    xor         esi,esi
 0064F442    mov         edx,esi
 0064F444    neg         edx
 0064F446    mov         eax,edi
 0064F448    call        TAverager.GetFrame
 0064F44D    fadd        qword ptr [esp+8]
 0064F451    fstp        qword ptr [esp+8]
 0064F455    wait
 0064F456    inc         esi
 0064F457    dec         ebx
>0064F458    jne         0064F442
 0064F45A    mov         dword ptr [esp+10],ebp
 0064F45E    fild        dword ptr [esp+10]
 0064F462    fdivr       qword ptr [esp+8]
 0064F466    fstp        qword ptr [esp]
 0064F469    wait
 0064F46A    fld         qword ptr [esp]
 0064F46D    add         esp,14
 0064F470    pop         ebp
 0064F471    pop         edi
 0064F472    pop         esi
 0064F473    pop         ebx
 0064F474    ret
*}
end;

//0064F478
procedure TAverager.GetFrame(frame:Integer);
begin
{*
 0064F478    push        ebx
 0064F479    add         esp,0FFFFFFF8
 0064F47C    mov         ebx,edx
 0064F47E    mov         ecx,eax
 0064F480    mov         eax,dword ptr [ecx+1F8];TAverager.index:Integer
 0064F486    add         eax,ebx
 0064F488    add         eax,3D
 0064F48B    mov         ebx,3D
 0064F490    cdq
 0064F491    idiv        eax,ebx
 0064F493    mov         eax,edx
 0064F495    mov         edx,dword ptr [ecx+eax*8+10]
 0064F499    mov         dword ptr [esp],edx
 0064F49C    mov         edx,dword ptr [ecx+eax*8+14]
 0064F4A0    mov         dword ptr [esp+4],edx
 0064F4A4    fld         qword ptr [esp]
 0064F4A7    pop         ecx
 0064F4A8    pop         edx
 0064F4A9    pop         ebx
 0064F4AA    ret
*}
end;

//0064F4AC
procedure TAverager.GetShortAverage;
begin
{*
 0064F4AC    add         esp,0FFFFFFF8
 0064F4AF    mov         edx,14
 0064F4B4    call        TAverager.GetAvg
 0064F4B9    fstp        qword ptr [esp]
 0064F4BC    wait
 0064F4BD    fld         qword ptr [esp]
 0064F4C0    pop         ecx
 0064F4C1    pop         edx
 0064F4C2    ret
*}
end;

//0064F4C4
{*procedure TAverager.Update(Value:Double; ?:?);
begin
 0064F4C4    push        ebp
 0064F4C5    mov         ebp,esp
 0064F4C7    push        ebx
 0064F4C8    mov         ecx,eax
 0064F4CA    mov         eax,dword ptr [ecx+1F8];TAverager.index:Integer
 0064F4D0    inc         eax
 0064F4D1    add         eax,3D
 0064F4D4    mov         ebx,3D
 0064F4D9    cdq
 0064F4DA    idiv        eax,ebx
 0064F4DC    mov         ebx,edx
 0064F4DE    mov         dword ptr [ecx+1F8],ebx;TAverager.index:Integer
 0064F4E4    mov         eax,dword ptr [ebp+8]
 0064F4E7    mov         dword ptr [ecx+ebx*8+10],eax
 0064F4EB    mov         eax,dword ptr [ebp+0C]
 0064F4EE    mov         dword ptr [ecx+ebx*8+14],eax
 0064F4F2    mov         eax,dword ptr [ecx+8];TAverager.ValidFrames:Integer
 0064F4F5    cmp         eax,dword ptr [ecx+4];TAverager.Frames:Integer
>0064F4F8    jg          0064F4FD
 0064F4FA    inc         dword ptr [ecx+8];TAverager.ValidFrames:Integer
 0064F4FD    pop         ebx
 0064F4FE    pop         ebp
 0064F4FF    ret         8
end;*}

//00651BB4
{*procedure sub_00651BB4(?:Integer; ?:?);
begin
 00651BB4    push        ebx
 00651BB5    push        esi
 00651BB6    mov         esi,edx
 00651BB8    mov         ebx,eax
 00651BBA    mov         ecx,esi
 00651BBC    mov         eax,[0081ECC0];gvar_0081ECC0:TModuleWiimote
 00651BC1    mov         eax,dword ptr [eax+1C]
 00651BC4    mov         edx,ebx
 00651BC6    call        THashTable.Get
 00651BCB    pop         esi
 00651BCC    pop         ebx
 00651BCD    ret
end;*}

//00651BD0
{*function sub_00651BD0:?;
begin
 00651BD0    push        ebx
 00651BD1    mov         dl,1
 00651BD3    mov         eax,[0043C7BC];TStringList
 00651BD8    call        TStringList.Create;TStringList.Create
 00651BDD    mov         ebx,eax
 00651BDF    mov         dl,1
 00651BE1    mov         eax,ebx
 00651BE3    call        TStringList.SetSorted
 00651BE8    mov         edx,652060;'Exists'
 00651BED    mov         eax,ebx
 00651BEF    mov         ecx,dword ptr [eax]
 00651BF1    call        dword ptr [ecx+38];TStringList.Add
 00651BF4    mov         edx,65207C;'Count'
 00651BF9    mov         eax,ebx
 00651BFB    mov         ecx,dword ptr [eax]
 00651BFD    call        dword ptr [ecx+38];TStringList.Add
 00651C00    mov         edx,652094;'Serial'
 00651C05    mov         eax,ebx
 00651C07    mov         ecx,dword ptr [eax]
 00651C09    call        dword ptr [ecx+38];TStringList.Add
 00651C0C    mov         edx,6520B0;'BluetoothAddress'
 00651C11    mov         eax,ebx
 00651C13    mov         ecx,dword ptr [eax]
 00651C15    call        dword ptr [ecx+38];TStringList.Add
 00651C18    mov         edx,6520E0;'A'
 00651C1D    mov         eax,ebx
 00651C1F    mov         ecx,dword ptr [eax]
 00651C21    call        dword ptr [ecx+38];TStringList.Add
 00651C24    mov         edx,6520F0;'B'
 00651C29    mov         eax,ebx
 00651C2B    mov         ecx,dword ptr [eax]
 00651C2D    call        dword ptr [ecx+38];TStringList.Add
 00651C30    mov         edx,652100;'Minus'
 00651C35    mov         eax,ebx
 00651C37    mov         ecx,dword ptr [eax]
 00651C39    call        dword ptr [ecx+38];TStringList.Add
 00651C3C    mov         edx,652118;'Home'
 00651C41    mov         eax,ebx
 00651C43    mov         ecx,dword ptr [eax]
 00651C45    call        dword ptr [ecx+38];TStringList.Add
 00651C48    mov         edx,652130;'Plus'
 00651C4D    mov         eax,ebx
 00651C4F    mov         ecx,dword ptr [eax]
 00651C51    call        dword ptr [ecx+38];TStringList.Add
 00651C54    mov         edx,652148;'One'
 00651C59    mov         eax,ebx
 00651C5B    mov         ecx,dword ptr [eax]
 00651C5D    call        dword ptr [ecx+38];TStringList.Add
 00651C60    mov         edx,65215C;'Two'
 00651C65    mov         eax,ebx
 00651C67    mov         ecx,dword ptr [eax]
 00651C69    call        dword ptr [ecx+38];TStringList.Add
 00651C6C    mov         edx,652170;'Up'
 00651C71    mov         eax,ebx
 00651C73    mov         ecx,dword ptr [eax]
 00651C75    call        dword ptr [ecx+38];TStringList.Add
 00651C78    mov         edx,652184;'Down'
 00651C7D    mov         eax,ebx
 00651C7F    mov         ecx,dword ptr [eax]
 00651C81    call        dword ptr [ecx+38];TStringList.Add
 00651C84    mov         edx,65219C;'Left'
 00651C89    mov         eax,ebx
 00651C8B    mov         ecx,dword ptr [eax]
 00651C8D    call        dword ptr [ecx+38];TStringList.Add
 00651C90    mov         edx,6521B4;'Right'
 00651C95    mov         eax,ebx
 00651C97    mov         ecx,dword ptr [eax]
 00651C99    call        dword ptr [ecx+38];TStringList.Add
 00651C9C    mov         edx,6521CC;'DPad'
 00651CA1    mov         eax,ebx
 00651CA3    mov         ecx,dword ptr [eax]
 00651CA5    call        dword ptr [ecx+38];TStringList.Add
 00651CA8    mov         edx,6521E4;'DPadSideways'
 00651CAD    mov         eax,ebx
 00651CAF    mov         ecx,dword ptr [eax]
 00651CB1    call        dword ptr [ecx+38];TStringList.Add
 00651CB4    mov         edx,65220C;'Yaw'
 00651CB9    mov         eax,ebx
 00651CBB    mov         ecx,dword ptr [eax]
 00651CBD    call        dword ptr [ecx+38];TStringList.Add
 00651CC0    mov         edx,652220;'Pitch'
 00651CC5    mov         eax,ebx
 00651CC7    mov         ecx,dword ptr [eax]
 00651CC9    call        dword ptr [ecx+38];TStringList.Add
 00651CCC    mov         edx,652238;'Roll'
 00651CD1    mov         eax,ebx
 00651CD3    mov         ecx,dword ptr [eax]
 00651CD5    call        dword ptr [ecx+38];TStringList.Add
 00651CD8    mov         edx,652250;'GyroYaw'
 00651CDD    mov         eax,ebx
 00651CDF    mov         ecx,dword ptr [eax]
 00651CE1    call        dword ptr [ecx+38];TStringList.Add
 00651CE4    mov         edx,65226C;'GyroPitch'
 00651CE9    mov         eax,ebx
 00651CEB    mov         ecx,dword ptr [eax]
 00651CED    call        dword ptr [ecx+38];TStringList.Add
 00651CF0    mov         edx,65228C;'GyroRoll'
 00651CF5    mov         eax,ebx
 00651CF7    mov         ecx,dword ptr [eax]
 00651CF9    call        dword ptr [ecx+38];TStringList.Add
 00651CFC    mov         edx,6522AC;'YawSpeed'
 00651D01    mov         eax,ebx
 00651D03    mov         ecx,dword ptr [eax]
 00651D05    call        dword ptr [ecx+38];TStringList.Add
 00651D08    mov         edx,6522CC;'PitchSpeed'
 00651D0D    mov         eax,ebx
 00651D0F    mov         ecx,dword ptr [eax]
 00651D11    call        dword ptr [ecx+38];TStringList.Add
 00651D14    mov         edx,6522F0;'RollSpeed'
 00651D19    mov         eax,ebx
 00651D1B    mov         ecx,dword ptr [eax]
 00651D1D    call        dword ptr [ecx+38];TStringList.Add
 00651D20    mov         edx,652310;'Rumble'
 00651D25    mov         eax,ebx
 00651D27    mov         ecx,dword ptr [eax]
 00651D29    call        dword ptr [ecx+38];TStringList.Add
 00651D2C    mov         edx,65232C;'LEDs'
 00651D31    mov         eax,ebx
 00651D33    mov         ecx,dword ptr [eax]
 00651D35    call        dword ptr [ecx+38];TStringList.Add
 00651D38    mov         edx,652344;'LEDPlayer'
 00651D3D    mov         eax,ebx
 00651D3F    mov         ecx,dword ptr [eax]
 00651D41    call        dword ptr [ecx+38];TStringList.Add
 00651D44    mov         edx,652364;'LED1'
 00651D49    mov         eax,ebx
 00651D4B    mov         ecx,dword ptr [eax]
 00651D4D    call        dword ptr [ecx+38];TStringList.Add
 00651D50    mov         edx,65237C;'LED2'
 00651D55    mov         eax,ebx
 00651D57    mov         ecx,dword ptr [eax]
 00651D59    call        dword ptr [ecx+38];TStringList.Add
 00651D5C    mov         edx,652394;'LED3'
 00651D61    mov         eax,ebx
 00651D63    mov         ecx,dword ptr [eax]
 00651D65    call        dword ptr [ecx+38];TStringList.Add
 00651D68    mov         edx,6523AC;'LED4'
 00651D6D    mov         eax,ebx
 00651D6F    mov         ecx,dword ptr [eax]
 00651D71    call        dword ptr [ecx+38];TStringList.Add
 00651D74    mov         edx,6523C4;'Shakiness'
 00651D79    mov         eax,ebx
 00651D7B    mov         ecx,dword ptr [eax]
 00651D7D    call        dword ptr [ecx+38];TStringList.Add
 00651D80    mov         edx,6523E4;'SwingHorizontal'
 00651D85    mov         eax,ebx
 00651D87    mov         ecx,dword ptr [eax]
 00651D89    call        dword ptr [ecx+38];TStringList.Add
 00651D8C    mov         edx,652410;'SwingVertical'
 00651D91    mov         eax,ebx
 00651D93    mov         ecx,dword ptr [eax]
 00651D95    call        dword ptr [ecx+38];TStringList.Add
 00651D98    mov         edx,652438;'Stabbing'
 00651D9D    mov         eax,ebx
 00651D9F    mov         ecx,dword ptr [eax]
 00651DA1    call        dword ptr [ecx+38];TStringList.Add
 00651DA4    mov         edx,652458;'DrumBeat'
 00651DA9    mov         eax,ebx
 00651DAB    mov         ecx,dword ptr [eax]
 00651DAD    call        dword ptr [ecx+38];TStringList.Add
 00651DB0    mov         edx,652478;'OnTable'
 00651DB5    mov         eax,ebx
 00651DB7    mov         ecx,dword ptr [eax]
 00651DB9    call        dword ptr [ecx+38];TStringList.Add
 00651DBC    mov         edx,652494;'UpsideDownOnShoulder'
 00651DC1    mov         eax,ebx
 00651DC3    mov         ecx,dword ptr [eax]
 00651DC5    call        dword ptr [ecx+38];TStringList.Add
 00651DC8    mov         edx,6524CC;'LookingAtWatch'
 00651DCD    mov         eax,ebx
 00651DCF    mov         ecx,dword ptr [eax]
 00651DD1    call        dword ptr [ecx+38];TStringList.Add
 00651DD4    mov         edx,6524F8;'LookingAtRightWatch'
 00651DD9    mov         eax,ebx
 00651DDB    mov         ecx,dword ptr [eax]
 00651DDD    call        dword ptr [ecx+38];TStringList.Add
 00651DE0    mov         edx,65252C;'LookingAtLeftPalm'
 00651DE5    mov         eax,ebx
 00651DE7    mov         ecx,dword ptr [eax]
 00651DE9    call        dword ptr [ecx+38];TStringList.Add
 00651DEC    mov         edx,65255C;'LookingAtRightPalm'
 00651DF1    mov         eax,ebx
 00651DF3    mov         ecx,dword ptr [eax]
 00651DF5    call        dword ptr [ecx+38];TStringList.Add
 00651DF8    mov         edx,652590;'SwingDown'
 00651DFD    mov         eax,ebx
 00651DFF    mov         ecx,dword ptr [eax]
 00651E01    call        dword ptr [ecx+38];TStringList.Add
 00651E04    mov         edx,6525B0;'SwingDownStop'
 00651E09    mov         eax,ebx
 00651E0B    mov         ecx,dword ptr [eax]
 00651E0D    call        dword ptr [ecx+38];TStringList.Add
 00651E10    mov         edx,6525D8;'SwingDownUp'
 00651E15    mov         eax,ebx
 00651E17    mov         ecx,dword ptr [eax]
 00651E19    call        dword ptr [ecx+38];TStringList.Add
 00651E1C    mov         edx,6525FC;'SwingDownUpStop'
 00651E21    mov         eax,ebx
 00651E23    mov         ecx,dword ptr [eax]
 00651E25    call        dword ptr [ecx+38];TStringList.Add
 00651E28    mov         edx,652628;'SwingDownUpDown'
 00651E2D    mov         eax,ebx
 00651E2F    mov         ecx,dword ptr [eax]
 00651E31    call        dword ptr [ecx+38];TStringList.Add
 00651E34    mov         edx,652654;'SwingDownUpDownStop'
 00651E39    mov         eax,ebx
 00651E3B    mov         ecx,dword ptr [eax]
 00651E3D    call        dword ptr [ecx+38];TStringList.Add
 00651E40    mov         edx,652688;'SwingDownUpDownUp'
 00651E45    mov         eax,ebx
 00651E47    mov         ecx,dword ptr [eax]
 00651E49    call        dword ptr [ecx+38];TStringList.Add
 00651E4C    mov         edx,6526B8;'SwingDownUpDownUpStop'
 00651E51    mov         eax,ebx
 00651E53    mov         ecx,dword ptr [eax]
 00651E55    call        dword ptr [ecx+38];TStringList.Add
 00651E58    mov         edx,6526F0;'SwingDownUpDownUpDown'
 00651E5D    mov         eax,ebx
 00651E5F    mov         ecx,dword ptr [eax]
 00651E61    call        dword ptr [ecx+38];TStringList.Add
 00651E64    mov         edx,652728;'SwingLeft'
 00651E69    mov         eax,ebx
 00651E6B    mov         ecx,dword ptr [eax]
 00651E6D    call        dword ptr [ecx+38];TStringList.Add
 00651E70    mov         edx,652748;'SwingLeftStop'
 00651E75    mov         eax,ebx
 00651E77    mov         ecx,dword ptr [eax]
 00651E79    call        dword ptr [ecx+38];TStringList.Add
 00651E7C    mov         edx,652770;'SwingLeftRight'
 00651E81    mov         eax,ebx
 00651E83    mov         ecx,dword ptr [eax]
 00651E85    call        dword ptr [ecx+38];TStringList.Add
 00651E88    mov         edx,65279C;'SwingLeftRightStop'
 00651E8D    mov         eax,ebx
 00651E8F    mov         ecx,dword ptr [eax]
 00651E91    call        dword ptr [ecx+38];TStringList.Add
 00651E94    mov         edx,6527D0;'SwingLeftRightLeft'
 00651E99    mov         eax,ebx
 00651E9B    mov         ecx,dword ptr [eax]
 00651E9D    call        dword ptr [ecx+38];TStringList.Add
 00651EA0    mov         edx,652804;'SwingLeftRightLeftStop'
 00651EA5    mov         eax,ebx
 00651EA7    mov         ecx,dword ptr [eax]
 00651EA9    call        dword ptr [ecx+38];TStringList.Add
 00651EAC    mov         edx,652840;'SwingLeftRightLeftRight'
 00651EB1    mov         eax,ebx
 00651EB3    mov         ecx,dword ptr [eax]
 00651EB5    call        dword ptr [ecx+38];TStringList.Add
 00651EB8    mov         edx,65287C;'SwingLeftRightLeftRightStop'
 00651EBD    mov         eax,ebx
 00651EBF    mov         ecx,dword ptr [eax]
 00651EC1    call        dword ptr [ecx+38];TStringList.Add
 00651EC4    mov         edx,6528C0;'SwingLeftRightLeftRightLeft'
 00651EC9    mov         eax,ebx
 00651ECB    mov         ecx,dword ptr [eax]
 00651ECD    call        dword ptr [ecx+38];TStringList.Add
 00651ED0    mov         edx,652904;'SwingRight'
 00651ED5    mov         eax,ebx
 00651ED7    mov         ecx,dword ptr [eax]
 00651ED9    call        dword ptr [ecx+38];TStringList.Add
 00651EDC    mov         edx,652928;'SwingRightStop'
 00651EE1    mov         eax,ebx
 00651EE3    mov         ecx,dword ptr [eax]
 00651EE5    call        dword ptr [ecx+38];TStringList.Add
 00651EE8    mov         edx,652954;'SwingRightLeft'
 00651EED    mov         eax,ebx
 00651EEF    mov         ecx,dword ptr [eax]
 00651EF1    call        dword ptr [ecx+38];TStringList.Add
 00651EF4    mov         edx,652980;'SwingRightLeftStop'
 00651EF9    mov         eax,ebx
 00651EFB    mov         ecx,dword ptr [eax]
 00651EFD    call        dword ptr [ecx+38];TStringList.Add
 00651F00    mov         edx,6529B4;'SwingRightLeftRight'
 00651F05    mov         eax,ebx
 00651F07    mov         ecx,dword ptr [eax]
 00651F09    call        dword ptr [ecx+38];TStringList.Add
 00651F0C    mov         edx,6529E8;'SwingRightLeftRightStop'
 00651F11    mov         eax,ebx
 00651F13    mov         ecx,dword ptr [eax]
 00651F15    call        dword ptr [ecx+38];TStringList.Add
 00651F18    mov         edx,652A24;'SwingRightLeftRightLeft'
 00651F1D    mov         eax,ebx
 00651F1F    mov         ecx,dword ptr [eax]
 00651F21    call        dword ptr [ecx+38];TStringList.Add
 00651F24    mov         edx,652A60;'SwingRightLeftRightLeftStop'
 00651F29    mov         eax,ebx
 00651F2B    mov         ecx,dword ptr [eax]
 00651F2D    call        dword ptr [ecx+38];TStringList.Add
 00651F30    mov         edx,652AA4;'SwingRightLeftRightLeftRight'
 00651F35    mov         eax,ebx
 00651F37    mov         ecx,dword ptr [eax]
 00651F39    call        dword ptr [ecx+38];TStringList.Add
 00651F3C    mov         edx,652AEC;'SwingUp'
 00651F41    mov         eax,ebx
 00651F43    mov         ecx,dword ptr [eax]
 00651F45    call        dword ptr [ecx+38];TStringList.Add
 00651F48    mov         edx,652B08;'SwingUpStop'
 00651F4D    mov         eax,ebx
 00651F4F    mov         ecx,dword ptr [eax]
 00651F51    call        dword ptr [ecx+38];TStringList.Add
 00651F54    mov         edx,652B2C;'SwingUpDown'
 00651F59    mov         eax,ebx
 00651F5B    mov         ecx,dword ptr [eax]
 00651F5D    call        dword ptr [ecx+38];TStringList.Add
 00651F60    mov         edx,652B50;'SwingUpDownStop'
 00651F65    mov         eax,ebx
 00651F67    mov         ecx,dword ptr [eax]
 00651F69    call        dword ptr [ecx+38];TStringList.Add
 00651F6C    mov         edx,652B7C;'SwingUpDownUp'
 00651F71    mov         eax,ebx
 00651F73    mov         ecx,dword ptr [eax]
 00651F75    call        dword ptr [ecx+38];TStringList.Add
 00651F78    mov         edx,652BA4;'SwingUpDownUpStop'
 00651F7D    mov         eax,ebx
 00651F7F    mov         ecx,dword ptr [eax]
 00651F81    call        dword ptr [ecx+38];TStringList.Add
 00651F84    mov         edx,652BD4;'SwingUpDownUpDown'
 00651F89    mov         eax,ebx
 00651F8B    mov         ecx,dword ptr [eax]
 00651F8D    call        dword ptr [ecx+38];TStringList.Add
 00651F90    mov         edx,652C04;'SwingUpDownUpDownStop'
 00651F95    mov         eax,ebx
 00651F97    mov         ecx,dword ptr [eax]
 00651F99    call        dword ptr [ecx+38];TStringList.Add
 00651F9C    mov         edx,652C3C;'SwingUpDownUpDownUp'
 00651FA1    mov         eax,ebx
 00651FA3    mov         ecx,dword ptr [eax]
 00651FA5    call        dword ptr [ecx+38];TStringList.Add
 00651FA8    mov         edx,652C70;'SwishAndFlick'
 00651FAD    mov         eax,ebx
 00651FAF    mov         ecx,dword ptr [eax]
 00651FB1    call        dword ptr [ecx+38];TStringList.Add
 00651FB4    mov         edx,652C98;'SwishAndFlickStop'
 00651FB9    mov         eax,ebx
 00651FBB    mov         ecx,dword ptr [eax]
 00651FBD    call        dword ptr [ecx+38];TStringList.Add
 00651FC0    mov         edx,652CC8;'CurveDownRightUp'
 00651FC5    mov         eax,ebx
 00651FC7    mov         ecx,dword ptr [eax]
 00651FC9    call        dword ptr [ecx+38];TStringList.Add
 00651FCC    mov         edx,652CF8;'CurveDownRightUpStop'
 00651FD1    mov         eax,ebx
 00651FD3    mov         ecx,dword ptr [eax]
 00651FD5    call        dword ptr [ecx+38];TStringList.Add
 00651FD8    mov         edx,652D30;'CurvyW'
 00651FDD    mov         eax,ebx
 00651FDF    mov         ecx,dword ptr [eax]
 00651FE1    call        dword ptr [ecx+38];TStringList.Add
 00651FE4    mov         edx,652D4C;'CurvyM'
 00651FE9    mov         eax,ebx
 00651FEB    mov         ecx,dword ptr [eax]
 00651FED    call        dword ptr [ecx+38];TStringList.Add
 00651FF0    mov         edx,652D68;'CurveUpRightDown'
 00651FF5    mov         eax,ebx
 00651FF7    mov         ecx,dword ptr [eax]
 00651FF9    call        dword ptr [ecx+38];TStringList.Add
 00651FFC    mov         edx,652D98;'CurveUpRightDownStop'
 00652001    mov         eax,ebx
 00652003    mov         ecx,dword ptr [eax]
 00652005    call        dword ptr [ecx+38];TStringList.Add
 00652008    mov         edx,652DD0;'CircleAntiClockwise'
 0065200D    mov         eax,ebx
 0065200F    mov         ecx,dword ptr [eax]
 00652011    call        dword ptr [ecx+38];TStringList.Add
 00652014    mov         edx,652E04;'CircleClockwise'
 00652019    mov         eax,ebx
 0065201B    mov         ecx,dword ptr [eax]
 0065201D    call        dword ptr [ecx+38];TStringList.Add
 00652020    mov         edx,652E30;'Nunchukx.'
 00652025    mov         eax,ebx
 00652027    mov         ecx,dword ptr [eax]
 00652029    call        dword ptr [ecx+38];TStringList.Add
 0065202C    mov         edx,652E50;'Classicx.'
 00652031    mov         eax,ebx
 00652033    mov         ecx,dword ptr [eax]
 00652035    call        dword ptr [ecx+38];TStringList.Add
 00652038    mov         edx,652E70;'Guitarx.'
 0065203D    mov         eax,ebx
 0065203F    mov         ecx,dword ptr [eax]
 00652041    call        dword ptr [ecx+38];TStringList.Add
 00652044    mov         edx,652E90;'BalanceBoardx.'
 00652049    mov         eax,ebx
 0065204B    mov         ecx,dword ptr [eax]
 0065204D    call        dword ptr [ecx+38];TStringList.Add
 00652050    mov         eax,ebx
 00652052    pop         ebx
 00652053    ret
end;*}

//00652EB0
{*function sub_00652EB0:?;
begin
 00652EB0    push        ebx
 00652EB1    mov         dl,1
 00652EB3    mov         eax,[0043C7BC];TStringList
 00652EB8    call        TStringList.Create;TStringList.Create
 00652EBD    mov         ebx,eax
 00652EBF    mov         dl,1
 00652EC1    mov         eax,ebx
 00652EC3    call        TStringList.SetSorted
 00652EC8    mov         edx,6530DC;'Exists'
 00652ECD    mov         eax,ebx
 00652ECF    mov         ecx,dword ptr [eax]
 00652ED1    call        dword ptr [ecx+38];TStringList.Add
 00652ED4    mov         edx,6530F8;'JoyX'
 00652ED9    mov         eax,ebx
 00652EDB    mov         ecx,dword ptr [eax]
 00652EDD    call        dword ptr [ecx+38];TStringList.Add
 00652EE0    mov         edx,653110;'JoyY'
 00652EE5    mov         eax,ebx
 00652EE7    mov         ecx,dword ptr [eax]
 00652EE9    call        dword ptr [ecx+38];TStringList.Add
 00652EEC    mov         edx,653128;'Joy'
 00652EF1    mov         eax,ebx
 00652EF3    mov         ecx,dword ptr [eax]
 00652EF5    call        dword ptr [ecx+38];TStringList.Add
 00652EF8    mov         edx,65313C;'Joy3D'
 00652EFD    mov         eax,ebx
 00652EFF    mov         ecx,dword ptr [eax]
 00652F01    call        dword ptr [ecx+38];TStringList.Add
 00652F04    mov         edx,653154;'C'
 00652F09    mov         eax,ebx
 00652F0B    mov         ecx,dword ptr [eax]
 00652F0D    call        dword ptr [ecx+38];TStringList.Add
 00652F10    mov         edx,653164;'Z'
 00652F15    mov         eax,ebx
 00652F17    mov         ecx,dword ptr [eax]
 00652F19    call        dword ptr [ecx+38];TStringList.Add
 00652F1C    mov         edx,653174;'ClassicButton'
 00652F21    mov         eax,ebx
 00652F23    mov         ecx,dword ptr [eax]
 00652F25    call        dword ptr [ecx+38];TStringList.Add
 00652F28    mov         edx,65319C;'FXButton'
 00652F2D    mov         eax,ebx
 00652F2F    mov         ecx,dword ptr [eax]
 00652F31    call        dword ptr [ecx+38];TStringList.Add
 00652F34    mov         edx,6531BC;'Up'
 00652F39    mov         eax,ebx
 00652F3B    mov         ecx,dword ptr [eax]
 00652F3D    call        dword ptr [ecx+38];TStringList.Add
 00652F40    mov         edx,6531D0;'Down'
 00652F45    mov         eax,ebx
 00652F47    mov         ecx,dword ptr [eax]
 00652F49    call        dword ptr [ecx+38];TStringList.Add
 00652F4C    mov         edx,6531E8;'Left'
 00652F51    mov         eax,ebx
 00652F53    mov         ecx,dword ptr [eax]
 00652F55    call        dword ptr [ecx+38];TStringList.Add
 00652F58    mov         edx,653200;'Right'
 00652F5D    mov         eax,ebx
 00652F5F    mov         ecx,dword ptr [eax]
 00652F61    call        dword ptr [ecx+38];TStringList.Add
 00652F64    mov         edx,653218;'Pitch'
 00652F69    mov         eax,ebx
 00652F6B    mov         ecx,dword ptr [eax]
 00652F6D    call        dword ptr [ecx+38];TStringList.Add
 00652F70    mov         edx,653230;'Roll'
 00652F75    mov         eax,ebx
 00652F77    mov         ecx,dword ptr [eax]
 00652F79    call        dword ptr [ecx+38];TStringList.Add
 00652F7C    mov         edx,653248;'SmoothPitch'
 00652F81    mov         eax,ebx
 00652F83    mov         ecx,dword ptr [eax]
 00652F85    call        dword ptr [ecx+38];TStringList.Add
 00652F88    mov         edx,65326C;'SmoothRoll'
 00652F8D    mov         eax,ebx
 00652F8F    mov         ecx,dword ptr [eax]
 00652F91    call        dword ptr [ecx+38];TStringList.Add
 00652F94    mov         edx,653290;'gx'
 00652F99    mov         eax,ebx
 00652F9B    mov         ecx,dword ptr [eax]
 00652F9D    call        dword ptr [ecx+38];TStringList.Add
 00652FA0    mov         edx,6532A4;'gy'
 00652FA5    mov         eax,ebx
 00652FA7    mov         ecx,dword ptr [eax]
 00652FA9    call        dword ptr [ecx+38];TStringList.Add
 00652FAC    mov         edx,6532B8;'gz'
 00652FB1    mov         eax,ebx
 00652FB3    mov         ecx,dword ptr [eax]
 00652FB5    call        dword ptr [ecx+38];TStringList.Add
 00652FB8    mov         edx,6532CC;'RawAccX'
 00652FBD    mov         eax,ebx
 00652FBF    mov         ecx,dword ptr [eax]
 00652FC1    call        dword ptr [ecx+38];TStringList.Add
 00652FC4    mov         edx,6532E8;'RawAccY'
 00652FC9    mov         eax,ebx
 00652FCB    mov         ecx,dword ptr [eax]
 00652FCD    call        dword ptr [ecx+38];TStringList.Add
 00652FD0    mov         edx,653304;'RawAccZ'
 00652FD5    mov         eax,ebx
 00652FD7    mov         ecx,dword ptr [eax]
 00652FD9    call        dword ptr [ecx+38];TStringList.Add
 00652FDC    mov         edx,653320;'RawAcc'
 00652FE1    mov         eax,ebx
 00652FE3    mov         ecx,dword ptr [eax]
 00652FE5    call        dword ptr [ecx+38];TStringList.Add
 00652FE8    mov         edx,65333C;'RelAccX'
 00652FED    mov         eax,ebx
 00652FEF    mov         ecx,dword ptr [eax]
 00652FF1    call        dword ptr [ecx+38];TStringList.Add
 00652FF4    mov         edx,653358;'RelAccY'
 00652FF9    mov         eax,ebx
 00652FFB    mov         ecx,dword ptr [eax]
 00652FFD    call        dword ptr [ecx+38];TStringList.Add
 00653000    mov         edx,653374;'RelAccZ'
 00653005    mov         eax,ebx
 00653007    mov         ecx,dword ptr [eax]
 00653009    call        dword ptr [ecx+38];TStringList.Add
 0065300C    mov         edx,653390;'RelAcc'
 00653011    mov         eax,ebx
 00653013    mov         ecx,dword ptr [eax]
 00653015    call        dword ptr [ecx+38];TStringList.Add
 00653018    mov         edx,6533AC;'Shakiness'
 0065301D    mov         eax,ebx
 0065301F    mov         ecx,dword ptr [eax]
 00653021    call        dword ptr [ecx+38];TStringList.Add
 00653024    mov         edx,6533CC;'OnTable'
 00653029    mov         eax,ebx
 0065302B    mov         ecx,dword ptr [eax]
 0065302D    call        dword ptr [ecx+38];TStringList.Add
 00653030    mov         edx,6533E8;'UpsideDownOnShoulder'
 00653035    mov         eax,ebx
 00653037    mov         ecx,dword ptr [eax]
 00653039    call        dword ptr [ecx+38];TStringList.Add
 0065303C    mov         edx,653420;'LookingAtWatch'
 00653041    mov         eax,ebx
 00653043    mov         ecx,dword ptr [eax]
 00653045    call        dword ptr [ecx+38];TStringList.Add
 00653048    mov         edx,65344C;'LookingAtRightWatch'
 0065304D    mov         eax,ebx
 0065304F    mov         ecx,dword ptr [eax]
 00653051    call        dword ptr [ecx+38];TStringList.Add
 00653054    mov         edx,653480;'LookingAtLeftPalm'
 00653059    mov         eax,ebx
 0065305B    mov         ecx,dword ptr [eax]
 0065305D    call        dword ptr [ecx+38];TStringList.Add
 00653060    mov         edx,6534B0;'LookingAtRightPalm'
 00653065    mov         eax,ebx
 00653067    mov         ecx,dword ptr [eax]
 00653069    call        dword ptr [ecx+38];TStringList.Add
 0065306C    mov         edx,6534E4;'SwingDown'
 00653071    mov         eax,ebx
 00653073    mov         ecx,dword ptr [eax]
 00653075    call        dword ptr [ecx+38];TStringList.Add
 00653078    mov         edx,653504;'SwingDownUp'
 0065307D    mov         eax,ebx
 0065307F    mov         ecx,dword ptr [eax]
 00653081    call        dword ptr [ecx+38];TStringList.Add
 00653084    mov         edx,653528;'SwingDownUpDown'
 00653089    mov         eax,ebx
 0065308B    mov         ecx,dword ptr [eax]
 0065308D    call        dword ptr [ecx+38];TStringList.Add
 00653090    mov         edx,653554;'SwingDownUpDownUp'
 00653095    mov         eax,ebx
 00653097    mov         ecx,dword ptr [eax]
 00653099    call        dword ptr [ecx+38];TStringList.Add
 0065309C    mov         edx,653584;'SwingHorizontal'
 006530A1    mov         eax,ebx
 006530A3    mov         ecx,dword ptr [eax]
 006530A5    call        dword ptr [ecx+38];TStringList.Add
 006530A8    mov         edx,6535B0;'SwingVertical'
 006530AD    mov         eax,ebx
 006530AF    mov         ecx,dword ptr [eax]
 006530B1    call        dword ptr [ecx+38];TStringList.Add
 006530B4    mov         edx,6535D8;'Stabbing'
 006530B9    mov         eax,ebx
 006530BB    mov         ecx,dword ptr [eax]
 006530BD    call        dword ptr [ecx+38];TStringList.Add
 006530C0    mov         edx,6535F8;'DrumBeat'
 006530C5    mov         eax,ebx
 006530C7    mov         ecx,dword ptr [eax]
 006530C9    call        dword ptr [ecx+38];TStringList.Add
 006530CC    mov         eax,ebx
 006530CE    pop         ebx
 006530CF    ret
end;*}

//0065360C
{*function sub_0065360C:?;
begin
 0065360C    push        ebx
 0065360D    mov         dl,1
 0065360F    mov         eax,[0043C7BC];TStringList
 00653614    call        TStringList.Create;TStringList.Create
 00653619    mov         ebx,eax
 0065361B    mov         dl,1
 0065361D    mov         eax,ebx
 0065361F    call        TStringList.SetSorted
 00653624    mov         edx,65379C;'LeftStick'
 00653629    mov         eax,ebx
 0065362B    mov         ecx,dword ptr [eax]
 0065362D    call        dword ptr [ecx+38];TStringList.Add
 00653630    mov         edx,6537BC;'LeftStickX'
 00653635    mov         eax,ebx
 00653637    mov         ecx,dword ptr [eax]
 00653639    call        dword ptr [ecx+38];TStringList.Add
 0065363C    mov         edx,6537E0;'LeftStickY'
 00653641    mov         eax,ebx
 00653643    mov         ecx,dword ptr [eax]
 00653645    call        dword ptr [ecx+38];TStringList.Add
 00653648    mov         edx,653804;'RightStick'
 0065364D    mov         eax,ebx
 0065364F    mov         ecx,dword ptr [eax]
 00653651    call        dword ptr [ecx+38];TStringList.Add
 00653654    mov         edx,653828;'RightStickX'
 00653659    mov         eax,ebx
 0065365B    mov         ecx,dword ptr [eax]
 0065365D    call        dword ptr [ecx+38];TStringList.Add
 00653660    mov         edx,65384C;'RightStickY'
 00653665    mov         eax,ebx
 00653667    mov         ecx,dword ptr [eax]
 00653669    call        dword ptr [ecx+38];TStringList.Add
 0065366C    mov         edx,653870;'L'
 00653671    mov         eax,ebx
 00653673    mov         ecx,dword ptr [eax]
 00653675    call        dword ptr [ecx+38];TStringList.Add
 00653678    mov         edx,653880;'R'
 0065367D    mov         eax,ebx
 0065367F    mov         ecx,dword ptr [eax]
 00653681    call        dword ptr [ecx+38];TStringList.Add
 00653684    mov         edx,653890;'DPad'
 00653689    mov         eax,ebx
 0065368B    mov         ecx,dword ptr [eax]
 0065368D    call        dword ptr [ecx+38];TStringList.Add
 00653690    mov         edx,6538A8;'DPadX'
 00653695    mov         eax,ebx
 00653697    mov         ecx,dword ptr [eax]
 00653699    call        dword ptr [ecx+38];TStringList.Add
 0065369C    mov         edx,6538C0;'DPadY'
 006536A1    mov         eax,ebx
 006536A3    mov         ecx,dword ptr [eax]
 006536A5    call        dword ptr [ecx+38];TStringList.Add
 006536A8    mov         edx,6538D8;'Up'
 006536AD    mov         eax,ebx
 006536AF    mov         ecx,dword ptr [eax]
 006536B1    call        dword ptr [ecx+38];TStringList.Add
 006536B4    mov         edx,6538EC;'Left'
 006536B9    mov         eax,ebx
 006536BB    mov         ecx,dword ptr [eax]
 006536BD    call        dword ptr [ecx+38];TStringList.Add
 006536C0    mov         edx,653904;'ZR'
 006536C5    mov         eax,ebx
 006536C7    mov         ecx,dword ptr [eax]
 006536C9    call        dword ptr [ecx+38];TStringList.Add
 006536CC    mov         edx,653918;'x'
 006536D1    mov         eax,ebx
 006536D3    mov         ecx,dword ptr [eax]
 006536D5    call        dword ptr [ecx+38];TStringList.Add
 006536D8    mov         edx,653928;'a'
 006536DD    mov         eax,ebx
 006536DF    mov         ecx,dword ptr [eax]
 006536E1    call        dword ptr [ecx+38];TStringList.Add
 006536E4    mov         edx,653938;'y'
 006536E9    mov         eax,ebx
 006536EB    mov         ecx,dword ptr [eax]
 006536ED    call        dword ptr [ecx+38];TStringList.Add
 006536F0    mov         edx,653948;'b'
 006536F5    mov         eax,ebx
 006536F7    mov         ecx,dword ptr [eax]
 006536F9    call        dword ptr [ecx+38];TStringList.Add
 006536FC    mov         edx,653958;'ZL'
 00653701    mov         eax,ebx
 00653703    mov         ecx,dword ptr [eax]
 00653705    call        dword ptr [ecx+38];TStringList.Add
 00653708    mov         edx,65396C;'RFull'
 0065370D    mov         eax,ebx
 0065370F    mov         ecx,dword ptr [eax]
 00653711    call        dword ptr [ecx+38];TStringList.Add
 00653714    mov         edx,653984;'Plus'
 00653719    mov         eax,ebx
 0065371B    mov         ecx,dword ptr [eax]
 0065371D    call        dword ptr [ecx+38];TStringList.Add
 00653720    mov         edx,65399C;'Start'
 00653725    mov         eax,ebx
 00653727    mov         ecx,dword ptr [eax]
 00653729    call        dword ptr [ecx+38];TStringList.Add
 0065372C    mov         edx,6539B4;'Home'
 00653731    mov         eax,ebx
 00653733    mov         ecx,dword ptr [eax]
 00653735    call        dword ptr [ecx+38];TStringList.Add
 00653738    mov         edx,6539CC;'Minus'
 0065373D    mov         eax,ebx
 0065373F    mov         ecx,dword ptr [eax]
 00653741    call        dword ptr [ecx+38];TStringList.Add
 00653744    mov         edx,6539E4;'Select'
 00653749    mov         eax,ebx
 0065374B    mov         ecx,dword ptr [eax]
 0065374D    call        dword ptr [ecx+38];TStringList.Add
 00653750    mov         edx,653A00;'LFull'
 00653755    mov         eax,ebx
 00653757    mov         ecx,dword ptr [eax]
 00653759    call        dword ptr [ecx+38];TStringList.Add
 0065375C    mov         edx,653A18;'Down'
 00653761    mov         eax,ebx
 00653763    mov         ecx,dword ptr [eax]
 00653765    call        dword ptr [ecx+38];TStringList.Add
 00653768    mov         edx,653A30;'Right'
 0065376D    mov         eax,ebx
 0065376F    mov         ecx,dword ptr [eax]
 00653771    call        dword ptr [ecx+38];TStringList.Add
 00653774    mov         edx,653A48;'ButtonDir'
 00653779    mov         eax,ebx
 0065377B    mov         ecx,dword ptr [eax]
 0065377D    call        dword ptr [ecx+38];TStringList.Add
 00653780    mov         edx,653A68;'Exists'
 00653785    mov         eax,ebx
 00653787    mov         ecx,dword ptr [eax]
 00653789    call        dword ptr [ecx+38];TStringList.Add
 0065378C    mov         eax,ebx
 0065378E    pop         ebx
 0065378F    ret
end;*}

//00653A78
{*function sub_00653A78:?;
begin
 00653A78    push        ebx
 00653A79    mov         dl,1
 00653A7B    mov         eax,[0043C7BC];TStringList
 00653A80    call        TStringList.Create;TStringList.Create
 00653A85    mov         ebx,eax
 00653A87    mov         dl,1
 00653A89    mov         eax,ebx
 00653A8B    call        TStringList.SetSorted
 00653A90    mov         edx,653B9C;'StrumUp'
 00653A95    mov         eax,ebx
 00653A97    mov         ecx,dword ptr [eax]
 00653A99    call        dword ptr [ecx+38];TStringList.Add
 00653A9C    mov         edx,653BB8;'StrumDown'
 00653AA1    mov         eax,ebx
 00653AA3    mov         ecx,dword ptr [eax]
 00653AA5    call        dword ptr [ecx+38];TStringList.Add
 00653AA8    mov         edx,653BD8;'Joy'
 00653AAD    mov         eax,ebx
 00653AAF    mov         ecx,dword ptr [eax]
 00653AB1    call        dword ptr [ecx+38];TStringList.Add
 00653AB4    mov         edx,653BEC;'JoyX'
 00653AB9    mov         eax,ebx
 00653ABB    mov         ecx,dword ptr [eax]
 00653ABD    call        dword ptr [ecx+38];TStringList.Add
 00653AC0    mov         edx,653C04;'JoyY'
 00653AC5    mov         eax,ebx
 00653AC7    mov         ecx,dword ptr [eax]
 00653AC9    call        dword ptr [ecx+38];TStringList.Add
 00653ACC    mov         edx,653C1C;'Plus'
 00653AD1    mov         eax,ebx
 00653AD3    mov         ecx,dword ptr [eax]
 00653AD5    call        dword ptr [ecx+38];TStringList.Add
 00653AD8    mov         edx,653C34;'Start'
 00653ADD    mov         eax,ebx
 00653ADF    mov         ecx,dword ptr [eax]
 00653AE1    call        dword ptr [ecx+38];TStringList.Add
 00653AE4    mov         edx,653C4C;'Minus'
 00653AE9    mov         eax,ebx
 00653AEB    mov         ecx,dword ptr [eax]
 00653AED    call        dword ptr [ecx+38];TStringList.Add
 00653AF0    mov         edx,653C64;'Select'
 00653AF5    mov         eax,ebx
 00653AF7    mov         ecx,dword ptr [eax]
 00653AF9    call        dword ptr [ecx+38];TStringList.Add
 00653AFC    mov         edx,653C80;'Fret1'
 00653B01    mov         eax,ebx
 00653B03    mov         ecx,dword ptr [eax]
 00653B05    call        dword ptr [ecx+38];TStringList.Add
 00653B08    mov         edx,653C98;'Fret2'
 00653B0D    mov         eax,ebx
 00653B0F    mov         ecx,dword ptr [eax]
 00653B11    call        dword ptr [ecx+38];TStringList.Add
 00653B14    mov         edx,653CB0;'Fret3'
 00653B19    mov         eax,ebx
 00653B1B    mov         ecx,dword ptr [eax]
 00653B1D    call        dword ptr [ecx+38];TStringList.Add
 00653B20    mov         edx,653CC8;'Fret4'
 00653B25    mov         eax,ebx
 00653B27    mov         ecx,dword ptr [eax]
 00653B29    call        dword ptr [ecx+38];TStringList.Add
 00653B2C    mov         edx,653CE0;'Fret5'
 00653B31    mov         eax,ebx
 00653B33    mov         ecx,dword ptr [eax]
 00653B35    call        dword ptr [ecx+38];TStringList.Add
 00653B38    mov         edx,653CF8;'Green'
 00653B3D    mov         eax,ebx
 00653B3F    mov         ecx,dword ptr [eax]
 00653B41    call        dword ptr [ecx+38];TStringList.Add
 00653B44    mov         edx,653D10;'Red'
 00653B49    mov         eax,ebx
 00653B4B    mov         ecx,dword ptr [eax]
 00653B4D    call        dword ptr [ecx+38];TStringList.Add
 00653B50    mov         edx,653D24;'Yellow'
 00653B55    mov         eax,ebx
 00653B57    mov         ecx,dword ptr [eax]
 00653B59    call        dword ptr [ecx+38];TStringList.Add
 00653B5C    mov         edx,653D40;'Blue'
 00653B61    mov         eax,ebx
 00653B63    mov         ecx,dword ptr [eax]
 00653B65    call        dword ptr [ecx+38];TStringList.Add
 00653B68    mov         edx,653D58;'Orange'
 00653B6D    mov         eax,ebx
 00653B6F    mov         ecx,dword ptr [eax]
 00653B71    call        dword ptr [ecx+38];TStringList.Add
 00653B74    mov         edx,653D74;'WhammyBar'
 00653B79    mov         eax,ebx
 00653B7B    mov         ecx,dword ptr [eax]
 00653B7D    call        dword ptr [ecx+38];TStringList.Add
 00653B80    mov         edx,653D94;'Exists'
 00653B85    mov         eax,ebx
 00653B87    mov         ecx,dword ptr [eax]
 00653B89    call        dword ptr [ecx+38];TStringList.Add
 00653B8C    mov         eax,ebx
 00653B8E    pop         ebx
 00653B8F    ret
end;*}

//00653DA4
{*function sub_00653DA4:?;
begin
 00653DA4    push        ebx
 00653DA5    mov         dl,1
 00653DA7    mov         eax,[0043C7BC];TStringList
 00653DAC    call        TStringList.Create;TStringList.Create
 00653DB1    mov         ebx,eax
 00653DB3    mov         dl,1
 00653DB5    mov         eax,ebx
 00653DB7    call        TStringList.SetSorted
 00653DBC    mov         edx,653F88;'Red'
 00653DC1    mov         eax,ebx
 00653DC3    mov         ecx,dword ptr [eax]
 00653DC5    call        dword ptr [ecx+38];TStringList.Add
 00653DC8    mov         edx,653F9C;'Blue'
 00653DCD    mov         eax,ebx
 00653DCF    mov         ecx,dword ptr [eax]
 00653DD1    call        dword ptr [ecx+38];TStringList.Add
 00653DD4    mov         edx,653FB4;'Green'
 00653DD9    mov         eax,ebx
 00653DDB    mov         ecx,dword ptr [eax]
 00653DDD    call        dword ptr [ecx+38];TStringList.Add
 00653DE0    mov         edx,653FCC;'Yellow'
 00653DE5    mov         eax,ebx
 00653DE7    mov         ecx,dword ptr [eax]
 00653DE9    call        dword ptr [ecx+38];TStringList.Add
 00653DEC    mov         edx,653FE8;'Orange'
 00653DF1    mov         eax,ebx
 00653DF3    mov         ecx,dword ptr [eax]
 00653DF5    call        dword ptr [ecx+38];TStringList.Add
 00653DF8    mov         edx,654004;'Pedal'
 00653DFD    mov         eax,ebx
 00653DFF    mov         ecx,dword ptr [eax]
 00653E01    call        dword ptr [ecx+38];TStringList.Add
 00653E04    mov         edx,65401C;'HiHat'
 00653E09    mov         eax,ebx
 00653E0B    mov         ecx,dword ptr [eax]
 00653E0D    call        dword ptr [ecx+38];TStringList.Add
 00653E10    mov         edx,654034;'Plus'
 00653E15    mov         eax,ebx
 00653E17    mov         ecx,dword ptr [eax]
 00653E19    call        dword ptr [ecx+38];TStringList.Add
 00653E1C    mov         edx,65404C;'Minus'
 00653E21    mov         eax,ebx
 00653E23    mov         ecx,dword ptr [eax]
 00653E25    call        dword ptr [ecx+38];TStringList.Add
 00653E28    mov         edx,654064;'Joy'
 00653E2D    mov         eax,ebx
 00653E2F    mov         ecx,dword ptr [eax]
 00653E31    call        dword ptr [ecx+38];TStringList.Add
 00653E34    mov         edx,654078;'JoyX'
 00653E39    mov         eax,ebx
 00653E3B    mov         ecx,dword ptr [eax]
 00653E3D    call        dword ptr [ecx+38];TStringList.Add
 00653E40    mov         edx,654090;'JoyY'
 00653E45    mov         eax,ebx
 00653E47    mov         ecx,dword ptr [eax]
 00653E49    call        dword ptr [ecx+38];TStringList.Add
 00653E4C    mov         edx,6540A8;'DPad'
 00653E51    mov         eax,ebx
 00653E53    mov         ecx,dword ptr [eax]
 00653E55    call        dword ptr [ecx+38];TStringList.Add
 00653E58    mov         edx,6540C0;'DPadUp'
 00653E5D    mov         eax,ebx
 00653E5F    mov         ecx,dword ptr [eax]
 00653E61    call        dword ptr [ecx+38];TStringList.Add
 00653E64    mov         edx,6540DC;'DPadDown'
 00653E69    mov         eax,ebx
 00653E6B    mov         ecx,dword ptr [eax]
 00653E6D    call        dword ptr [ecx+38];TStringList.Add
 00653E70    mov         edx,6540FC;'DPadLeft'
 00653E75    mov         eax,ebx
 00653E77    mov         ecx,dword ptr [eax]
 00653E79    call        dword ptr [ecx+38];TStringList.Add
 00653E7C    mov         edx,65411C;'DPadRight'
 00653E81    mov         eax,ebx
 00653E83    mov         ecx,dword ptr [eax]
 00653E85    call        dword ptr [ecx+38];TStringList.Add
 00653E88    mov         edx,65413C;'A'
 00653E8D    mov         eax,ebx
 00653E8F    mov         ecx,dword ptr [eax]
 00653E91    call        dword ptr [ecx+38];TStringList.Add
 00653E94    mov         edx,65414C;'Two'
 00653E99    mov         eax,ebx
 00653E9B    mov         ecx,dword ptr [eax]
 00653E9D    call        dword ptr [ecx+38];TStringList.Add
 00653EA0    mov         edx,654160;'One'
 00653EA5    mov         eax,ebx
 00653EA7    mov         ecx,dword ptr [eax]
 00653EA9    call        dword ptr [ecx+38];TStringList.Add
 00653EAC    mov         edx,654174;'Home'
 00653EB1    mov         eax,ebx
 00653EB3    mov         ecx,dword ptr [eax]
 00653EB5    call        dword ptr [ecx+38];TStringList.Add
 00653EB8    mov         edx,65418C;'WiimoteMinus'
 00653EBD    mov         eax,ebx
 00653EBF    mov         ecx,dword ptr [eax]
 00653EC1    call        dword ptr [ecx+38];TStringList.Add
 00653EC4    mov         edx,6541B4;'WiimotePlus'
 00653EC9    mov         eax,ebx
 00653ECB    mov         ecx,dword ptr [eax]
 00653ECD    call        dword ptr [ecx+38];TStringList.Add
 00653ED0    mov         edx,6541D8;'Leds'
 00653ED5    mov         eax,ebx
 00653ED7    mov         ecx,dword ptr [eax]
 00653ED9    call        dword ptr [ecx+38];TStringList.Add
 00653EDC    mov         edx,6541F0;'Led1'
 00653EE1    mov         eax,ebx
 00653EE3    mov         ecx,dword ptr [eax]
 00653EE5    call        dword ptr [ecx+38];TStringList.Add
 00653EE8    mov         edx,654208;'Led2'
 00653EED    mov         eax,ebx
 00653EEF    mov         ecx,dword ptr [eax]
 00653EF1    call        dword ptr [ecx+38];TStringList.Add
 00653EF4    mov         edx,654220;'Led3'
 00653EF9    mov         eax,ebx
 00653EFB    mov         ecx,dword ptr [eax]
 00653EFD    call        dword ptr [ecx+38];TStringList.Add
 00653F00    mov         edx,654238;'Led4'
 00653F05    mov         eax,ebx
 00653F07    mov         ecx,dword ptr [eax]
 00653F09    call        dword ptr [ecx+38];TStringList.Add
 00653F0C    mov         edx,654250;'LedLevel'
 00653F11    mov         eax,ebx
 00653F13    mov         ecx,dword ptr [eax]
 00653F15    call        dword ptr [ecx+38];TStringList.Add
 00653F18    mov         edx,654270;'LedPlayer'
 00653F1D    mov         eax,ebx
 00653F1F    mov         ecx,dword ptr [eax]
 00653F21    call        dword ptr [ecx+38];TStringList.Add
 00653F24    mov         edx,654290;'Battery'
 00653F29    mov         eax,ebx
 00653F2B    mov         ecx,dword ptr [eax]
 00653F2D    call        dword ptr [ecx+38];TStringList.Add
 00653F30    mov         edx,6542AC;'Exists'
 00653F35    mov         eax,ebx
 00653F37    mov         ecx,dword ptr [eax]
 00653F39    call        dword ptr [ecx+38];TStringList.Add
 00653F3C    mov         edx,6542C8;'Frequency'
 00653F41    mov         eax,ebx
 00653F43    mov         ecx,dword ptr [eax]
 00653F45    call        dword ptr [ecx+38];TStringList.Add
 00653F48    mov         edx,6542E8;'Volume'
 00653F4D    mov         eax,ebx
 00653F4F    mov         ecx,dword ptr [eax]
 00653F51    call        dword ptr [ecx+38];TStringList.Add
 00653F54    mov         edx,654304;'Speaker'
 00653F59    mov         eax,ebx
 00653F5B    mov         ecx,dword ptr [eax]
 00653F5D    call        dword ptr [ecx+38];TStringList.Add
 00653F60    mov         edx,654320;'Mute'
 00653F65    mov         eax,ebx
 00653F67    mov         ecx,dword ptr [eax]
 00653F69    call        dword ptr [ecx+38];TStringList.Add
 00653F6C    mov         edx,654338;'Rumble'
 00653F71    mov         eax,ebx
 00653F73    mov         ecx,dword ptr [eax]
 00653F75    call        dword ptr [ecx+38];TStringList.Add
 00653F78    mov         eax,ebx
 00653F7A    pop         ebx
 00653F7B    ret
end;*}

//00654348
{*function sub_00654348:?;
begin
 00654348    push        ebx
 00654349    mov         dl,1
 0065434B    mov         eax,[0043C7BC];TStringList
 00654350    call        TStringList.Create;TStringList.Create
 00654355    mov         ebx,eax
 00654357    mov         dl,1
 00654359    mov         eax,ebx
 0065435B    call        TStringList.SetSorted
 00654360    mov         edx,65458C;'Red'
 00654365    mov         eax,ebx
 00654367    mov         ecx,dword ptr [eax]
 00654369    call        dword ptr [ecx+38];TStringList.Add
 0065436C    mov         edx,6545A0;'Blue'
 00654371    mov         eax,ebx
 00654373    mov         ecx,dword ptr [eax]
 00654375    call        dword ptr [ecx+38];TStringList.Add
 00654378    mov         edx,6545B8;'Green'
 0065437D    mov         eax,ebx
 0065437F    mov         ecx,dword ptr [eax]
 00654381    call        dword ptr [ecx+38];TStringList.Add
 00654384    mov         edx,6545D0;'LeftRed'
 00654389    mov         eax,ebx
 0065438B    mov         ecx,dword ptr [eax]
 0065438D    call        dword ptr [ecx+38];TStringList.Add
 00654390    mov         edx,6545EC;'LeftBlue'
 00654395    mov         eax,ebx
 00654397    mov         ecx,dword ptr [eax]
 00654399    call        dword ptr [ecx+38];TStringList.Add
 0065439C    mov         edx,65460C;'LeftGreen'
 006543A1    mov         eax,ebx
 006543A3    mov         ecx,dword ptr [eax]
 006543A5    call        dword ptr [ecx+38];TStringList.Add
 006543A8    mov         edx,65462C;'RightRed'
 006543AD    mov         eax,ebx
 006543AF    mov         ecx,dword ptr [eax]
 006543B1    call        dword ptr [ecx+38];TStringList.Add
 006543B4    mov         edx,65464C;'RightBlue'
 006543B9    mov         eax,ebx
 006543BB    mov         ecx,dword ptr [eax]
 006543BD    call        dword ptr [ecx+38];TStringList.Add
 006543C0    mov         edx,65466C;'RightGreen'
 006543C5    mov         eax,ebx
 006543C7    mov         ecx,dword ptr [eax]
 006543C9    call        dword ptr [ecx+38];TStringList.Add
 006543CC    mov         edx,654690;'RawLeftTurntable'
 006543D1    mov         eax,ebx
 006543D3    mov         ecx,dword ptr [eax]
 006543D5    call        dword ptr [ecx+38];TStringList.Add
 006543D8    mov         edx,6546C0;'RawRightTurntable'
 006543DD    mov         eax,ebx
 006543DF    mov         ecx,dword ptr [eax]
 006543E1    call        dword ptr [ecx+38];TStringList.Add
 006543E4    mov         edx,6546F0;'Euphoria'
 006543E9    mov         eax,ebx
 006543EB    mov         ecx,dword ptr [eax]
 006543ED    call        dword ptr [ecx+38];TStringList.Add
 006543F0    mov         edx,654710;'Plus'
 006543F5    mov         eax,ebx
 006543F7    mov         ecx,dword ptr [eax]
 006543F9    call        dword ptr [ecx+38];TStringList.Add
 006543FC    mov         edx,654728;'Minus'
 00654401    mov         eax,ebx
 00654403    mov         ecx,dword ptr [eax]
 00654405    call        dword ptr [ecx+38];TStringList.Add
 00654408    mov         edx,654740;'CrossFade'
 0065440D    mov         eax,ebx
 0065440F    mov         ecx,dword ptr [eax]
 00654411    call        dword ptr [ecx+38];TStringList.Add
 00654414    mov         edx,654760;'EffectDial'
 00654419    mov         eax,ebx
 0065441B    mov         ecx,dword ptr [eax]
 0065441D    call        dword ptr [ecx+38];TStringList.Add
 00654420    mov         edx,654784;'QuestionQuestion'
 00654425    mov         eax,ebx
 00654427    mov         ecx,dword ptr [eax]
 00654429    call        dword ptr [ecx+38];TStringList.Add
 0065442C    mov         edx,6547B4;'Joy'
 00654431    mov         eax,ebx
 00654433    mov         ecx,dword ptr [eax]
 00654435    call        dword ptr [ecx+38];TStringList.Add
 00654438    mov         edx,6547C8;'JoyX'
 0065443D    mov         eax,ebx
 0065443F    mov         ecx,dword ptr [eax]
 00654441    call        dword ptr [ecx+38];TStringList.Add
 00654444    mov         edx,6547E0;'JoyY'
 00654449    mov         eax,ebx
 0065444B    mov         ecx,dword ptr [eax]
 0065444D    call        dword ptr [ecx+38];TStringList.Add
 00654450    mov         edx,6547F8;'DPad'
 00654455    mov         eax,ebx
 00654457    mov         ecx,dword ptr [eax]
 00654459    call        dword ptr [ecx+38];TStringList.Add
 0065445C    mov         edx,654810;'DPadUp'
 00654461    mov         eax,ebx
 00654463    mov         ecx,dword ptr [eax]
 00654465    call        dword ptr [ecx+38];TStringList.Add
 00654468    mov         edx,65482C;'DPadDown'
 0065446D    mov         eax,ebx
 0065446F    mov         ecx,dword ptr [eax]
 00654471    call        dword ptr [ecx+38];TStringList.Add
 00654474    mov         edx,65484C;'DPadLeft'
 00654479    mov         eax,ebx
 0065447B    mov         ecx,dword ptr [eax]
 0065447D    call        dword ptr [ecx+38];TStringList.Add
 00654480    mov         edx,65486C;'DPadRight'
 00654485    mov         eax,ebx
 00654487    mov         ecx,dword ptr [eax]
 00654489    call        dword ptr [ecx+38];TStringList.Add
 0065448C    mov         edx,65488C;'A'
 00654491    mov         eax,ebx
 00654493    mov         ecx,dword ptr [eax]
 00654495    call        dword ptr [ecx+38];TStringList.Add
 00654498    mov         edx,65489C;'Two'
 0065449D    mov         eax,ebx
 0065449F    mov         ecx,dword ptr [eax]
 006544A1    call        dword ptr [ecx+38];TStringList.Add
 006544A4    mov         edx,6548B0;'One'
 006544A9    mov         eax,ebx
 006544AB    mov         ecx,dword ptr [eax]
 006544AD    call        dword ptr [ecx+38];TStringList.Add
 006544B0    mov         edx,6548C4;'Home'
 006544B5    mov         eax,ebx
 006544B7    mov         ecx,dword ptr [eax]
 006544B9    call        dword ptr [ecx+38];TStringList.Add
 006544BC    mov         edx,6548DC;'WiimoteMinus'
 006544C1    mov         eax,ebx
 006544C3    mov         ecx,dword ptr [eax]
 006544C5    call        dword ptr [ecx+38];TStringList.Add
 006544C8    mov         edx,654904;'WiimotePlus'
 006544CD    mov         eax,ebx
 006544CF    mov         ecx,dword ptr [eax]
 006544D1    call        dword ptr [ecx+38];TStringList.Add
 006544D4    mov         edx,654928;'Leds'
 006544D9    mov         eax,ebx
 006544DB    mov         ecx,dword ptr [eax]
 006544DD    call        dword ptr [ecx+38];TStringList.Add
 006544E0    mov         edx,654940;'Led1'
 006544E5    mov         eax,ebx
 006544E7    mov         ecx,dword ptr [eax]
 006544E9    call        dword ptr [ecx+38];TStringList.Add
 006544EC    mov         edx,654958;'Led2'
 006544F1    mov         eax,ebx
 006544F3    mov         ecx,dword ptr [eax]
 006544F5    call        dword ptr [ecx+38];TStringList.Add
 006544F8    mov         edx,654970;'Led3'
 006544FD    mov         eax,ebx
 006544FF    mov         ecx,dword ptr [eax]
 00654501    call        dword ptr [ecx+38];TStringList.Add
 00654504    mov         edx,654988;'Led4'
 00654509    mov         eax,ebx
 0065450B    mov         ecx,dword ptr [eax]
 0065450D    call        dword ptr [ecx+38];TStringList.Add
 00654510    mov         edx,6549A0;'LedLevel'
 00654515    mov         eax,ebx
 00654517    mov         ecx,dword ptr [eax]
 00654519    call        dword ptr [ecx+38];TStringList.Add
 0065451C    mov         edx,6549C0;'LedPlayer'
 00654521    mov         eax,ebx
 00654523    mov         ecx,dword ptr [eax]
 00654525    call        dword ptr [ecx+38];TStringList.Add
 00654528    mov         edx,6549E0;'Battery'
 0065452D    mov         eax,ebx
 0065452F    mov         ecx,dword ptr [eax]
 00654531    call        dword ptr [ecx+38];TStringList.Add
 00654534    mov         edx,6549FC;'Exists'
 00654539    mov         eax,ebx
 0065453B    mov         ecx,dword ptr [eax]
 0065453D    call        dword ptr [ecx+38];TStringList.Add
 00654540    mov         edx,654A18;'Frequency'
 00654545    mov         eax,ebx
 00654547    mov         ecx,dword ptr [eax]
 00654549    call        dword ptr [ecx+38];TStringList.Add
 0065454C    mov         edx,654A38;'Volume'
 00654551    mov         eax,ebx
 00654553    mov         ecx,dword ptr [eax]
 00654555    call        dword ptr [ecx+38];TStringList.Add
 00654558    mov         edx,654A54;'Speaker'
 0065455D    mov         eax,ebx
 0065455F    mov         ecx,dword ptr [eax]
 00654561    call        dword ptr [ecx+38];TStringList.Add
 00654564    mov         edx,654A70;'Mute'
 00654569    mov         eax,ebx
 0065456B    mov         ecx,dword ptr [eax]
 0065456D    call        dword ptr [ecx+38];TStringList.Add
 00654570    mov         edx,654A88;'Rumble'
 00654575    mov         eax,ebx
 00654577    mov         ecx,dword ptr [eax]
 00654579    call        dword ptr [ecx+38];TStringList.Add
 0065457C    mov         eax,ebx
 0065457E    pop         ebx
 0065457F    ret
end;*}

//00654A98
{*function sub_00654A98:?;
begin
 00654A98    push        ebx
 00654A99    mov         dl,1
 00654A9B    mov         eax,[0043C7BC];TStringList
 00654AA0    call        TStringList.Create;TStringList.Create
 00654AA5    mov         ebx,eax
 00654AA7    mov         dl,1
 00654AA9    mov         eax,ebx
 00654AAB    call        TStringList.SetSorted
 00654AB0    mov         edx,654BBC;'Joy'
 00654AB5    mov         eax,ebx
 00654AB7    mov         ecx,dword ptr [eax]
 00654AB9    call        dword ptr [ecx+38];TStringList.Add
 00654ABC    mov         edx,654BD0;'JoyX'
 00654AC1    mov         eax,ebx
 00654AC3    mov         ecx,dword ptr [eax]
 00654AC5    call        dword ptr [ecx+38];TStringList.Add
 00654AC8    mov         edx,654BE8;'JoyY'
 00654ACD    mov         eax,ebx
 00654ACF    mov         ecx,dword ptr [eax]
 00654AD1    call        dword ptr [ecx+38];TStringList.Add
 00654AD4    mov         edx,654C00;'Weight'
 00654AD9    mov         eax,ebx
 00654ADB    mov         ecx,dword ptr [eax]
 00654ADD    call        dword ptr [ecx+38];TStringList.Add
 00654AE0    mov         edx,654C1C;'WeightLeft'
 00654AE5    mov         eax,ebx
 00654AE7    mov         ecx,dword ptr [eax]
 00654AE9    call        dword ptr [ecx+38];TStringList.Add
 00654AEC    mov         edx,654C40;'WeightRight'
 00654AF1    mov         eax,ebx
 00654AF3    mov         ecx,dword ptr [eax]
 00654AF5    call        dword ptr [ecx+38];TStringList.Add
 00654AF8    mov         edx,654C64;'WeightFront'
 00654AFD    mov         eax,ebx
 00654AFF    mov         ecx,dword ptr [eax]
 00654B01    call        dword ptr [ecx+38];TStringList.Add
 00654B04    mov         edx,654C88;'WeightBack'
 00654B09    mov         eax,ebx
 00654B0B    mov         ecx,dword ptr [eax]
 00654B0D    call        dword ptr [ecx+38];TStringList.Add
 00654B10    mov         edx,654CAC;'FrontLeft'
 00654B15    mov         eax,ebx
 00654B17    mov         ecx,dword ptr [eax]
 00654B19    call        dword ptr [ecx+38];TStringList.Add
 00654B1C    mov         edx,654CCC;'FrontRight'
 00654B21    mov         eax,ebx
 00654B23    mov         ecx,dword ptr [eax]
 00654B25    call        dword ptr [ecx+38];TStringList.Add
 00654B28    mov         edx,654CF0;'BackLeft'
 00654B2D    mov         eax,ebx
 00654B2F    mov         ecx,dword ptr [eax]
 00654B31    call        dword ptr [ecx+38];TStringList.Add
 00654B34    mov         edx,654D10;'BackRight'
 00654B39    mov         eax,ebx
 00654B3B    mov         ecx,dword ptr [eax]
 00654B3D    call        dword ptr [ecx+38];TStringList.Add
 00654B40    mov         edx,654D30;'RawFrontLeft'
 00654B45    mov         eax,ebx
 00654B47    mov         ecx,dword ptr [eax]
 00654B49    call        dword ptr [ecx+38];TStringList.Add
 00654B4C    mov         edx,654D58;'RawFrontRight'
 00654B51    mov         eax,ebx
 00654B53    mov         ecx,dword ptr [eax]
 00654B55    call        dword ptr [ecx+38];TStringList.Add
 00654B58    mov         edx,654D80;'RawBackLeft'
 00654B5D    mov         eax,ebx
 00654B5F    mov         ecx,dword ptr [eax]
 00654B61    call        dword ptr [ecx+38];TStringList.Add
 00654B64    mov         edx,654DA4;'RawBackRight'
 00654B69    mov         eax,ebx
 00654B6B    mov         ecx,dword ptr [eax]
 00654B6D    call        dword ptr [ecx+38];TStringList.Add
 00654B70    mov         edx,654DCC;'LED'
 00654B75    mov         eax,ebx
 00654B77    mov         ecx,dword ptr [eax]
 00654B79    call        dword ptr [ecx+38];TStringList.Add
 00654B7C    mov         edx,654DE0;'Button'
 00654B81    mov         eax,ebx
 00654B83    mov         ecx,dword ptr [eax]
 00654B85    call        dword ptr [ecx+38];TStringList.Add
 00654B88    mov         edx,654DFC;'EE'
 00654B8D    mov         eax,ebx
 00654B8F    mov         ecx,dword ptr [eax]
 00654B91    call        dword ptr [ecx+38];TStringList.Add
 00654B94    mov         edx,654E10;'QuestionQuestion'
 00654B99    mov         eax,ebx
 00654B9B    mov         ecx,dword ptr [eax]
 00654B9D    call        dword ptr [ecx+38];TStringList.Add
 00654BA0    mov         edx,654E40;'Exists'
 00654BA5    mov         eax,ebx
 00654BA7    mov         ecx,dword ptr [eax]
 00654BA9    call        dword ptr [ecx+38];TStringList.Add
 00654BAC    mov         eax,ebx
 00654BAE    pop         ebx
 00654BAF    ret
end;*}

//00654E50
procedure sub_00654E50;
begin
{*
 00654E50    push        0
 00654E52    push        0
 00654E54    call        0074BF10
 00654E59    xor         ecx,ecx
 00654E5B    xor         edx,edx
 00654E5D    call        TWiimoteManager.UseAllTurntables
 00654E62    push        0
 00654E64    push        0
 00654E66    call        0074BF10
 00654E6B    xor         ecx,ecx
 00654E6D    xor         edx,edx
 00654E6F    call        TWiimoteManager.UseAllDrums
 00654E74    push        0
 00654E76    push        0
 00654E78    call        0074BF10
 00654E7D    xor         ecx,ecx
 00654E7F    mov         dl,1
 00654E81    call        TWiimoteManager.UseAllGuitars
 00654E86    push        1
 00654E88    push        0
 00654E8A    push        0
 00654E8C    push        0
 00654E8E    call        0074BF10
 00654E93    xor         ecx,ecx
 00654E95    mov         dl,1
 00654E97    call        TWiimoteManager.UseAllWiimotes
 00654E9C    mov         eax,[0081ECC0];gvar_0081ECC0:TModuleWiimote
 00654EA1    mov         byte ptr [eax+24],1
 00654EA5    ret
*}
end;

//00654EA8
{*function sub_00654EA8(?:string):?;
begin
 00654EA8    push        ebp
 00654EA9    mov         ebp,esp
 00654EAB    add         esp,0FFFFFFDC
 00654EAE    push        ebx
 00654EAF    push        esi
 00654EB0    push        edi
 00654EB1    xor         edx,edx
 00654EB3    mov         dword ptr [ebp-8],edx
 00654EB6    mov         dword ptr [ebp-4],eax
 00654EB9    mov         eax,dword ptr [ebp-4]
 00654EBC    call        @UStrAddRef
 00654EC1    xor         eax,eax
 00654EC3    push        ebp
 00654EC4    push        6555EB
 00654EC9    push        dword ptr fs:[eax]
 00654ECC    mov         dword ptr fs:[eax],esp
 00654ECF    xor         esi,esi
 00654ED1    lea         eax,[ebp-8]
 00654ED4    mov         edx,dword ptr [ebp-4]
 00654ED7    call        @UStrLAsg
 00654EDC    lea         eax,[ebp-8]
 00654EDF    mov         edx,655608;'Nunchuk'
 00654EE4    call        004F9BD0
 00654EE9    test        al,al
>00654EEB    jne         00654F02
 00654EED    lea         eax,[ebp-8]
 00654EF0    mov         edx,655624;'Nunchuck'
 00654EF5    call        004F9BD0
 00654EFA    test        al,al
>00654EFC    jne         00654F02
 00654EFE    xor         eax,eax
>00654F00    jmp         00654F04
 00654F02    mov         al,1
 00654F04    mov         byte ptr [ebp-11],al
 00654F07    lea         eax,[ebp-8]
 00654F0A    mov         edx,655644;'Classic'
 00654F0F    call        004F9BD0
 00654F14    test        al,al
>00654F16    jne         00654F2D
 00654F18    lea         eax,[ebp-8]
 00654F1B    mov         edx,655660;'ClassicController'
 00654F20    call        004F9BD0
 00654F25    test        al,al
>00654F27    jne         00654F2D
 00654F29    xor         eax,eax
>00654F2B    jmp         00654F2F
 00654F2D    mov         al,1
 00654F2F    mov         byte ptr [ebp-12],al
 00654F32    lea         eax,[ebp-8]
 00654F35    mov         edx,655690;'WiiGuitar'
 00654F3A    call        004F9BD0
 00654F3F    mov         ebx,eax
 00654F41    lea         eax,[ebp-8]
 00654F44    mov         edx,6556B0;'WiiDrums'
 00654F49    call        004F9BD0
 00654F4E    test        al,al
>00654F50    jne         00654F67
 00654F52    lea         eax,[ebp-8]
 00654F55    mov         edx,6556D0;'WiiDrumKit'
 00654F5A    call        004F9BD0
 00654F5F    test        al,al
>00654F61    jne         00654F67
 00654F63    xor         eax,eax
>00654F65    jmp         00654F69
 00654F67    mov         al,1
 00654F69    mov         byte ptr [ebp-13],al
 00654F6C    lea         eax,[ebp-8]
 00654F6F    mov         edx,6556F4;'WiiTurntable'
 00654F74    call        004F9BD0
 00654F79    test        al,al
>00654F7B    jne         00654F92
 00654F7D    lea         eax,[ebp-8]
 00654F80    mov         edx,65571C;'WiiDJHero'
 00654F85    call        004F9BD0
 00654F8A    test        al,al
>00654F8C    jne         00654F92
 00654F8E    xor         eax,eax
>00654F90    jmp         00654F94
 00654F92    mov         al,1
 00654F94    mov         byte ptr [ebp-15],al
 00654F97    lea         eax,[ebp-8]
 00654F9A    mov         edx,65573C;'BalanceBoard'
 00654F9F    call        004F9BD0
 00654FA4    test        al,al
>00654FA6    jne         00654FCE
 00654FA8    lea         eax,[ebp-8]
 00654FAB    mov         edx,655764;'Balance'
 00654FB0    call        004F9BD0
 00654FB5    test        al,al
>00654FB7    jne         00654FCE
 00654FB9    lea         eax,[ebp-8]
 00654FBC    mov         edx,655780;'Fit'
 00654FC1    call        004F9BD0
 00654FC6    test        al,al
>00654FC8    jne         00654FCE
 00654FCA    xor         eax,eax
>00654FCC    jmp         00654FD0
 00654FCE    mov         al,1
 00654FD0    mov         byte ptr [ebp-14],al
 00654FD3    cmp         byte ptr [ebp-11],0
>00654FD7    jne         0065502C
 00654FD9    cmp         byte ptr [ebp-12],0
>00654FDD    jne         0065502C
 00654FDF    test        bl,bl
>00654FE1    jne         0065502C
 00654FE3    cmp         byte ptr [ebp-13],0
>00654FE7    jne         0065502C
 00654FE9    cmp         byte ptr [ebp-15],0
>00654FED    jne         0065502C
 00654FEF    cmp         byte ptr [ebp-14],0
>00654FF3    jne         0065502C
 00654FF5    lea         eax,[ebp-8]
 00654FF8    mov         edx,655794;'WiimoteX'
 00654FFD    call        004F9BD0
 00655002    test        al,al
>00655004    jne         0065502C
 00655006    lea         eax,[ebp-8]
 00655009    mov         edx,6557B4;'Wiimote'
 0065500E    call        004F9BD0
 00655013    test        al,al
>00655015    jne         0065502C
 00655017    lea         eax,[ebp-8]
 0065501A    mov         edx,6557D0;'WiiRemote'
 0065501F    call        004F9BD0
 00655024    test        al,al
>00655026    je          006555D0
 0065502C    test        bl,bl
>0065502E    je          00655039
 00655030    mov         dword ptr [ebp-10],1
>00655037    jmp         0065506B
 00655039    cmp         byte ptr [ebp-14],0
>0065503D    je          00655048
 0065503F    mov         dword ptr [ebp-10],2
>00655046    jmp         0065506B
 00655048    cmp         byte ptr [ebp-13],0
>0065504C    je          00655057
 0065504E    mov         dword ptr [ebp-10],3
>00655055    jmp         0065506B
 00655057    cmp         byte ptr [ebp-15],0
>0065505B    je          00655066
 0065505D    mov         dword ptr [ebp-10],4
>00655064    jmp         0065506B
 00655066    xor         eax,eax
 00655068    mov         dword ptr [ebp-10],eax
 0065506B    call        0074BF10
 00655070    mov         dword ptr [ebp-1C],eax
 00655073    mov         byte ptr [ebp-1D],0
 00655077    mov         byte ptr [ebp-1E],0
 0065507B    mov         byte ptr [ebp-1F],0
 0065507F    mov         byte ptr [ebp-20],0
 00655083    mov         byte ptr [ebp-21],0
 00655087    mov         byte ptr [ebp-22],0
 0065508B    lea         eax,[ebp-8]
 0065508E    call        004F9D00
 00655093    mov         edi,eax
 00655095    lea         eax,[ebp-8]
 00655098    mov         edx,6557F0;'.'
 0065509D    call        004F9BD0
 006550A2    test        al,al
>006550A4    je          006555D0
 006550AA    lea         eax,[ebp-8]
 006550AD    mov         edx,655800;'Wiimote.'
 006550B2    call        004F9BD0
 006550B7    test        al,al
>006550B9    jne         0065516B
 006550BF    lea         eax,[ebp-8]
 006550C2    mov         edx,655820;'WiiRemote.'
 006550C7    call        004F9BD0
 006550CC    test        al,al
>006550CE    jne         0065516B
 006550D4    lea         eax,[ebp-8]
 006550D7    mov         edx,655844;'WiimoteX.'
 006550DC    call        004F9BD0
 006550E1    test        al,al
>006550E3    jne         0065516B
 006550E9    cmp         byte ptr [ebp-11],0
>006550ED    je          006550FF
 006550EF    lea         eax,[ebp-8]
 006550F2    mov         ecx,dword ptr [ebp-8]
 006550F5    mov         edx,655864;'Nunchuk.'
 006550FA    call        @UStrCat3
 006550FF    cmp         byte ptr [ebp-12],0
>00655103    je          00655115
 00655105    lea         eax,[ebp-8]
 00655108    mov         ecx,dword ptr [ebp-8]
 0065510B    mov         edx,655884;'Classic.'
 00655110    call        @UStrCat3
 00655115    test        bl,bl
>00655117    je          00655129
 00655119    lea         eax,[ebp-8]
 0065511C    mov         ecx,dword ptr [ebp-8]
 0065511F    mov         edx,6558A4;'Guitar.'
 00655124    call        @UStrCat3
 00655129    cmp         byte ptr [ebp-13],0
>0065512D    je          0065513F
 0065512F    lea         eax,[ebp-8]
 00655132    mov         ecx,dword ptr [ebp-8]
 00655135    mov         edx,6558C0;'Drums.'
 0065513A    call        @UStrCat3
 0065513F    cmp         byte ptr [ebp-15],0
>00655143    je          00655155
 00655145    lea         eax,[ebp-8]
 00655148    mov         ecx,dword ptr [ebp-8]
 0065514B    mov         edx,6558DC;'Turntable.'
 00655150    call        @UStrCat3
 00655155    cmp         byte ptr [ebp-14],0
>00655159    je          0065516B
 0065515B    lea         eax,[ebp-8]
 0065515E    mov         ecx,dword ptr [ebp-8]
 00655161    mov         edx,655900;'BalanceBoard.'
 00655166    call        @UStrCat3
 0065516B    mov         eax,[0081ECC0];gvar_0081ECC0:TModuleWiimote
 00655170    mov         eax,dword ptr [eax+1C]
 00655173    mov         edx,dword ptr [ebp-8]
 00655176    call        THashTable.Get
 0065517B    mov         dword ptr [ebp-0C],eax
 0065517E    cmp         dword ptr [ebp-0C],0
>00655182    jl          006555D0
 00655188    mov         dl,1
 0065518A    mov         eax,[0064F504];TWiimoteValueX
 0065518F    call        TObject.Create;TWiimoteValueX.Create
 00655194    mov         esi,eax
 00655196    mov         eax,dword ptr [ebp-0C]
 00655199    mov         dword ptr [esi+20],eax;TWiimoteValueX.Item:Integer
 0065519C    mov         eax,dword ptr [ebp-10]
 0065519F    mov         dword ptr [esi+24],eax;TWiimoteValueX.ThingKind:Integer
 006551A2    test        edi,edi
>006551A4    jle         006551AE
 006551A6    cmp         edi,3E7
>006551AC    jl          006551B3
 006551AE    mov         edi,1
 006551B3    mov         dword ptr [esi+18],edi;TWiimoteValueX......................................................
 006551B6    mov         eax,dword ptr [ebp-0C]
 006551B9    cmp         eax,12C
>006551BE    jge         006552E0
 006551C4    cmp         eax,5D
>006551C7    jge         0065523F
 006551C9    cmp         eax,26
>006551CC    jge         006551FD
 006551CE    add         eax,0FFFFFFFD
 006551D1    sub         eax,3
>006551D4    jb          006553F6
 006551DA    sub         eax,15
>006551DD    je          0065542F
 006551E3    sub         eax,4
>006551E6    je          0065542F
 006551EC    add         eax,0FFFFFFFC
 006551EF    sub         eax,3
>006551F2    jb          00655419
>006551F8    jmp         0065550B
 006551FD    cmp         eax,4A
>00655200    jg          00655225
>00655202    je          00655482
 00655208    add         eax,0FFFFFFDA
 0065520B    sub         eax,10
>0065520E    jb          00655438
 00655214    add         eax,0FFFFFFFC
 00655217    sub         eax,10
>0065521A    jb          0065542F
>00655220    jmp         0065550B
 00655225    add         eax,0FFFFFFAB
 00655228    sub         eax,3
>0065522B    jb          006553FF
 00655231    sub         eax,5
>00655234    jb          006553F6
>0065523A    jmp         0065550B
 0065523F    cmp         eax,6F
>00655242    jge         0065529F
 00655244    add         eax,0FFFFFFA3
 00655247    cmp         eax,11
>0065524A    ja          0065550B
 00655250    jmp         dword ptr [eax*4+655257]
 00655250    dd          006553FF
 00655250    dd          006553FF
 00655250    dd          006553FF
 00655250    dd          006553FF
 00655250    dd          006553FF
 00655250    dd          0065545B
 00655250    dd          0065545B
 00655250    dd          00655468
 00655250    dd          006553FF
 00655250    dd          006553FF
 00655250    dd          006553FF
 00655250    dd          006553FF
 00655250    dd          006553FF
 00655250    dd          006553FF
 00655250    dd          006553FF
 00655250    dd          0065544A
 00655250    dd          0065544A
 00655250    dd          0065544A
 0065529F    cmp         eax,77
>006552A2    jg          006552C4
>006552A4    je          0065542F
 006552AA    add         eax,0FFFFFF91
 006552AD    sub         eax,5
>006552B0    jb          00655479
 006552B6    sub         eax,2
>006552B9    jb          006553F6
>006552BF    jmp         0065550B
 006552C4    sub         eax,79
>006552C7    je          0065542F
 006552CD    add         eax,0FFFFFFFA
 006552D0    sub         eax,8E
>006552D5    jb          006553FF
>006552DB    jmp         0065550B
 006552E0    cmp         eax,38E
>006552E5    jge         00655374
 006552EB    cmp         eax,28A
>006552F0    jge         00655329
 006552F2    add         eax,0FFFFFED4
 006552F7    sub         eax,4C
>006552FA    jb          00655495
 00655300    add         eax,0FFFFFFE8
 00655303    sub         eax,20
>00655306    jb          0065549B
 0065530C    add         eax,0FFFFFFBC
 0065530F    sub         eax,1D
>00655312    jb          006554B9
 00655318    add         eax,0FFFFFFEB
 0065531B    sub         eax,23
>0065531E    jb          006554F3
>00655324    jmp         0065550B
 00655329    cmp         eax,384
>0065532E    jge         00655351
 00655330    add         eax,0FFFFFD76
 00655335    sub         eax,16
>00655338    jb          006554CB
 0065533E    add         eax,0FFFFFFE4
 00655341    sub         eax,0B7
>00655346    jb          00655507
>0065534C    jmp         0065550B
 00655351    add         eax,0FFFFFC7C
 00655356    sub         eax,2
>00655359    jb          0065544A
>0065535F    je          00655441
 00655365    dec         eax
 00655366    sub         eax,3
>00655369    jb          0065544A
>0065536F    jmp         0065550B
 00655374    cmp         eax,3B4
>00655379    jg          006553C5
>0065537B    je          0065545B
 00655381    cmp         eax,3A9
>00655386    jge         006553A3
 00655388    add         eax,0FFFFFC72
 0065538D    sub         eax,2
>00655390    jb          0065544A
 00655396    add         eax,0FFFFFFFE
 00655399    sub         eax,16
>0065539C    jb          0065540C
>0065539E    jmp         0065550B
 006553A3    add         eax,0FFFFFC57
 006553A8    sub         eax,4
>006553AB    jb          00655422
 006553AD    dec         eax
 006553AE    sub         eax,3
>006553B1    jb          00655482
 006553B7    sub         eax,2
>006553BA    je          00655468
>006553C0    jmp         0065550B
 006553C5    sub         eax,3B7
>006553CA    je          00655495
 006553D0    sub         eax,75
>006553D3    je          00655495
 006553D9    add         eax,0FFFFFFFE
 006553DC    sub         eax,2
>006553DF    jb          0065548B
 006553E5    add         eax,0FFFFFFE4
 006553E8    sub         eax,15
>006553EB    jb          006554DF
>006553F1    jmp         0065550B
 006553F6    mov         byte ptr [ebp-1D],1
>006553FA    jmp         0065550B
 006553FF    mov         byte ptr [ebp-22],1
 00655403    mov         byte ptr [ebp-1D],1
>00655407    jmp         0065550B
 0065540C    mov         byte ptr [ebp-22],1
 00655410    mov         byte ptr [ebp-1E],1
>00655414    jmp         0065550B
 00655419    mov         byte ptr [ebp-1D],1
>0065541D    jmp         0065550B
 00655422    mov         byte ptr [ebp-1F],1
 00655426    mov         byte ptr [ebp-20],1
>0065542A    jmp         0065550B
 0065542F    mov         byte ptr [ebp-1F],1
>00655433    jmp         0065550B
 00655438    mov         byte ptr [ebp-1F],1
>0065543C    jmp         0065550B
 00655441    mov         byte ptr [ebp-1F],1
>00655445    jmp         0065550B
 0065544A    mov         byte ptr [ebp-22],1
 0065544E    mov         byte ptr [ebp-1F],1
 00655452    mov         byte ptr [ebp-1D],1
>00655456    jmp         0065550B
 0065545B    mov         byte ptr [ebp-22],1
 0065545F    mov         byte ptr [ebp-1D],1
>00655463    jmp         0065550B
 00655468    mov         byte ptr [ebp-22],1
 0065546C    mov         byte ptr [ebp-1D],1
 00655470    mov         byte ptr [ebp-1F],1
>00655474    jmp         0065550B
 00655479    mov         byte ptr [ebp-21],1
>0065547D    jmp         0065550B
 00655482    mov         byte ptr [ebp-1E],1
>00655486    jmp         0065550B
 0065548B    mov         byte ptr [ebp-1D],1
 0065548F    mov         byte ptr [ebp-1E],1
>00655493    jmp         0065550B
 00655495    mov         byte ptr [ebp-1E],1
>00655499    jmp         0065550B
 0065549B    mov         byte ptr [ebp-1E],1
 0065549F    mov         edx,edi
 006554A1    mov         eax,dword ptr [ebp-1C]
 006554A4    call        TWiimoteManager.UseClassic
 006554A9    cmp         byte ptr [ebp-12],0
>006554AD    jne         0065550B
 006554AF    mov         eax,dword ptr [ebp-1C]
 006554B2    call        TWiimoteManager.UseWiimoteDotClassic
>006554B7    jmp         0065550B
 006554B9    mov         byte ptr [ebp-1E],1
 006554BD    test        bl,bl
>006554BF    jne         0065550B
 006554C1    mov         eax,dword ptr [ebp-1C]
 006554C4    call        TWiimoteManager.UseWiimoteDotGuitar
>006554C9    jmp         0065550B
 006554CB    mov         byte ptr [ebp-1E],1
 006554CF    cmp         byte ptr [ebp-13],0
>006554D3    jne         0065550B
 006554D5    mov         eax,dword ptr [ebp-1C]
 006554D8    call        TWiimoteManager.UseWiimoteDotDrums
>006554DD    jmp         0065550B
 006554DF    mov         byte ptr [ebp-1E],1
 006554E3    cmp         byte ptr [ebp-15],0
>006554E7    jne         0065550B
 006554E9    mov         eax,dword ptr [ebp-1C]
 006554EC    call        TWiimoteManager.UseWiimoteDotTurntable
>006554F1    jmp         0065550B
 006554F3    mov         byte ptr [ebp-1E],1
 006554F7    cmp         byte ptr [ebp-14],0
>006554FB    jne         0065550B
 006554FD    mov         eax,dword ptr [ebp-1C]
 00655500    call        TWiimoteManager.UseWiimoteDotBalanceBoard
>00655505    jmp         0065550B
 00655507    mov         byte ptr [ebp-22],1
 0065550B    test        bl,bl
>0065550D    je          00655536
 0065550F    movzx       eax,byte ptr [ebp-1F]
 00655513    push        eax
 00655514    movzx       eax,byte ptr [ebp-21]
 00655518    push        eax
 00655519    movzx       eax,byte ptr [ebp-20]
 0065551D    push        eax
 0065551E    movzx       eax,byte ptr [ebp-22]
 00655522    push        eax
 00655523    movzx       ecx,byte ptr [ebp-1D]
 00655527    mov         edx,edi
 00655529    mov         eax,dword ptr [ebp-1C]
 0065552C    call        TWiimoteManager.UseGuitar
>00655531    jmp         006555D0
 00655536    cmp         byte ptr [ebp-13],0
>0065553A    je          0065555B
 0065553C    movzx       eax,byte ptr [ebp-1F]
 00655540    push        eax
 00655541    movzx       eax,byte ptr [ebp-21]
 00655545    push        eax
 00655546    movzx       eax,byte ptr [ebp-20]
 0065554A    push        eax
 0065554B    movzx       ecx,byte ptr [ebp-1D]
 0065554F    mov         edx,edi
 00655551    mov         eax,dword ptr [ebp-1C]
 00655554    call        TWiimoteManager.UseDrums
>00655559    jmp         006555D0
 0065555B    cmp         byte ptr [ebp-15],0
>0065555F    je          00655585
 00655561    movzx       eax,byte ptr [ebp-1F]
 00655565    push        eax
 00655566    movzx       eax,byte ptr [ebp-21]
 0065556A    push        eax
 0065556B    movzx       eax,byte ptr [ebp-20]
 0065556F    push        eax
 00655570    movzx       eax,byte ptr [ebp-22]
 00655574    push        eax
 00655575    movzx       ecx,byte ptr [ebp-1D]
 00655579    mov         edx,edi
 0065557B    mov         eax,dword ptr [ebp-1C]
 0065557E    call        TWiimoteManager.UseTurntable
>00655583    jmp         006555D0
 00655585    cmp         byte ptr [ebp-14],0
>00655589    je          00655597
 0065558B    mov         edx,edi
 0065558D    mov         eax,dword ptr [ebp-1C]
 00655590    call        TWiimoteManager.UseBalanceBoard
>00655595    jmp         006555D0
 00655597    cmp         byte ptr [ebp-12],0
>0065559B    je          006555A9
 0065559D    mov         edx,edi
 0065559F    mov         eax,dword ptr [ebp-1C]
 006555A2    call        TWiimoteManager.UseClassic
>006555A7    jmp         006555D0
 006555A9    movzx       eax,byte ptr [ebp-1F]
 006555AD    push        eax
 006555AE    movzx       eax,byte ptr [ebp-1E]
 006555B2    push        eax
 006555B3    movzx       eax,byte ptr [ebp-21]
 006555B7    push        eax
 006555B8    movzx       eax,byte ptr [ebp-20]
 006555BC    push        eax
 006555BD    movzx       eax,byte ptr [ebp-22]
 006555C1    push        eax
 006555C2    movzx       ecx,byte ptr [ebp-1D]
 006555C6    mov         edx,edi
 006555C8    mov         eax,dword ptr [ebp-1C]
 006555CB    call        TWiimoteManager.UseWiimote
 006555D0    xor         eax,eax
 006555D2    pop         edx
 006555D3    pop         ecx
 006555D4    pop         ecx
 006555D5    mov         dword ptr fs:[eax],edx
 006555D8    push        6555F2
 006555DD    lea         eax,[ebp-8]
 006555E0    mov         edx,2
 006555E5    call        @UStrArrayClr
 006555EA    ret
>006555EB    jmp         @HandleFinally
>006555F0    jmp         006555DD
 006555F2    mov         eax,esi
 006555F4    pop         edi
 006555F5    pop         esi
 006555F6    pop         ebx
 006555F7    mov         esp,ebp
 006555F9    pop         ebp
 006555FA    ret
end;*}

//0065591C
function TWiimoteValueX.CanSet:Boolean;
begin
{*
 0065591C    mov         eax,dword ptr [eax+20];TWiimoteValueX.Item:Integer
 0065591F    cmp         eax,69
>00655922    jge         00655941
 00655924    dec         eax
 00655925    sub         eax,2
>00655928    jb          0065596A
 0065592A    add         eax,0FFFFFFF0
 0065592D    sub         eax,4
>00655930    jb          0065596A
 00655932    sub         eax,3
>00655935    je          0065596A
 00655937    add         eax,0FFFFFFCE
 0065593A    sub         eax,9
>0065593D    jb          00655970
>0065593F    jmp         00655976
 00655941    cmp         eax,177
>00655946    jg          0065595C
>00655948    je          0065596A
 0065594A    add         eax,0FFFFFF97
 0065594D    sub         eax,6
>00655950    jb          00655973
 00655952    add         eax,0FFFFFFF8
 00655955    sub         eax,3
>00655958    jb          00655973
>0065595A    jmp         00655976
 0065595C    sub         eax,3A8
>00655961    je          0065596A
 00655963    sub         eax,0B
>00655966    je          0065596D
>00655968    jmp         00655976
 0065596A    mov         al,1
 0065596C    ret
 0065596D    mov         al,1
 0065596F    ret
 00655970    mov         al,1
 00655972    ret
 00655973    mov         al,1
 00655975    ret
 00655976    xor         eax,eax
 00655978    ret
*}
end;

//0065597C
procedure TWiimoteValueX.CreateClone;
begin
{*
 0065597C    mov         dl,1
 0065597E    mov         eax,[0064F504];TWiimoteValueX
 00655983    call        TObject.Create;TWiimoteValueX.Create
 00655988    ret
*}
end;

//0065598C
procedure TWiimoteValueX.FillClone(c:TExpression);
begin
{*
 0065598C    push        ebx
 0065598D    push        esi
 0065598E    mov         esi,edx
 00655990    mov         ebx,eax
 00655992    mov         edx,esi
 00655994    mov         eax,ebx
 00655996    call        TExpression.FillClone
 0065599B    mov         eax,esi
 0065599D    mov         edx,dword ptr [ebx+20];TWiimoteValueX.Item:Integer
 006559A0    mov         dword ptr [eax+20],edx
 006559A3    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 006559A6    mov         dword ptr [eax+18],edx
 006559A9    pop         esi
 006559AA    pop         ebx
 006559AB    ret
*}
end;

//006559AC
function TWiimoteValueX.GetDataType:TDataType;
begin
{*
 006559AC    mov         eax,dword ptr [eax+20];TWiimoteValueX.Item:Integer
 006559AF    cmp         eax,15A
>006559B4    jg          00655C63
>006559BA    je          00655F61
 006559C0    cmp         eax,4C
>006559C3    jge         00655B09
 006559C9    cmp         eax,4B
>006559CC    ja          00655F6D
 006559D2    jmp         dword ptr [eax*4+6559D9]
 006559D2    dd          00655EF5
 006559D2    dd          00655F01
 006559D2    dd          00655F6D
 006559D2    dd          00655F07
 006559D2    dd          00655F07
 006559D2    dd          00655F07
 006559D2    dd          00655F04
 006559D2    dd          00655F04
 006559D2    dd          00655F04
 006559D2    dd          00655F04
 006559D2    dd          00655F04
 006559D2    dd          00655F04
 006559D2    dd          00655F04
 006559D2    dd          00655F04
 006559D2    dd          00655F04
 006559D2    dd          00655F04
 006559D2    dd          00655F04
 006559D2    dd          00655EF5
 006559D2    dd          00655EF5
 006559D2    dd          00655EFE
 006559D2    dd          00655EFE
 006559D2    dd          00655EFE
 006559D2    dd          00655EFE
 006559D2    dd          00655EF5
 006559D2    dd          00655F10
 006559D2    dd          00655F0D
 006559D2    dd          00655F6D
 006559D2    dd          00655F19
 006559D2    dd          00655F19
 006559D2    dd          00655F19
 006559D2    dd          00655F19
 006559D2    dd          00655F19
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F13
 006559D2    dd          00655F16
 006559D2    dd          00655F19
 006559D2    dd          00655EF2
 006559D2    dd          00655EF2
 006559D2    dd          00655F1C
 006559D2    dd          00655F1C
 006559D2    dd          00655F1C
 006559D2    dd          00655F1F
 006559D2    dd          00655F1C
 006559D2    dd          00655F1C
 006559D2    dd          00655F1C
 006559D2    dd          00655F1F
 006559D2    dd          00655F1C
 006559D2    dd          00655F1C
 006559D2    dd          00655F1C
 006559D2    dd          00655F1F
 006559D2    dd          00655F1C
 006559D2    dd          00655F1C
 006559D2    dd          00655F1C
 006559D2    dd          00655F1F
 006559D2    dd          00655EF8
 006559D2    dd          00655F01
 00655B09    cmp         eax,80
>00655B0E    jge         00655BAD
 00655B14    cmp         eax,71
>00655B17    jg          00655B6A
>00655B19    je          00655F5B
 00655B1F    cmp         eax,64
>00655B22    jg          00655B50
>00655B24    je          00655F28
 00655B2A    add         eax,0FFFFFFB4
 00655B2D    sub         eax,9
>00655B30    jb          00655F0A
 00655B36    sub         eax,3
>00655B39    jb          00655F22
 00655B3F    add         eax,0FFFFFFFD
 00655B42    sub         eax,4
>00655B45    jb          00655F25
>00655B4B    jmp         00655F6D
 00655B50    sub         eax,68
>00655B53    je          00655F25
 00655B59    add         eax,0FFFFFFF9
 00655B5C    sub         eax,2
>00655B5F    jb          00655F5E
>00655B65    jmp         00655F6D
 00655B6A    add         eax,0FFFFFF8E
 00655B6D    cmp         eax,0B
>00655B70    ja          00655F6D
 00655B76    jmp         dword ptr [eax*4+655B7D]
 00655B76    dd          00655F58
 00655B76    dd          00655F58
 00655B76    dd          00655F6D
 00655B76    dd          00655F6D
 00655B76    dd          00655F6D
 00655B76    dd          00655EE9
 00655B76    dd          00655EEC
 00655B76    dd          00655EEC
 00655B76    dd          00655F67
 00655B76    dd          00655F67
 00655B76    dd          00655F67
 00655B76    dd          00655EF2
 00655BAD    cmp         eax,147
>00655BB2    jge         00655C06
 00655BB4    cmp         eax,130
>00655BB9    jge         00655BE3
 00655BBB    add         eax,0FFFFFF80
 00655BBE    sub         eax,8D
>00655BC3    jb          00655F2E
 00655BC9    add         eax,0FFFFFFE1
 00655BCC    sub         eax,2
>00655BCF    jb          00655F2B
 00655BD5    sub         eax,2
>00655BD8    jb          00655F2E
>00655BDE    jmp         00655F6D
 00655BE3    add         eax,0FFFFFED0
 00655BE8    sub         eax,13
>00655BEB    jb          00655F31
 00655BF1    sub         eax,2
>00655BF4    jb          00655F34
 00655BFA    dec         eax
>00655BFB    je          00655F25
>00655C01    jmp         00655F6D
 00655C06    add         eax,0FFFFFEB9
 00655C0B    cmp         eax,11
>00655C0E    ja          00655F6D
 00655C14    jmp         dword ptr [eax*4+655C1B]
 00655C14    dd          00655F3A
 00655C14    dd          00655F3A
 00655C14    dd          00655F3A
 00655C14    dd          00655F3A
 00655C14    dd          00655F3A
 00655C14    dd          00655F3A
 00655C14    dd          00655F37
 00655C14    dd          00655F37
 00655C14    dd          00655F34
 00655C14    dd          00655F34
 00655C14    dd          00655F6D
 00655C14    dd          00655F25
 00655C14    dd          00655F6D
 00655C14    dd          00655F6D
 00655C14    dd          00655F6D
 00655C14    dd          00655F25
 00655C14    dd          00655F37
 00655C14    dd          00655F37
 00655C63    cmp         eax,230
>00655C68    jge         00655DB4
 00655C6E    cmp         eax,1A0
>00655C73    jge         00655D15
 00655C79    cmp         eax,171
>00655C7E    jg          00655CD3
>00655C80    je          00655EF5
 00655C86    add         eax,0FFFFFEA4
 00655C8B    cmp         eax,0D
>00655C8E    ja          00655F6D
 00655C94    jmp         dword ptr [eax*4+655C9B]
 00655C94    dd          00655F2E
 00655C94    dd          00655F2E
 00655C94    dd          00655F2E
 00655C94    dd          00655F2E
 00655C94    dd          00655F2E
 00655C94    dd          00655F2E
 00655C94    dd          00655F5E
 00655C94    dd          00655F5E
 00655C94    dd          00655F5E
 00655C94    dd          00655F5E
 00655C94    dd          00655F61
 00655C94    dd          00655F28
 00655C94    dd          00655F10
 00655C94    dd          00655F3D
 00655CD3    cmp         eax,176
>00655CD8    jg          00655CF9
>00655CDA    je          00655F2E
 00655CE0    add         eax,0FFFFFE8E
 00655CE5    sub         eax,2
>00655CE8    jb          00655F2E
>00655CEE    je          00655EF2
>00655CF4    jmp         00655F6D
 00655CF9    sub         eax,177
>00655CFE    je          00655F5E
 00655D04    add         eax,0FFFFFFE7
 00655D07    sub         eax,10
>00655D0A    jb          00655F49
>00655D10    jmp         00655F6D
 00655D15    cmp         eax,207
>00655D1A    jg          00655D76
>00655D1C    je          00655F55
 00655D22    cmp         eax,1AA
>00655D27    jge         00655D4E
 00655D29    add         eax,0FFFFFE60
 00655D2E    sub         eax,4
>00655D31    jb          00655F4C
 00655D37    sub         eax,2
>00655D3A    jb          00655F52
 00655D40    sub         eax,4
>00655D43    jb          00655F4F
>00655D49    jmp         00655F6D
 00655D4E    add         eax,0FFFFFE56
 00655D53    sub         eax,3
>00655D56    jb          00655F55
 00655D5C    sub         eax,2
>00655D5F    je          00655F55
 00655D65    add         eax,0FFFFFFBB
 00655D68    sub         eax,10
>00655D6B    jb          00655F49
>00655D71    jmp         00655F6D
 00655D76    cmp         eax,20B
>00655D7B    jg          00655D9A
>00655D7D    je          00655EF8
 00655D83    sub         eax,208
>00655D88    je          00655EF5
 00655D8E    dec         eax
>00655D8F    je          00655EFB
>00655D95    jmp         00655F6D
 00655D9A    sub         eax,226
>00655D9F    je          00655EF5
 00655DA5    dec         eax
 00655DA6    sub         eax,4
>00655DA9    jb          00655F64
>00655DAF    jmp         00655F6D
 00655DB4    cmp         eax,392
>00655DB9    jge         00655E6C
 00655DBF    cmp         eax,2BC
>00655DC4    jge         00655E18
 00655DC6    cmp         eax,28A
>00655DCB    jge         00655DF3
 00655DCD    add         eax,0FFFFFDD0
 00655DD2    sub         eax,2
>00655DD5    jb          00655F64
 00655DDB    sub         eax,6
>00655DDE    je          00655F61
 00655DE4    dec         eax
 00655DE5    sub         eax,10
>00655DE8    jb          00655F64
>00655DEE    jmp         00655F6D
 00655DF3    add         eax,0FFFFFD76
 00655DF8    sub         eax,9
>00655DFB    jb          00655F40
 00655E01    sub         eax,2
>00655E04    je          00655F55
 00655E0A    sub         eax,9
>00655E0D    je          00655F40
>00655E13    jmp         00655F6D
 00655E18    cmp         eax,373
>00655E1D    jg          00655E50
>00655E1F    je          00655EE9
 00655E25    add         eax,0FFFFFD44
 00655E2A    sub         eax,0A0
>00655E2F    jb          00655F6A
 00655E35    dec         eax
 00655E36    sub         eax,4
>00655E39    jb          00655F6A
 00655E3F    add         eax,0FFFFFFF3
 00655E42    sub         eax,5
>00655E45    jb          00655EF5
>00655E4B    jmp         00655F6D
 00655E50    add         eax,0FFFFFC78
 00655E55    sub         eax,2
>00655E58    jb          00655F61
 00655E5E    sub         eax,4
>00655E61    jb          00655EEF
>00655E67    jmp         00655F6D
 00655E6C    cmp         eax,3B0
>00655E71    jg          00655EB3
>00655E73    je          00655EFB
 00655E79    cmp         eax,3A9
>00655E7E    jge         00655E98
 00655E80    add         eax,0FFFFFC6E
 00655E85    sub         eax,15
>00655E88    jb          00655F13
>00655E8E    je          00655EF2
 00655E90    dec         eax
>00655E91    je          00655F01
>00655E93    jmp         00655F6D
 00655E98    add         eax,0FFFFFC57
 00655E9D    sub         eax,4
>00655EA0    jb          00655F1C
>00655EA2    je          00655F61
 00655EA8    dec         eax
 00655EA9    sub         eax,2
>00655EAC    jb          00655EF8
>00655EAE    jmp         00655F6D
 00655EB3    cmp         eax,44C
>00655EB8    jge         00655ECF
 00655EBA    add         eax,0FFFFFC49
 00655EBF    sub         eax,76
>00655EC2    jb          00655F2E
 00655EC4    dec         eax
 00655EC5    sub         eax,2
>00655EC8    jb          00655F2E
>00655ECA    jmp         00655F6D
 00655ECF    add         eax,0FFFFFBB4
 00655ED4    sub         eax,0E
>00655ED7    jb          00655F43
 00655ED9    sub         eax,4
>00655EDC    je          00655F55
 00655EDE    dec         eax
 00655EDF    sub         eax,2
>00655EE2    jb          00655F46
>00655EE4    jmp         00655F6D
 00655EE9    mov         al,2
 00655EEB    ret
 00655EEC    xor         eax,eax
 00655EEE    ret
 00655EEF    mov         al,3
 00655EF1    ret
 00655EF2    mov         al,4
 00655EF4    ret
 00655EF5    mov         al,3
 00655EF7    ret
 00655EF8    mov         al,2
 00655EFA    ret
 00655EFB    mov         al,3
 00655EFD    ret
 00655EFE    mov         al,3
 00655F00    ret
 00655F01    mov         al,2
 00655F03    ret
 00655F04    mov         al,3
 00655F06    ret
 00655F07    xor         eax,eax
 00655F09    ret
 00655F0A    mov         al,2
 00655F0C    ret
 00655F0D    mov         al,3
 00655F0F    ret
 00655F10    mov         al,2
 00655F12    ret
 00655F13    mov         al,2
 00655F15    ret
 00655F16    mov         al,2
 00655F18    ret
 00655F19    mov         al,2
 00655F1B    ret
 00655F1C    mov         al,2
 00655F1E    ret
 00655F1F    mov         al,3
 00655F21    ret
 00655F22    xor         eax,eax
 00655F24    ret
 00655F25    mov         al,5
 00655F27    ret
 00655F28    mov         al,6
 00655F2A    ret
 00655F2B    xor         eax,eax
 00655F2D    ret
 00655F2E    mov         al,3
 00655F30    ret
 00655F31    xor         eax,eax
 00655F33    ret
 00655F34    xor         eax,eax
 00655F36    ret
 00655F37    xor         eax,eax
 00655F39    ret
 00655F3A    xor         eax,eax
 00655F3C    ret
 00655F3D    mov         al,3
 00655F3F    ret
 00655F40    mov         al,3
 00655F42    ret
 00655F43    mov         al,3
 00655F45    ret
 00655F46    mov         al,2
 00655F48    ret
 00655F49    mov         al,3
 00655F4B    ret
 00655F4C    mov         al,2
 00655F4E    ret
 00655F4F    xor         eax,eax
 00655F51    ret
 00655F52    xor         eax,eax
 00655F54    ret
 00655F55    mov         al,5
 00655F57    ret
 00655F58    xor         eax,eax
 00655F5A    ret
 00655F5B    mov         al,2
 00655F5D    ret
 00655F5E    mov         al,3
 00655F60    ret
 00655F61    mov         al,5
 00655F63    ret
 00655F64    mov         al,2
 00655F66    ret
 00655F67    mov         al,5
 00655F69    ret
 00655F6A    mov         al,2
 00655F6C    ret
 00655F6D    xor         eax,eax
 00655F6F    ret
*}
end;

//00655F70
function TWiimoteValueX.GetPerUnits1:TUnits;
begin
{*
 00655F70    mov         eax,dword ptr [eax+20];TWiimoteValueX.Item:Integer
 00655F73    cmp         eax,73
>00655F76    jg          00655F91
>00655F78    je          00655FB2
 00655F7A    add         eax,0FFFFFFA8
 00655F7D    sub         eax,4
>00655F80    jb          00655FAC
 00655F82    add         eax,0FFFFFFF7
 00655F85    sub         eax,4
>00655F88    jb          00655FAF
 00655F8A    sub         eax,3
>00655F8D    jb          00655FB2
>00655F8F    jmp         00655FB8
 00655F91    add         eax,0FFFFFEB1
 00655F96    sub         eax,4
>00655F99    jb          00655FAC
 00655F9B    sub         eax,4
>00655F9E    jb          00655FAF
 00655FA0    add         eax,0FFFFFDF3
 00655FA5    sub         eax,3
>00655FA8    jb          00655FB5
>00655FAA    jmp         00655FB8
 00655FAC    mov         al,11
 00655FAE    ret
 00655FAF    mov         al,11
 00655FB1    ret
 00655FB2    mov         al,11
 00655FB4    ret
 00655FB5    mov         al,11
 00655FB7    ret
 00655FB8    xor         eax,eax
 00655FBA    ret
*}
end;

//00655FBC
function TWiimoteValueX.GetPerUnits2:TUnits;
begin
{*
 00655FBC    mov         eax,dword ptr [eax+20];TWiimoteValueX.Item:Integer
 00655FBF    add         eax,0FFFFFFA8
 00655FC2    sub         eax,4
>00655FC5    jb          00655FE0
 00655FC7    add         eax,0FFFFFFF7
 00655FCA    sub         eax,4
>00655FCD    jb          00655FE3
 00655FCF    add         eax,0FFFFFF1A
 00655FD4    sub         eax,4
>00655FD7    jb          00655FE0
 00655FD9    sub         eax,4
>00655FDC    jb          00655FE3
>00655FDE    jmp         00655FE6
 00655FE0    mov         al,11
 00655FE2    ret
 00655FE3    mov         al,11
 00655FE5    ret
 00655FE6    xor         eax,eax
 00655FE8    ret
*}
end;

//00655FEC
procedure TWiimoteValueX.GetRotMat(m:TRotMat);
begin
{*
 00655FEC    push        ebx
 00655FED    push        esi
 00655FEE    push        edi
 00655FEF    add         esp,0FFFFFFF0
 00655FF2    mov         dword ptr [esp],edx
 00655FF5    mov         ebx,eax
 00655FF7    call        0074BF10
 00655FFC    mov         edx,dword ptr [ebx+24];TWiimoteValueX.ThingKind:Integer
 00655FFF    cmp         edx,4
>00656002    ja          0065605B
 00656004    jmp         dword ptr [edx*4+65600B]
 00656004    dd          0065601F
 00656004    dd          0065602B
 00656004    dd          00656037
 00656004    dd          00656043
 00656004    dd          0065604F
 0065601F    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 00656022    call        TWiimoteManager.GetWiimote
 00656027    mov         esi,eax
>00656029    jmp         0065605D
 0065602B    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 0065602E    call        TWiimoteManager.GetGuitar
 00656033    mov         esi,eax
>00656035    jmp         0065605D
 00656037    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 0065603A    call        TWiimoteManager.GetBalanceBoard
 0065603F    mov         esi,eax
>00656041    jmp         0065605D
 00656043    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 00656046    call        TWiimoteManager.GetDrums
 0065604B    mov         esi,eax
>0065604D    jmp         0065605D
 0065604F    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 00656052    call        TWiimoteManager.GetTurntable
 00656057    mov         esi,eax
>00656059    jmp         0065605D
 0065605B    xor         esi,esi
 0065605D    test        esi,esi
>0065605F    jne         0065609A
 00656061    cmp         dword ptr [ebx+20],36;TWiimoteValueX.Item:Integer
>00656065    je          0065609A
 00656067    xor         ecx,ecx
 00656069    mov         esi,dword ptr [esp]
 0065606C    xor         eax,eax
 0065606E    mov         edx,esi
 00656070    cmp         eax,ecx
 00656072    sete        bl
 00656075    movsx       ebx,bl
 00656078    mov         dword ptr [esp+0C],ebx
 0065607C    fild        dword ptr [esp+0C]
 00656080    fstp        qword ptr [edx]
 00656082    wait
 00656083    inc         eax
 00656084    add         edx,8
 00656087    cmp         eax,3
>0065608A    jne         00656070
 0065608C    inc         ecx
 0065608D    add         esi,18
 00656090    cmp         ecx,3
>00656093    jne         0065606C
>00656095    jmp         0065613A
 0065609A    mov         eax,dword ptr [ebx+20];TWiimoteValueX.Item:Integer
 0065609D    sub         eax,64
>006560A0    je          006560AE
 006560A2    sub         eax,103
>006560A7    je          006560EC
>006560A9    jmp         00656130
 006560AE    xor         ecx,ecx
 006560B0    mov         eax,dword ptr [esp]
 006560B3    mov         dword ptr [esp+4],eax
 006560B7    xor         eax,eax
 006560B9    mov         edx,dword ptr [esp+4]
 006560BD    lea         ebx,[ecx+ecx*2]
 006560C0    lea         ebx,[esi+ebx*8]
 006560C3    mov         edi,dword ptr [ebx+eax*8+370]
 006560CA    mov         dword ptr [edx],edi
 006560CC    mov         edi,dword ptr [ebx+eax*8+374]
 006560D3    mov         dword ptr [edx+4],edi
 006560D6    inc         eax
 006560D7    add         edx,8
 006560DA    cmp         eax,3
>006560DD    jne         006560BD
 006560DF    inc         ecx
 006560E0    add         dword ptr [esp+4],18
 006560E5    cmp         ecx,3
>006560E8    jne         006560B7
>006560EA    jmp         0065613A
 006560EC    xor         ecx,ecx
 006560EE    mov         eax,dword ptr [esp]
 006560F1    mov         dword ptr [esp+8],eax
 006560F5    xor         eax,eax
 006560F7    mov         edx,dword ptr [esp+8]
 006560FB    lea         ebx,[ecx+ecx*2]
 006560FE    mov         edi,dword ptr [esi+4B4]
 00656104    lea         ebx,[edi+ebx*8]
 00656107    mov         edi,dword ptr [ebx+eax*8+370]
 0065610E    mov         dword ptr [edx],edi
 00656110    mov         edi,dword ptr [ebx+eax*8+374]
 00656117    mov         dword ptr [edx+4],edi
 0065611A    inc         eax
 0065611B    add         edx,8
 0065611E    cmp         eax,3
>00656121    jne         006560FB
 00656123    inc         ecx
 00656124    add         dword ptr [esp+8],18
 00656129    cmp         ecx,3
>0065612C    jne         006560F5
>0065612E    jmp         0065613A
 00656130    mov         edx,dword ptr [esp]
 00656133    mov         eax,ebx
 00656135    call        TExpression.GetRotMat
 0065613A    add         esp,10
 0065613D    pop         edi
 0065613E    pop         esi
 0065613F    pop         ebx
 00656140    ret
*}
end;

//00656144
{*procedure TWiimoteValueX.GetString(?:?);
begin
 00656144    push        ebx
 00656145    push        esi
 00656146    mov         esi,edx
 00656148    mov         ebx,eax
 0065614A    mov         eax,dword ptr [ebx+20];TWiimoteValueX.Item:Integer
 0065614D    cmp         eax,7D
>00656150    jg          00656165
>00656152    je          00656204
 00656158    sub         eax,38
>0065615B    je          0065619E
 0065615D    dec         eax
>0065615E    je          00656178
>00656160    jmp         00656227
 00656165    sub         eax,174
>0065616A    je          006561E2
 0065616C    sub         eax,233
>00656171    je          006561C0
>00656173    jmp         00656227
 00656178    mov         eax,ebx
 0065617A    call        TWiimoteValueX.GetWiimote
 0065617F    mov         ebx,eax
 00656181    test        ebx,ebx
>00656183    jne         00656191
 00656185    mov         eax,esi
 00656187    call        @UStrClr
>0065618C    jmp         00656230
 00656191    mov         eax,esi
 00656193    mov         edx,dword ptr [ebx+14];TWiimoteObject.Serial:string
 00656196    call        @UStrAsg
 0065619B    pop         esi
 0065619C    pop         ebx
 0065619D    ret
 0065619E    mov         eax,ebx
 006561A0    call        TWiimoteValueX.GetWiimote
 006561A5    mov         ebx,eax
 006561A7    test        ebx,ebx
>006561A9    jne         006561B4
 006561AB    mov         eax,esi
 006561AD    call        @UStrClr
>006561B2    jmp         00656230
 006561B4    mov         edx,esi
 006561B6    mov         eax,ebx
 006561B8    call        TWiimoteObject.InByteString
 006561BD    pop         esi
 006561BE    pop         ebx
 006561BF    ret
 006561C0    mov         eax,ebx
 006561C2    call        TWiimoteValueX.GetWiimote
 006561C7    mov         ebx,eax
 006561C9    test        ebx,ebx
>006561CB    jne         006561D6
 006561CD    mov         eax,esi
 006561CF    call        @UStrClr
>006561D4    jmp         00656230
 006561D6    mov         edx,esi
 006561D8    mov         eax,ebx
 006561DA    call        TWiimoteObject.ExpString
 006561DF    pop         esi
 006561E0    pop         ebx
 006561E1    ret
 006561E2    mov         eax,ebx
 006561E4    call        TWiimoteValueX.GetWiimote
 006561E9    mov         ebx,eax
 006561EB    test        ebx,ebx
>006561ED    jne         006561F8
 006561EF    mov         eax,esi
 006561F1    call        @UStrClr
>006561F6    jmp         00656230
 006561F8    mov         edx,esi
 006561FA    mov         eax,ebx
 006561FC    call        TWiimoteObject.BladeFxOverflowString
 00656201    pop         esi
 00656202    pop         ebx
 00656203    ret
 00656204    mov         eax,ebx
 00656206    call        TWiimoteValueX.GetWiimote
 0065620B    mov         ebx,eax
 0065620D    test        ebx,ebx
>0065620F    jne         0065621A
 00656211    mov         eax,esi
 00656213    call        @UStrClr
>00656218    jmp         00656230
 0065621A    mov         eax,esi
 0065621C    mov         edx,dword ptr [ebx+10];TWiimoteObject.BluetoothAddress:string
 0065621F    call        @UStrAsg
 00656224    pop         esi
 00656225    pop         ebx
 00656226    ret
 00656227    mov         edx,esi
 00656229    mov         eax,ebx
 0065622B    call        TExpression.GetString
 00656230    pop         esi
 00656231    pop         ebx
 00656232    ret
end;*}

//00656234
function TWiimoteValueX.GetUnits:TUnits;
begin
{*
 00656234    mov         eax,dword ptr [eax+20];TWiimoteValueX.Item:Integer
 00656237    cmp         eax,14D
>0065623C    jge         00656277
 0065623E    cmp         eax,69
>00656241    jge         0065625B
 00656243    add         eax,0FFFFFFA8
 00656246    sub         eax,4
>00656249    jb          006562BA
 0065624B    add         eax,0FFFFFFFA
 0065624E    sub         eax,2
>00656251    jb          006562C3
 00656253    dec         eax
 00656254    sub         eax,4
>00656257    jb          006562BD
>00656259    jmp         006562CF
 0065625B    add         eax,0FFFFFF97
 0065625E    sub         eax,6
>00656261    jb          006562C0
 00656263    add         eax,0FFFFFFFB
 00656266    sub         eax,2
>00656269    jb          006562C3
>0065626B    je          006562C6
 0065626D    add         eax,0FFFFFFFE
 00656270    sub         eax,2
>00656273    jb          006562C9
>00656275    jmp         006562CF
 00656277    cmp         eax,22B
>0065627C    jge         00656294
 0065627E    add         eax,0FFFFFEB3
 00656283    sub         eax,2
>00656286    jb          006562C3
 00656288    sub         eax,8
>0065628B    jb          006562BA
 0065628D    sub         eax,2
>00656290    jb          006562C3
>00656292    jmp         006562CF
 00656294    add         eax,0FFFFFDD5
 00656299    sub         eax,5
>0065629C    jb          006562CC
 0065629E    add         eax,0FFFFFFFE
 006562A1    sub         eax,4
>006562A4    jb          006562CC
 006562A6    add         eax,0FFFFFED2
 006562AB    sub         eax,6
>006562AE    jb          006562C3
 006562B0    add         eax,0FFFFFFB7
 006562B3    sub         eax,2
>006562B6    jb          006562C3
>006562B8    jmp         006562CF
 006562BA    mov         al,5
 006562BC    ret
 006562BD    mov         al,5
 006562BF    ret
 006562C0    mov         al,5
 006562C2    ret
 006562C3    mov         al,18
 006562C5    ret
 006562C6    mov         al,11
 006562C8    ret
 006562C9    mov         al,5
 006562CB    ret
 006562CC    mov         al,28
 006562CE    ret
 006562CF    xor         eax,eax
 006562D1    ret
*}
end;

//006562D4
procedure TWiimoteValueX.GetValue;
begin
{*
 006562D4    push        ebx
 006562D5    push        esi
 006562D6    push        edi
 006562D7    add         esp,0FFFFFFEC
 006562DA    mov         ebx,eax
 006562DC    call        0074BF10
 006562E1    mov         edi,eax
 006562E3    mov         eax,dword ptr [ebx+24];TWiimoteValueX.ThingKind:Integer
 006562E6    cmp         eax,4
>006562E9    ja          0065634C
 006562EB    jmp         dword ptr [eax*4+6562F2]
 006562EB    dd          00656306
 006562EB    dd          00656314
 006562EB    dd          00656322
 006562EB    dd          00656330
 006562EB    dd          0065633E
 00656306    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 00656309    mov         eax,edi
 0065630B    call        TWiimoteManager.GetWiimote
 00656310    mov         esi,eax
>00656312    jmp         0065634E
 00656314    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 00656317    mov         eax,edi
 00656319    call        TWiimoteManager.GetGuitar
 0065631E    mov         esi,eax
>00656320    jmp         0065634E
 00656322    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 00656325    mov         eax,edi
 00656327    call        TWiimoteManager.GetBalanceBoard
 0065632C    mov         esi,eax
>0065632E    jmp         0065634E
 00656330    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 00656333    mov         eax,edi
 00656335    call        TWiimoteManager.GetDrums
 0065633A    mov         esi,eax
>0065633C    jmp         0065634E
 0065633E    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 00656341    mov         eax,edi
 00656343    call        TWiimoteManager.GetTurntable
 00656348    mov         esi,eax
>0065634A    jmp         0065634E
 0065634C    xor         esi,esi
 0065634E    test        esi,esi
>00656350    jne         00656366
 00656352    cmp         dword ptr [ebx+20],36;TWiimoteValueX.Item:Integer
>00656356    je          00656366
 00656358    xor         eax,eax
 0065635A    mov         dword ptr [esp],eax
 0065635D    mov         dword ptr [esp+4],eax
>00656361    jmp         0065B276
 00656366    mov         eax,dword ptr [ebx+20];TWiimoteValueX.Item:Integer
 00656369    mov         edx,eax
 0065636B    cmp         edx,460
>00656371    ja          0065B26D
 00656377    jmp         dword ptr [edx*4+65637E]
 00656377    dd          00657502
 00656377    dd          0065777E
 00656377    dd          00657763
 00656377    dd          00657BBD
 00656377    dd          00657BD5
 00656377    dd          00657BED
 00656377    dd          00657A94
 00656377    dd          00657AAF
 00656377    dd          00657ACA
 00656377    dd          00657AE5
 00656377    dd          00657BA2
 00656377    dd          00657B00
 00656377    dd          00657B1B
 00656377    dd          00657B36
 00656377    dd          00657B51
 00656377    dd          00657B87
 00656377    dd          00657B6C
 00656377    dd          0065A2DD
 00656377    dd          00658C80
 00656377    dd          00657799
 00656377    dd          006577B7
 00656377    dd          006577D5
 00656377    dd          006577F3
 00656377    dd          006575C2
 00656377    dd          006575DD
 00656377    dd          006575F7
 00656377    dd          0065760F
 00656377    dd          0065763F
 00656377    dd          00657657
 00656377    dd          0065766F
 00656377    dd          00657687
 00656377    dd          0065769F
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          006576B7
 00656377    dd          0065751A
 00656377    dd          00657627
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          006578D7
 00656377    dd          006578F8
 00656377    dd          00657919
 00656377    dd          00657965
 00656377    dd          006578D7
 00656377    dd          006578F8
 00656377    dd          00657919
 00656377    dd          00657965
 00656377    dd          006578D7
 00656377    dd          006578F8
 00656377    dd          00657919
 00656377    dd          00657965
 00656377    dd          006578D7
 00656377    dd          006578F8
 00656377    dd          00657919
 00656377    dd          00657965
 00656377    dd          006576EE
 00656377    dd          006575AA
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          00657C05
 00656377    dd          00657C1D
 00656377    dd          00657C35
 00656377    dd          00657C4D
 00656377    dd          00657C5D
 00656377    dd          00657C6D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          00657CC5
 00656377    dd          00657CAD
 00656377    dd          0065B26D
 00656377    dd          00657C7D
 00656377    dd          00657C8D
 00656377    dd          00657C9D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          006578A1
 00656377    dd          006578BC
 00656377    dd          00657889
 00656377    dd          00657859
 00656377    dd          00657871
 00656377    dd          00657D0D
 00656377    dd          00657CF5
 00656377    dd          00657736
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          00657D3D
 00656377    dd          00657E0A
 00656377    dd          00657E25
 00656377    dd          00657E40
 00656377    dd          00657E91
 00656377    dd          00657D9E
 00656377    dd          00657DB9
 00656377    dd          00657DD4
 00656377    dd          00657DEF
 00656377    dd          00657E5B
 00656377    dd          00657E76
 00656377    dd          00657D83
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          00657EAC
 00656377    dd          00658104
 00656377    dd          00657ECA
 00656377    dd          00658122
 00656377    dd          00657EE8
 00656377    dd          00658140
 00656377    dd          00657F06
 00656377    dd          0065815E
 00656377    dd          00657F24
 00656377    dd          00657FD8
 00656377    dd          006581F4
 00656377    dd          00657FF6
 00656377    dd          00658212
 00656377    dd          00658014
 00656377    dd          00658230
 00656377    dd          00658032
 00656377    dd          0065824E
 00656377    dd          00658050
 00656377    dd          00657F42
 00656377    dd          0065817C
 00656377    dd          00657F60
 00656377    dd          0065819A
 00656377    dd          00657F7E
 00656377    dd          006581B8
 00656377    dd          00657F9C
 00656377    dd          006581D6
 00656377    dd          00657FBA
 00656377    dd          0065806E
 00656377    dd          0065826C
 00656377    dd          0065808C
 00656377    dd          0065828A
 00656377    dd          006580AA
 00656377    dd          006582A8
 00656377    dd          006580C8
 00656377    dd          006582C6
 00656377    dd          006580E6
 00656377    dd          006582E4
 00656377    dd          00658884
 00656377    dd          00658302
 00656377    dd          006588A2
 00656377    dd          00658320
 00656377    dd          006588C0
 00656377    dd          0065833E
 00656377    dd          006588DE
 00656377    dd          0065835C
 00656377    dd          0065837A
 00656377    dd          00658398
 00656377    dd          006588FC
 00656377    dd          006583B6
 00656377    dd          0065891A
 00656377    dd          006583D4
 00656377    dd          00658938
 00656377    dd          006583F2
 00656377    dd          00658956
 00656377    dd          00658410
 00656377    dd          0065842E
 00656377    dd          00658C62
 00656377    dd          00658C44
 00656377    dd          0065844C
 00656377    dd          00658974
 00656377    dd          0065846A
 00656377    dd          00658992
 00656377    dd          00658488
 00656377    dd          006589B0
 00656377    dd          006584A6
 00656377    dd          006589CE
 00656377    dd          006584C4
 00656377    dd          006584E2
 00656377    dd          00658500
 00656377    dd          006589EC
 00656377    dd          0065851E
 00656377    dd          00658A0A
 00656377    dd          0065853C
 00656377    dd          00658A28
 00656377    dd          0065855A
 00656377    dd          00658A46
 00656377    dd          00658578
 00656377    dd          00658596
 00656377    dd          006585B4
 00656377    dd          00658A64
 00656377    dd          006585D2
 00656377    dd          00658A82
 00656377    dd          006585F0
 00656377    dd          00658AA0
 00656377    dd          0065860E
 00656377    dd          00658ABE
 00656377    dd          0065862C
 00656377    dd          0065864A
 00656377    dd          00658668
 00656377    dd          00658ADC
 00656377    dd          00658686
 00656377    dd          00658AFA
 00656377    dd          006586A4
 00656377    dd          00658B18
 00656377    dd          006586C2
 00656377    dd          00658B36
 00656377    dd          006586E0
 00656377    dd          006586FE
 00656377    dd          0065871C
 00656377    dd          00658B54
 00656377    dd          0065873A
 00656377    dd          00658B72
 00656377    dd          00658758
 00656377    dd          00658B90
 00656377    dd          00658776
 00656377    dd          00658BAE
 00656377    dd          00658794
 00656377    dd          006587B2
 00656377    dd          006587D0
 00656377    dd          00658BCC
 00656377    dd          006587EE
 00656377    dd          00658BEA
 00656377    dd          0065880C
 00656377    dd          00658C08
 00656377    dd          0065882A
 00656377    dd          00658C26
 00656377    dd          00658848
 00656377    dd          00658866
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          00658DB8
 00656377    dd          00658DCC
 00656377    dd          00658D27
 00656377    dd          00658D46
 00656377    dd          00658E5C
 00656377    dd          00658E7A
 00656377    dd          00658E98
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          00658F9C
 00656377    dd          00658FBA
 00656377    dd          00658FD8
 00656377    dd          0065B26D
 00656377    dd          00658EB6
 00656377    dd          00658ED4
 00656377    dd          00658EF2
 00656377    dd          00658F10
 00656377    dd          00658F2E
 00656377    dd          00658F4C
 00656377    dd          0065906E
 00656377    dd          0065908C
 00656377    dd          00658FF6
 00656377    dd          0065900A
 00656377    dd          0065901E
 00656377    dd          0065B26D
 00656377    dd          00659032
 00656377    dd          00659046
 00656377    dd          0065905A
 00656377    dd          0065B26D
 00656377    dd          006590AA
 00656377    dd          006590C8
 00656377    dd          00658F6A
 00656377    dd          0065B26D
 00656377    dd          00658F88
 00656377    dd          006590E6
 00656377    dd          00659105
 00656377    dd          00659126
 00656377    dd          00659147
 00656377    dd          00659168
 00656377    dd          00659189
 00656377    dd          00658DE0
 00656377    dd          00658DFF
 00656377    dd          00658E1E
 00656377    dd          00658E3D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          00658DA3
 00656377    dd          006591AA
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          006591C9
 00656377    dd          006591E8
 00656377    dd          00659207
 00656377    dd          00659226
 00656377    dd          00658CC2
 00656377    dd          00658D84
 00656377    dd          00658CDD
 00656377    dd          0065B26D
 00656377    dd          00658CF8
 00656377    dd          00658D65
 00656377    dd          00658CA1
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065A2FB
 00656377    dd          0065A339
 00656377    dd          0065A46F
 00656377    dd          0065A3B5
 00656377    dd          0065A377
 00656377    dd          0065A3D4
 00656377    dd          0065A396
 00656377    dd          0065A450
 00656377    dd          0065B26D
 00656377    dd          0065A4AD
 00656377    dd          0065A431
 00656377    dd          0065A412
 00656377    dd          0065A3F3
 00656377    dd          0065A48E
 00656377    dd          0065A31A
 00656377    dd          0065A358
 00656377    dd          0065A57C
 00656377    dd          0065A58E
 00656377    dd          0065A5A0
 00656377    dd          0065A5B2
 00656377    dd          0065A4CC
 00656377    dd          0065A4E0
 00656377    dd          0065A52C
 00656377    dd          0065A540
 00656377    dd          0065A554
 00656377    dd          0065A568
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065A4F4
 00656377    dd          0065A510
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065A5E2
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065A65E
 00656377    dd          0065A620
 00656377    dd          0065A67D
 00656377    dd          0065A63F
 00656377    dd          0065A69C
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065A751
 00656377    dd          0065B26D
 00656377    dd          0065A770
 00656377    dd          0065B26D
 00656377    dd          0065A601
 00656377    dd          0065B26D
 00656377    dd          0065A78F
 00656377    dd          0065A7A3
 00656377    dd          0065A7B7
 00656377    dd          0065B26D
 00656377    dd          0065A5C4
 00656377    dd          0065A7FB
 00656377    dd          0065A7CB
 00656377    dd          0065A7DF
 00656377    dd          0065A6BB
 00656377    dd          0065A6D9
 00656377    dd          0065A6F7
 00656377    dd          0065A715
 00656377    dd          0065A733
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065ACB5
 00656377    dd          0065ACD3
 00656377    dd          0065ACF1
 00656377    dd          0065AD0F
 00656377    dd          0065AD2D
 00656377    dd          0065AE13
 00656377    dd          0065AD4B
 00656377    dd          0065AD69
 00656377    dd          0065AD87
 00656377    dd          0065ADA5
 00656377    dd          0065AE27
 00656377    dd          0065AE45
 00656377    dd          0065ADC3
 00656377    dd          0065ADD7
 00656377    dd          0065ADEB
 00656377    dd          0065ADFF
 00656377    dd          0065AE63
 00656377    dd          0065AE77
 00656377    dd          0065B26D
 00656377    dd          0065AEC1
 00656377    dd          0065AF2D
 00656377    dd          0065AF99
 00656377    dd          0065AE8B
 00656377    dd          0065AEF7
 00656377    dd          0065AF63
 00656377    dd          0065AEDC
 00656377    dd          0065AF48
 00656377    dd          0065AFB4
 00656377    dd          0065AEA6
 00656377    dd          0065AF12
 00656377    dd          0065AF7E
 00656377    dd          0065AFCF
 00656377    dd          0065AFEA
 00656377    dd          0065B005
 00656377    dd          0065B020
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065A82A
 00656377    dd          0065A848
 00656377    dd          0065A886
 00656377    dd          0065A867
 00656377    dd          0065A8A5
 00656377    dd          0065A8C4
 00656377    dd          0065A8E3
 00656377    dd          0065A940
 00656377    dd          0065A921
 00656377    dd          0065A95F
 00656377    dd          0065A973
 00656377    dd          0065B26D
 00656377    dd          0065A902
 00656377    dd          0065A987
 00656377    dd          0065A9AF
 00656377    dd          0065A99B
 00656377    dd          0065A9C3
 00656377    dd          0065A9D7
 00656377    dd          0065A9EB
 00656377    dd          0065B26D
 00656377    dd          0065AA13
 00656377    dd          0065A9FF
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B078
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B059
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B097
 00656377    dd          0065B0AF
 00656377    dd          0065B0C7
 00656377    dd          0065B0DF
 00656377    dd          0065B0F7
 00656377    dd          0065B10F
 00656377    dd          0065B127
 00656377    dd          0065B13F
 00656377    dd          0065B157
 00656377    dd          0065B16F
 00656377    dd          0065B187
 00656377    dd          0065B19F
 00656377    dd          0065B1B7
 00656377    dd          0065B1CF
 00656377    dd          0065B1E7
 00656377    dd          0065B1FC
 00656377    dd          0065B225
 00656377    dd          0065B23D
 00656377    dd          0065B255
 00656377    dd          0065B20D
 00656377    dd          0065B03B
 00656377    dd          0065758F
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          00657992
 00656377    dd          006579AA
 00656377    dd          00657A0D
 00656377    dd          006579F2
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          00657A28
 00656377    dd          00657A43
 00656377    dd          00657A5E
 00656377    dd          00657A79
 00656377    dd          006579C2
 00656377    dd          006579DA
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          006576D0
 00656377    dd          0065B26D
 00656377    dd          00657811
 00656377    dd          00657943
 00656377    dd          00657943
 00656377    dd          00657943
 00656377    dd          00657943
 00656377    dd          0065B26D
 00656377    dd          00657706
 00656377    dd          0065771E
 00656377    dd          00657748
 00656377    dd          00657829
 00656377    dd          00657841
 00656377    dd          00657CDD
 00656377    dd          00657D25
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          00659245
 00656377    dd          00659515
 00656377    dd          00659269
 00656377    dd          00659539
 00656377    dd          0065928D
 00656377    dd          0065955D
 00656377    dd          006592B1
 00656377    dd          00659581
 00656377    dd          006592D5
 00656377    dd          006593AD
 00656377    dd          00659635
 00656377    dd          006593D1
 00656377    dd          00659659
 00656377    dd          006593F5
 00656377    dd          0065967D
 00656377    dd          00659419
 00656377    dd          006596A1
 00656377    dd          0065943D
 00656377    dd          006592F9
 00656377    dd          006595A5
 00656377    dd          0065931D
 00656377    dd          006595C9
 00656377    dd          00659341
 00656377    dd          006595ED
 00656377    dd          00659365
 00656377    dd          00659611
 00656377    dd          00659389
 00656377    dd          00659461
 00656377    dd          006596C5
 00656377    dd          00659485
 00656377    dd          006596E9
 00656377    dd          006594A9
 00656377    dd          0065970D
 00656377    dd          006594CD
 00656377    dd          00659731
 00656377    dd          006594F1
 00656377    dd          00659755
 00656377    dd          00659E15
 00656377    dd          00659779
 00656377    dd          00659E39
 00656377    dd          0065979D
 00656377    dd          00659E5D
 00656377    dd          006597C1
 00656377    dd          00659E81
 00656377    dd          006597E5
 00656377    dd          00659809
 00656377    dd          0065982D
 00656377    dd          00659EA5
 00656377    dd          00659851
 00656377    dd          00659EC9
 00656377    dd          00659875
 00656377    dd          00659EED
 00656377    dd          00659899
 00656377    dd          00659F11
 00656377    dd          006598BD
 00656377    dd          006598E1
 00656377    dd          0065A2B9
 00656377    dd          0065A295
 00656377    dd          00659905
 00656377    dd          00659F35
 00656377    dd          00659929
 00656377    dd          00659F59
 00656377    dd          0065994D
 00656377    dd          00659F7D
 00656377    dd          00659971
 00656377    dd          00659FA1
 00656377    dd          00659995
 00656377    dd          006599B9
 00656377    dd          006599DD
 00656377    dd          00659FC5
 00656377    dd          00659A01
 00656377    dd          00659FE9
 00656377    dd          00659A25
 00656377    dd          0065A00D
 00656377    dd          00659A49
 00656377    dd          0065A031
 00656377    dd          00659A6D
 00656377    dd          00659A91
 00656377    dd          00659AB5
 00656377    dd          0065A055
 00656377    dd          00659AD9
 00656377    dd          0065A079
 00656377    dd          00659AFD
 00656377    dd          0065A09D
 00656377    dd          00659B21
 00656377    dd          0065A0C1
 00656377    dd          00659B45
 00656377    dd          00659B69
 00656377    dd          00659B8D
 00656377    dd          0065A0E5
 00656377    dd          00659BB1
 00656377    dd          0065A109
 00656377    dd          00659BD5
 00656377    dd          0065A12D
 00656377    dd          00659BF9
 00656377    dd          0065A151
 00656377    dd          00659C1D
 00656377    dd          00659C41
 00656377    dd          00659C65
 00656377    dd          0065A175
 00656377    dd          00659C89
 00656377    dd          0065A199
 00656377    dd          00659CAD
 00656377    dd          0065A1BD
 00656377    dd          00659CD1
 00656377    dd          0065A1E1
 00656377    dd          00659CF5
 00656377    dd          00659D19
 00656377    dd          00659D3D
 00656377    dd          0065A205
 00656377    dd          00659D61
 00656377    dd          0065A229
 00656377    dd          00659D85
 00656377    dd          0065A24D
 00656377    dd          00659DA9
 00656377    dd          0065A271
 00656377    dd          00659DCD
 00656377    dd          00659DF1
 00656377    dd          0065B26D
 00656377    dd          00657D4D
 00656377    dd          00657D68
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065B26D
 00656377    dd          0065AA31
 00656377    dd          0065AA4F
 00656377    dd          0065AA6E
 00656377    dd          0065AA8D
 00656377    dd          0065AAAC
 00656377    dd          0065AACB
 00656377    dd          0065AB03
 00656377    dd          0065AB3B
 00656377    dd          0065AB73
 00656377    dd          0065AB92
 00656377    dd          0065ABB1
 00656377    dd          0065ABD0
 00656377    dd          0065ABEF
 00656377    dd          0065AC0E
 00656377    dd          0065AC2D
 00656377    dd          0065AC41
 00656377    dd          0065AC55
 00656377    dd          0065AC69
 00656377    dd          0065B26D
 00656377    dd          0065AC7D
 00656377    dd          0065AC99
 00657502    movzx       eax,byte ptr [esi+18]
 00657506    movsx       eax,al
 00657509    mov         dword ptr [esp+8],eax
 0065750D    fild        dword ptr [esp+8]
 00657511    fstp        qword ptr [esp]
 00657514    wait
>00657515    jmp         0065B276
 0065751A    mov         eax,dword ptr [ebx+24];TWiimoteValueX.ThingKind:Integer
 0065751D    test        eax,eax
>0065751F    jne         00657530
 00657521    mov         eax,dword ptr [edi+4C]
 00657524    fild        dword ptr [eax+8]
 00657527    fstp        qword ptr [esp]
 0065752A    wait
>0065752B    jmp         0065B276
 00657530    cmp         eax,1
>00657533    jne         00657544
 00657535    mov         eax,dword ptr [edi+54]
 00657538    fild        dword ptr [eax+8]
 0065753B    fstp        qword ptr [esp]
 0065753E    wait
>0065753F    jmp         0065B276
 00657544    cmp         eax,2
>00657547    jne         00657558
 00657549    mov         eax,dword ptr [edi+50]
 0065754C    fild        dword ptr [eax+8]
 0065754F    fstp        qword ptr [esp]
 00657552    wait
>00657553    jmp         0065B276
 00657558    cmp         eax,3
>0065755B    jne         0065756C
 0065755D    mov         eax,dword ptr [edi+58]
 00657560    fild        dword ptr [eax+8]
 00657563    fstp        qword ptr [esp]
 00657566    wait
>00657567    jmp         0065B276
 0065756C    cmp         eax,4
>0065756F    jne         00657580
 00657571    mov         eax,dword ptr [edi+5C]
 00657574    fild        dword ptr [eax+8]
 00657577    fstp        qword ptr [esp]
 0065757A    wait
>0065757B    jmp         0065B276
 00657580    mov         eax,dword ptr [edi+4C]
 00657583    fild        dword ptr [eax+8]
 00657586    fstp        qword ptr [esp]
 00657589    wait
>0065758A    jmp         0065B276
 0065758F    movzx       eax,byte ptr [esi+90]
 00657596    movsx       eax,al
 00657599    mov         dword ptr [esp+8],eax
 0065759D    fild        dword ptr [esp+8]
 006575A1    fstp        qword ptr [esp]
 006575A4    wait
>006575A5    jmp         0065B276
 006575AA    movzx       eax,byte ptr [esi+4A1]
 006575B1    mov         dword ptr [esp+8],eax
 006575B5    fild        dword ptr [esp+8]
 006575B9    fstp        qword ptr [esp]
 006575BC    wait
>006575BD    jmp         0065B276
 006575C2    mov         eax,dword ptr [esi+20]
 006575C5    movzx       eax,byte ptr [eax+8]
 006575C9    movsx       eax,al
 006575CC    mov         dword ptr [esp+8],eax
 006575D0    fild        dword ptr [esp+8]
 006575D4    fstp        qword ptr [esp]
 006575D7    wait
>006575D8    jmp         0065B276
 006575DD    mov         eax,dword ptr [esi+5C]
 006575E0    mov         dword ptr [esp+0C],eax
 006575E4    xor         eax,eax
 006575E6    mov         dword ptr [esp+10],eax
 006575EA    fild        qword ptr [esp+0C]
 006575EE    fstp        qword ptr [esp]
 006575F1    wait
>006575F2    jmp         0065B276
 006575F7    movzx       eax,byte ptr [esi+57]
 006575FB    movsx       eax,al
 006575FE    mov         dword ptr [esp+8],eax
 00657602    fild        dword ptr [esp+8]
 00657606    fstp        qword ptr [esp]
 00657609    wait
>0065760A    jmp         0065B276
 0065760F    movzx       eax,byte ptr [esi+454]
 00657616    mov         dword ptr [esp+8],eax
 0065761A    fild        dword ptr [esp+8]
 0065761E    fstp        qword ptr [esp]
 00657621    wait
>00657622    jmp         0065B276
 00657627    movzx       eax,byte ptr [esi+453]
 0065762E    mov         dword ptr [esp+8],eax
 00657632    fild        dword ptr [esp+8]
 00657636    fstp        qword ptr [esp]
 00657639    wait
>0065763A    jmp         0065B276
 0065763F    movzx       eax,byte ptr [esi+455]
 00657646    mov         dword ptr [esp+8],eax
 0065764A    fild        dword ptr [esp+8]
 0065764E    fstp        qword ptr [esp]
 00657651    wait
>00657652    jmp         0065B276
 00657657    movzx       eax,byte ptr [esi+456]
 0065765E    mov         dword ptr [esp+8],eax
 00657662    fild        dword ptr [esp+8]
 00657666    fstp        qword ptr [esp]
 00657669    wait
>0065766A    jmp         0065B276
 0065766F    movzx       eax,byte ptr [esi+457]
 00657676    mov         dword ptr [esp+8],eax
 0065767A    fild        dword ptr [esp+8]
 0065767E    fstp        qword ptr [esp]
 00657681    wait
>00657682    jmp         0065B276
 00657687    movzx       eax,byte ptr [esi+458]
 0065768E    mov         dword ptr [esp+8],eax
 00657692    fild        dword ptr [esp+8]
 00657696    fstp        qword ptr [esp]
 00657699    wait
>0065769A    jmp         0065B276
 0065769F    movzx       eax,byte ptr [esi+459]
 006576A6    mov         dword ptr [esp+8],eax
 006576AA    fild        dword ptr [esp+8]
 006576AE    fstp        qword ptr [esp]
 006576B1    wait
>006576B2    jmp         0065B276
 006576B7    movzx       eax,byte ptr [esi+eax+43C]
 006576BF    mov         dword ptr [esp+8],eax
 006576C3    fild        dword ptr [esp+8]
 006576C7    fstp        qword ptr [esp]
 006576CA    wait
>006576CB    jmp         0065B276
 006576D0    sub         eax,392
 006576D5    movzx       eax,byte ptr [esi+eax+472]
 006576DD    mov         dword ptr [esp+8],eax
 006576E1    fild        dword ptr [esp+8]
 006576E5    fstp        qword ptr [esp]
 006576E8    wait
>006576E9    jmp         0065B276
 006576EE    movzx       eax,byte ptr [esi+4A2]
 006576F5    mov         dword ptr [esp+8],eax
 006576F9    fild        dword ptr [esp+8]
 006576FD    fstp        qword ptr [esp]
 00657700    wait
>00657701    jmp         0065B276
 00657706    movzx       eax,byte ptr [esi+4A3]
 0065770D    mov         dword ptr [esp+8],eax
 00657711    fild        dword ptr [esp+8]
 00657715    fstp        qword ptr [esp]
 00657718    wait
>00657719    jmp         0065B276
 0065771E    movzx       eax,byte ptr [esi+4A4]
 00657725    mov         dword ptr [esp+8],eax
 00657729    fild        dword ptr [esp+8]
 0065772D    fstp        qword ptr [esp]
 00657730    wait
>00657731    jmp         0065B276
 00657736    mov         eax,dword ptr [esi+8]
 00657739    mov         dword ptr [esp],eax
 0065773C    mov         eax,dword ptr [esi+0C]
 0065773F    mov         dword ptr [esp+4],eax
>00657743    jmp         0065B276
 00657748    movzx       eax,byte ptr [esi+4AA]
 0065774F    movsx       eax,al
 00657752    mov         dword ptr [esp+8],eax
 00657756    fild        dword ptr [esp+8]
 0065775A    fstp        qword ptr [esp]
 0065775D    wait
>0065775E    jmp         0065B276
 00657763    movzx       eax,byte ptr [esi+48C]
 0065776A    movsx       eax,al
 0065776D    mov         dword ptr [esp+8],eax
 00657771    fild        dword ptr [esp+8]
 00657775    fstp        qword ptr [esp]
 00657778    wait
>00657779    jmp         0065B276
 0065777E    movzx       eax,byte ptr [esi+48D]
 00657785    movzx       eax,al
 00657788    mov         dword ptr [esp+8],eax
 0065778C    fild        dword ptr [esp+8]
 00657790    fstp        qword ptr [esp]
 00657793    wait
>00657794    jmp         0065B276
 00657799    test        byte ptr [esi+48D],1
 006577A0    setne       al
 006577A3    movsx       eax,al
 006577A6    mov         dword ptr [esp+8],eax
 006577AA    fild        dword ptr [esp+8]
 006577AE    fstp        qword ptr [esp]
 006577B1    wait
>006577B2    jmp         0065B276
 006577B7    test        byte ptr [esi+48D],2
 006577BE    setne       al
 006577C1    movsx       eax,al
 006577C4    mov         dword ptr [esp+8],eax
 006577C8    fild        dword ptr [esp+8]
 006577CC    fstp        qword ptr [esp]
 006577CF    wait
>006577D0    jmp         0065B276
 006577D5    test        byte ptr [esi+48D],4
 006577DC    setne       al
 006577DF    movsx       eax,al
 006577E2    mov         dword ptr [esp+8],eax
 006577E6    fild        dword ptr [esp+8]
 006577EA    fstp        qword ptr [esp]
 006577ED    wait
>006577EE    jmp         0065B276
 006577F3    test        byte ptr [esi+48D],8
 006577FA    setne       al
 006577FD    movsx       eax,al
 00657800    mov         dword ptr [esp+8],eax
 00657804    fild        dword ptr [esp+8]
 00657808    fstp        qword ptr [esp]
 0065780B    wait
>0065780C    jmp         0065B276
 00657811    movsx       eax,byte ptr [esi+48E]
 00657818    mov         dword ptr [esp+8],eax
 0065781C    fild        dword ptr [esp+8]
 00657820    fstp        qword ptr [esp]
 00657823    wait
>00657824    jmp         0065B276
 00657829    mov         eax,dword ptr [esi+490]
 0065782F    mov         dword ptr [esp],eax
 00657832    mov         eax,dword ptr [esi+494]
 00657838    mov         dword ptr [esp+4],eax
>0065783C    jmp         0065B276
 00657841    mov         eax,dword ptr [esi+498]
 00657847    mov         dword ptr [esp],eax
 0065784A    mov         eax,dword ptr [esi+49C]
 00657850    mov         dword ptr [esp+4],eax
>00657854    jmp         0065B276
 00657859    mov         eax,dword ptr [esi+5A8]
 0065785F    mov         dword ptr [esp],eax
 00657862    mov         eax,dword ptr [esi+5AC]
 00657868    mov         dword ptr [esp+4],eax
>0065786C    jmp         0065B276
 00657871    mov         eax,dword ptr [esi+5B0]
 00657877    mov         dword ptr [esp],eax
 0065787A    mov         eax,dword ptr [esi+5B4]
 00657880    mov         dword ptr [esp+4],eax
>00657884    jmp         0065B276
 00657889    mov         eax,dword ptr [esi+5B8]
 0065788F    mov         dword ptr [esp],eax
 00657892    mov         eax,dword ptr [esi+5BC]
 00657898    mov         dword ptr [esp+4],eax
>0065789C    jmp         0065B276
 006578A1    movzx       eax,byte ptr [esi+45A]
 006578A8    movsx       eax,al
 006578AB    mov         dword ptr [esp+8],eax
 006578AF    fild        dword ptr [esp+8]
 006578B3    fstp        qword ptr [esp]
 006578B6    wait
>006578B7    jmp         0065B276
 006578BC    movzx       eax,byte ptr [esi+45B]
 006578C3    movsx       eax,al
 006578C6    mov         dword ptr [esp+8],eax
 006578CA    fild        dword ptr [esp+8]
 006578CE    fstp        qword ptr [esp]
 006578D1    wait
>006578D2    jmp         0065B276
 006578D7    sub         eax,3A
 006578DA    test        eax,eax
>006578DC    jns         006578E1
 006578DE    add         eax,3
 006578E1    sar         eax,2
 006578E4    inc         eax
 006578E5    lea         eax,[eax+eax*2]
 006578E8    fild        dword ptr [esi+eax*4+5C9]
 006578EF    fstp        qword ptr [esp]
 006578F2    wait
>006578F3    jmp         0065B276
 006578F8    sub         eax,3B
 006578FB    test        eax,eax
>006578FD    jns         00657902
 006578FF    add         eax,3
 00657902    sar         eax,2
 00657905    inc         eax
 00657906    lea         eax,[eax+eax*2]
 00657909    fild        dword ptr [esi+eax*4+5CD]
 00657910    fstp        qword ptr [esp]
 00657913    wait
>00657914    jmp         0065B276
 00657919    sub         eax,3C
 0065791C    test        eax,eax
>0065791E    jns         00657923
 00657920    add         eax,3
 00657923    sar         eax,2
 00657926    inc         eax
 00657927    lea         eax,[eax+eax*2]
 0065792A    movzx       eax,byte ptr [esi+eax*4+5D1]
 00657932    mov         dword ptr [esp+8],eax
 00657936    fild        dword ptr [esp+8]
 0065793A    fstp        qword ptr [esp]
 0065793D    wait
>0065793E    jmp         0065B276
 00657943    sub         eax,3A9
 00657948    inc         eax
 00657949    lea         eax,[eax+eax*2]
 0065794C    movzx       eax,byte ptr [esi+eax*4+5D3]
 00657954    mov         dword ptr [esp+8],eax
 00657958    fild        dword ptr [esp+8]
 0065795C    fstp        qword ptr [esp]
 0065795F    wait
>00657960    jmp         0065B276
 00657965    sub         eax,3D
 00657968    test        eax,eax
>0065796A    jns         0065796F
 0065796C    add         eax,3
 0065796F    sar         eax,2
 00657972    inc         eax
 00657973    lea         eax,[eax+eax*2]
 00657976    movzx       eax,byte ptr [esi+eax*4+5D2]
 0065797E    movsx       eax,al
 00657981    mov         dword ptr [esp+8],eax
 00657985    fild        dword ptr [esp+8]
 00657989    fstp        qword ptr [esp]
 0065798C    wait
>0065798D    jmp         0065B276
 00657992    mov         eax,dword ptr [esi+6E0]
 00657998    mov         dword ptr [esp],eax
 0065799B    mov         eax,dword ptr [esi+6E4]
 006579A1    mov         dword ptr [esp+4],eax
>006579A5    jmp         0065B276
 006579AA    mov         eax,dword ptr [esi+6E8]
 006579B0    mov         dword ptr [esp],eax
 006579B3    mov         eax,dword ptr [esi+6EC]
 006579B9    mov         dword ptr [esp+4],eax
>006579BD    jmp         0065B276
 006579C2    mov         eax,dword ptr [esi+6E0]
 006579C8    mov         dword ptr [esp],eax
 006579CB    mov         eax,dword ptr [esi+6E4]
 006579D1    mov         dword ptr [esp+4],eax
>006579D5    jmp         0065B276
 006579DA    mov         eax,dword ptr [esi+6E8]
 006579E0    mov         dword ptr [esp],eax
 006579E3    mov         eax,dword ptr [esi+6EC]
 006579E9    mov         dword ptr [esp+4],eax
>006579ED    jmp         0065B276
 006579F2    movzx       eax,byte ptr [esi+6FC]
 006579F9    movsx       eax,al
 006579FC    mov         dword ptr [esp+8],eax
 00657A00    fild        dword ptr [esp+8]
 00657A04    fstp        qword ptr [esp]
 00657A07    wait
>00657A08    jmp         0065B276
 00657A0D    movzx       eax,byte ptr [esi+6FB]
 00657A14    movsx       eax,al
 00657A17    mov         dword ptr [esp+8],eax
 00657A1B    fild        dword ptr [esp+8]
 00657A1F    fstp        qword ptr [esp]
 00657A22    wait
>00657A23    jmp         0065B276
 00657A28    movzx       eax,byte ptr [esi+6FD]
 00657A2F    movsx       eax,al
 00657A32    mov         dword ptr [esp+8],eax
 00657A36    fild        dword ptr [esp+8]
 00657A3A    fstp        qword ptr [esp]
 00657A3D    wait
>00657A3E    jmp         0065B276
 00657A43    movzx       eax,byte ptr [esi+6FE]
 00657A4A    movsx       eax,al
 00657A4D    mov         dword ptr [esp+8],eax
 00657A51    fild        dword ptr [esp+8]
 00657A55    fstp        qword ptr [esp]
 00657A58    wait
>00657A59    jmp         0065B276
 00657A5E    movzx       eax,byte ptr [esi+6FF]
 00657A65    movsx       eax,al
 00657A68    mov         dword ptr [esp+8],eax
 00657A6C    fild        dword ptr [esp+8]
 00657A70    fstp        qword ptr [esp]
 00657A73    wait
>00657A74    jmp         0065B276
 00657A79    movzx       eax,byte ptr [esi+700]
 00657A80    movsx       eax,al
 00657A83    mov         dword ptr [esp+8],eax
 00657A87    fild        dword ptr [esp+8]
 00657A8B    fstp        qword ptr [esp]
 00657A8E    wait
>00657A8F    jmp         0065B276
 00657A94    mov         eax,esi
 00657A96    call        TWiimoteObject.Up
 00657A9B    movsx       eax,al
 00657A9E    mov         dword ptr [esp+8],eax
 00657AA2    fild        dword ptr [esp+8]
 00657AA6    fstp        qword ptr [esp]
 00657AA9    wait
>00657AAA    jmp         0065B276
 00657AAF    mov         eax,esi
 00657AB1    call        TWiimoteObject.Down
 00657AB6    movsx       eax,al
 00657AB9    mov         dword ptr [esp+8],eax
 00657ABD    fild        dword ptr [esp+8]
 00657AC1    fstp        qword ptr [esp]
 00657AC4    wait
>00657AC5    jmp         0065B276
 00657ACA    mov         eax,esi
 00657ACC    call        TWiimoteObject.Left
 00657AD1    movsx       eax,al
 00657AD4    mov         dword ptr [esp+8],eax
 00657AD8    fild        dword ptr [esp+8]
 00657ADC    fstp        qword ptr [esp]
 00657ADF    wait
>00657AE0    jmp         0065B276
 00657AE5    mov         eax,esi
 00657AE7    call        TWiimoteObject.Right
 00657AEC    movsx       eax,al
 00657AEF    mov         dword ptr [esp+8],eax
 00657AF3    fild        dword ptr [esp+8]
 00657AF7    fstp        qword ptr [esp]
 00657AFA    wait
>00657AFB    jmp         0065B276
 00657B00    mov         eax,esi
 00657B02    call        TWiimoteObject.A
 00657B07    movsx       eax,al
 00657B0A    mov         dword ptr [esp+8],eax
 00657B0E    fild        dword ptr [esp+8]
 00657B12    fstp        qword ptr [esp]
 00657B15    wait
>00657B16    jmp         0065B276
 00657B1B    mov         eax,esi
 00657B1D    call        TWiimoteObject.B
 00657B22    movsx       eax,al
 00657B25    mov         dword ptr [esp+8],eax
 00657B29    fild        dword ptr [esp+8]
 00657B2D    fstp        qword ptr [esp]
 00657B30    wait
>00657B31    jmp         0065B276
 00657B36    mov         eax,esi
 00657B38    call        TWiimoteObject.One
 00657B3D    movsx       eax,al
 00657B40    mov         dword ptr [esp+8],eax
 00657B44    fild        dword ptr [esp+8]
 00657B48    fstp        qword ptr [esp]
 00657B4B    wait
>00657B4C    jmp         0065B276
 00657B51    mov         eax,esi
 00657B53    call        TWiimoteObject.Two
 00657B58    movsx       eax,al
 00657B5B    mov         dword ptr [esp+8],eax
 00657B5F    fild        dword ptr [esp+8]
 00657B63    fstp        qword ptr [esp]
 00657B66    wait
>00657B67    jmp         0065B276
 00657B6C    mov         eax,esi
 00657B6E    call        TWiimoteObject.Minus
 00657B73    movsx       eax,al
 00657B76    mov         dword ptr [esp+8],eax
 00657B7A    fild        dword ptr [esp+8]
 00657B7E    fstp        qword ptr [esp]
 00657B81    wait
>00657B82    jmp         0065B276
 00657B87    mov         eax,esi
 00657B89    call        TWiimoteObject.Plus
 00657B8E    movsx       eax,al
 00657B91    mov         dword ptr [esp+8],eax
 00657B95    fild        dword ptr [esp+8]
 00657B99    fstp        qword ptr [esp]
 00657B9C    wait
>00657B9D    jmp         0065B276
 00657BA2    mov         eax,esi
 00657BA4    call        TWiimoteObject.HOME
 00657BA9    movsx       eax,al
 00657BAC    mov         dword ptr [esp+8],eax
 00657BB0    fild        dword ptr [esp+8]
 00657BB4    fstp        qword ptr [esp]
 00657BB7    wait
>00657BB8    jmp         0065B276
 00657BBD    mov         eax,dword ptr [esi+248]
 00657BC3    mov         dword ptr [esp],eax
 00657BC6    mov         eax,dword ptr [esi+24C]
 00657BCC    mov         dword ptr [esp+4],eax
>00657BD0    jmp         0065B276
 00657BD5    mov         eax,dword ptr [esi+250]
 00657BDB    mov         dword ptr [esp],eax
 00657BDE    mov         eax,dword ptr [esi+254]
 00657BE4    mov         dword ptr [esp+4],eax
>00657BE8    jmp         0065B276
 00657BED    mov         eax,dword ptr [esi+258]
 00657BF3    mov         dword ptr [esp],eax
 00657BF6    mov         eax,dword ptr [esi+25C]
 00657BFC    mov         dword ptr [esp+4],eax
>00657C00    jmp         0065B276
 00657C05    mov         eax,dword ptr [esi+338]
 00657C0B    mov         dword ptr [esp],eax
 00657C0E    mov         eax,dword ptr [esi+33C]
 00657C14    mov         dword ptr [esp+4],eax
>00657C18    jmp         0065B276
 00657C1D    mov         eax,dword ptr [esi+340]
 00657C23    mov         dword ptr [esp],eax
 00657C26    mov         eax,dword ptr [esi+344]
 00657C2C    mov         dword ptr [esp+4],eax
>00657C30    jmp         0065B276
 00657C35    mov         eax,dword ptr [esi+348]
 00657C3B    mov         dword ptr [esp],eax
 00657C3E    mov         eax,dword ptr [esi+34C]
 00657C44    mov         dword ptr [esp+4],eax
>00657C48    jmp         0065B276
 00657C4D    mov         eax,esi
 00657C4F    call        TAccelerometerObject.RawAccX
 00657C54    fstp        qword ptr [esp]
 00657C57    wait
>00657C58    jmp         0065B276
 00657C5D    mov         eax,esi
 00657C5F    call        TAccelerometerObject.RawAccY
 00657C64    fstp        qword ptr [esp]
 00657C67    wait
>00657C68    jmp         0065B276
 00657C6D    mov         eax,esi
 00657C6F    call        TAccelerometerObject.RawAccZ
 00657C74    fstp        qword ptr [esp]
 00657C77    wait
>00657C78    jmp         0065B276
 00657C7D    mov         eax,esi
 00657C7F    call        TAccelerometerObject.RelAccX
 00657C84    fstp        qword ptr [esp]
 00657C87    wait
>00657C88    jmp         0065B276
 00657C8D    mov         eax,esi
 00657C8F    call        TAccelerometerObject.RelAccY
 00657C94    fstp        qword ptr [esp]
 00657C97    wait
>00657C98    jmp         0065B276
 00657C9D    mov         eax,esi
 00657C9F    call        TAccelerometerObject.RelAccZ
 00657CA4    fstp        qword ptr [esp]
 00657CA7    wait
>00657CA8    jmp         0065B276
 00657CAD    mov         eax,dword ptr [esi+3B8]
 00657CB3    mov         dword ptr [esp],eax
 00657CB6    mov         eax,dword ptr [esi+3BC]
 00657CBC    mov         dword ptr [esp+4],eax
>00657CC0    jmp         0065B276
 00657CC5    mov         eax,dword ptr [esi+3C0]
 00657CCB    mov         dword ptr [esp],eax
 00657CCE    mov         eax,dword ptr [esi+3C4]
 00657CD4    mov         dword ptr [esp+4],eax
>00657CD8    jmp         0065B276
 00657CDD    mov         eax,dword ptr [esi+3C8]
 00657CE3    mov         dword ptr [esp],eax
 00657CE6    mov         eax,dword ptr [esi+3CC]
 00657CEC    mov         dword ptr [esp+4],eax
>00657CF0    jmp         0065B276
 00657CF5    mov         eax,dword ptr [esi+3D0]
 00657CFB    mov         dword ptr [esp],eax
 00657CFE    mov         eax,dword ptr [esi+3D4]
 00657D04    mov         dword ptr [esp+4],eax
>00657D08    jmp         0065B276
 00657D0D    mov         eax,dword ptr [esi+3D8]
 00657D13    mov         dword ptr [esp],eax
 00657D16    mov         eax,dword ptr [esi+3DC]
 00657D1C    mov         dword ptr [esp+4],eax
>00657D20    jmp         0065B276
 00657D25    mov         eax,dword ptr [esi+3E0]
 00657D2B    mov         dword ptr [esp],eax
 00657D2E    mov         eax,dword ptr [esi+3E4]
 00657D34    mov         dword ptr [esp+4],eax
>00657D38    jmp         0065B276
 00657D3D    mov         eax,esi
 00657D3F    call        TAccelerometerObject.Shakiness
 00657D44    fstp        qword ptr [esp]
 00657D47    wait
>00657D48    jmp         0065B276
 00657D4D    mov         eax,esi
 00657D4F    mov         edx,dword ptr [eax]
 00657D51    call        dword ptr [edx+10]
 00657D54    movsx       eax,al
 00657D57    mov         dword ptr [esp+8],eax
 00657D5B    fild        dword ptr [esp+8]
 00657D5F    fstp        qword ptr [esp]
 00657D62    wait
>00657D63    jmp         0065B276
 00657D68    mov         eax,esi
 00657D6A    mov         edx,dword ptr [eax]
 00657D6C    call        dword ptr [edx+14]
 00657D6F    movsx       eax,al
 00657D72    mov         dword ptr [esp+8],eax
 00657D76    fild        dword ptr [esp+8]
 00657D7A    fstp        qword ptr [esp]
 00657D7D    wait
>00657D7E    jmp         0065B276
 00657D83    mov         eax,esi
 00657D85    call        TAccelerometerObject.Shake
 00657D8A    movsx       eax,al
 00657D8D    mov         dword ptr [esp+8],eax
 00657D91    fild        dword ptr [esp+8]
 00657D95    fstp        qword ptr [esp]
 00657D98    wait
>00657D99    jmp         0065B276
 00657D9E    mov         eax,esi
 00657DA0    call        TAccelerometerObject.SwingHorizontally
 00657DA5    movsx       eax,al
 00657DA8    mov         dword ptr [esp+8],eax
 00657DAC    fild        dword ptr [esp+8]
 00657DB0    fstp        qword ptr [esp]
 00657DB3    wait
>00657DB4    jmp         0065B276
 00657DB9    mov         eax,esi
 00657DBB    mov         edx,dword ptr [eax]
 00657DBD    call        dword ptr [edx+0C]
 00657DC0    movsx       eax,al
 00657DC3    mov         dword ptr [esp+8],eax
 00657DC7    fild        dword ptr [esp+8]
 00657DCB    fstp        qword ptr [esp]
 00657DCE    wait
>00657DCF    jmp         0065B276
 00657DD4    mov         eax,esi
 00657DD6    call        TAccelerometerObject.Stabbing
 00657DDB    movsx       eax,al
 00657DDE    mov         dword ptr [esp+8],eax
 00657DE2    fild        dword ptr [esp+8]
 00657DE6    fstp        qword ptr [esp]
 00657DE9    wait
>00657DEA    jmp         0065B276
 00657DEF    mov         eax,esi
 00657DF1    call        TAccelerometerObject.DrumBeat
 00657DF6    movsx       eax,al
 00657DF9    mov         dword ptr [esp+8],eax
 00657DFD    fild        dword ptr [esp+8]
 00657E01    fstp        qword ptr [esp]
 00657E04    wait
>00657E05    jmp         0065B276
 00657E0A    mov         eax,esi
 00657E0C    call        TAccelerometerObject.OnTable
 00657E11    movsx       eax,al
 00657E14    mov         dword ptr [esp+8],eax
 00657E18    fild        dword ptr [esp+8]
 00657E1C    fstp        qword ptr [esp]
 00657E1F    wait
>00657E20    jmp         0065B276
 00657E25    movzx       eax,byte ptr [esi+430]
 00657E2C    movsx       eax,al
 00657E2F    mov         dword ptr [esp+8],eax
 00657E33    fild        dword ptr [esp+8]
 00657E37    fstp        qword ptr [esp]
 00657E3A    wait
>00657E3B    jmp         0065B276
 00657E40    movzx       eax,byte ptr [esi+431]
 00657E47    movsx       eax,al
 00657E4A    mov         dword ptr [esp+8],eax
 00657E4E    fild        dword ptr [esp+8]
 00657E52    fstp        qword ptr [esp]
 00657E55    wait
>00657E56    jmp         0065B276
 00657E5B    movzx       eax,byte ptr [esi+432]
 00657E62    movsx       eax,al
 00657E65    mov         dword ptr [esp+8],eax
 00657E69    fild        dword ptr [esp+8]
 00657E6D    fstp        qword ptr [esp]
 00657E70    wait
>00657E71    jmp         0065B276
 00657E76    movzx       eax,byte ptr [esi+433]
 00657E7D    movsx       eax,al
 00657E80    mov         dword ptr [esp+8],eax
 00657E84    fild        dword ptr [esp+8]
 00657E88    fstp        qword ptr [esp]
 00657E8B    wait
>00657E8C    jmp         0065B276
 00657E91    movzx       eax,byte ptr [esi+434]
 00657E98    movsx       eax,al
 00657E9B    mov         dword ptr [esp+8],eax
 00657E9F    fild        dword ptr [esp+8]
 00657EA3    fstp        qword ptr [esp]
 00657EA6    wait
>00657EA7    jmp         0065B276
 00657EAC    cmp         byte ptr [esi+42F],1
 00657EB3    sete        al
 00657EB6    movsx       eax,al
 00657EB9    mov         dword ptr [esp+8],eax
 00657EBD    fild        dword ptr [esp+8]
 00657EC1    fstp        qword ptr [esp]
 00657EC4    wait
>00657EC5    jmp         0065B276
 00657ECA    cmp         byte ptr [esi+42F],2
 00657ED1    sete        al
 00657ED4    movsx       eax,al
 00657ED7    mov         dword ptr [esp+8],eax
 00657EDB    fild        dword ptr [esp+8]
 00657EDF    fstp        qword ptr [esp]
 00657EE2    wait
>00657EE3    jmp         0065B276
 00657EE8    cmp         byte ptr [esi+42F],3
 00657EEF    sete        al
 00657EF2    movsx       eax,al
 00657EF5    mov         dword ptr [esp+8],eax
 00657EF9    fild        dword ptr [esp+8]
 00657EFD    fstp        qword ptr [esp]
 00657F00    wait
>00657F01    jmp         0065B276
 00657F06    cmp         byte ptr [esi+42F],4
 00657F0D    sete        al
 00657F10    movsx       eax,al
 00657F13    mov         dword ptr [esp+8],eax
 00657F17    fild        dword ptr [esp+8]
 00657F1B    fstp        qword ptr [esp]
 00657F1E    wait
>00657F1F    jmp         0065B276
 00657F24    cmp         byte ptr [esi+42F],5
 00657F2B    sete        al
 00657F2E    movsx       eax,al
 00657F31    mov         dword ptr [esp+8],eax
 00657F35    fild        dword ptr [esp+8]
 00657F39    fstp        qword ptr [esp]
 00657F3C    wait
>00657F3D    jmp         0065B276
 00657F42    cmp         byte ptr [esi+42F],23
 00657F49    sete        al
 00657F4C    movsx       eax,al
 00657F4F    mov         dword ptr [esp+8],eax
 00657F53    fild        dword ptr [esp+8]
 00657F57    fstp        qword ptr [esp]
 00657F5A    wait
>00657F5B    jmp         0065B276
 00657F60    cmp         byte ptr [esi+42F],24
 00657F67    sete        al
 00657F6A    movsx       eax,al
 00657F6D    mov         dword ptr [esp+8],eax
 00657F71    fild        dword ptr [esp+8]
 00657F75    fstp        qword ptr [esp]
 00657F78    wait
>00657F79    jmp         0065B276
 00657F7E    cmp         byte ptr [esi+42F],25
 00657F85    sete        al
 00657F88    movsx       eax,al
 00657F8B    mov         dword ptr [esp+8],eax
 00657F8F    fild        dword ptr [esp+8]
 00657F93    fstp        qword ptr [esp]
 00657F96    wait
>00657F97    jmp         0065B276
 00657F9C    cmp         byte ptr [esi+42F],26
 00657FA3    sete        al
 00657FA6    movsx       eax,al
 00657FA9    mov         dword ptr [esp+8],eax
 00657FAD    fild        dword ptr [esp+8]
 00657FB1    fstp        qword ptr [esp]
 00657FB4    wait
>00657FB5    jmp         0065B276
 00657FBA    cmp         byte ptr [esi+42F],27
 00657FC1    sete        al
 00657FC4    movsx       eax,al
 00657FC7    mov         dword ptr [esp+8],eax
 00657FCB    fild        dword ptr [esp+8]
 00657FCF    fstp        qword ptr [esp]
 00657FD2    wait
>00657FD3    jmp         0065B276
 00657FD8    cmp         byte ptr [esi+42F],12
 00657FDF    sete        al
 00657FE2    movsx       eax,al
 00657FE5    mov         dword ptr [esp+8],eax
 00657FE9    fild        dword ptr [esp+8]
 00657FED    fstp        qword ptr [esp]
 00657FF0    wait
>00657FF1    jmp         0065B276
 00657FF6    cmp         byte ptr [esi+42F],13
 00657FFD    sete        al
 00658000    movsx       eax,al
 00658003    mov         dword ptr [esp+8],eax
 00658007    fild        dword ptr [esp+8]
 0065800B    fstp        qword ptr [esp]
 0065800E    wait
>0065800F    jmp         0065B276
 00658014    cmp         byte ptr [esi+42F],14
 0065801B    sete        al
 0065801E    movsx       eax,al
 00658021    mov         dword ptr [esp+8],eax
 00658025    fild        dword ptr [esp+8]
 00658029    fstp        qword ptr [esp]
 0065802C    wait
>0065802D    jmp         0065B276
 00658032    cmp         byte ptr [esi+42F],15
 00658039    sete        al
 0065803C    movsx       eax,al
 0065803F    mov         dword ptr [esp+8],eax
 00658043    fild        dword ptr [esp+8]
 00658047    fstp        qword ptr [esp]
 0065804A    wait
>0065804B    jmp         0065B276
 00658050    cmp         byte ptr [esi+42F],16
 00658057    sete        al
 0065805A    movsx       eax,al
 0065805D    mov         dword ptr [esp+8],eax
 00658061    fild        dword ptr [esp+8]
 00658065    fstp        qword ptr [esp]
 00658068    wait
>00658069    jmp         0065B276
 0065806E    cmp         byte ptr [esi+42F],34
 00658075    sete        al
 00658078    movsx       eax,al
 0065807B    mov         dword ptr [esp+8],eax
 0065807F    fild        dword ptr [esp+8]
 00658083    fstp        qword ptr [esp]
 00658086    wait
>00658087    jmp         0065B276
 0065808C    cmp         byte ptr [esi+42F],35
 00658093    sete        al
 00658096    movsx       eax,al
 00658099    mov         dword ptr [esp+8],eax
 0065809D    fild        dword ptr [esp+8]
 006580A1    fstp        qword ptr [esp]
 006580A4    wait
>006580A5    jmp         0065B276
 006580AA    cmp         byte ptr [esi+42F],36
 006580B1    sete        al
 006580B4    movsx       eax,al
 006580B7    mov         dword ptr [esp+8],eax
 006580BB    fild        dword ptr [esp+8]
 006580BF    fstp        qword ptr [esp]
 006580C2    wait
>006580C3    jmp         0065B276
 006580C8    cmp         byte ptr [esi+42F],37
 006580CF    sete        al
 006580D2    movsx       eax,al
 006580D5    mov         dword ptr [esp+8],eax
 006580D9    fild        dword ptr [esp+8]
 006580DD    fstp        qword ptr [esp]
 006580E0    wait
>006580E1    jmp         0065B276
 006580E6    cmp         byte ptr [esi+42F],38
 006580ED    sete        al
 006580F0    movsx       eax,al
 006580F3    mov         dword ptr [esp+8],eax
 006580F7    fild        dword ptr [esp+8]
 006580FB    fstp        qword ptr [esp]
 006580FE    wait
>006580FF    jmp         0065B276
 00658104    cmp         byte ptr [esi+42D],1
 0065810B    sete        al
 0065810E    movsx       eax,al
 00658111    mov         dword ptr [esp+8],eax
 00658115    fild        dword ptr [esp+8]
 00658119    fstp        qword ptr [esp]
 0065811C    wait
>0065811D    jmp         0065B276
 00658122    cmp         byte ptr [esi+42D],2
 00658129    sete        al
 0065812C    movsx       eax,al
 0065812F    mov         dword ptr [esp+8],eax
 00658133    fild        dword ptr [esp+8]
 00658137    fstp        qword ptr [esp]
 0065813A    wait
>0065813B    jmp         0065B276
 00658140    cmp         byte ptr [esi+42D],3
 00658147    sete        al
 0065814A    movsx       eax,al
 0065814D    mov         dword ptr [esp+8],eax
 00658151    fild        dword ptr [esp+8]
 00658155    fstp        qword ptr [esp]
 00658158    wait
>00658159    jmp         0065B276
 0065815E    cmp         byte ptr [esi+42D],4
 00658165    sete        al
 00658168    movsx       eax,al
 0065816B    mov         dword ptr [esp+8],eax
 0065816F    fild        dword ptr [esp+8]
 00658173    fstp        qword ptr [esp]
 00658176    wait
>00658177    jmp         0065B276
 0065817C    cmp         byte ptr [esi+42D],23
 00658183    sete        al
 00658186    movsx       eax,al
 00658189    mov         dword ptr [esp+8],eax
 0065818D    fild        dword ptr [esp+8]
 00658191    fstp        qword ptr [esp]
 00658194    wait
>00658195    jmp         0065B276
 0065819A    cmp         byte ptr [esi+42D],24
 006581A1    sete        al
 006581A4    movsx       eax,al
 006581A7    mov         dword ptr [esp+8],eax
 006581AB    fild        dword ptr [esp+8]
 006581AF    fstp        qword ptr [esp]
 006581B2    wait
>006581B3    jmp         0065B276
 006581B8    cmp         byte ptr [esi+42D],25
 006581BF    sete        al
 006581C2    movsx       eax,al
 006581C5    mov         dword ptr [esp+8],eax
 006581C9    fild        dword ptr [esp+8]
 006581CD    fstp        qword ptr [esp]
 006581D0    wait
>006581D1    jmp         0065B276
 006581D6    cmp         byte ptr [esi+42D],26
 006581DD    sete        al
 006581E0    movsx       eax,al
 006581E3    mov         dword ptr [esp+8],eax
 006581E7    fild        dword ptr [esp+8]
 006581EB    fstp        qword ptr [esp]
 006581EE    wait
>006581EF    jmp         0065B276
 006581F4    cmp         byte ptr [esi+42D],12
 006581FB    sete        al
 006581FE    movsx       eax,al
 00658201    mov         dword ptr [esp+8],eax
 00658205    fild        dword ptr [esp+8]
 00658209    fstp        qword ptr [esp]
 0065820C    wait
>0065820D    jmp         0065B276
 00658212    cmp         byte ptr [esi+42D],13
 00658219    sete        al
 0065821C    movsx       eax,al
 0065821F    mov         dword ptr [esp+8],eax
 00658223    fild        dword ptr [esp+8]
 00658227    fstp        qword ptr [esp]
 0065822A    wait
>0065822B    jmp         0065B276
 00658230    cmp         byte ptr [esi+42D],14
 00658237    sete        al
 0065823A    movsx       eax,al
 0065823D    mov         dword ptr [esp+8],eax
 00658241    fild        dword ptr [esp+8]
 00658245    fstp        qword ptr [esp]
 00658248    wait
>00658249    jmp         0065B276
 0065824E    cmp         byte ptr [esi+42D],15
 00658255    sete        al
 00658258    movsx       eax,al
 0065825B    mov         dword ptr [esp+8],eax
 0065825F    fild        dword ptr [esp+8]
 00658263    fstp        qword ptr [esp]
 00658266    wait
>00658267    jmp         0065B276
 0065826C    cmp         byte ptr [esi+42D],34
 00658273    sete        al
 00658276    movsx       eax,al
 00658279    mov         dword ptr [esp+8],eax
 0065827D    fild        dword ptr [esp+8]
 00658281    fstp        qword ptr [esp]
 00658284    wait
>00658285    jmp         0065B276
 0065828A    cmp         byte ptr [esi+42D],35
 00658291    sete        al
 00658294    movsx       eax,al
 00658297    mov         dword ptr [esp+8],eax
 0065829B    fild        dword ptr [esp+8]
 0065829F    fstp        qword ptr [esp]
 006582A2    wait
>006582A3    jmp         0065B276
 006582A8    cmp         byte ptr [esi+42D],36
 006582AF    sete        al
 006582B2    movsx       eax,al
 006582B5    mov         dword ptr [esp+8],eax
 006582B9    fild        dword ptr [esp+8]
 006582BD    fstp        qword ptr [esp]
 006582C0    wait
>006582C1    jmp         0065B276
 006582C6    cmp         byte ptr [esi+42D],37
 006582CD    sete        al
 006582D0    movsx       eax,al
 006582D3    mov         dword ptr [esp+8],eax
 006582D7    fild        dword ptr [esp+8]
 006582DB    fstp        qword ptr [esp]
 006582DE    wait
>006582DF    jmp         0065B276
 006582E4    cmp         byte ptr [esi+42F],6
 006582EB    sete        al
 006582EE    movsx       eax,al
 006582F1    mov         dword ptr [esp+8],eax
 006582F5    fild        dword ptr [esp+8]
 006582F9    fstp        qword ptr [esp]
 006582FC    wait
>006582FD    jmp         0065B276
 00658302    cmp         byte ptr [esi+42F],7
 00658309    sete        al
 0065830C    movsx       eax,al
 0065830F    mov         dword ptr [esp+8],eax
 00658313    fild        dword ptr [esp+8]
 00658317    fstp        qword ptr [esp]
 0065831A    wait
>0065831B    jmp         0065B276
 00658320    cmp         byte ptr [esi+42F],8
 00658327    sete        al
 0065832A    movsx       eax,al
 0065832D    mov         dword ptr [esp+8],eax
 00658331    fild        dword ptr [esp+8]
 00658335    fstp        qword ptr [esp]
 00658338    wait
>00658339    jmp         0065B276
 0065833E    cmp         byte ptr [esi+42F],0A
 00658345    sete        al
 00658348    movsx       eax,al
 0065834B    mov         dword ptr [esp+8],eax
 0065834F    fild        dword ptr [esp+8]
 00658353    fstp        qword ptr [esp]
 00658356    wait
>00658357    jmp         0065B276
 0065835C    cmp         byte ptr [esi+42F],0B
 00658363    sete        al
 00658366    movsx       eax,al
 00658369    mov         dword ptr [esp+8],eax
 0065836D    fild        dword ptr [esp+8]
 00658371    fstp        qword ptr [esp]
 00658374    wait
>00658375    jmp         0065B276
 0065837A    cmp         byte ptr [esi+42F],9
 00658381    sete        al
 00658384    movsx       eax,al
 00658387    mov         dword ptr [esp+8],eax
 0065838B    fild        dword ptr [esp+8]
 0065838F    fstp        qword ptr [esp]
 00658392    wait
>00658393    jmp         0065B276
 00658398    cmp         byte ptr [esi+42F],0C
 0065839F    sete        al
 006583A2    movsx       eax,al
 006583A5    mov         dword ptr [esp+8],eax
 006583A9    fild        dword ptr [esp+8]
 006583AD    fstp        qword ptr [esp]
 006583B0    wait
>006583B1    jmp         0065B276
 006583B6    cmp         byte ptr [esi+42F],0D
 006583BD    sete        al
 006583C0    movsx       eax,al
 006583C3    mov         dword ptr [esp+8],eax
 006583C7    fild        dword ptr [esp+8]
 006583CB    fstp        qword ptr [esp]
 006583CE    wait
>006583CF    jmp         0065B276
 006583D4    cmp         byte ptr [esi+42F],0E
 006583DB    sete        al
 006583DE    movsx       eax,al
 006583E1    mov         dword ptr [esp+8],eax
 006583E5    fild        dword ptr [esp+8]
 006583E9    fstp        qword ptr [esp]
 006583EC    wait
>006583ED    jmp         0065B276
 006583F2    cmp         byte ptr [esi+42F],10
 006583F9    sete        al
 006583FC    movsx       eax,al
 006583FF    mov         dword ptr [esp+8],eax
 00658403    fild        dword ptr [esp+8]
 00658407    fstp        qword ptr [esp]
 0065840A    wait
>0065840B    jmp         0065B276
 00658410    cmp         byte ptr [esi+42F],11
 00658417    sete        al
 0065841A    movsx       eax,al
 0065841D    mov         dword ptr [esp+8],eax
 00658421    fild        dword ptr [esp+8]
 00658425    fstp        qword ptr [esp]
 00658428    wait
>00658429    jmp         0065B276
 0065842E    cmp         byte ptr [esi+42F],0F
 00658435    sete        al
 00658438    movsx       eax,al
 0065843B    mov         dword ptr [esp+8],eax
 0065843F    fild        dword ptr [esp+8]
 00658443    fstp        qword ptr [esp]
 00658446    wait
>00658447    jmp         0065B276
 0065844C    cmp         byte ptr [esi+42F],17
 00658453    sete        al
 00658456    movsx       eax,al
 00658459    mov         dword ptr [esp+8],eax
 0065845D    fild        dword ptr [esp+8]
 00658461    fstp        qword ptr [esp]
 00658464    wait
>00658465    jmp         0065B276
 0065846A    cmp         byte ptr [esi+42F],18
 00658471    sete        al
 00658474    movsx       eax,al
 00658477    mov         dword ptr [esp+8],eax
 0065847B    fild        dword ptr [esp+8]
 0065847F    fstp        qword ptr [esp]
 00658482    wait
>00658483    jmp         0065B276
 00658488    cmp         byte ptr [esi+42F],19
 0065848F    sete        al
 00658492    movsx       eax,al
 00658495    mov         dword ptr [esp+8],eax
 00658499    fild        dword ptr [esp+8]
 0065849D    fstp        qword ptr [esp]
 006584A0    wait
>006584A1    jmp         0065B276
 006584A6    cmp         byte ptr [esi+42F],1B
 006584AD    sete        al
 006584B0    movsx       eax,al
 006584B3    mov         dword ptr [esp+8],eax
 006584B7    fild        dword ptr [esp+8]
 006584BB    fstp        qword ptr [esp]
 006584BE    wait
>006584BF    jmp         0065B276
 006584C4    cmp         byte ptr [esi+42F],1C
 006584CB    sete        al
 006584CE    movsx       eax,al
 006584D1    mov         dword ptr [esp+8],eax
 006584D5    fild        dword ptr [esp+8]
 006584D9    fstp        qword ptr [esp]
 006584DC    wait
>006584DD    jmp         0065B276
 006584E2    cmp         byte ptr [esi+42F],1A
 006584E9    sete        al
 006584EC    movsx       eax,al
 006584EF    mov         dword ptr [esp+8],eax
 006584F3    fild        dword ptr [esp+8]
 006584F7    fstp        qword ptr [esp]
 006584FA    wait
>006584FB    jmp         0065B276
 00658500    cmp         byte ptr [esi+42F],1D
 00658507    sete        al
 0065850A    movsx       eax,al
 0065850D    mov         dword ptr [esp+8],eax
 00658511    fild        dword ptr [esp+8]
 00658515    fstp        qword ptr [esp]
 00658518    wait
>00658519    jmp         0065B276
 0065851E    cmp         byte ptr [esi+42F],1E
 00658525    sete        al
 00658528    movsx       eax,al
 0065852B    mov         dword ptr [esp+8],eax
 0065852F    fild        dword ptr [esp+8]
 00658533    fstp        qword ptr [esp]
 00658536    wait
>00658537    jmp         0065B276
 0065853C    cmp         byte ptr [esi+42F],1F
 00658543    sete        al
 00658546    movsx       eax,al
 00658549    mov         dword ptr [esp+8],eax
 0065854D    fild        dword ptr [esp+8]
 00658551    fstp        qword ptr [esp]
 00658554    wait
>00658555    jmp         0065B276
 0065855A    cmp         byte ptr [esi+42F],21
 00658561    sete        al
 00658564    movsx       eax,al
 00658567    mov         dword ptr [esp+8],eax
 0065856B    fild        dword ptr [esp+8]
 0065856F    fstp        qword ptr [esp]
 00658572    wait
>00658573    jmp         0065B276
 00658578    cmp         byte ptr [esi+42F],22
 0065857F    sete        al
 00658582    movsx       eax,al
 00658585    mov         dword ptr [esp+8],eax
 00658589    fild        dword ptr [esp+8]
 0065858D    fstp        qword ptr [esp]
 00658590    wait
>00658591    jmp         0065B276
 00658596    cmp         byte ptr [esi+42F],20
 0065859D    sete        al
 006585A0    movsx       eax,al
 006585A3    mov         dword ptr [esp+8],eax
 006585A7    fild        dword ptr [esp+8]
 006585AB    fstp        qword ptr [esp]
 006585AE    wait
>006585AF    jmp         0065B276
 006585B4    cmp         byte ptr [esi+42F],28
 006585BB    sete        al
 006585BE    movsx       eax,al
 006585C1    mov         dword ptr [esp+8],eax
 006585C5    fild        dword ptr [esp+8]
 006585C9    fstp        qword ptr [esp]
 006585CC    wait
>006585CD    jmp         0065B276
 006585D2    cmp         byte ptr [esi+42F],29
 006585D9    sete        al
 006585DC    movsx       eax,al
 006585DF    mov         dword ptr [esp+8],eax
 006585E3    fild        dword ptr [esp+8]
 006585E7    fstp        qword ptr [esp]
 006585EA    wait
>006585EB    jmp         0065B276
 006585F0    cmp         byte ptr [esi+42F],2A
 006585F7    sete        al
 006585FA    movsx       eax,al
 006585FD    mov         dword ptr [esp+8],eax
 00658601    fild        dword ptr [esp+8]
 00658605    fstp        qword ptr [esp]
 00658608    wait
>00658609    jmp         0065B276
 0065860E    cmp         byte ptr [esi+42F],2C
 00658615    sete        al
 00658618    movsx       eax,al
 0065861B    mov         dword ptr [esp+8],eax
 0065861F    fild        dword ptr [esp+8]
 00658623    fstp        qword ptr [esp]
 00658626    wait
>00658627    jmp         0065B276
 0065862C    cmp         byte ptr [esi+42F],2D
 00658633    sete        al
 00658636    movsx       eax,al
 00658639    mov         dword ptr [esp+8],eax
 0065863D    fild        dword ptr [esp+8]
 00658641    fstp        qword ptr [esp]
 00658644    wait
>00658645    jmp         0065B276
 0065864A    cmp         byte ptr [esi+42F],2B
 00658651    sete        al
 00658654    movsx       eax,al
 00658657    mov         dword ptr [esp+8],eax
 0065865B    fild        dword ptr [esp+8]
 0065865F    fstp        qword ptr [esp]
 00658662    wait
>00658663    jmp         0065B276
 00658668    cmp         byte ptr [esi+42F],2E
 0065866F    sete        al
 00658672    movsx       eax,al
 00658675    mov         dword ptr [esp+8],eax
 00658679    fild        dword ptr [esp+8]
 0065867D    fstp        qword ptr [esp]
 00658680    wait
>00658681    jmp         0065B276
 00658686    cmp         byte ptr [esi+42F],2F
 0065868D    sete        al
 00658690    movsx       eax,al
 00658693    mov         dword ptr [esp+8],eax
 00658697    fild        dword ptr [esp+8]
 0065869B    fstp        qword ptr [esp]
 0065869E    wait
>0065869F    jmp         0065B276
 006586A4    cmp         byte ptr [esi+42F],30
 006586AB    sete        al
 006586AE    movsx       eax,al
 006586B1    mov         dword ptr [esp+8],eax
 006586B5    fild        dword ptr [esp+8]
 006586B9    fstp        qword ptr [esp]
 006586BC    wait
>006586BD    jmp         0065B276
 006586C2    cmp         byte ptr [esi+42F],32
 006586C9    sete        al
 006586CC    movsx       eax,al
 006586CF    mov         dword ptr [esp+8],eax
 006586D3    fild        dword ptr [esp+8]
 006586D7    fstp        qword ptr [esp]
 006586DA    wait
>006586DB    jmp         0065B276
 006586E0    cmp         byte ptr [esi+42F],33
 006586E7    sete        al
 006586EA    movsx       eax,al
 006586ED    mov         dword ptr [esp+8],eax
 006586F1    fild        dword ptr [esp+8]
 006586F5    fstp        qword ptr [esp]
 006586F8    wait
>006586F9    jmp         0065B276
 006586FE    cmp         byte ptr [esi+42F],31
 00658705    sete        al
 00658708    movsx       eax,al
 0065870B    mov         dword ptr [esp+8],eax
 0065870F    fild        dword ptr [esp+8]
 00658713    fstp        qword ptr [esp]
 00658716    wait
>00658717    jmp         0065B276
 0065871C    cmp         byte ptr [esi+42F],39
 00658723    sete        al
 00658726    movsx       eax,al
 00658729    mov         dword ptr [esp+8],eax
 0065872D    fild        dword ptr [esp+8]
 00658731    fstp        qword ptr [esp]
 00658734    wait
>00658735    jmp         0065B276
 0065873A    cmp         byte ptr [esi+42F],3A
 00658741    sete        al
 00658744    movsx       eax,al
 00658747    mov         dword ptr [esp+8],eax
 0065874B    fild        dword ptr [esp+8]
 0065874F    fstp        qword ptr [esp]
 00658752    wait
>00658753    jmp         0065B276
 00658758    cmp         byte ptr [esi+42F],3B
 0065875F    sete        al
 00658762    movsx       eax,al
 00658765    mov         dword ptr [esp+8],eax
 00658769    fild        dword ptr [esp+8]
 0065876D    fstp        qword ptr [esp]
 00658770    wait
>00658771    jmp         0065B276
 00658776    cmp         byte ptr [esi+42F],3D
 0065877D    sete        al
 00658780    movsx       eax,al
 00658783    mov         dword ptr [esp+8],eax
 00658787    fild        dword ptr [esp+8]
 0065878B    fstp        qword ptr [esp]
 0065878E    wait
>0065878F    jmp         0065B276
 00658794    cmp         byte ptr [esi+42F],3E
 0065879B    sete        al
 0065879E    movsx       eax,al
 006587A1    mov         dword ptr [esp+8],eax
 006587A5    fild        dword ptr [esp+8]
 006587A9    fstp        qword ptr [esp]
 006587AC    wait
>006587AD    jmp         0065B276
 006587B2    cmp         byte ptr [esi+42F],3C
 006587B9    sete        al
 006587BC    movsx       eax,al
 006587BF    mov         dword ptr [esp+8],eax
 006587C3    fild        dword ptr [esp+8]
 006587C7    fstp        qword ptr [esp]
 006587CA    wait
>006587CB    jmp         0065B276
 006587D0    cmp         byte ptr [esi+42F],3F
 006587D7    sete        al
 006587DA    movsx       eax,al
 006587DD    mov         dword ptr [esp+8],eax
 006587E1    fild        dword ptr [esp+8]
 006587E5    fstp        qword ptr [esp]
 006587E8    wait
>006587E9    jmp         0065B276
 006587EE    cmp         byte ptr [esi+42F],40
 006587F5    sete        al
 006587F8    movsx       eax,al
 006587FB    mov         dword ptr [esp+8],eax
 006587FF    fild        dword ptr [esp+8]
 00658803    fstp        qword ptr [esp]
 00658806    wait
>00658807    jmp         0065B276
 0065880C    cmp         byte ptr [esi+42F],41
 00658813    sete        al
 00658816    movsx       eax,al
 00658819    mov         dword ptr [esp+8],eax
 0065881D    fild        dword ptr [esp+8]
 00658821    fstp        qword ptr [esp]
 00658824    wait
>00658825    jmp         0065B276
 0065882A    cmp         byte ptr [esi+42F],43
 00658831    sete        al
 00658834    movsx       eax,al
 00658837    mov         dword ptr [esp+8],eax
 0065883B    fild        dword ptr [esp+8]
 0065883F    fstp        qword ptr [esp]
 00658842    wait
>00658843    jmp         0065B276
 00658848    cmp         byte ptr [esi+42F],44
 0065884F    sete        al
 00658852    movsx       eax,al
 00658855    mov         dword ptr [esp+8],eax
 00658859    fild        dword ptr [esp+8]
 0065885D    fstp        qword ptr [esp]
 00658860    wait
>00658861    jmp         0065B276
 00658866    cmp         byte ptr [esi+42F],42
 0065886D    sete        al
 00658870    movsx       eax,al
 00658873    mov         dword ptr [esp+8],eax
 00658877    fild        dword ptr [esp+8]
 0065887B    fstp        qword ptr [esp]
 0065887E    wait
>0065887F    jmp         0065B276
 00658884    cmp         byte ptr [esi+42D],6
 0065888B    sete        al
 0065888E    movsx       eax,al
 00658891    mov         dword ptr [esp+8],eax
 00658895    fild        dword ptr [esp+8]
 00658899    fstp        qword ptr [esp]
 0065889C    wait
>0065889D    jmp         0065B276
 006588A2    cmp         byte ptr [esi+42D],7
 006588A9    sete        al
 006588AC    movsx       eax,al
 006588AF    mov         dword ptr [esp+8],eax
 006588B3    fild        dword ptr [esp+8]
 006588B7    fstp        qword ptr [esp]
 006588BA    wait
>006588BB    jmp         0065B276
 006588C0    cmp         byte ptr [esi+42D],8
 006588C7    sete        al
 006588CA    movsx       eax,al
 006588CD    mov         dword ptr [esp+8],eax
 006588D1    fild        dword ptr [esp+8]
 006588D5    fstp        qword ptr [esp]
 006588D8    wait
>006588D9    jmp         0065B276
 006588DE    cmp         byte ptr [esi+42D],0A
 006588E5    sete        al
 006588E8    movsx       eax,al
 006588EB    mov         dword ptr [esp+8],eax
 006588EF    fild        dword ptr [esp+8]
 006588F3    fstp        qword ptr [esp]
 006588F6    wait
>006588F7    jmp         0065B276
 006588FC    cmp         byte ptr [esi+42D],0C
 00658903    sete        al
 00658906    movsx       eax,al
 00658909    mov         dword ptr [esp+8],eax
 0065890D    fild        dword ptr [esp+8]
 00658911    fstp        qword ptr [esp]
 00658914    wait
>00658915    jmp         0065B276
 0065891A    cmp         byte ptr [esi+42D],0D
 00658921    sete        al
 00658924    movsx       eax,al
 00658927    mov         dword ptr [esp+8],eax
 0065892B    fild        dword ptr [esp+8]
 0065892F    fstp        qword ptr [esp]
 00658932    wait
>00658933    jmp         0065B276
 00658938    cmp         byte ptr [esi+42D],0E
 0065893F    sete        al
 00658942    movsx       eax,al
 00658945    mov         dword ptr [esp+8],eax
 00658949    fild        dword ptr [esp+8]
 0065894D    fstp        qword ptr [esp]
 00658950    wait
>00658951    jmp         0065B276
 00658956    cmp         byte ptr [esi+42D],10
 0065895D    sete        al
 00658960    movsx       eax,al
 00658963    mov         dword ptr [esp+8],eax
 00658967    fild        dword ptr [esp+8]
 0065896B    fstp        qword ptr [esp]
 0065896E    wait
>0065896F    jmp         0065B276
 00658974    cmp         byte ptr [esi+42D],17
 0065897B    sete        al
 0065897E    movsx       eax,al
 00658981    mov         dword ptr [esp+8],eax
 00658985    fild        dword ptr [esp+8]
 00658989    fstp        qword ptr [esp]
 0065898C    wait
>0065898D    jmp         0065B276
 00658992    cmp         byte ptr [esi+42D],18
 00658999    sete        al
 0065899C    movsx       eax,al
 0065899F    mov         dword ptr [esp+8],eax
 006589A3    fild        dword ptr [esp+8]
 006589A7    fstp        qword ptr [esp]
 006589AA    wait
>006589AB    jmp         0065B276
 006589B0    cmp         byte ptr [esi+42D],19
 006589B7    sete        al
 006589BA    movsx       eax,al
 006589BD    mov         dword ptr [esp+8],eax
 006589C1    fild        dword ptr [esp+8]
 006589C5    fstp        qword ptr [esp]
 006589C8    wait
>006589C9    jmp         0065B276
 006589CE    cmp         byte ptr [esi+42D],1B
 006589D5    sete        al
 006589D8    movsx       eax,al
 006589DB    mov         dword ptr [esp+8],eax
 006589DF    fild        dword ptr [esp+8]
 006589E3    fstp        qword ptr [esp]
 006589E6    wait
>006589E7    jmp         0065B276
 006589EC    cmp         byte ptr [esi+42D],1D
 006589F3    sete        al
 006589F6    movsx       eax,al
 006589F9    mov         dword ptr [esp+8],eax
 006589FD    fild        dword ptr [esp+8]
 00658A01    fstp        qword ptr [esp]
 00658A04    wait
>00658A05    jmp         0065B276
 00658A0A    cmp         byte ptr [esi+42D],1E
 00658A11    sete        al
 00658A14    movsx       eax,al
 00658A17    mov         dword ptr [esp+8],eax
 00658A1B    fild        dword ptr [esp+8]
 00658A1F    fstp        qword ptr [esp]
 00658A22    wait
>00658A23    jmp         0065B276
 00658A28    cmp         byte ptr [esi+42D],1F
 00658A2F    sete        al
 00658A32    movsx       eax,al
 00658A35    mov         dword ptr [esp+8],eax
 00658A39    fild        dword ptr [esp+8]
 00658A3D    fstp        qword ptr [esp]
 00658A40    wait
>00658A41    jmp         0065B276
 00658A46    cmp         byte ptr [esi+42D],21
 00658A4D    sete        al
 00658A50    movsx       eax,al
 00658A53    mov         dword ptr [esp+8],eax
 00658A57    fild        dword ptr [esp+8]
 00658A5B    fstp        qword ptr [esp]
 00658A5E    wait
>00658A5F    jmp         0065B276
 00658A64    cmp         byte ptr [esi+42D],28
 00658A6B    sete        al
 00658A6E    movsx       eax,al
 00658A71    mov         dword ptr [esp+8],eax
 00658A75    fild        dword ptr [esp+8]
 00658A79    fstp        qword ptr [esp]
 00658A7C    wait
>00658A7D    jmp         0065B276
 00658A82    cmp         byte ptr [esi+42D],29
 00658A89    sete        al
 00658A8C    movsx       eax,al
 00658A8F    mov         dword ptr [esp+8],eax
 00658A93    fild        dword ptr [esp+8]
 00658A97    fstp        qword ptr [esp]
 00658A9A    wait
>00658A9B    jmp         0065B276
 00658AA0    cmp         byte ptr [esi+42D],2A
 00658AA7    sete        al
 00658AAA    movsx       eax,al
 00658AAD    mov         dword ptr [esp+8],eax
 00658AB1    fild        dword ptr [esp+8]
 00658AB5    fstp        qword ptr [esp]
 00658AB8    wait
>00658AB9    jmp         0065B276
 00658ABE    cmp         byte ptr [esi+42D],2C
 00658AC5    sete        al
 00658AC8    movsx       eax,al
 00658ACB    mov         dword ptr [esp+8],eax
 00658ACF    fild        dword ptr [esp+8]
 00658AD3    fstp        qword ptr [esp]
 00658AD6    wait
>00658AD7    jmp         0065B276
 00658ADC    cmp         byte ptr [esi+42D],2E
 00658AE3    sete        al
 00658AE6    movsx       eax,al
 00658AE9    mov         dword ptr [esp+8],eax
 00658AED    fild        dword ptr [esp+8]
 00658AF1    fstp        qword ptr [esp]
 00658AF4    wait
>00658AF5    jmp         0065B276
 00658AFA    cmp         byte ptr [esi+42D],2F
 00658B01    sete        al
 00658B04    movsx       eax,al
 00658B07    mov         dword ptr [esp+8],eax
 00658B0B    fild        dword ptr [esp+8]
 00658B0F    fstp        qword ptr [esp]
 00658B12    wait
>00658B13    jmp         0065B276
 00658B18    cmp         byte ptr [esi+42D],30
 00658B1F    sete        al
 00658B22    movsx       eax,al
 00658B25    mov         dword ptr [esp+8],eax
 00658B29    fild        dword ptr [esp+8]
 00658B2D    fstp        qword ptr [esp]
 00658B30    wait
>00658B31    jmp         0065B276
 00658B36    cmp         byte ptr [esi+42D],32
 00658B3D    sete        al
 00658B40    movsx       eax,al
 00658B43    mov         dword ptr [esp+8],eax
 00658B47    fild        dword ptr [esp+8]
 00658B4B    fstp        qword ptr [esp]
 00658B4E    wait
>00658B4F    jmp         0065B276
 00658B54    cmp         byte ptr [esi+42D],39
 00658B5B    sete        al
 00658B5E    movsx       eax,al
 00658B61    mov         dword ptr [esp+8],eax
 00658B65    fild        dword ptr [esp+8]
 00658B69    fstp        qword ptr [esp]
 00658B6C    wait
>00658B6D    jmp         0065B276
 00658B72    cmp         byte ptr [esi+42D],3A
 00658B79    sete        al
 00658B7C    movsx       eax,al
 00658B7F    mov         dword ptr [esp+8],eax
 00658B83    fild        dword ptr [esp+8]
 00658B87    fstp        qword ptr [esp]
 00658B8A    wait
>00658B8B    jmp         0065B276
 00658B90    cmp         byte ptr [esi+42D],3B
 00658B97    sete        al
 00658B9A    movsx       eax,al
 00658B9D    mov         dword ptr [esp+8],eax
 00658BA1    fild        dword ptr [esp+8]
 00658BA5    fstp        qword ptr [esp]
 00658BA8    wait
>00658BA9    jmp         0065B276
 00658BAE    cmp         byte ptr [esi+42D],3D
 00658BB5    sete        al
 00658BB8    movsx       eax,al
 00658BBB    mov         dword ptr [esp+8],eax
 00658BBF    fild        dword ptr [esp+8]
 00658BC3    fstp        qword ptr [esp]
 00658BC6    wait
>00658BC7    jmp         0065B276
 00658BCC    cmp         byte ptr [esi+42D],3F
 00658BD3    sete        al
 00658BD6    movsx       eax,al
 00658BD9    mov         dword ptr [esp+8],eax
 00658BDD    fild        dword ptr [esp+8]
 00658BE1    fstp        qword ptr [esp]
 00658BE4    wait
>00658BE5    jmp         0065B276
 00658BEA    cmp         byte ptr [esi+42D],40
 00658BF1    sete        al
 00658BF4    movsx       eax,al
 00658BF7    mov         dword ptr [esp+8],eax
 00658BFB    fild        dword ptr [esp+8]
 00658BFF    fstp        qword ptr [esp]
 00658C02    wait
>00658C03    jmp         0065B276
 00658C08    cmp         byte ptr [esi+42D],41
 00658C0F    sete        al
 00658C12    movsx       eax,al
 00658C15    mov         dword ptr [esp+8],eax
 00658C19    fild        dword ptr [esp+8]
 00658C1D    fstp        qword ptr [esp]
 00658C20    wait
>00658C21    jmp         0065B276
 00658C26    cmp         byte ptr [esi+42D],43
 00658C2D    sete        al
 00658C30    movsx       eax,al
 00658C33    mov         dword ptr [esp+8],eax
 00658C37    fild        dword ptr [esp+8]
 00658C3B    fstp        qword ptr [esp]
 00658C3E    wait
>00658C3F    jmp         0065B276
 00658C44    cmp         byte ptr [esi+42F],46
 00658C4B    sete        al
 00658C4E    movsx       eax,al
 00658C51    mov         dword ptr [esp+8],eax
 00658C55    fild        dword ptr [esp+8]
 00658C59    fstp        qword ptr [esp]
 00658C5C    wait
>00658C5D    jmp         0065B276
 00658C62    cmp         byte ptr [esi+42F],45
 00658C69    sete        al
 00658C6C    movsx       eax,al
 00658C6F    mov         dword ptr [esp+8],eax
 00658C73    fild        dword ptr [esp+8]
 00658C77    fstp        qword ptr [esp]
 00658C7A    wait
>00658C7B    jmp         0065B276
 00658C80    mov         eax,dword ptr [esi+4B4]
 00658C86    movzx       eax,byte ptr [eax+444]
 00658C8D    movsx       eax,al
 00658C90    mov         dword ptr [esp+8],eax
 00658C94    fild        dword ptr [esp+8]
 00658C98    fstp        qword ptr [esp]
 00658C9B    wait
>00658C9C    jmp         0065B276
 00658CA1    mov         eax,dword ptr [esi+4B4]
 00658CA7    movzx       eax,byte ptr [eax+446]
 00658CAE    movsx       eax,al
 00658CB1    mov         dword ptr [esp+8],eax
 00658CB5    fild        dword ptr [esp+8]
 00658CB9    fstp        qword ptr [esp]
 00658CBC    wait
>00658CBD    jmp         0065B276
 00658CC2    mov         eax,esi
 00658CC4    call        TWiimoteObject.HasBladeFX
 00658CC9    movsx       eax,al
 00658CCC    mov         dword ptr [esp+8],eax
 00658CD0    fild        dword ptr [esp+8]
 00658CD4    fstp        qword ptr [esp]
 00658CD7    wait
>00658CD8    jmp         0065B276
 00658CDD    movzx       eax,byte ptr [esi+4A9]
 00658CE4    movsx       eax,al
 00658CE7    mov         dword ptr [esp+8],eax
 00658CEB    fild        dword ptr [esp+8]
 00658CEF    fstp        qword ptr [esp]
 00658CF2    wait
>00658CF3    jmp         0065B276
 00658CF8    mov         eax,dword ptr [esi+4B8]
 00658CFE    cmp         byte ptr [eax+8],0
>00658D02    je          00658D0D
 00658D04    cmp         dword ptr [esi+4B0],0
>00658D0B    jg          00658D11
 00658D0D    xor         eax,eax
>00658D0F    jmp         00658D13
 00658D11    mov         al,1
 00658D13    movsx       eax,al
 00658D16    mov         dword ptr [esp+8],eax
 00658D1A    fild        dword ptr [esp+8]
 00658D1E    fstp        qword ptr [esp]
 00658D21    wait
>00658D22    jmp         0065B276
 00658D27    mov         eax,dword ptr [esi+4B4]
 00658D2D    call        TNunchukObject.C
 00658D32    movsx       eax,al
 00658D35    mov         dword ptr [esp+8],eax
 00658D39    fild        dword ptr [esp+8]
 00658D3D    fstp        qword ptr [esp]
 00658D40    wait
>00658D41    jmp         0065B276
 00658D46    mov         eax,dword ptr [esi+4B4]
 00658D4C    call        TNunchukObject.Z
 00658D51    movsx       eax,al
 00658D54    mov         dword ptr [esp+8],eax
 00658D58    fild        dword ptr [esp+8]
 00658D5C    fstp        qword ptr [esp]
 00658D5F    wait
>00658D60    jmp         0065B276
 00658D65    mov         eax,dword ptr [esi+4B4]
 00658D6B    call        TNunchukObject.FX
 00658D70    movsx       eax,al
 00658D73    mov         dword ptr [esp+8],eax
 00658D77    fild        dword ptr [esp+8]
 00658D7B    fstp        qword ptr [esp]
 00658D7E    wait
>00658D7F    jmp         0065B276
 00658D84    mov         eax,dword ptr [esi+4B4]
 00658D8A    call        TNunchukObject.Classic
 00658D8F    movsx       eax,al
 00658D92    mov         dword ptr [esp+8],eax
 00658D96    fild        dword ptr [esp+8]
 00658D9A    fstp        qword ptr [esp]
 00658D9D    wait
>00658D9E    jmp         0065B276
 00658DA3    mov         eax,dword ptr [esi+4B4]
 00658DA9    fild        dword ptr [eax+45C]
 00658DAF    fstp        qword ptr [esp]
 00658DB2    wait
>00658DB3    jmp         0065B276
 00658DB8    mov         eax,dword ptr [esi+4B4]
 00658DBE    call        TNunchukObject.StickX
 00658DC3    fstp        qword ptr [esp]
 00658DC6    wait
>00658DC7    jmp         0065B276
 00658DCC    mov         eax,dword ptr [esi+4B4]
 00658DD2    call        TNunchukObject.StickY
 00658DD7    fstp        qword ptr [esp]
 00658DDA    wait
>00658DDB    jmp         0065B276
 00658DE0    mov         eax,dword ptr [esi+4B4]
 00658DE6    call        TNunchukObject.Up
 00658DEB    movsx       eax,al
 00658DEE    mov         dword ptr [esp+8],eax
 00658DF2    fild        dword ptr [esp+8]
 00658DF6    fstp        qword ptr [esp]
 00658DF9    wait
>00658DFA    jmp         0065B276
 00658DFF    mov         eax,dword ptr [esi+4B4]
 00658E05    call        TNunchukObject.Down
 00658E0A    movsx       eax,al
 00658E0D    mov         dword ptr [esp+8],eax
 00658E11    fild        dword ptr [esp+8]
 00658E15    fstp        qword ptr [esp]
 00658E18    wait
>00658E19    jmp         0065B276
 00658E1E    mov         eax,dword ptr [esi+4B4]
 00658E24    call        TNunchukObject.Left
 00658E29    movsx       eax,al
 00658E2C    mov         dword ptr [esp+8],eax
 00658E30    fild        dword ptr [esp+8]
 00658E34    fstp        qword ptr [esp]
 00658E37    wait
>00658E38    jmp         0065B276
 00658E3D    mov         eax,dword ptr [esi+4B4]
 00658E43    call        TNunchukObject.Right
 00658E48    movsx       eax,al
 00658E4B    mov         dword ptr [esp+8],eax
 00658E4F    fild        dword ptr [esp+8]
 00658E53    fstp        qword ptr [esp]
 00658E56    wait
>00658E57    jmp         0065B276
 00658E5C    mov         eax,dword ptr [esi+4B4]
 00658E62    mov         edx,dword ptr [eax+2E8]
 00658E68    mov         dword ptr [esp],edx
 00658E6B    mov         edx,dword ptr [eax+2EC]
 00658E71    mov         dword ptr [esp+4],edx
>00658E75    jmp         0065B276
 00658E7A    mov         eax,dword ptr [esi+4B4]
 00658E80    mov         edx,dword ptr [eax+2F0]
 00658E86    mov         dword ptr [esp],edx
 00658E89    mov         edx,dword ptr [eax+2F4]
 00658E8F    mov         dword ptr [esp+4],edx
>00658E93    jmp         0065B276
 00658E98    mov         eax,dword ptr [esi+4B4]
 00658E9E    mov         edx,dword ptr [eax+2F8]
 00658EA4    mov         dword ptr [esp],edx
 00658EA7    mov         edx,dword ptr [eax+2FC]
 00658EAD    mov         dword ptr [esp+4],edx
>00658EB1    jmp         0065B276
 00658EB6    mov         eax,dword ptr [esi+4B4]
 00658EBC    mov         edx,dword ptr [eax+2A8]
 00658EC2    mov         dword ptr [esp],edx
 00658EC5    mov         edx,dword ptr [eax+2AC]
 00658ECB    mov         dword ptr [esp+4],edx
>00658ECF    jmp         0065B276
 00658ED4    mov         eax,dword ptr [esi+4B4]
 00658EDA    mov         edx,dword ptr [eax+2B8]
 00658EE0    mov         dword ptr [esp],edx
 00658EE3    mov         edx,dword ptr [eax+2BC]
 00658EE9    mov         dword ptr [esp+4],edx
>00658EED    jmp         0065B276
 00658EF2    mov         eax,dword ptr [esi+4B4]
 00658EF8    mov         edx,dword ptr [eax+2C8]
 00658EFE    mov         dword ptr [esp],edx
 00658F01    mov         edx,dword ptr [eax+2CC]
 00658F07    mov         dword ptr [esp+4],edx
>00658F0B    jmp         0065B276
 00658F10    mov         eax,dword ptr [esi+4B4]
 00658F16    mov         edx,dword ptr [eax+2B0]
 00658F1C    mov         dword ptr [esp],edx
 00658F1F    mov         edx,dword ptr [eax+2B4]
 00658F25    mov         dword ptr [esp+4],edx
>00658F29    jmp         0065B276
 00658F2E    mov         eax,dword ptr [esi+4B4]
 00658F34    mov         edx,dword ptr [eax+2C0]
 00658F3A    mov         dword ptr [esp],edx
 00658F3D    mov         edx,dword ptr [eax+2C4]
 00658F43    mov         dword ptr [esp+4],edx
>00658F47    jmp         0065B276
 00658F4C    mov         eax,dword ptr [esi+4B4]
 00658F52    mov         edx,dword ptr [eax+2D0]
 00658F58    mov         dword ptr [esp],edx
 00658F5B    mov         edx,dword ptr [eax+2D4]
 00658F61    mov         dword ptr [esp+4],edx
>00658F65    jmp         0065B276
 00658F6A    mov         eax,dword ptr [esi+4B4]
 00658F70    mov         edx,dword ptr [eax+2D8]
 00658F76    mov         dword ptr [esp],edx
 00658F79    mov         edx,dword ptr [eax+2DC]
 00658F7F    mov         dword ptr [esp+4],edx
>00658F83    jmp         0065B276
 00658F88    mov         eax,dword ptr [esi+4B4]
 00658F8E    call        TAccelerometerObject.Shakiness
 00658F93    fstp        qword ptr [esp]
 00658F96    wait
>00658F97    jmp         0065B276
 00658F9C    mov         eax,dword ptr [esi+4B4]
 00658FA2    mov         edx,dword ptr [eax+338]
 00658FA8    mov         dword ptr [esp],edx
 00658FAB    mov         edx,dword ptr [eax+33C]
 00658FB1    mov         dword ptr [esp+4],edx
>00658FB5    jmp         0065B276
 00658FBA    mov         eax,dword ptr [esi+4B4]
 00658FC0    mov         edx,dword ptr [eax+340]
 00658FC6    mov         dword ptr [esp],edx
 00658FC9    mov         edx,dword ptr [eax+344]
 00658FCF    mov         dword ptr [esp+4],edx
>00658FD3    jmp         0065B276
 00658FD8    mov         eax,dword ptr [esi+4B4]
 00658FDE    mov         edx,dword ptr [eax+348]
 00658FE4    mov         dword ptr [esp],edx
 00658FE7    mov         edx,dword ptr [eax+34C]
 00658FED    mov         dword ptr [esp+4],edx
>00658FF1    jmp         0065B276
 00658FF6    mov         eax,dword ptr [esi+4B4]
 00658FFC    call        TAccelerometerObject.RawAccX
 00659001    fstp        qword ptr [esp]
 00659004    wait
>00659005    jmp         0065B276
 0065900A    mov         eax,dword ptr [esi+4B4]
 00659010    call        TAccelerometerObject.RawAccY
 00659015    fstp        qword ptr [esp]
 00659018    wait
>00659019    jmp         0065B276
 0065901E    mov         eax,dword ptr [esi+4B4]
 00659024    call        TAccelerometerObject.RawAccZ
 00659029    fstp        qword ptr [esp]
 0065902C    wait
>0065902D    jmp         0065B276
 00659032    mov         eax,dword ptr [esi+4B4]
 00659038    call        TAccelerometerObject.RelAccX
 0065903D    fstp        qword ptr [esp]
 00659040    wait
>00659041    jmp         0065B276
 00659046    mov         eax,dword ptr [esi+4B4]
 0065904C    call        TAccelerometerObject.RelAccY
 00659051    fstp        qword ptr [esp]
 00659054    wait
>00659055    jmp         0065B276
 0065905A    mov         eax,dword ptr [esi+4B4]
 00659060    call        TAccelerometerObject.RelAccZ
 00659065    fstp        qword ptr [esp]
 00659068    wait
>00659069    jmp         0065B276
 0065906E    mov         eax,dword ptr [esi+4B4]
 00659074    mov         edx,dword ptr [eax+3C0]
 0065907A    mov         dword ptr [esp],edx
 0065907D    mov         edx,dword ptr [eax+3C4]
 00659083    mov         dword ptr [esp+4],edx
>00659087    jmp         0065B276
 0065908C    mov         eax,dword ptr [esi+4B4]
 00659092    mov         edx,dword ptr [eax+3B8]
 00659098    mov         dword ptr [esp],edx
 0065909B    mov         edx,dword ptr [eax+3BC]
 006590A1    mov         dword ptr [esp+4],edx
>006590A5    jmp         0065B276
 006590AA    mov         eax,dword ptr [esi+4B4]
 006590B0    mov         edx,dword ptr [eax+3D8]
 006590B6    mov         dword ptr [esp],edx
 006590B9    mov         edx,dword ptr [eax+3DC]
 006590BF    mov         dword ptr [esp+4],edx
>006590C3    jmp         0065B276
 006590C8    mov         eax,dword ptr [esi+4B4]
 006590CE    mov         edx,dword ptr [eax+3D0]
 006590D4    mov         dword ptr [esp],edx
 006590D7    mov         edx,dword ptr [eax+3D4]
 006590DD    mov         dword ptr [esp+4],edx
>006590E1    jmp         0065B276
 006590E6    mov         eax,dword ptr [esi+4B4]
 006590EC    call        TAccelerometerObject.OnTable
 006590F1    movsx       eax,al
 006590F4    mov         dword ptr [esp+8],eax
 006590F8    fild        dword ptr [esp+8]
 006590FC    fstp        qword ptr [esp]
 006590FF    wait
>00659100    jmp         0065B276
 00659105    mov         eax,dword ptr [esi+4B4]
 0065910B    movzx       eax,byte ptr [eax+430]
 00659112    movsx       eax,al
 00659115    mov         dword ptr [esp+8],eax
 00659119    fild        dword ptr [esp+8]
 0065911D    fstp        qword ptr [esp]
 00659120    wait
>00659121    jmp         0065B276
 00659126    mov         eax,dword ptr [esi+4B4]
 0065912C    movzx       eax,byte ptr [eax+431]
 00659133    movsx       eax,al
 00659136    mov         dword ptr [esp+8],eax
 0065913A    fild        dword ptr [esp+8]
 0065913E    fstp        qword ptr [esp]
 00659141    wait
>00659142    jmp         0065B276
 00659147    mov         eax,dword ptr [esi+4B4]
 0065914D    movzx       eax,byte ptr [eax+432]
 00659154    movsx       eax,al
 00659157    mov         dword ptr [esp+8],eax
 0065915B    fild        dword ptr [esp+8]
 0065915F    fstp        qword ptr [esp]
 00659162    wait
>00659163    jmp         0065B276
 00659168    mov         eax,dword ptr [esi+4B4]
 0065916E    movzx       eax,byte ptr [eax+433]
 00659175    movsx       eax,al
 00659178    mov         dword ptr [esp+8],eax
 0065917C    fild        dword ptr [esp+8]
 00659180    fstp        qword ptr [esp]
 00659183    wait
>00659184    jmp         0065B276
 00659189    mov         eax,dword ptr [esi+4B4]
 0065918F    movzx       eax,byte ptr [eax+434]
 00659196    movsx       eax,al
 00659199    mov         dword ptr [esp+8],eax
 0065919D    fild        dword ptr [esp+8]
 006591A1    fstp        qword ptr [esp]
 006591A4    wait
>006591A5    jmp         0065B276
 006591AA    mov         eax,dword ptr [esi+4B4]
 006591B0    call        TAccelerometerObject.Shake
 006591B5    movsx       eax,al
 006591B8    mov         dword ptr [esp+8],eax
 006591BC    fild        dword ptr [esp+8]
 006591C0    fstp        qword ptr [esp]
 006591C3    wait
>006591C4    jmp         0065B276
 006591C9    mov         eax,dword ptr [esi+4B4]
 006591CF    call        TAccelerometerObject.SwingHorizontally
 006591D4    movsx       eax,al
 006591D7    mov         dword ptr [esp+8],eax
 006591DB    fild        dword ptr [esp+8]
 006591DF    fstp        qword ptr [esp]
 006591E2    wait
>006591E3    jmp         0065B276
 006591E8    mov         eax,dword ptr [esi+4B4]
 006591EE    mov         edx,dword ptr [eax]
 006591F0    call        dword ptr [edx+0C]
 006591F3    movsx       eax,al
 006591F6    mov         dword ptr [esp+8],eax
 006591FA    fild        dword ptr [esp+8]
 006591FE    fstp        qword ptr [esp]
 00659201    wait
>00659202    jmp         0065B276
 00659207    mov         eax,dword ptr [esi+4B4]
 0065920D    call        TAccelerometerObject.Stabbing
 00659212    movsx       eax,al
 00659215    mov         dword ptr [esp+8],eax
 00659219    fild        dword ptr [esp+8]
 0065921D    fstp        qword ptr [esp]
 00659220    wait
>00659221    jmp         0065B276
 00659226    mov         eax,dword ptr [esi+4B4]
 0065922C    call        TAccelerometerObject.DrumBeat
 00659231    movsx       eax,al
 00659234    mov         dword ptr [esp+8],eax
 00659238    fild        dword ptr [esp+8]
 0065923C    fstp        qword ptr [esp]
 0065923F    wait
>00659240    jmp         0065B276
 00659245    mov         eax,dword ptr [esi+4B4]
 0065924B    cmp         byte ptr [eax+42F],1
 00659252    sete        al
 00659255    movsx       eax,al
 00659258    mov         dword ptr [esp+8],eax
 0065925C    fild        dword ptr [esp+8]
 00659260    fstp        qword ptr [esp]
 00659263    wait
>00659264    jmp         0065B276
 00659269    mov         eax,dword ptr [esi+4B4]
 0065926F    cmp         byte ptr [eax+42F],2
 00659276    sete        al
 00659279    movsx       eax,al
 0065927C    mov         dword ptr [esp+8],eax
 00659280    fild        dword ptr [esp+8]
 00659284    fstp        qword ptr [esp]
 00659287    wait
>00659288    jmp         0065B276
 0065928D    mov         eax,dword ptr [esi+4B4]
 00659293    cmp         byte ptr [eax+42F],3
 0065929A    sete        al
 0065929D    movsx       eax,al
 006592A0    mov         dword ptr [esp+8],eax
 006592A4    fild        dword ptr [esp+8]
 006592A8    fstp        qword ptr [esp]
 006592AB    wait
>006592AC    jmp         0065B276
 006592B1    mov         eax,dword ptr [esi+4B4]
 006592B7    cmp         byte ptr [eax+42F],4
 006592BE    sete        al
 006592C1    movsx       eax,al
 006592C4    mov         dword ptr [esp+8],eax
 006592C8    fild        dword ptr [esp+8]
 006592CC    fstp        qword ptr [esp]
 006592CF    wait
>006592D0    jmp         0065B276
 006592D5    mov         eax,dword ptr [esi+4B4]
 006592DB    cmp         byte ptr [eax+42F],5
 006592E2    sete        al
 006592E5    movsx       eax,al
 006592E8    mov         dword ptr [esp+8],eax
 006592EC    fild        dword ptr [esp+8]
 006592F0    fstp        qword ptr [esp]
 006592F3    wait
>006592F4    jmp         0065B276
 006592F9    mov         eax,dword ptr [esi+4B4]
 006592FF    cmp         byte ptr [eax+42F],23
 00659306    sete        al
 00659309    movsx       eax,al
 0065930C    mov         dword ptr [esp+8],eax
 00659310    fild        dword ptr [esp+8]
 00659314    fstp        qword ptr [esp]
 00659317    wait
>00659318    jmp         0065B276
 0065931D    mov         eax,dword ptr [esi+4B4]
 00659323    cmp         byte ptr [eax+42F],24
 0065932A    sete        al
 0065932D    movsx       eax,al
 00659330    mov         dword ptr [esp+8],eax
 00659334    fild        dword ptr [esp+8]
 00659338    fstp        qword ptr [esp]
 0065933B    wait
>0065933C    jmp         0065B276
 00659341    mov         eax,dword ptr [esi+4B4]
 00659347    cmp         byte ptr [eax+42F],25
 0065934E    sete        al
 00659351    movsx       eax,al
 00659354    mov         dword ptr [esp+8],eax
 00659358    fild        dword ptr [esp+8]
 0065935C    fstp        qword ptr [esp]
 0065935F    wait
>00659360    jmp         0065B276
 00659365    mov         eax,dword ptr [esi+4B4]
 0065936B    cmp         byte ptr [eax+42F],26
 00659372    sete        al
 00659375    movsx       eax,al
 00659378    mov         dword ptr [esp+8],eax
 0065937C    fild        dword ptr [esp+8]
 00659380    fstp        qword ptr [esp]
 00659383    wait
>00659384    jmp         0065B276
 00659389    mov         eax,dword ptr [esi+4B4]
 0065938F    cmp         byte ptr [eax+42F],27
 00659396    sete        al
 00659399    movsx       eax,al
 0065939C    mov         dword ptr [esp+8],eax
 006593A0    fild        dword ptr [esp+8]
 006593A4    fstp        qword ptr [esp]
 006593A7    wait
>006593A8    jmp         0065B276
 006593AD    mov         eax,dword ptr [esi+4B4]
 006593B3    cmp         byte ptr [eax+42F],12
 006593BA    sete        al
 006593BD    movsx       eax,al
 006593C0    mov         dword ptr [esp+8],eax
 006593C4    fild        dword ptr [esp+8]
 006593C8    fstp        qword ptr [esp]
 006593CB    wait
>006593CC    jmp         0065B276
 006593D1    mov         eax,dword ptr [esi+4B4]
 006593D7    cmp         byte ptr [eax+42F],13
 006593DE    sete        al
 006593E1    movsx       eax,al
 006593E4    mov         dword ptr [esp+8],eax
 006593E8    fild        dword ptr [esp+8]
 006593EC    fstp        qword ptr [esp]
 006593EF    wait
>006593F0    jmp         0065B276
 006593F5    mov         eax,dword ptr [esi+4B4]
 006593FB    cmp         byte ptr [eax+42F],14
 00659402    sete        al
 00659405    movsx       eax,al
 00659408    mov         dword ptr [esp+8],eax
 0065940C    fild        dword ptr [esp+8]
 00659410    fstp        qword ptr [esp]
 00659413    wait
>00659414    jmp         0065B276
 00659419    mov         eax,dword ptr [esi+4B4]
 0065941F    cmp         byte ptr [eax+42F],15
 00659426    sete        al
 00659429    movsx       eax,al
 0065942C    mov         dword ptr [esp+8],eax
 00659430    fild        dword ptr [esp+8]
 00659434    fstp        qword ptr [esp]
 00659437    wait
>00659438    jmp         0065B276
 0065943D    mov         eax,dword ptr [esi+4B4]
 00659443    cmp         byte ptr [eax+42F],16
 0065944A    sete        al
 0065944D    movsx       eax,al
 00659450    mov         dword ptr [esp+8],eax
 00659454    fild        dword ptr [esp+8]
 00659458    fstp        qword ptr [esp]
 0065945B    wait
>0065945C    jmp         0065B276
 00659461    mov         eax,dword ptr [esi+4B4]
 00659467    cmp         byte ptr [eax+42F],34
 0065946E    sete        al
 00659471    movsx       eax,al
 00659474    mov         dword ptr [esp+8],eax
 00659478    fild        dword ptr [esp+8]
 0065947C    fstp        qword ptr [esp]
 0065947F    wait
>00659480    jmp         0065B276
 00659485    mov         eax,dword ptr [esi+4B4]
 0065948B    cmp         byte ptr [eax+42F],35
 00659492    sete        al
 00659495    movsx       eax,al
 00659498    mov         dword ptr [esp+8],eax
 0065949C    fild        dword ptr [esp+8]
 006594A0    fstp        qword ptr [esp]
 006594A3    wait
>006594A4    jmp         0065B276
 006594A9    mov         eax,dword ptr [esi+4B4]
 006594AF    cmp         byte ptr [eax+42F],36
 006594B6    sete        al
 006594B9    movsx       eax,al
 006594BC    mov         dword ptr [esp+8],eax
 006594C0    fild        dword ptr [esp+8]
 006594C4    fstp        qword ptr [esp]
 006594C7    wait
>006594C8    jmp         0065B276
 006594CD    mov         eax,dword ptr [esi+4B4]
 006594D3    cmp         byte ptr [eax+42F],37
 006594DA    sete        al
 006594DD    movsx       eax,al
 006594E0    mov         dword ptr [esp+8],eax
 006594E4    fild        dword ptr [esp+8]
 006594E8    fstp        qword ptr [esp]
 006594EB    wait
>006594EC    jmp         0065B276
 006594F1    mov         eax,dword ptr [esi+4B4]
 006594F7    cmp         byte ptr [eax+42F],38
 006594FE    sete        al
 00659501    movsx       eax,al
 00659504    mov         dword ptr [esp+8],eax
 00659508    fild        dword ptr [esp+8]
 0065950C    fstp        qword ptr [esp]
 0065950F    wait
>00659510    jmp         0065B276
 00659515    mov         eax,dword ptr [esi+4B4]
 0065951B    cmp         byte ptr [eax+42D],1
 00659522    sete        al
 00659525    movsx       eax,al
 00659528    mov         dword ptr [esp+8],eax
 0065952C    fild        dword ptr [esp+8]
 00659530    fstp        qword ptr [esp]
 00659533    wait
>00659534    jmp         0065B276
 00659539    mov         eax,dword ptr [esi+4B4]
 0065953F    cmp         byte ptr [eax+42D],2
 00659546    sete        al
 00659549    movsx       eax,al
 0065954C    mov         dword ptr [esp+8],eax
 00659550    fild        dword ptr [esp+8]
 00659554    fstp        qword ptr [esp]
 00659557    wait
>00659558    jmp         0065B276
 0065955D    mov         eax,dword ptr [esi+4B4]
 00659563    cmp         byte ptr [eax+42D],3
 0065956A    sete        al
 0065956D    movsx       eax,al
 00659570    mov         dword ptr [esp+8],eax
 00659574    fild        dword ptr [esp+8]
 00659578    fstp        qword ptr [esp]
 0065957B    wait
>0065957C    jmp         0065B276
 00659581    mov         eax,dword ptr [esi+4B4]
 00659587    cmp         byte ptr [eax+42D],4
 0065958E    sete        al
 00659591    movsx       eax,al
 00659594    mov         dword ptr [esp+8],eax
 00659598    fild        dword ptr [esp+8]
 0065959C    fstp        qword ptr [esp]
 0065959F    wait
>006595A0    jmp         0065B276
 006595A5    mov         eax,dword ptr [esi+4B4]
 006595AB    cmp         byte ptr [eax+42D],23
 006595B2    sete        al
 006595B5    movsx       eax,al
 006595B8    mov         dword ptr [esp+8],eax
 006595BC    fild        dword ptr [esp+8]
 006595C0    fstp        qword ptr [esp]
 006595C3    wait
>006595C4    jmp         0065B276
 006595C9    mov         eax,dword ptr [esi+4B4]
 006595CF    cmp         byte ptr [eax+42D],24
 006595D6    sete        al
 006595D9    movsx       eax,al
 006595DC    mov         dword ptr [esp+8],eax
 006595E0    fild        dword ptr [esp+8]
 006595E4    fstp        qword ptr [esp]
 006595E7    wait
>006595E8    jmp         0065B276
 006595ED    mov         eax,dword ptr [esi+4B4]
 006595F3    cmp         byte ptr [eax+42D],25
 006595FA    sete        al
 006595FD    movsx       eax,al
 00659600    mov         dword ptr [esp+8],eax
 00659604    fild        dword ptr [esp+8]
 00659608    fstp        qword ptr [esp]
 0065960B    wait
>0065960C    jmp         0065B276
 00659611    mov         eax,dword ptr [esi+4B4]
 00659617    cmp         byte ptr [eax+42D],26
 0065961E    sete        al
 00659621    movsx       eax,al
 00659624    mov         dword ptr [esp+8],eax
 00659628    fild        dword ptr [esp+8]
 0065962C    fstp        qword ptr [esp]
 0065962F    wait
>00659630    jmp         0065B276
 00659635    mov         eax,dword ptr [esi+4B4]
 0065963B    cmp         byte ptr [eax+42D],12
 00659642    sete        al
 00659645    movsx       eax,al
 00659648    mov         dword ptr [esp+8],eax
 0065964C    fild        dword ptr [esp+8]
 00659650    fstp        qword ptr [esp]
 00659653    wait
>00659654    jmp         0065B276
 00659659    mov         eax,dword ptr [esi+4B4]
 0065965F    cmp         byte ptr [eax+42D],13
 00659666    sete        al
 00659669    movsx       eax,al
 0065966C    mov         dword ptr [esp+8],eax
 00659670    fild        dword ptr [esp+8]
 00659674    fstp        qword ptr [esp]
 00659677    wait
>00659678    jmp         0065B276
 0065967D    mov         eax,dword ptr [esi+4B4]
 00659683    cmp         byte ptr [eax+42D],14
 0065968A    sete        al
 0065968D    movsx       eax,al
 00659690    mov         dword ptr [esp+8],eax
 00659694    fild        dword ptr [esp+8]
 00659698    fstp        qword ptr [esp]
 0065969B    wait
>0065969C    jmp         0065B276
 006596A1    mov         eax,dword ptr [esi+4B4]
 006596A7    cmp         byte ptr [eax+42D],15
 006596AE    sete        al
 006596B1    movsx       eax,al
 006596B4    mov         dword ptr [esp+8],eax
 006596B8    fild        dword ptr [esp+8]
 006596BC    fstp        qword ptr [esp]
 006596BF    wait
>006596C0    jmp         0065B276
 006596C5    mov         eax,dword ptr [esi+4B4]
 006596CB    cmp         byte ptr [eax+42D],34
 006596D2    sete        al
 006596D5    movsx       eax,al
 006596D8    mov         dword ptr [esp+8],eax
 006596DC    fild        dword ptr [esp+8]
 006596E0    fstp        qword ptr [esp]
 006596E3    wait
>006596E4    jmp         0065B276
 006596E9    mov         eax,dword ptr [esi+4B4]
 006596EF    cmp         byte ptr [eax+42D],35
 006596F6    sete        al
 006596F9    movsx       eax,al
 006596FC    mov         dword ptr [esp+8],eax
 00659700    fild        dword ptr [esp+8]
 00659704    fstp        qword ptr [esp]
 00659707    wait
>00659708    jmp         0065B276
 0065970D    mov         eax,dword ptr [esi+4B4]
 00659713    cmp         byte ptr [eax+42D],36
 0065971A    sete        al
 0065971D    movsx       eax,al
 00659720    mov         dword ptr [esp+8],eax
 00659724    fild        dword ptr [esp+8]
 00659728    fstp        qword ptr [esp]
 0065972B    wait
>0065972C    jmp         0065B276
 00659731    mov         eax,dword ptr [esi+4B4]
 00659737    cmp         byte ptr [eax+42D],37
 0065973E    sete        al
 00659741    movsx       eax,al
 00659744    mov         dword ptr [esp+8],eax
 00659748    fild        dword ptr [esp+8]
 0065974C    fstp        qword ptr [esp]
 0065974F    wait
>00659750    jmp         0065B276
 00659755    mov         eax,dword ptr [esi+4B4]
 0065975B    cmp         byte ptr [eax+42F],6
 00659762    sete        al
 00659765    movsx       eax,al
 00659768    mov         dword ptr [esp+8],eax
 0065976C    fild        dword ptr [esp+8]
 00659770    fstp        qword ptr [esp]
 00659773    wait
>00659774    jmp         0065B276
 00659779    mov         eax,dword ptr [esi+4B4]
 0065977F    cmp         byte ptr [eax+42F],7
 00659786    sete        al
 00659789    movsx       eax,al
 0065978C    mov         dword ptr [esp+8],eax
 00659790    fild        dword ptr [esp+8]
 00659794    fstp        qword ptr [esp]
 00659797    wait
>00659798    jmp         0065B276
 0065979D    mov         eax,dword ptr [esi+4B4]
 006597A3    cmp         byte ptr [eax+42F],8
 006597AA    sete        al
 006597AD    movsx       eax,al
 006597B0    mov         dword ptr [esp+8],eax
 006597B4    fild        dword ptr [esp+8]
 006597B8    fstp        qword ptr [esp]
 006597BB    wait
>006597BC    jmp         0065B276
 006597C1    mov         eax,dword ptr [esi+4B4]
 006597C7    cmp         byte ptr [eax+42F],0A
 006597CE    sete        al
 006597D1    movsx       eax,al
 006597D4    mov         dword ptr [esp+8],eax
 006597D8    fild        dword ptr [esp+8]
 006597DC    fstp        qword ptr [esp]
 006597DF    wait
>006597E0    jmp         0065B276
 006597E5    mov         eax,dword ptr [esi+4B4]
 006597EB    cmp         byte ptr [eax+42F],0B
 006597F2    sete        al
 006597F5    movsx       eax,al
 006597F8    mov         dword ptr [esp+8],eax
 006597FC    fild        dword ptr [esp+8]
 00659800    fstp        qword ptr [esp]
 00659803    wait
>00659804    jmp         0065B276
 00659809    mov         eax,dword ptr [esi+4B4]
 0065980F    cmp         byte ptr [eax+42F],9
 00659816    sete        al
 00659819    movsx       eax,al
 0065981C    mov         dword ptr [esp+8],eax
 00659820    fild        dword ptr [esp+8]
 00659824    fstp        qword ptr [esp]
 00659827    wait
>00659828    jmp         0065B276
 0065982D    mov         eax,dword ptr [esi+4B4]
 00659833    cmp         byte ptr [eax+42F],0C
 0065983A    sete        al
 0065983D    movsx       eax,al
 00659840    mov         dword ptr [esp+8],eax
 00659844    fild        dword ptr [esp+8]
 00659848    fstp        qword ptr [esp]
 0065984B    wait
>0065984C    jmp         0065B276
 00659851    mov         eax,dword ptr [esi+4B4]
 00659857    cmp         byte ptr [eax+42F],0D
 0065985E    sete        al
 00659861    movsx       eax,al
 00659864    mov         dword ptr [esp+8],eax
 00659868    fild        dword ptr [esp+8]
 0065986C    fstp        qword ptr [esp]
 0065986F    wait
>00659870    jmp         0065B276
 00659875    mov         eax,dword ptr [esi+4B4]
 0065987B    cmp         byte ptr [eax+42F],0E
 00659882    sete        al
 00659885    movsx       eax,al
 00659888    mov         dword ptr [esp+8],eax
 0065988C    fild        dword ptr [esp+8]
 00659890    fstp        qword ptr [esp]
 00659893    wait
>00659894    jmp         0065B276
 00659899    mov         eax,dword ptr [esi+4B4]
 0065989F    cmp         byte ptr [eax+42F],10
 006598A6    sete        al
 006598A9    movsx       eax,al
 006598AC    mov         dword ptr [esp+8],eax
 006598B0    fild        dword ptr [esp+8]
 006598B4    fstp        qword ptr [esp]
 006598B7    wait
>006598B8    jmp         0065B276
 006598BD    mov         eax,dword ptr [esi+4B4]
 006598C3    cmp         byte ptr [eax+42F],11
 006598CA    sete        al
 006598CD    movsx       eax,al
 006598D0    mov         dword ptr [esp+8],eax
 006598D4    fild        dword ptr [esp+8]
 006598D8    fstp        qword ptr [esp]
 006598DB    wait
>006598DC    jmp         0065B276
 006598E1    mov         eax,dword ptr [esi+4B4]
 006598E7    cmp         byte ptr [eax+42F],0F
 006598EE    sete        al
 006598F1    movsx       eax,al
 006598F4    mov         dword ptr [esp+8],eax
 006598F8    fild        dword ptr [esp+8]
 006598FC    fstp        qword ptr [esp]
 006598FF    wait
>00659900    jmp         0065B276
 00659905    mov         eax,dword ptr [esi+4B4]
 0065990B    cmp         byte ptr [eax+42F],17
 00659912    sete        al
 00659915    movsx       eax,al
 00659918    mov         dword ptr [esp+8],eax
 0065991C    fild        dword ptr [esp+8]
 00659920    fstp        qword ptr [esp]
 00659923    wait
>00659924    jmp         0065B276
 00659929    mov         eax,dword ptr [esi+4B4]
 0065992F    cmp         byte ptr [eax+42F],18
 00659936    sete        al
 00659939    movsx       eax,al
 0065993C    mov         dword ptr [esp+8],eax
 00659940    fild        dword ptr [esp+8]
 00659944    fstp        qword ptr [esp]
 00659947    wait
>00659948    jmp         0065B276
 0065994D    mov         eax,dword ptr [esi+4B4]
 00659953    cmp         byte ptr [eax+42F],19
 0065995A    sete        al
 0065995D    movsx       eax,al
 00659960    mov         dword ptr [esp+8],eax
 00659964    fild        dword ptr [esp+8]
 00659968    fstp        qword ptr [esp]
 0065996B    wait
>0065996C    jmp         0065B276
 00659971    mov         eax,dword ptr [esi+4B4]
 00659977    cmp         byte ptr [eax+42F],1B
 0065997E    sete        al
 00659981    movsx       eax,al
 00659984    mov         dword ptr [esp+8],eax
 00659988    fild        dword ptr [esp+8]
 0065998C    fstp        qword ptr [esp]
 0065998F    wait
>00659990    jmp         0065B276
 00659995    mov         eax,dword ptr [esi+4B4]
 0065999B    cmp         byte ptr [eax+42F],1C
 006599A2    sete        al
 006599A5    movsx       eax,al
 006599A8    mov         dword ptr [esp+8],eax
 006599AC    fild        dword ptr [esp+8]
 006599B0    fstp        qword ptr [esp]
 006599B3    wait
>006599B4    jmp         0065B276
 006599B9    mov         eax,dword ptr [esi+4B4]
 006599BF    cmp         byte ptr [eax+42F],1A
 006599C6    sete        al
 006599C9    movsx       eax,al
 006599CC    mov         dword ptr [esp+8],eax
 006599D0    fild        dword ptr [esp+8]
 006599D4    fstp        qword ptr [esp]
 006599D7    wait
>006599D8    jmp         0065B276
 006599DD    mov         eax,dword ptr [esi+4B4]
 006599E3    cmp         byte ptr [eax+42F],1D
 006599EA    sete        al
 006599ED    movsx       eax,al
 006599F0    mov         dword ptr [esp+8],eax
 006599F4    fild        dword ptr [esp+8]
 006599F8    fstp        qword ptr [esp]
 006599FB    wait
>006599FC    jmp         0065B276
 00659A01    mov         eax,dword ptr [esi+4B4]
 00659A07    cmp         byte ptr [eax+42F],1E
 00659A0E    sete        al
 00659A11    movsx       eax,al
 00659A14    mov         dword ptr [esp+8],eax
 00659A18    fild        dword ptr [esp+8]
 00659A1C    fstp        qword ptr [esp]
 00659A1F    wait
>00659A20    jmp         0065B276
 00659A25    mov         eax,dword ptr [esi+4B4]
 00659A2B    cmp         byte ptr [eax+42F],1F
 00659A32    sete        al
 00659A35    movsx       eax,al
 00659A38    mov         dword ptr [esp+8],eax
 00659A3C    fild        dword ptr [esp+8]
 00659A40    fstp        qword ptr [esp]
 00659A43    wait
>00659A44    jmp         0065B276
 00659A49    mov         eax,dword ptr [esi+4B4]
 00659A4F    cmp         byte ptr [eax+42F],21
 00659A56    sete        al
 00659A59    movsx       eax,al
 00659A5C    mov         dword ptr [esp+8],eax
 00659A60    fild        dword ptr [esp+8]
 00659A64    fstp        qword ptr [esp]
 00659A67    wait
>00659A68    jmp         0065B276
 00659A6D    mov         eax,dword ptr [esi+4B4]
 00659A73    cmp         byte ptr [eax+42F],22
 00659A7A    sete        al
 00659A7D    movsx       eax,al
 00659A80    mov         dword ptr [esp+8],eax
 00659A84    fild        dword ptr [esp+8]
 00659A88    fstp        qword ptr [esp]
 00659A8B    wait
>00659A8C    jmp         0065B276
 00659A91    mov         eax,dword ptr [esi+4B4]
 00659A97    cmp         byte ptr [eax+42F],20
 00659A9E    sete        al
 00659AA1    movsx       eax,al
 00659AA4    mov         dword ptr [esp+8],eax
 00659AA8    fild        dword ptr [esp+8]
 00659AAC    fstp        qword ptr [esp]
 00659AAF    wait
>00659AB0    jmp         0065B276
 00659AB5    mov         eax,dword ptr [esi+4B4]
 00659ABB    cmp         byte ptr [eax+42F],28
 00659AC2    sete        al
 00659AC5    movsx       eax,al
 00659AC8    mov         dword ptr [esp+8],eax
 00659ACC    fild        dword ptr [esp+8]
 00659AD0    fstp        qword ptr [esp]
 00659AD3    wait
>00659AD4    jmp         0065B276
 00659AD9    mov         eax,dword ptr [esi+4B4]
 00659ADF    cmp         byte ptr [eax+42F],29
 00659AE6    sete        al
 00659AE9    movsx       eax,al
 00659AEC    mov         dword ptr [esp+8],eax
 00659AF0    fild        dword ptr [esp+8]
 00659AF4    fstp        qword ptr [esp]
 00659AF7    wait
>00659AF8    jmp         0065B276
 00659AFD    mov         eax,dword ptr [esi+4B4]
 00659B03    cmp         byte ptr [eax+42F],2A
 00659B0A    sete        al
 00659B0D    movsx       eax,al
 00659B10    mov         dword ptr [esp+8],eax
 00659B14    fild        dword ptr [esp+8]
 00659B18    fstp        qword ptr [esp]
 00659B1B    wait
>00659B1C    jmp         0065B276
 00659B21    mov         eax,dword ptr [esi+4B4]
 00659B27    cmp         byte ptr [eax+42F],2C
 00659B2E    sete        al
 00659B31    movsx       eax,al
 00659B34    mov         dword ptr [esp+8],eax
 00659B38    fild        dword ptr [esp+8]
 00659B3C    fstp        qword ptr [esp]
 00659B3F    wait
>00659B40    jmp         0065B276
 00659B45    mov         eax,dword ptr [esi+4B4]
 00659B4B    cmp         byte ptr [eax+42F],2D
 00659B52    sete        al
 00659B55    movsx       eax,al
 00659B58    mov         dword ptr [esp+8],eax
 00659B5C    fild        dword ptr [esp+8]
 00659B60    fstp        qword ptr [esp]
 00659B63    wait
>00659B64    jmp         0065B276
 00659B69    mov         eax,dword ptr [esi+4B4]
 00659B6F    cmp         byte ptr [eax+42F],2B
 00659B76    sete        al
 00659B79    movsx       eax,al
 00659B7C    mov         dword ptr [esp+8],eax
 00659B80    fild        dword ptr [esp+8]
 00659B84    fstp        qword ptr [esp]
 00659B87    wait
>00659B88    jmp         0065B276
 00659B8D    mov         eax,dword ptr [esi+4B4]
 00659B93    cmp         byte ptr [eax+42F],2E
 00659B9A    sete        al
 00659B9D    movsx       eax,al
 00659BA0    mov         dword ptr [esp+8],eax
 00659BA4    fild        dword ptr [esp+8]
 00659BA8    fstp        qword ptr [esp]
 00659BAB    wait
>00659BAC    jmp         0065B276
 00659BB1    mov         eax,dword ptr [esi+4B4]
 00659BB7    cmp         byte ptr [eax+42F],2F
 00659BBE    sete        al
 00659BC1    movsx       eax,al
 00659BC4    mov         dword ptr [esp+8],eax
 00659BC8    fild        dword ptr [esp+8]
 00659BCC    fstp        qword ptr [esp]
 00659BCF    wait
>00659BD0    jmp         0065B276
 00659BD5    mov         eax,dword ptr [esi+4B4]
 00659BDB    cmp         byte ptr [eax+42F],30
 00659BE2    sete        al
 00659BE5    movsx       eax,al
 00659BE8    mov         dword ptr [esp+8],eax
 00659BEC    fild        dword ptr [esp+8]
 00659BF0    fstp        qword ptr [esp]
 00659BF3    wait
>00659BF4    jmp         0065B276
 00659BF9    mov         eax,dword ptr [esi+4B4]
 00659BFF    cmp         byte ptr [eax+42F],32
 00659C06    sete        al
 00659C09    movsx       eax,al
 00659C0C    mov         dword ptr [esp+8],eax
 00659C10    fild        dword ptr [esp+8]
 00659C14    fstp        qword ptr [esp]
 00659C17    wait
>00659C18    jmp         0065B276
 00659C1D    mov         eax,dword ptr [esi+4B4]
 00659C23    cmp         byte ptr [eax+42F],33
 00659C2A    sete        al
 00659C2D    movsx       eax,al
 00659C30    mov         dword ptr [esp+8],eax
 00659C34    fild        dword ptr [esp+8]
 00659C38    fstp        qword ptr [esp]
 00659C3B    wait
>00659C3C    jmp         0065B276
 00659C41    mov         eax,dword ptr [esi+4B4]
 00659C47    cmp         byte ptr [eax+42F],31
 00659C4E    sete        al
 00659C51    movsx       eax,al
 00659C54    mov         dword ptr [esp+8],eax
 00659C58    fild        dword ptr [esp+8]
 00659C5C    fstp        qword ptr [esp]
 00659C5F    wait
>00659C60    jmp         0065B276
 00659C65    mov         eax,dword ptr [esi+4B4]
 00659C6B    cmp         byte ptr [eax+42F],39
 00659C72    sete        al
 00659C75    movsx       eax,al
 00659C78    mov         dword ptr [esp+8],eax
 00659C7C    fild        dword ptr [esp+8]
 00659C80    fstp        qword ptr [esp]
 00659C83    wait
>00659C84    jmp         0065B276
 00659C89    mov         eax,dword ptr [esi+4B4]
 00659C8F    cmp         byte ptr [eax+42F],3A
 00659C96    sete        al
 00659C99    movsx       eax,al
 00659C9C    mov         dword ptr [esp+8],eax
 00659CA0    fild        dword ptr [esp+8]
 00659CA4    fstp        qword ptr [esp]
 00659CA7    wait
>00659CA8    jmp         0065B276
 00659CAD    mov         eax,dword ptr [esi+4B4]
 00659CB3    cmp         byte ptr [eax+42F],3B
 00659CBA    sete        al
 00659CBD    movsx       eax,al
 00659CC0    mov         dword ptr [esp+8],eax
 00659CC4    fild        dword ptr [esp+8]
 00659CC8    fstp        qword ptr [esp]
 00659CCB    wait
>00659CCC    jmp         0065B276
 00659CD1    mov         eax,dword ptr [esi+4B4]
 00659CD7    cmp         byte ptr [eax+42F],3D
 00659CDE    sete        al
 00659CE1    movsx       eax,al
 00659CE4    mov         dword ptr [esp+8],eax
 00659CE8    fild        dword ptr [esp+8]
 00659CEC    fstp        qword ptr [esp]
 00659CEF    wait
>00659CF0    jmp         0065B276
 00659CF5    mov         eax,dword ptr [esi+4B4]
 00659CFB    cmp         byte ptr [eax+42F],3E
 00659D02    sete        al
 00659D05    movsx       eax,al
 00659D08    mov         dword ptr [esp+8],eax
 00659D0C    fild        dword ptr [esp+8]
 00659D10    fstp        qword ptr [esp]
 00659D13    wait
>00659D14    jmp         0065B276
 00659D19    mov         eax,dword ptr [esi+4B4]
 00659D1F    cmp         byte ptr [eax+42F],3C
 00659D26    sete        al
 00659D29    movsx       eax,al
 00659D2C    mov         dword ptr [esp+8],eax
 00659D30    fild        dword ptr [esp+8]
 00659D34    fstp        qword ptr [esp]
 00659D37    wait
>00659D38    jmp         0065B276
 00659D3D    mov         eax,dword ptr [esi+4B4]
 00659D43    cmp         byte ptr [eax+42F],3F
 00659D4A    sete        al
 00659D4D    movsx       eax,al
 00659D50    mov         dword ptr [esp+8],eax
 00659D54    fild        dword ptr [esp+8]
 00659D58    fstp        qword ptr [esp]
 00659D5B    wait
>00659D5C    jmp         0065B276
 00659D61    mov         eax,dword ptr [esi+4B4]
 00659D67    cmp         byte ptr [eax+42F],40
 00659D6E    sete        al
 00659D71    movsx       eax,al
 00659D74    mov         dword ptr [esp+8],eax
 00659D78    fild        dword ptr [esp+8]
 00659D7C    fstp        qword ptr [esp]
 00659D7F    wait
>00659D80    jmp         0065B276
 00659D85    mov         eax,dword ptr [esi+4B4]
 00659D8B    cmp         byte ptr [eax+42F],41
 00659D92    sete        al
 00659D95    movsx       eax,al
 00659D98    mov         dword ptr [esp+8],eax
 00659D9C    fild        dword ptr [esp+8]
 00659DA0    fstp        qword ptr [esp]
 00659DA3    wait
>00659DA4    jmp         0065B276
 00659DA9    mov         eax,dword ptr [esi+4B4]
 00659DAF    cmp         byte ptr [eax+42F],43
 00659DB6    sete        al
 00659DB9    movsx       eax,al
 00659DBC    mov         dword ptr [esp+8],eax
 00659DC0    fild        dword ptr [esp+8]
 00659DC4    fstp        qword ptr [esp]
 00659DC7    wait
>00659DC8    jmp         0065B276
 00659DCD    mov         eax,dword ptr [esi+4B4]
 00659DD3    cmp         byte ptr [eax+42F],44
 00659DDA    sete        al
 00659DDD    movsx       eax,al
 00659DE0    mov         dword ptr [esp+8],eax
 00659DE4    fild        dword ptr [esp+8]
 00659DE8    fstp        qword ptr [esp]
 00659DEB    wait
>00659DEC    jmp         0065B276
 00659DF1    mov         eax,dword ptr [esi+4B4]
 00659DF7    cmp         byte ptr [eax+42F],42
 00659DFE    sete        al
 00659E01    movsx       eax,al
 00659E04    mov         dword ptr [esp+8],eax
 00659E08    fild        dword ptr [esp+8]
 00659E0C    fstp        qword ptr [esp]
 00659E0F    wait
>00659E10    jmp         0065B276
 00659E15    mov         eax,dword ptr [esi+4B4]
 00659E1B    cmp         byte ptr [eax+42D],6
 00659E22    sete        al
 00659E25    movsx       eax,al
 00659E28    mov         dword ptr [esp+8],eax
 00659E2C    fild        dword ptr [esp+8]
 00659E30    fstp        qword ptr [esp]
 00659E33    wait
>00659E34    jmp         0065B276
 00659E39    mov         eax,dword ptr [esi+4B4]
 00659E3F    cmp         byte ptr [eax+42D],7
 00659E46    sete        al
 00659E49    movsx       eax,al
 00659E4C    mov         dword ptr [esp+8],eax
 00659E50    fild        dword ptr [esp+8]
 00659E54    fstp        qword ptr [esp]
 00659E57    wait
>00659E58    jmp         0065B276
 00659E5D    mov         eax,dword ptr [esi+4B4]
 00659E63    cmp         byte ptr [eax+42D],8
 00659E6A    sete        al
 00659E6D    movsx       eax,al
 00659E70    mov         dword ptr [esp+8],eax
 00659E74    fild        dword ptr [esp+8]
 00659E78    fstp        qword ptr [esp]
 00659E7B    wait
>00659E7C    jmp         0065B276
 00659E81    mov         eax,dword ptr [esi+4B4]
 00659E87    cmp         byte ptr [eax+42D],0A
 00659E8E    sete        al
 00659E91    movsx       eax,al
 00659E94    mov         dword ptr [esp+8],eax
 00659E98    fild        dword ptr [esp+8]
 00659E9C    fstp        qword ptr [esp]
 00659E9F    wait
>00659EA0    jmp         0065B276
 00659EA5    mov         eax,dword ptr [esi+4B4]
 00659EAB    cmp         byte ptr [eax+42D],0C
 00659EB2    sete        al
 00659EB5    movsx       eax,al
 00659EB8    mov         dword ptr [esp+8],eax
 00659EBC    fild        dword ptr [esp+8]
 00659EC0    fstp        qword ptr [esp]
 00659EC3    wait
>00659EC4    jmp         0065B276
 00659EC9    mov         eax,dword ptr [esi+4B4]
 00659ECF    cmp         byte ptr [eax+42D],0D
 00659ED6    sete        al
 00659ED9    movsx       eax,al
 00659EDC    mov         dword ptr [esp+8],eax
 00659EE0    fild        dword ptr [esp+8]
 00659EE4    fstp        qword ptr [esp]
 00659EE7    wait
>00659EE8    jmp         0065B276
 00659EED    mov         eax,dword ptr [esi+4B4]
 00659EF3    cmp         byte ptr [eax+42D],0E
 00659EFA    sete        al
 00659EFD    movsx       eax,al
 00659F00    mov         dword ptr [esp+8],eax
 00659F04    fild        dword ptr [esp+8]
 00659F08    fstp        qword ptr [esp]
 00659F0B    wait
>00659F0C    jmp         0065B276
 00659F11    mov         eax,dword ptr [esi+4B4]
 00659F17    cmp         byte ptr [eax+42D],10
 00659F1E    sete        al
 00659F21    movsx       eax,al
 00659F24    mov         dword ptr [esp+8],eax
 00659F28    fild        dword ptr [esp+8]
 00659F2C    fstp        qword ptr [esp]
 00659F2F    wait
>00659F30    jmp         0065B276
 00659F35    mov         eax,dword ptr [esi+4B4]
 00659F3B    cmp         byte ptr [eax+42D],17
 00659F42    sete        al
 00659F45    movsx       eax,al
 00659F48    mov         dword ptr [esp+8],eax
 00659F4C    fild        dword ptr [esp+8]
 00659F50    fstp        qword ptr [esp]
 00659F53    wait
>00659F54    jmp         0065B276
 00659F59    mov         eax,dword ptr [esi+4B4]
 00659F5F    cmp         byte ptr [eax+42D],18
 00659F66    sete        al
 00659F69    movsx       eax,al
 00659F6C    mov         dword ptr [esp+8],eax
 00659F70    fild        dword ptr [esp+8]
 00659F74    fstp        qword ptr [esp]
 00659F77    wait
>00659F78    jmp         0065B276
 00659F7D    mov         eax,dword ptr [esi+4B4]
 00659F83    cmp         byte ptr [eax+42D],19
 00659F8A    sete        al
 00659F8D    movsx       eax,al
 00659F90    mov         dword ptr [esp+8],eax
 00659F94    fild        dword ptr [esp+8]
 00659F98    fstp        qword ptr [esp]
 00659F9B    wait
>00659F9C    jmp         0065B276
 00659FA1    mov         eax,dword ptr [esi+4B4]
 00659FA7    cmp         byte ptr [eax+42D],1B
 00659FAE    sete        al
 00659FB1    movsx       eax,al
 00659FB4    mov         dword ptr [esp+8],eax
 00659FB8    fild        dword ptr [esp+8]
 00659FBC    fstp        qword ptr [esp]
 00659FBF    wait
>00659FC0    jmp         0065B276
 00659FC5    mov         eax,dword ptr [esi+4B4]
 00659FCB    cmp         byte ptr [eax+42D],1D
 00659FD2    sete        al
 00659FD5    movsx       eax,al
 00659FD8    mov         dword ptr [esp+8],eax
 00659FDC    fild        dword ptr [esp+8]
 00659FE0    fstp        qword ptr [esp]
 00659FE3    wait
>00659FE4    jmp         0065B276
 00659FE9    mov         eax,dword ptr [esi+4B4]
 00659FEF    cmp         byte ptr [eax+42D],1E
 00659FF6    sete        al
 00659FF9    movsx       eax,al
 00659FFC    mov         dword ptr [esp+8],eax
 0065A000    fild        dword ptr [esp+8]
 0065A004    fstp        qword ptr [esp]
 0065A007    wait
>0065A008    jmp         0065B276
 0065A00D    mov         eax,dword ptr [esi+4B4]
 0065A013    cmp         byte ptr [eax+42D],1F
 0065A01A    sete        al
 0065A01D    movsx       eax,al
 0065A020    mov         dword ptr [esp+8],eax
 0065A024    fild        dword ptr [esp+8]
 0065A028    fstp        qword ptr [esp]
 0065A02B    wait
>0065A02C    jmp         0065B276
 0065A031    mov         eax,dword ptr [esi+4B4]
 0065A037    cmp         byte ptr [eax+42D],21
 0065A03E    sete        al
 0065A041    movsx       eax,al
 0065A044    mov         dword ptr [esp+8],eax
 0065A048    fild        dword ptr [esp+8]
 0065A04C    fstp        qword ptr [esp]
 0065A04F    wait
>0065A050    jmp         0065B276
 0065A055    mov         eax,dword ptr [esi+4B4]
 0065A05B    cmp         byte ptr [eax+42D],28
 0065A062    sete        al
 0065A065    movsx       eax,al
 0065A068    mov         dword ptr [esp+8],eax
 0065A06C    fild        dword ptr [esp+8]
 0065A070    fstp        qword ptr [esp]
 0065A073    wait
>0065A074    jmp         0065B276
 0065A079    mov         eax,dword ptr [esi+4B4]
 0065A07F    cmp         byte ptr [eax+42D],29
 0065A086    sete        al
 0065A089    movsx       eax,al
 0065A08C    mov         dword ptr [esp+8],eax
 0065A090    fild        dword ptr [esp+8]
 0065A094    fstp        qword ptr [esp]
 0065A097    wait
>0065A098    jmp         0065B276
 0065A09D    mov         eax,dword ptr [esi+4B4]
 0065A0A3    cmp         byte ptr [eax+42D],2A
 0065A0AA    sete        al
 0065A0AD    movsx       eax,al
 0065A0B0    mov         dword ptr [esp+8],eax
 0065A0B4    fild        dword ptr [esp+8]
 0065A0B8    fstp        qword ptr [esp]
 0065A0BB    wait
>0065A0BC    jmp         0065B276
 0065A0C1    mov         eax,dword ptr [esi+4B4]
 0065A0C7    cmp         byte ptr [eax+42D],2C
 0065A0CE    sete        al
 0065A0D1    movsx       eax,al
 0065A0D4    mov         dword ptr [esp+8],eax
 0065A0D8    fild        dword ptr [esp+8]
 0065A0DC    fstp        qword ptr [esp]
 0065A0DF    wait
>0065A0E0    jmp         0065B276
 0065A0E5    mov         eax,dword ptr [esi+4B4]
 0065A0EB    cmp         byte ptr [eax+42D],2E
 0065A0F2    sete        al
 0065A0F5    movsx       eax,al
 0065A0F8    mov         dword ptr [esp+8],eax
 0065A0FC    fild        dword ptr [esp+8]
 0065A100    fstp        qword ptr [esp]
 0065A103    wait
>0065A104    jmp         0065B276
 0065A109    mov         eax,dword ptr [esi+4B4]
 0065A10F    cmp         byte ptr [eax+42D],2F
 0065A116    sete        al
 0065A119    movsx       eax,al
 0065A11C    mov         dword ptr [esp+8],eax
 0065A120    fild        dword ptr [esp+8]
 0065A124    fstp        qword ptr [esp]
 0065A127    wait
>0065A128    jmp         0065B276
 0065A12D    mov         eax,dword ptr [esi+4B4]
 0065A133    cmp         byte ptr [eax+42D],30
 0065A13A    sete        al
 0065A13D    movsx       eax,al
 0065A140    mov         dword ptr [esp+8],eax
 0065A144    fild        dword ptr [esp+8]
 0065A148    fstp        qword ptr [esp]
 0065A14B    wait
>0065A14C    jmp         0065B276
 0065A151    mov         eax,dword ptr [esi+4B4]
 0065A157    cmp         byte ptr [eax+42D],32
 0065A15E    sete        al
 0065A161    movsx       eax,al
 0065A164    mov         dword ptr [esp+8],eax
 0065A168    fild        dword ptr [esp+8]
 0065A16C    fstp        qword ptr [esp]
 0065A16F    wait
>0065A170    jmp         0065B276
 0065A175    mov         eax,dword ptr [esi+4B4]
 0065A17B    cmp         byte ptr [eax+42D],39
 0065A182    sete        al
 0065A185    movsx       eax,al
 0065A188    mov         dword ptr [esp+8],eax
 0065A18C    fild        dword ptr [esp+8]
 0065A190    fstp        qword ptr [esp]
 0065A193    wait
>0065A194    jmp         0065B276
 0065A199    mov         eax,dword ptr [esi+4B4]
 0065A19F    cmp         byte ptr [eax+42D],3A
 0065A1A6    sete        al
 0065A1A9    movsx       eax,al
 0065A1AC    mov         dword ptr [esp+8],eax
 0065A1B0    fild        dword ptr [esp+8]
 0065A1B4    fstp        qword ptr [esp]
 0065A1B7    wait
>0065A1B8    jmp         0065B276
 0065A1BD    mov         eax,dword ptr [esi+4B4]
 0065A1C3    cmp         byte ptr [eax+42D],3B
 0065A1CA    sete        al
 0065A1CD    movsx       eax,al
 0065A1D0    mov         dword ptr [esp+8],eax
 0065A1D4    fild        dword ptr [esp+8]
 0065A1D8    fstp        qword ptr [esp]
 0065A1DB    wait
>0065A1DC    jmp         0065B276
 0065A1E1    mov         eax,dword ptr [esi+4B4]
 0065A1E7    cmp         byte ptr [eax+42D],3D
 0065A1EE    sete        al
 0065A1F1    movsx       eax,al
 0065A1F4    mov         dword ptr [esp+8],eax
 0065A1F8    fild        dword ptr [esp+8]
 0065A1FC    fstp        qword ptr [esp]
 0065A1FF    wait
>0065A200    jmp         0065B276
 0065A205    mov         eax,dword ptr [esi+4B4]
 0065A20B    cmp         byte ptr [eax+42D],3F
 0065A212    sete        al
 0065A215    movsx       eax,al
 0065A218    mov         dword ptr [esp+8],eax
 0065A21C    fild        dword ptr [esp+8]
 0065A220    fstp        qword ptr [esp]
 0065A223    wait
>0065A224    jmp         0065B276
 0065A229    mov         eax,dword ptr [esi+4B4]
 0065A22F    cmp         byte ptr [eax+42D],40
 0065A236    sete        al
 0065A239    movsx       eax,al
 0065A23C    mov         dword ptr [esp+8],eax
 0065A240    fild        dword ptr [esp+8]
 0065A244    fstp        qword ptr [esp]
 0065A247    wait
>0065A248    jmp         0065B276
 0065A24D    mov         eax,dword ptr [esi+4B4]
 0065A253    cmp         byte ptr [eax+42D],41
 0065A25A    sete        al
 0065A25D    movsx       eax,al
 0065A260    mov         dword ptr [esp+8],eax
 0065A264    fild        dword ptr [esp+8]
 0065A268    fstp        qword ptr [esp]
 0065A26B    wait
>0065A26C    jmp         0065B276
 0065A271    mov         eax,dword ptr [esi+4B4]
 0065A277    cmp         byte ptr [eax+42D],43
 0065A27E    sete        al
 0065A281    movsx       eax,al
 0065A284    mov         dword ptr [esp+8],eax
 0065A288    fild        dword ptr [esp+8]
 0065A28C    fstp        qword ptr [esp]
 0065A28F    wait
>0065A290    jmp         0065B276
 0065A295    mov         eax,dword ptr [esi+4B4]
 0065A29B    cmp         byte ptr [eax+42F],46
 0065A2A2    sete        al
 0065A2A5    movsx       eax,al
 0065A2A8    mov         dword ptr [esp+8],eax
 0065A2AC    fild        dword ptr [esp+8]
 0065A2B0    fstp        qword ptr [esp]
 0065A2B3    wait
>0065A2B4    jmp         0065B276
 0065A2B9    mov         eax,dword ptr [esi+4B4]
 0065A2BF    cmp         byte ptr [eax+42F],45
 0065A2C6    sete        al
 0065A2C9    movsx       eax,al
 0065A2CC    mov         dword ptr [esp+8],eax
 0065A2D0    fild        dword ptr [esp+8]
 0065A2D4    fstp        qword ptr [esp]
 0065A2D7    wait
>0065A2D8    jmp         0065B276
 0065A2DD    mov         eax,dword ptr [esi+4B8]
 0065A2E3    movzx       eax,byte ptr [eax+8]
 0065A2E7    movsx       eax,al
 0065A2EA    mov         dword ptr [esp+8],eax
 0065A2EE    fild        dword ptr [esp+8]
 0065A2F2    fstp        qword ptr [esp]
 0065A2F5    wait
>0065A2F6    jmp         0065B276
 0065A2FB    mov         eax,dword ptr [esi+4B8]
 0065A301    call        TClassicObject.Up
 0065A306    movsx       eax,al
 0065A309    mov         dword ptr [esp+8],eax
 0065A30D    fild        dword ptr [esp+8]
 0065A311    fstp        qword ptr [esp]
 0065A314    wait
>0065A315    jmp         0065B276
 0065A31A    mov         eax,dword ptr [esi+4B8]
 0065A320    call        TClassicObject.Down
 0065A325    movsx       eax,al
 0065A328    mov         dword ptr [esp+8],eax
 0065A32C    fild        dword ptr [esp+8]
 0065A330    fstp        qword ptr [esp]
 0065A333    wait
>0065A334    jmp         0065B276
 0065A339    mov         eax,dword ptr [esi+4B8]
 0065A33F    call        TClassicObject.Left
 0065A344    movsx       eax,al
 0065A347    mov         dword ptr [esp+8],eax
 0065A34B    fild        dword ptr [esp+8]
 0065A34F    fstp        qword ptr [esp]
 0065A352    wait
>0065A353    jmp         0065B276
 0065A358    mov         eax,dword ptr [esi+4B8]
 0065A35E    call        TClassicObject.Right
 0065A363    movsx       eax,al
 0065A366    mov         dword ptr [esp+8],eax
 0065A36A    fild        dword ptr [esp+8]
 0065A36E    fstp        qword ptr [esp]
 0065A371    wait
>0065A372    jmp         0065B276
 0065A377    mov         eax,dword ptr [esi+4B8]
 0065A37D    call        TClassicObject.A
 0065A382    movsx       eax,al
 0065A385    mov         dword ptr [esp+8],eax
 0065A389    fild        dword ptr [esp+8]
 0065A38D    fstp        qword ptr [esp]
 0065A390    wait
>0065A391    jmp         0065B276
 0065A396    mov         eax,dword ptr [esi+4B8]
 0065A39C    call        TClassicObject.B
 0065A3A1    movsx       eax,al
 0065A3A4    mov         dword ptr [esp+8],eax
 0065A3A8    fild        dword ptr [esp+8]
 0065A3AC    fstp        qword ptr [esp]
 0065A3AF    wait
>0065A3B0    jmp         0065B276
 0065A3B5    mov         eax,dword ptr [esi+4B8]
 0065A3BB    call        TClassicObject.X
 0065A3C0    movsx       eax,al
 0065A3C3    mov         dword ptr [esp+8],eax
 0065A3C7    fild        dword ptr [esp+8]
 0065A3CB    fstp        qword ptr [esp]
 0065A3CE    wait
>0065A3CF    jmp         0065B276
 0065A3D4    mov         eax,dword ptr [esi+4B8]
 0065A3DA    call        TClassicObject.Y
 0065A3DF    movsx       eax,al
 0065A3E2    mov         dword ptr [esp+8],eax
 0065A3E6    fild        dword ptr [esp+8]
 0065A3EA    fstp        qword ptr [esp]
 0065A3ED    wait
>0065A3EE    jmp         0065B276
 0065A3F3    mov         eax,dword ptr [esi+4B8]
 0065A3F9    call        TClassicObject.Minus
 0065A3FE    movsx       eax,al
 0065A401    mov         dword ptr [esp+8],eax
 0065A405    fild        dword ptr [esp+8]
 0065A409    fstp        qword ptr [esp]
 0065A40C    wait
>0065A40D    jmp         0065B276
 0065A412    mov         eax,dword ptr [esi+4B8]
 0065A418    call        TClassicObject.HOME
 0065A41D    movsx       eax,al
 0065A420    mov         dword ptr [esp+8],eax
 0065A424    fild        dword ptr [esp+8]
 0065A428    fstp        qword ptr [esp]
 0065A42B    wait
>0065A42C    jmp         0065B276
 0065A431    mov         eax,dword ptr [esi+4B8]
 0065A437    call        TClassicObject.Plus
 0065A43C    movsx       eax,al
 0065A43F    mov         dword ptr [esp+8],eax
 0065A443    fild        dword ptr [esp+8]
 0065A447    fstp        qword ptr [esp]
 0065A44A    wait
>0065A44B    jmp         0065B276
 0065A450    mov         eax,dword ptr [esi+4B8]
 0065A456    call        TClassicObject.ZL
 0065A45B    movsx       eax,al
 0065A45E    mov         dword ptr [esp+8],eax
 0065A462    fild        dword ptr [esp+8]
 0065A466    fstp        qword ptr [esp]
 0065A469    wait
>0065A46A    jmp         0065B276
 0065A46F    mov         eax,dword ptr [esi+4B8]
 0065A475    call        TClassicObject.ZR
 0065A47A    movsx       eax,al
 0065A47D    mov         dword ptr [esp+8],eax
 0065A481    fild        dword ptr [esp+8]
 0065A485    fstp        qword ptr [esp]
 0065A488    wait
>0065A489    jmp         0065B276
 0065A48E    mov         eax,dword ptr [esi+4B8]
 0065A494    call        TClassicObject.LFull
 0065A499    movsx       eax,al
 0065A49C    mov         dword ptr [esp+8],eax
 0065A4A0    fild        dword ptr [esp+8]
 0065A4A4    fstp        qword ptr [esp]
 0065A4A7    wait
>0065A4A8    jmp         0065B276
 0065A4AD    mov         eax,dword ptr [esi+4B8]
 0065A4B3    call        TClassicObject.RFull
 0065A4B8    movsx       eax,al
 0065A4BB    mov         dword ptr [esp+8],eax
 0065A4BF    fild        dword ptr [esp+8]
 0065A4C3    fstp        qword ptr [esp]
 0065A4C6    wait
>0065A4C7    jmp         0065B276
 0065A4CC    mov         eax,dword ptr [esi+4B8]
 0065A4D2    call        TClassicObject.L
 0065A4D7    fstp        qword ptr [esp]
 0065A4DA    wait
>0065A4DB    jmp         0065B276
 0065A4E0    mov         eax,dword ptr [esi+4B8]
 0065A4E6    call        TClassicObject.R
 0065A4EB    fstp        qword ptr [esp]
 0065A4EE    wait
>0065A4EF    jmp         0065B276
 0065A4F4    mov         eax,dword ptr [esi+4B8]
 0065A4FA    call        TClassicObject.DPadX
 0065A4FF    mov         dword ptr [esp+8],eax
 0065A503    fild        dword ptr [esp+8]
 0065A507    fstp        qword ptr [esp]
 0065A50A    wait
>0065A50B    jmp         0065B276
 0065A510    mov         eax,dword ptr [esi+4B8]
 0065A516    call        TClassicObject.DPadY
 0065A51B    mov         dword ptr [esp+8],eax
 0065A51F    fild        dword ptr [esp+8]
 0065A523    fstp        qword ptr [esp]
 0065A526    wait
>0065A527    jmp         0065B276
 0065A52C    mov         eax,dword ptr [esi+4B8]
 0065A532    call        TClassicObject.LeftStickX
 0065A537    fstp        qword ptr [esp]
 0065A53A    wait
>0065A53B    jmp         0065B276
 0065A540    mov         eax,dword ptr [esi+4B8]
 0065A546    call        TClassicObject.LeftStickY
 0065A54B    fstp        qword ptr [esp]
 0065A54E    wait
>0065A54F    jmp         0065B276
 0065A554    mov         eax,dword ptr [esi+4B8]
 0065A55A    call        TClassicObject.RightStickX
 0065A55F    fstp        qword ptr [esp]
 0065A562    wait
>0065A563    jmp         0065B276
 0065A568    mov         eax,dword ptr [esi+4B8]
 0065A56E    call        TClassicObject.RightStickY
 0065A573    fstp        qword ptr [esp]
 0065A576    wait
>0065A577    jmp         0065B276
 0065A57C    mov         eax,dword ptr [esi+4B8]
 0065A582    fild        word ptr [eax+10]
 0065A585    fstp        qword ptr [esp]
 0065A588    wait
>0065A589    jmp         0065B276
 0065A58E    mov         eax,dword ptr [esi+4B8]
 0065A594    fild        word ptr [eax+12]
 0065A597    fstp        qword ptr [esp]
 0065A59A    wait
>0065A59B    jmp         0065B276
 0065A5A0    mov         eax,dword ptr [esi+4B8]
 0065A5A6    fild        word ptr [eax+20]
 0065A5A9    fstp        qword ptr [esp]
 0065A5AC    wait
>0065A5AD    jmp         0065B276
 0065A5B2    mov         eax,dword ptr [esi+4B8]
 0065A5B8    fild        word ptr [eax+22]
 0065A5BB    fstp        qword ptr [esp]
 0065A5BE    wait
>0065A5BF    jmp         0065B276
 0065A5C4    mov         eax,dword ptr [esi+4BC]
 0065A5CA    movzx       eax,byte ptr [eax+8]
 0065A5CE    movsx       eax,al
 0065A5D1    mov         dword ptr [esp+8],eax
 0065A5D5    fild        dword ptr [esp+8]
 0065A5D9    fstp        qword ptr [esp]
 0065A5DC    wait
>0065A5DD    jmp         0065B276
 0065A5E2    mov         eax,dword ptr [esi+4BC]
 0065A5E8    call        TGuitarObject.StrumUp
 0065A5ED    movsx       eax,al
 0065A5F0    mov         dword ptr [esp+8],eax
 0065A5F4    fild        dword ptr [esp+8]
 0065A5F8    fstp        qword ptr [esp]
 0065A5FB    wait
>0065A5FC    jmp         0065B276
 0065A601    mov         eax,dword ptr [esi+4BC]
 0065A607    call        TGuitarObject.StrumDown
 0065A60C    movsx       eax,al
 0065A60F    mov         dword ptr [esp+8],eax
 0065A613    fild        dword ptr [esp+8]
 0065A617    fstp        qword ptr [esp]
 0065A61A    wait
>0065A61B    jmp         0065B276
 0065A620    mov         eax,dword ptr [esi+4BC]
 0065A626    call        TGuitarObject.Fret1
 0065A62B    movsx       eax,al
 0065A62E    mov         dword ptr [esp+8],eax
 0065A632    fild        dword ptr [esp+8]
 0065A636    fstp        qword ptr [esp]
 0065A639    wait
>0065A63A    jmp         0065B276
 0065A63F    mov         eax,dword ptr [esi+4BC]
 0065A645    call        TGuitarObject.Fret2
 0065A64A    movsx       eax,al
 0065A64D    mov         dword ptr [esp+8],eax
 0065A651    fild        dword ptr [esp+8]
 0065A655    fstp        qword ptr [esp]
 0065A658    wait
>0065A659    jmp         0065B276
 0065A65E    mov         eax,dword ptr [esi+4BC]
 0065A664    call        TGuitarObject.Fret3
 0065A669    movsx       eax,al
 0065A66C    mov         dword ptr [esp+8],eax
 0065A670    fild        dword ptr [esp+8]
 0065A674    fstp        qword ptr [esp]
 0065A677    wait
>0065A678    jmp         0065B276
 0065A67D    mov         eax,dword ptr [esi+4BC]
 0065A683    call        TGuitarObject.Fret4
 0065A688    movsx       eax,al
 0065A68B    mov         dword ptr [esp+8],eax
 0065A68F    fild        dword ptr [esp+8]
 0065A693    fstp        qword ptr [esp]
 0065A696    wait
>0065A697    jmp         0065B276
 0065A69C    mov         eax,dword ptr [esi+4BC]
 0065A6A2    call        TGuitarObject.Fret5
 0065A6A7    movsx       eax,al
 0065A6AA    mov         dword ptr [esp+8],eax
 0065A6AE    fild        dword ptr [esp+8]
 0065A6B2    fstp        qword ptr [esp]
 0065A6B5    wait
>0065A6B6    jmp         0065B276
 0065A6BB    mov         eax,dword ptr [esi+4BC]
 0065A6C1    movzx       eax,byte ptr [eax+19]
 0065A6C5    movsx       eax,al
 0065A6C8    mov         dword ptr [esp+8],eax
 0065A6CC    fild        dword ptr [esp+8]
 0065A6D0    fstp        qword ptr [esp]
 0065A6D3    wait
>0065A6D4    jmp         0065B276
 0065A6D9    mov         eax,dword ptr [esi+4BC]
 0065A6DF    movzx       eax,byte ptr [eax+1A]
 0065A6E3    movsx       eax,al
 0065A6E6    mov         dword ptr [esp+8],eax
 0065A6EA    fild        dword ptr [esp+8]
 0065A6EE    fstp        qword ptr [esp]
 0065A6F1    wait
>0065A6F2    jmp         0065B276
 0065A6F7    mov         eax,dword ptr [esi+4BC]
 0065A6FD    movzx       eax,byte ptr [eax+1B]
 0065A701    movsx       eax,al
 0065A704    mov         dword ptr [esp+8],eax
 0065A708    fild        dword ptr [esp+8]
 0065A70C    fstp        qword ptr [esp]
 0065A70F    wait
>0065A710    jmp         0065B276
 0065A715    mov         eax,dword ptr [esi+4BC]
 0065A71B    movzx       eax,byte ptr [eax+1C]
 0065A71F    movsx       eax,al
 0065A722    mov         dword ptr [esp+8],eax
 0065A726    fild        dword ptr [esp+8]
 0065A72A    fstp        qword ptr [esp]
 0065A72D    wait
>0065A72E    jmp         0065B276
 0065A733    mov         eax,dword ptr [esi+4BC]
 0065A739    movzx       eax,byte ptr [eax+1D]
 0065A73D    movsx       eax,al
 0065A740    mov         dword ptr [esp+8],eax
 0065A744    fild        dword ptr [esp+8]
 0065A748    fstp        qword ptr [esp]
 0065A74B    wait
>0065A74C    jmp         0065B276
 0065A751    mov         eax,dword ptr [esi+4BC]
 0065A757    call        TGuitarObject.Plus
 0065A75C    movsx       eax,al
 0065A75F    mov         dword ptr [esp+8],eax
 0065A763    fild        dword ptr [esp+8]
 0065A767    fstp        qword ptr [esp]
 0065A76A    wait
>0065A76B    jmp         0065B276
 0065A770    mov         eax,dword ptr [esi+4BC]
 0065A776    call        TGuitarObject.Minus
 0065A77B    movsx       eax,al
 0065A77E    mov         dword ptr [esp+8],eax
 0065A782    fild        dword ptr [esp+8]
 0065A786    fstp        qword ptr [esp]
 0065A789    wait
>0065A78A    jmp         0065B276
 0065A78F    mov         eax,dword ptr [esi+4BC]
 0065A795    call        TGuitarObject.StickX
 0065A79A    fstp        qword ptr [esp]
 0065A79D    wait
>0065A79E    jmp         0065B276
 0065A7A3    mov         eax,dword ptr [esi+4BC]
 0065A7A9    call        TGuitarObject.StickY
 0065A7AE    fstp        qword ptr [esp]
 0065A7B1    wait
>0065A7B2    jmp         0065B276
 0065A7B7    mov         eax,dword ptr [esi+4BC]
 0065A7BD    call        TGuitarObject.WhammyBar
 0065A7C2    fstp        qword ptr [esp]
 0065A7C5    wait
>0065A7C6    jmp         0065B276
 0065A7CB    mov         eax,dword ptr [esi+4BC]
 0065A7D1    call        TGuitarObject.TouchBar
 0065A7D6    fstp        qword ptr [esp]
 0065A7D9    wait
>0065A7DA    jmp         0065B276
 0065A7DF    mov         eax,dword ptr [esi+4BC]
 0065A7E5    call        TGuitarObject.RawTouchBar
 0065A7EA    mov         dword ptr [esp+8],eax
 0065A7EE    fild        dword ptr [esp+8]
 0065A7F2    fstp        qword ptr [esp]
 0065A7F5    wait
>0065A7F6    jmp         0065B276
 0065A7FB    mov         eax,dword ptr [esi+4BC]
 0065A801    cmp         byte ptr [eax+8],0
>0065A805    je          0065A810
 0065A807    cmp         byte ptr [esi+4AA],0
>0065A80E    jne         0065A814
 0065A810    xor         eax,eax
>0065A812    jmp         0065A816
 0065A814    mov         al,1
 0065A816    movsx       eax,al
 0065A819    mov         dword ptr [esp+8],eax
 0065A81D    fild        dword ptr [esp+8]
 0065A821    fstp        qword ptr [esp]
 0065A824    wait
>0065A825    jmp         0065B276
 0065A82A    mov         eax,dword ptr [esi+4C0]
 0065A830    movzx       eax,byte ptr [eax+8]
 0065A834    movsx       eax,al
 0065A837    mov         dword ptr [esp+8],eax
 0065A83B    fild        dword ptr [esp+8]
 0065A83F    fstp        qword ptr [esp]
 0065A842    wait
>0065A843    jmp         0065B276
 0065A848    mov         eax,dword ptr [esi+4C0]
 0065A84E    call        TDrumsObject.Red
 0065A853    movsx       eax,al
 0065A856    mov         dword ptr [esp+8],eax
 0065A85A    fild        dword ptr [esp+8]
 0065A85E    fstp        qword ptr [esp]
 0065A861    wait
>0065A862    jmp         0065B276
 0065A867    mov         eax,dword ptr [esi+4C0]
 0065A86D    call        TDrumsObject.Blue
 0065A872    movsx       eax,al
 0065A875    mov         dword ptr [esp+8],eax
 0065A879    fild        dword ptr [esp+8]
 0065A87D    fstp        qword ptr [esp]
 0065A880    wait
>0065A881    jmp         0065B276
 0065A886    mov         eax,dword ptr [esi+4C0]
 0065A88C    call        TDrumsObject.Green
 0065A891    movsx       eax,al
 0065A894    mov         dword ptr [esp+8],eax
 0065A898    fild        dword ptr [esp+8]
 0065A89C    fstp        qword ptr [esp]
 0065A89F    wait
>0065A8A0    jmp         0065B276
 0065A8A5    mov         eax,dword ptr [esi+4C0]
 0065A8AB    call        TDrumsObject.Yellow
 0065A8B0    movsx       eax,al
 0065A8B3    mov         dword ptr [esp+8],eax
 0065A8B7    fild        dword ptr [esp+8]
 0065A8BB    fstp        qword ptr [esp]
 0065A8BE    wait
>0065A8BF    jmp         0065B276
 0065A8C4    mov         eax,dword ptr [esi+4C0]
 0065A8CA    call        TDrumsObject.Orange
 0065A8CF    movsx       eax,al
 0065A8D2    mov         dword ptr [esp+8],eax
 0065A8D6    fild        dword ptr [esp+8]
 0065A8DA    fstp        qword ptr [esp]
 0065A8DD    wait
>0065A8DE    jmp         0065B276
 0065A8E3    mov         eax,dword ptr [esi+4C0]
 0065A8E9    call        TDrumsObject.Bass
 0065A8EE    movsx       eax,al
 0065A8F1    mov         dword ptr [esp+8],eax
 0065A8F5    fild        dword ptr [esp+8]
 0065A8F9    fstp        qword ptr [esp]
 0065A8FC    wait
>0065A8FD    jmp         0065B276
 0065A902    mov         eax,dword ptr [esi+4C0]
 0065A908    call        TDrumsObject.HiHat
 0065A90D    movsx       eax,al
 0065A910    mov         dword ptr [esp+8],eax
 0065A914    fild        dword ptr [esp+8]
 0065A918    fstp        qword ptr [esp]
 0065A91B    wait
>0065A91C    jmp         0065B276
 0065A921    mov         eax,dword ptr [esi+4C0]
 0065A927    call        TDrumsObject.Plus
 0065A92C    movsx       eax,al
 0065A92F    mov         dword ptr [esp+8],eax
 0065A933    fild        dword ptr [esp+8]
 0065A937    fstp        qword ptr [esp]
 0065A93A    wait
>0065A93B    jmp         0065B276
 0065A940    mov         eax,dword ptr [esi+4C0]
 0065A946    call        TDrumsObject.Minus
 0065A94B    movsx       eax,al
 0065A94E    mov         dword ptr [esp+8],eax
 0065A952    fild        dword ptr [esp+8]
 0065A956    fstp        qword ptr [esp]
 0065A959    wait
>0065A95A    jmp         0065B276
 0065A95F    mov         eax,dword ptr [esi+4C0]
 0065A965    call        TDrumsObject.StickX
 0065A96A    fstp        qword ptr [esp]
 0065A96D    wait
>0065A96E    jmp         0065B276
 0065A973    mov         eax,dword ptr [esi+4C0]
 0065A979    call        TDrumsObject.StickY
 0065A97E    fstp        qword ptr [esp]
 0065A981    wait
>0065A982    jmp         0065B276
 0065A987    mov         eax,dword ptr [esi+4C0]
 0065A98D    call        TDrumsObject.RedSpeed
 0065A992    fstp        qword ptr [esp]
 0065A995    wait
>0065A996    jmp         0065B276
 0065A99B    mov         eax,dword ptr [esi+4C0]
 0065A9A1    call        TDrumsObject.BlueSpeed
 0065A9A6    fstp        qword ptr [esp]
 0065A9A9    wait
>0065A9AA    jmp         0065B276
 0065A9AF    mov         eax,dword ptr [esi+4C0]
 0065A9B5    call        TDrumsObject.GreenSpeed
 0065A9BA    fstp        qword ptr [esp]
 0065A9BD    wait
>0065A9BE    jmp         0065B276
 0065A9C3    mov         eax,dword ptr [esi+4C0]
 0065A9C9    call        TDrumsObject.YellowSpeed
 0065A9CE    fstp        qword ptr [esp]
 0065A9D1    wait
>0065A9D2    jmp         0065B276
 0065A9D7    mov         eax,dword ptr [esi+4C0]
 0065A9DD    call        TDrumsObject.OrangeSpeed
 0065A9E2    fstp        qword ptr [esp]
 0065A9E5    wait
>0065A9E6    jmp         0065B276
 0065A9EB    mov         eax,dword ptr [esi+4C0]
 0065A9F1    call        TDrumsObject.PedalSpeed
 0065A9F6    fstp        qword ptr [esp]
 0065A9F9    wait
>0065A9FA    jmp         0065B276
 0065A9FF    mov         eax,dword ptr [esi+4C0]
 0065AA05    call        TDrumsObject.HiHatSpeed
 0065AA0A    fstp        qword ptr [esp]
 0065AA0D    wait
>0065AA0E    jmp         0065B276
 0065AA13    mov         eax,dword ptr [esi+4C0]
 0065AA19    movzx       eax,byte ptr [eax+40]
 0065AA1D    movsx       eax,al
 0065AA20    mov         dword ptr [esp+8],eax
 0065AA24    fild        dword ptr [esp+8]
 0065AA28    fstp        qword ptr [esp]
 0065AA2B    wait
>0065AA2C    jmp         0065B276
 0065AA31    mov         eax,dword ptr [esi+4C4]
 0065AA37    movzx       eax,byte ptr [eax+8]
 0065AA3B    movsx       eax,al
 0065AA3E    mov         dword ptr [esp+8],eax
 0065AA42    fild        dword ptr [esp+8]
 0065AA46    fstp        qword ptr [esp]
 0065AA49    wait
>0065AA4A    jmp         0065B276
 0065AA4F    mov         eax,dword ptr [esi+4C4]
 0065AA55    call        TTurntableObject.Euphoria
 0065AA5A    movsx       eax,al
 0065AA5D    mov         dword ptr [esp+8],eax
 0065AA61    fild        dword ptr [esp+8]
 0065AA65    fstp        qword ptr [esp]
 0065AA68    wait
>0065AA69    jmp         0065B276
 0065AA6E    mov         eax,dword ptr [esi+4C4]
 0065AA74    call        TTurntableObject.Plus
 0065AA79    movsx       eax,al
 0065AA7C    mov         dword ptr [esp+8],eax
 0065AA80    fild        dword ptr [esp+8]
 0065AA84    fstp        qword ptr [esp]
 0065AA87    wait
>0065AA88    jmp         0065B276
 0065AA8D    mov         eax,dword ptr [esi+4C4]
 0065AA93    call        TTurntableObject.Minus
 0065AA98    movsx       eax,al
 0065AA9B    mov         dword ptr [esp+8],eax
 0065AA9F    fild        dword ptr [esp+8]
 0065AAA3    fstp        qword ptr [esp]
 0065AAA6    wait
>0065AAA7    jmp         0065B276
 0065AAAC    mov         eax,dword ptr [esi+4C4]
 0065AAB2    call        TTurntableObject.QuestionQuestion
 0065AAB7    movsx       eax,al
 0065AABA    mov         dword ptr [esp+8],eax
 0065AABE    fild        dword ptr [esp+8]
 0065AAC2    fstp        qword ptr [esp]
 0065AAC5    wait
>0065AAC6    jmp         0065B276
 0065AACB    mov         eax,dword ptr [esi+4C4]
 0065AAD1    call        TTurntableObject.LeftRed
 0065AAD6    test        al,al
>0065AAD8    jne         0065AAED
 0065AADA    mov         eax,dword ptr [esi+4C4]
 0065AAE0    call        TTurntableObject.RightRed
 0065AAE5    test        al,al
>0065AAE7    jne         0065AAED
 0065AAE9    xor         eax,eax
>0065AAEB    jmp         0065AAEF
 0065AAED    mov         al,1
 0065AAEF    movsx       eax,al
 0065AAF2    mov         dword ptr [esp+8],eax
 0065AAF6    fild        dword ptr [esp+8]
 0065AAFA    fstp        qword ptr [esp]
 0065AAFD    wait
>0065AAFE    jmp         0065B276
 0065AB03    mov         eax,dword ptr [esi+4C4]
 0065AB09    call        TTurntableObject.LeftGreen
 0065AB0E    test        al,al
>0065AB10    jne         0065AB25
 0065AB12    mov         eax,dword ptr [esi+4C4]
 0065AB18    call        TTurntableObject.RightGreen
 0065AB1D    test        al,al
>0065AB1F    jne         0065AB25
 0065AB21    xor         eax,eax
>0065AB23    jmp         0065AB27
 0065AB25    mov         al,1
 0065AB27    movsx       eax,al
 0065AB2A    mov         dword ptr [esp+8],eax
 0065AB2E    fild        dword ptr [esp+8]
 0065AB32    fstp        qword ptr [esp]
 0065AB35    wait
>0065AB36    jmp         0065B276
 0065AB3B    mov         eax,dword ptr [esi+4C4]
 0065AB41    call        TTurntableObject.LeftBlue
 0065AB46    test        al,al
>0065AB48    jne         0065AB5D
 0065AB4A    mov         eax,dword ptr [esi+4C4]
 0065AB50    call        TTurntableObject.RightBlue
 0065AB55    test        al,al
>0065AB57    jne         0065AB5D
 0065AB59    xor         eax,eax
>0065AB5B    jmp         0065AB5F
 0065AB5D    mov         al,1
 0065AB5F    movsx       eax,al
 0065AB62    mov         dword ptr [esp+8],eax
 0065AB66    fild        dword ptr [esp+8]
 0065AB6A    fstp        qword ptr [esp]
 0065AB6D    wait
>0065AB6E    jmp         0065B276
 0065AB73    mov         eax,dword ptr [esi+4C4]
 0065AB79    call        TTurntableObject.LeftRed
 0065AB7E    movsx       eax,al
 0065AB81    mov         dword ptr [esp+8],eax
 0065AB85    fild        dword ptr [esp+8]
 0065AB89    fstp        qword ptr [esp]
 0065AB8C    wait
>0065AB8D    jmp         0065B276
 0065AB92    mov         eax,dword ptr [esi+4C4]
 0065AB98    call        TTurntableObject.LeftGreen
 0065AB9D    movsx       eax,al
 0065ABA0    mov         dword ptr [esp+8],eax
 0065ABA4    fild        dword ptr [esp+8]
 0065ABA8    fstp        qword ptr [esp]
 0065ABAB    wait
>0065ABAC    jmp         0065B276
 0065ABB1    mov         eax,dword ptr [esi+4C4]
 0065ABB7    call        TTurntableObject.LeftBlue
 0065ABBC    movsx       eax,al
 0065ABBF    mov         dword ptr [esp+8],eax
 0065ABC3    fild        dword ptr [esp+8]
 0065ABC7    fstp        qword ptr [esp]
 0065ABCA    wait
>0065ABCB    jmp         0065B276
 0065ABD0    mov         eax,dword ptr [esi+4C4]
 0065ABD6    call        TTurntableObject.RightRed
 0065ABDB    movsx       eax,al
 0065ABDE    mov         dword ptr [esp+8],eax
 0065ABE2    fild        dword ptr [esp+8]
 0065ABE6    fstp        qword ptr [esp]
 0065ABE9    wait
>0065ABEA    jmp         0065B276
 0065ABEF    mov         eax,dword ptr [esi+4C4]
 0065ABF5    call        TTurntableObject.RightGreen
 0065ABFA    movsx       eax,al
 0065ABFD    mov         dword ptr [esp+8],eax
 0065AC01    fild        dword ptr [esp+8]
 0065AC05    fstp        qword ptr [esp]
 0065AC08    wait
>0065AC09    jmp         0065B276
 0065AC0E    mov         eax,dword ptr [esi+4C4]
 0065AC14    call        TTurntableObject.RightBlue
 0065AC19    movsx       eax,al
 0065AC1C    mov         dword ptr [esp+8],eax
 0065AC20    fild        dword ptr [esp+8]
 0065AC24    fstp        qword ptr [esp]
 0065AC27    wait
>0065AC28    jmp         0065B276
 0065AC2D    mov         eax,dword ptr [esi+4C4]
 0065AC33    call        TTurntableObject.EffectDial
 0065AC38    fstp        qword ptr [esp]
 0065AC3B    wait
>0065AC3C    jmp         0065B276
 0065AC41    mov         eax,dword ptr [esi+4C4]
 0065AC47    call        TTurntableObject.CrossFade
 0065AC4C    fstp        qword ptr [esp]
 0065AC4F    wait
>0065AC50    jmp         0065B276
 0065AC55    mov         eax,dword ptr [esi+4C4]
 0065AC5B    call        TTurntableObject.StickX
 0065AC60    fstp        qword ptr [esp]
 0065AC63    wait
>0065AC64    jmp         0065B276
 0065AC69    mov         eax,dword ptr [esi+4C4]
 0065AC6F    call        TTurntableObject.StickY
 0065AC74    fstp        qword ptr [esp]
 0065AC77    wait
>0065AC78    jmp         0065B276
 0065AC7D    mov         eax,dword ptr [esi+4C4]
 0065AC83    call        TTurntableObject.RawLeftTurntable
 0065AC88    mov         dword ptr [esp+8],eax
 0065AC8C    fild        dword ptr [esp+8]
 0065AC90    fstp        qword ptr [esp]
 0065AC93    wait
>0065AC94    jmp         0065B276
 0065AC99    mov         eax,dword ptr [esi+4C4]
 0065AC9F    call        TTurntableObject.RawRightTurntable
 0065ACA4    mov         dword ptr [esp+8],eax
 0065ACA8    fild        dword ptr [esp+8]
 0065ACAC    fstp        qword ptr [esp]
 0065ACAF    wait
>0065ACB0    jmp         0065B276
 0065ACB5    mov         eax,dword ptr [esi+4CC]
 0065ACBB    movzx       eax,byte ptr [eax+8]
 0065ACBF    movsx       eax,al
 0065ACC2    mov         dword ptr [esp+8],eax
 0065ACC6    fild        dword ptr [esp+8]
 0065ACCA    fstp        qword ptr [esp]
 0065ACCD    wait
>0065ACCE    jmp         0065B276
 0065ACD3    mov         eax,dword ptr [esi+4CC]
 0065ACD9    mov         edx,dword ptr [eax+98]
 0065ACDF    mov         dword ptr [esp],edx
 0065ACE2    mov         edx,dword ptr [eax+9C]
 0065ACE8    mov         dword ptr [esp+4],edx
>0065ACEC    jmp         0065B276
 0065ACF1    mov         eax,dword ptr [esi+4CC]
 0065ACF7    mov         edx,dword ptr [eax+90]
 0065ACFD    mov         dword ptr [esp],edx
 0065AD00    mov         edx,dword ptr [eax+94]
 0065AD06    mov         dword ptr [esp+4],edx
>0065AD0A    jmp         0065B276
 0065AD0F    mov         eax,dword ptr [esi+4CC]
 0065AD15    mov         edx,dword ptr [eax+0A8]
 0065AD1B    mov         dword ptr [esp],edx
 0065AD1E    mov         edx,dword ptr [eax+0AC]
 0065AD24    mov         dword ptr [esp+4],edx
>0065AD28    jmp         0065B276
 0065AD2D    mov         eax,dword ptr [esi+4CC]
 0065AD33    mov         edx,dword ptr [eax+0A0]
 0065AD39    mov         dword ptr [esp],edx
 0065AD3C    mov         edx,dword ptr [eax+0A4]
 0065AD42    mov         dword ptr [esp+4],edx
>0065AD46    jmp         0065B276
 0065AD4B    mov         eax,dword ptr [esi+4CC]
 0065AD51    mov         edx,dword ptr [eax+0B8]
 0065AD57    mov         dword ptr [esp],edx
 0065AD5A    mov         edx,dword ptr [eax+0BC]
 0065AD60    mov         dword ptr [esp+4],edx
>0065AD64    jmp         0065B276
 0065AD69    mov         eax,dword ptr [esi+4CC]
 0065AD6F    mov         edx,dword ptr [eax+0B0]
 0065AD75    mov         dword ptr [esp],edx
 0065AD78    mov         edx,dword ptr [eax+0B4]
 0065AD7E    mov         dword ptr [esp+4],edx
>0065AD82    jmp         0065B276
 0065AD87    mov         eax,dword ptr [esi+4CC]
 0065AD8D    mov         edx,dword ptr [eax+0C8]
 0065AD93    mov         dword ptr [esp],edx
 0065AD96    mov         edx,dword ptr [eax+0CC]
 0065AD9C    mov         dword ptr [esp+4],edx
>0065ADA0    jmp         0065B276
 0065ADA5    mov         eax,dword ptr [esi+4CC]
 0065ADAB    mov         edx,dword ptr [eax+0C0]
 0065ADB1    mov         dword ptr [esp],edx
 0065ADB4    mov         edx,dword ptr [eax+0C4]
 0065ADBA    mov         dword ptr [esp+4],edx
>0065ADBE    jmp         0065B276
 0065ADC3    mov         eax,dword ptr [esi+4CC]
 0065ADC9    call        TBalanceBoardObject.WeightLeft
 0065ADCE    fstp        qword ptr [esp]
 0065ADD1    wait
>0065ADD2    jmp         0065B276
 0065ADD7    mov         eax,dword ptr [esi+4CC]
 0065ADDD    call        TBalanceBoardObject.WeightRight
 0065ADE2    fstp        qword ptr [esp]
 0065ADE5    wait
>0065ADE6    jmp         0065B276
 0065ADEB    mov         eax,dword ptr [esi+4CC]
 0065ADF1    call        TBalanceBoardObject.WeightTop
 0065ADF6    fstp        qword ptr [esp]
 0065ADF9    wait
>0065ADFA    jmp         0065B276
 0065ADFF    mov         eax,dword ptr [esi+4CC]
 0065AE05    call        TBalanceBoardObject.WeightBottom
 0065AE0A    fstp        qword ptr [esp]
 0065AE0D    wait
>0065AE0E    jmp         0065B276
 0065AE13    mov         eax,dword ptr [esi+4CC]
 0065AE19    call        TBalanceBoardObject.Weight
 0065AE1E    fstp        qword ptr [esp]
 0065AE21    wait
>0065AE22    jmp         0065B276
 0065AE27    mov         eax,dword ptr [esi+4CC]
 0065AE2D    movzx       eax,byte ptr [eax+0D2]
 0065AE34    mov         dword ptr [esp+8],eax
 0065AE38    fild        dword ptr [esp+8]
 0065AE3C    fstp        qword ptr [esp]
 0065AE3F    wait
>0065AE40    jmp         0065B276
 0065AE45    mov         eax,dword ptr [esi+4CC]
 0065AE4B    movzx       eax,word ptr [eax+0D0]
 0065AE52    mov         dword ptr [esp+8],eax
 0065AE56    fild        dword ptr [esp+8]
 0065AE5A    fstp        qword ptr [esp]
 0065AE5D    wait
>0065AE5E    jmp         0065B276
 0065AE63    mov         eax,dword ptr [esi+4CC]
 0065AE69    call        TBalanceBoardObject.JoyX
 0065AE6E    fstp        qword ptr [esp]
 0065AE71    wait
>0065AE72    jmp         0065B276
 0065AE77    mov         eax,dword ptr [esi+4CC]
 0065AE7D    call        TBalanceBoardObject.JoyY
 0065AE82    fstp        qword ptr [esp]
 0065AE85    wait
>0065AE86    jmp         0065B276
 0065AE8B    mov         eax,dword ptr [esi+4CC]
 0065AE91    movzx       eax,word ptr [eax+18]
 0065AE95    mov         dword ptr [esp+8],eax
 0065AE99    fild        dword ptr [esp+8]
 0065AE9D    fstp        qword ptr [esp]
 0065AEA0    wait
>0065AEA1    jmp         0065B276
 0065AEA6    mov         eax,dword ptr [esi+4CC]
 0065AEAC    movzx       eax,word ptr [eax+1A]
 0065AEB0    mov         dword ptr [esp+8],eax
 0065AEB4    fild        dword ptr [esp+8]
 0065AEB8    fstp        qword ptr [esp]
 0065AEBB    wait
>0065AEBC    jmp         0065B276
 0065AEC1    mov         eax,dword ptr [esi+4CC]
 0065AEC7    movzx       eax,word ptr [eax+1C]
 0065AECB    mov         dword ptr [esp+8],eax
 0065AECF    fild        dword ptr [esp+8]
 0065AED3    fstp        qword ptr [esp]
 0065AED6    wait
>0065AED7    jmp         0065B276
 0065AEDC    mov         eax,dword ptr [esi+4CC]
 0065AEE2    movzx       eax,word ptr [eax+1E]
 0065AEE6    mov         dword ptr [esp+8],eax
 0065AEEA    fild        dword ptr [esp+8]
 0065AEEE    fstp        qword ptr [esp]
 0065AEF1    wait
>0065AEF2    jmp         0065B276
 0065AEF7    mov         eax,dword ptr [esi+4CC]
 0065AEFD    movzx       eax,word ptr [eax+20]
 0065AF01    mov         dword ptr [esp+8],eax
 0065AF05    fild        dword ptr [esp+8]
 0065AF09    fstp        qword ptr [esp]
 0065AF0C    wait
>0065AF0D    jmp         0065B276
 0065AF12    mov         eax,dword ptr [esi+4CC]
 0065AF18    movzx       eax,word ptr [eax+22]
 0065AF1C    mov         dword ptr [esp+8],eax
 0065AF20    fild        dword ptr [esp+8]
 0065AF24    fstp        qword ptr [esp]
 0065AF27    wait
>0065AF28    jmp         0065B276
 0065AF2D    mov         eax,dword ptr [esi+4CC]
 0065AF33    movzx       eax,word ptr [eax+24]
 0065AF37    mov         dword ptr [esp+8],eax
 0065AF3B    fild        dword ptr [esp+8]
 0065AF3F    fstp        qword ptr [esp]
 0065AF42    wait
>0065AF43    jmp         0065B276
 0065AF48    mov         eax,dword ptr [esi+4CC]
 0065AF4E    movzx       eax,word ptr [eax+26]
 0065AF52    mov         dword ptr [esp+8],eax
 0065AF56    fild        dword ptr [esp+8]
 0065AF5A    fstp        qword ptr [esp]
 0065AF5D    wait
>0065AF5E    jmp         0065B276
 0065AF63    mov         eax,dword ptr [esi+4CC]
 0065AF69    movzx       eax,word ptr [eax+28]
 0065AF6D    mov         dword ptr [esp+8],eax
 0065AF71    fild        dword ptr [esp+8]
 0065AF75    fstp        qword ptr [esp]
 0065AF78    wait
>0065AF79    jmp         0065B276
 0065AF7E    mov         eax,dword ptr [esi+4CC]
 0065AF84    movzx       eax,word ptr [eax+2A]
 0065AF88    mov         dword ptr [esp+8],eax
 0065AF8C    fild        dword ptr [esp+8]
 0065AF90    fstp        qword ptr [esp]
 0065AF93    wait
>0065AF94    jmp         0065B276
 0065AF99    mov         eax,dword ptr [esi+4CC]
 0065AF9F    movzx       eax,word ptr [eax+2C]
 0065AFA3    mov         dword ptr [esp+8],eax
 0065AFA7    fild        dword ptr [esp+8]
 0065AFAB    fstp        qword ptr [esp]
 0065AFAE    wait
>0065AFAF    jmp         0065B276
 0065AFB4    mov         eax,dword ptr [esi+4CC]
 0065AFBA    movzx       eax,word ptr [eax+2E]
 0065AFBE    mov         dword ptr [esp+8],eax
 0065AFC2    fild        dword ptr [esp+8]
 0065AFC6    fstp        qword ptr [esp]
 0065AFC9    wait
>0065AFCA    jmp         0065B276
 0065AFCF    mov         eax,dword ptr [esi+4CC]
 0065AFD5    movzx       eax,word ptr [eax+10]
 0065AFD9    mov         dword ptr [esp+8],eax
 0065AFDD    fild        dword ptr [esp+8]
 0065AFE1    fstp        qword ptr [esp]
 0065AFE4    wait
>0065AFE5    jmp         0065B276
 0065AFEA    mov         eax,dword ptr [esi+4CC]
 0065AFF0    movzx       eax,word ptr [eax+12]
 0065AFF4    mov         dword ptr [esp+8],eax
 0065AFF8    fild        dword ptr [esp+8]
 0065AFFC    fstp        qword ptr [esp]
 0065AFFF    wait
>0065B000    jmp         0065B276
 0065B005    mov         eax,dword ptr [esi+4CC]
 0065B00B    movzx       eax,word ptr [eax+14]
 0065B00F    mov         dword ptr [esp+8],eax
 0065B013    fild        dword ptr [esp+8]
 0065B017    fstp        qword ptr [esp]
 0065B01A    wait
>0065B01B    jmp         0065B276
 0065B020    mov         eax,dword ptr [esi+4CC]
 0065B026    movzx       eax,word ptr [eax+16]
 0065B02A    mov         dword ptr [esp+8],eax
 0065B02E    fild        dword ptr [esp+8]
 0065B032    fstp        qword ptr [esp]
 0065B035    wait
>0065B036    jmp         0065B276
 0065B03B    mov         eax,dword ptr [esi+4C8]
 0065B041    movzx       eax,byte ptr [eax+8]
 0065B045    movsx       eax,al
 0065B048    mov         dword ptr [esp+8],eax
 0065B04C    fild        dword ptr [esp+8]
 0065B050    fstp        qword ptr [esp]
 0065B053    wait
>0065B054    jmp         0065B276
 0065B059    mov         edx,dword ptr [esi+4C8]
 0065B05F    movzx       eax,byte ptr [edx+eax-332]
 0065B067    mov         dword ptr [esp+8],eax
 0065B06B    fild        dword ptr [esp+8]
 0065B06F    fstp        qword ptr [esp]
 0065B072    wait
>0065B073    jmp         0065B276
 0065B078    mov         edx,dword ptr [esi+4C8]
 0065B07E    movzx       eax,byte ptr [edx+eax-292]
 0065B086    mov         dword ptr [esp+8],eax
 0065B08A    fild        dword ptr [esp+8]
 0065B08E    fstp        qword ptr [esp]
 0065B091    wait
>0065B092    jmp         0065B276
 0065B097    mov         eax,dword ptr [esi+150]
 0065B09D    mov         dword ptr [esp],eax
 0065B0A0    mov         eax,dword ptr [esi+154]
 0065B0A6    mov         dword ptr [esp+4],eax
>0065B0AA    jmp         0065B276
 0065B0AF    mov         eax,dword ptr [esi+158]
 0065B0B5    mov         dword ptr [esp],eax
 0065B0B8    mov         eax,dword ptr [esi+15C]
 0065B0BE    mov         dword ptr [esp+4],eax
>0065B0C2    jmp         0065B276
 0065B0C7    mov         eax,dword ptr [esi+160]
 0065B0CD    mov         dword ptr [esp],eax
 0065B0D0    mov         eax,dword ptr [esi+164]
 0065B0D6    mov         dword ptr [esp+4],eax
>0065B0DA    jmp         0065B276
 0065B0DF    mov         eax,dword ptr [esi+168]
 0065B0E5    mov         dword ptr [esp],eax
 0065B0E8    mov         eax,dword ptr [esi+16C]
 0065B0EE    mov         dword ptr [esp+4],eax
>0065B0F2    jmp         0065B276
 0065B0F7    mov         eax,dword ptr [esi+170]
 0065B0FD    mov         dword ptr [esp],eax
 0065B100    mov         eax,dword ptr [esi+174]
 0065B106    mov         dword ptr [esp+4],eax
>0065B10A    jmp         0065B276
 0065B10F    mov         eax,dword ptr [esi+178]
 0065B115    mov         dword ptr [esp],eax
 0065B118    mov         eax,dword ptr [esi+17C]
 0065B11E    mov         dword ptr [esp+4],eax
>0065B122    jmp         0065B276
 0065B127    mov         eax,dword ptr [esi+168]
 0065B12D    mov         dword ptr [esp],eax
 0065B130    mov         eax,dword ptr [esi+16C]
 0065B136    mov         dword ptr [esp+4],eax
>0065B13A    jmp         0065B276
 0065B13F    mov         eax,dword ptr [esi+170]
 0065B145    mov         dword ptr [esp],eax
 0065B148    mov         eax,dword ptr [esi+174]
 0065B14E    mov         dword ptr [esp+4],eax
>0065B152    jmp         0065B276
 0065B157    mov         eax,dword ptr [esi+178]
 0065B15D    mov         dword ptr [esp],eax
 0065B160    mov         eax,dword ptr [esi+17C]
 0065B166    mov         dword ptr [esp+4],eax
>0065B16A    jmp         0065B276
 0065B16F    mov         eax,dword ptr [esi+1B0]
 0065B175    mov         dword ptr [esp],eax
 0065B178    mov         eax,dword ptr [esi+1B4]
 0065B17E    mov         dword ptr [esp+4],eax
>0065B182    jmp         0065B276
 0065B187    mov         eax,dword ptr [esi+1B8]
 0065B18D    mov         dword ptr [esp],eax
 0065B190    mov         eax,dword ptr [esi+1BC]
 0065B196    mov         dword ptr [esp+4],eax
>0065B19A    jmp         0065B276
 0065B19F    mov         eax,dword ptr [esi+1C0]
 0065B1A5    mov         dword ptr [esp],eax
 0065B1A8    mov         eax,dword ptr [esi+1C4]
 0065B1AE    mov         dword ptr [esp+4],eax
>0065B1B2    jmp         0065B276
 0065B1B7    mov         eax,dword ptr [esi+180]
 0065B1BD    mov         dword ptr [esp],eax
 0065B1C0    mov         eax,dword ptr [esi+184]
 0065B1C6    mov         dword ptr [esp+4],eax
>0065B1CA    jmp         0065B276
 0065B1CF    mov         eax,dword ptr [esi+188]
 0065B1D5    mov         dword ptr [esp],eax
 0065B1D8    mov         eax,dword ptr [esi+18C]
 0065B1DE    mov         dword ptr [esp+4],eax
>0065B1E2    jmp         0065B276
 0065B1E7    mov         eax,dword ptr [esi+190]
 0065B1ED    mov         dword ptr [esp],eax
 0065B1F0    mov         eax,dword ptr [esi+194]
 0065B1F6    mov         dword ptr [esp+4],eax
>0065B1FA    jmp         0065B276
 0065B1FC    mov         dword ptr [esp],9999999A
 0065B203    mov         dword ptr [esp+4],3FA99999
>0065B20B    jmp         0065B276
 0065B20D    movzx       eax,byte ptr [esi+4AC]
 0065B214    movsx       eax,al
 0065B217    mov         dword ptr [esp+8],eax
 0065B21B    fild        dword ptr [esp+8]
 0065B21F    fstp        qword ptr [esp]
 0065B222    wait
>0065B223    jmp         0065B276
 0065B225    movzx       eax,byte ptr [esi+218]
 0065B22C    movsx       eax,al
 0065B22F    mov         dword ptr [esp+8],eax
 0065B233    fild        dword ptr [esp+8]
 0065B237    fstp        qword ptr [esp]
 0065B23A    wait
>0065B23B    jmp         0065B276
 0065B23D    movzx       eax,byte ptr [esi+219]
 0065B244    movsx       eax,al
 0065B247    mov         dword ptr [esp+8],eax
 0065B24B    fild        dword ptr [esp+8]
 0065B24F    fstp        qword ptr [esp]
 0065B252    wait
>0065B253    jmp         0065B276
 0065B255    movzx       eax,byte ptr [esi+21A]
 0065B25C    movsx       eax,al
 0065B25F    mov         dword ptr [esp+8],eax
 0065B263    fild        dword ptr [esp+8]
 0065B267    fstp        qword ptr [esp]
 0065B26A    wait
>0065B26B    jmp         0065B276
 0065B26D    xor         eax,eax
 0065B26F    mov         dword ptr [esp],eax
 0065B272    mov         dword ptr [esp+4],eax
 0065B276    fld         qword ptr [esp]
 0065B279    add         esp,14
 0065B27C    pop         edi
 0065B27D    pop         esi
 0065B27E    pop         ebx
 0065B27F    ret
*}
end;

//0065B280
procedure TWiimoteValueX.GetVector(x:Double; y:Double; z:Double);
begin
{*
 0065B280    push        ebp
 0065B281    mov         ebp,esp
 0065B283    add         esp,0FFFFFFF8
 0065B286    push        ebx
 0065B287    push        esi
 0065B288    push        edi
 0065B289    mov         dword ptr [ebp-4],ecx
 0065B28C    mov         edi,edx
 0065B28E    mov         esi,eax
 0065B290    mov         eax,esi
 0065B292    call        TWiimoteValueX.GetWiimote
 0065B297    mov         ebx,eax
 0065B299    test        ebx,ebx
>0065B29B    jne         0065B2BD
 0065B29D    xor         eax,eax
 0065B29F    mov         dword ptr [edi],eax
 0065B2A1    mov         dword ptr [edi+4],eax
 0065B2A4    mov         eax,dword ptr [ebp-4]
 0065B2A7    xor         edx,edx
 0065B2A9    mov         dword ptr [eax],edx
 0065B2AB    mov         dword ptr [eax+4],edx
 0065B2AE    mov         eax,dword ptr [ebp+8]
 0065B2B1    xor         edx,edx
 0065B2B3    mov         dword ptr [eax],edx
 0065B2B5    mov         dword ptr [eax+4],edx
>0065B2B8    jmp         0065B8F1
 0065B2BD    mov         eax,dword ptr [esi+20];TWiimoteValueX.Item:Integer
 0065B2C0    cmp         eax,166
>0065B2C5    jg          0065B359
>0065B2CB    je          0065B5E3
 0065B2D1    cmp         eax,7B
>0065B2D4    jg          0065B31A
>0065B2D6    je          0065B418
 0065B2DC    cmp         eax,5E
>0065B2DF    jg          0065B303
>0065B2E1    je          0065B577
 0065B2E7    sub         eax,5B
>0065B2EA    je          0065B525
 0065B2F0    dec         eax
>0065B2F1    je          0065B4A9
 0065B2F7    dec         eax
>0065B2F8    je          0065B4E7
>0065B2FE    jmp         0065B8E1
 0065B303    sub         eax,68
>0065B306    je          0065B54E
 0065B30C    sub         eax,12
>0065B30F    je          0065B3E6
>0065B315    jmp         0065B8E1
 0065B31A    cmp         eax,152
>0065B31F    jg          0065B340
>0065B321    je          0065B65C
 0065B327    sub         eax,7C
>0065B32A    je          0065B44C
 0065B330    sub         eax,0CA
>0065B335    je          0065B618
>0065B33B    jmp         0065B8E1
 0065B340    sub         eax,156
>0065B345    je          0065B691
 0065B34B    sub         eax,4
>0065B34E    je          0065B5B5
>0065B354    jmp         0065B8E1
 0065B359    cmp         eax,238
>0065B35E    jg          0065B3A3
>0065B360    je          0065B84A
 0065B366    cmp         eax,1AC
>0065B36B    jg          0065B38A
>0065B36D    je          0065B6C6
 0065B373    sub         eax,1AA
>0065B378    je          0065B764
 0065B37E    dec         eax
>0065B37F    je          0065B792
>0065B385    jmp         0065B8E1
 0065B38A    sub         eax,1AF
>0065B38F    je          0065B700
 0065B395    sub         eax,58
>0065B398    je          0065B7C0
>0065B39E    jmp         0065B8E1
 0065B3A3    cmp         eax,389
>0065B3A8    jg          0065B3CB
>0065B3AA    je          0065B875
 0065B3B0    sub         eax,295
>0065B3B5    je          0065B7EE
 0065B3BB    sub         eax,0F3
>0065B3C0    je          0065B8A6
>0065B3C6    jmp         0065B8E1
 0065B3CB    sub         eax,3AD
>0065B3D0    je          0065B480
 0065B3D6    sub         eax,0B1
>0065B3DB    je          0065B81C
>0065B3E1    jmp         0065B8E1
 0065B3E6    mov         eax,ebx
 0065B3E8    call        TWiimoteObject.DPadX
 0065B3ED    mov         dword ptr [ebp-8],eax
 0065B3F0    fild        dword ptr [ebp-8]
 0065B3F3    fstp        qword ptr [edi]
 0065B3F5    wait
 0065B3F6    mov         eax,ebx
 0065B3F8    call        TWiimoteObject.DPadY
 0065B3FD    mov         dword ptr [ebp-8],eax
 0065B400    fild        dword ptr [ebp-8]
 0065B403    mov         eax,dword ptr [ebp-4]
 0065B406    fstp        qword ptr [eax]
 0065B408    wait
 0065B409    mov         eax,dword ptr [ebp+8]
 0065B40C    xor         edx,edx
 0065B40E    mov         dword ptr [eax],edx
 0065B410    mov         dword ptr [eax+4],edx
>0065B413    jmp         0065B8F1
 0065B418    mov         eax,ebx
 0065B41A    call        TWiimoteObject.DPadY
 0065B41F    mov         dword ptr [ebp-8],eax
 0065B422    fild        dword ptr [ebp-8]
 0065B425    fstp        qword ptr [edi]
 0065B427    wait
 0065B428    mov         eax,ebx
 0065B42A    call        TWiimoteObject.DPadX
 0065B42F    neg         eax
 0065B431    mov         dword ptr [ebp-8],eax
 0065B434    fild        dword ptr [ebp-8]
 0065B437    mov         eax,dword ptr [ebp-4]
 0065B43A    fstp        qword ptr [eax]
 0065B43C    wait
 0065B43D    mov         eax,dword ptr [ebp+8]
 0065B440    xor         edx,edx
 0065B442    mov         dword ptr [eax],edx
 0065B444    mov         dword ptr [eax+4],edx
>0065B447    jmp         0065B8F1
 0065B44C    mov         eax,ebx
 0065B44E    call        TWiimoteObject.DPadY
 0065B453    neg         eax
 0065B455    mov         dword ptr [ebp-8],eax
 0065B458    fild        dword ptr [ebp-8]
 0065B45B    fstp        qword ptr [edi]
 0065B45D    wait
 0065B45E    mov         eax,ebx
 0065B460    call        TWiimoteObject.DPadX
 0065B465    mov         dword ptr [ebp-8],eax
 0065B468    fild        dword ptr [ebp-8]
 0065B46B    mov         eax,dword ptr [ebp-4]
 0065B46E    fstp        qword ptr [eax]
 0065B470    wait
 0065B471    mov         eax,dword ptr [ebp+8]
 0065B474    xor         edx,edx
 0065B476    mov         dword ptr [eax],edx
 0065B478    mov         dword ptr [eax+4],edx
>0065B47B    jmp         0065B8F1
 0065B480    mov         eax,ebx
 0065B482    call        TWiimoteObject.DPad3DX
 0065B487    fstp        qword ptr [edi]
 0065B489    wait
 0065B48A    mov         eax,ebx
 0065B48C    call        TWiimoteObject.DPad3DY
 0065B491    mov         eax,dword ptr [ebp-4]
 0065B494    fstp        qword ptr [eax]
 0065B496    wait
 0065B497    mov         eax,ebx
 0065B499    call        TWiimoteObject.DPad3DZ
 0065B49E    mov         eax,dword ptr [ebp+8]
 0065B4A1    fstp        qword ptr [eax]
 0065B4A3    wait
>0065B4A4    jmp         0065B8F1
 0065B4A9    mov         eax,dword ptr [ebx+248];TWiimoteObject.RawForceX:Double
 0065B4AF    mov         dword ptr [edi],eax
 0065B4B1    mov         eax,dword ptr [ebx+24C];TWiimoteObject.?f24C:dword
 0065B4B7    mov         dword ptr [edi+4],eax
 0065B4BA    mov         eax,dword ptr [ebp-4]
 0065B4BD    mov         edx,dword ptr [ebx+250];TWiimoteObject.RawForceY:Double
 0065B4C3    mov         dword ptr [eax],edx
 0065B4C5    mov         edx,dword ptr [ebx+254];TWiimoteObject.?f254:dword
 0065B4CB    mov         dword ptr [eax+4],edx
 0065B4CE    mov         eax,dword ptr [ebp+8]
 0065B4D1    mov         edx,dword ptr [ebx+258];TWiimoteObject.RawForceZ:Double
 0065B4D7    mov         dword ptr [eax],edx
 0065B4D9    mov         edx,dword ptr [ebx+25C];TWiimoteObject.?f25C:dword
 0065B4DF    mov         dword ptr [eax+4],edx
>0065B4E2    jmp         0065B8F1
 0065B4E7    mov         eax,dword ptr [ebx+338];TWiimoteObject.gx:Double
 0065B4ED    mov         dword ptr [edi],eax
 0065B4EF    mov         eax,dword ptr [ebx+33C];TWiimoteObject.?f33C:dword
 0065B4F5    mov         dword ptr [edi+4],eax
 0065B4F8    mov         eax,dword ptr [ebp-4]
 0065B4FB    mov         edx,dword ptr [ebx+340];TWiimoteObject.gy:Double
 0065B501    mov         dword ptr [eax],edx
 0065B503    mov         edx,dword ptr [ebx+344];TWiimoteObject.?f344:dword
 0065B509    mov         dword ptr [eax+4],edx
 0065B50C    mov         eax,dword ptr [ebp+8]
 0065B50F    mov         edx,dword ptr [ebx+348];TWiimoteObject.gz:Double
 0065B515    mov         dword ptr [eax],edx
 0065B517    mov         edx,dword ptr [ebx+34C];TWiimoteObject.?f34C:dword
 0065B51D    mov         dword ptr [eax+4],edx
>0065B520    jmp         0065B8F1
 0065B525    mov         eax,ebx
 0065B527    call        TAccelerometerObject.RawAccX
 0065B52C    fstp        qword ptr [edi]
 0065B52E    wait
 0065B52F    mov         eax,ebx
 0065B531    call        TAccelerometerObject.RawAccY
 0065B536    mov         eax,dword ptr [ebp-4]
 0065B539    fstp        qword ptr [eax]
 0065B53B    wait
 0065B53C    mov         eax,ebx
 0065B53E    call        TAccelerometerObject.RawAccZ
 0065B543    mov         eax,dword ptr [ebp+8]
 0065B546    fstp        qword ptr [eax]
 0065B548    wait
>0065B549    jmp         0065B8F1
 0065B54E    mov         eax,ebx
 0065B550    call        TAccelerometerObject.RelAccX
 0065B555    fstp        qword ptr [edi]
 0065B557    wait
 0065B558    mov         eax,ebx
 0065B55A    call        TAccelerometerObject.RelAccY
 0065B55F    mov         eax,dword ptr [ebp-4]
 0065B562    fstp        qword ptr [eax]
 0065B564    wait
 0065B565    mov         eax,ebx
 0065B567    call        TAccelerometerObject.RelAccZ
 0065B56C    mov         eax,dword ptr [ebp+8]
 0065B56F    fstp        qword ptr [eax]
 0065B571    wait
>0065B572    jmp         0065B8F1
 0065B577    mov         eax,dword ptr [ebx+350];TWiimoteObject.UpX:Double
 0065B57D    mov         dword ptr [edi],eax
 0065B57F    mov         eax,dword ptr [ebx+354];TWiimoteObject.?f354:TRotMat
 0065B585    mov         dword ptr [edi+4],eax
 0065B588    mov         eax,dword ptr [ebp-4]
 0065B58B    mov         edx,dword ptr [ebx+358];TWiimoteObject.UpY:Double
 0065B591    mov         dword ptr [eax],edx
 0065B593    mov         edx,dword ptr [ebx+35C];TWiimoteObject.?f35C:TRotMat
 0065B599    mov         dword ptr [eax+4],edx
 0065B59C    mov         eax,dword ptr [ebp+8]
 0065B59F    mov         edx,dword ptr [ebx+360];TWiimoteObject.UpZ:Double
 0065B5A5    mov         dword ptr [eax],edx
 0065B5A7    mov         edx,dword ptr [ebx+364];TWiimoteObject.?f364:TRotMat
 0065B5AD    mov         dword ptr [eax+4],edx
>0065B5B0    jmp         0065B8F1
 0065B5B5    mov         eax,dword ptr [ebx+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065B5BB    call        TNunchukObject.StickX
 0065B5C0    fstp        qword ptr [edi]
 0065B5C2    wait
 0065B5C3    mov         eax,dword ptr [ebx+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065B5C9    call        TNunchukObject.StickY
 0065B5CE    mov         eax,dword ptr [ebp-4]
 0065B5D1    fstp        qword ptr [eax]
 0065B5D3    wait
 0065B5D4    mov         eax,dword ptr [ebp+8]
 0065B5D7    xor         edx,edx
 0065B5D9    mov         dword ptr [eax],edx
 0065B5DB    mov         dword ptr [eax+4],edx
>0065B5DE    jmp         0065B8F1
 0065B5E3    mov         eax,dword ptr [ebx+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065B5E9    call        TNunchukObject.Stick3DX
 0065B5EE    fstp        qword ptr [edi]
 0065B5F0    wait
 0065B5F1    mov         eax,dword ptr [ebx+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065B5F7    call        TNunchukObject.Stick3DY
 0065B5FC    mov         eax,dword ptr [ebp-4]
 0065B5FF    fstp        qword ptr [eax]
 0065B601    wait
 0065B602    mov         eax,dword ptr [ebx+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065B608    call        TNunchukObject.Stick3DZ
 0065B60D    mov         eax,dword ptr [ebp+8]
 0065B610    fstp        qword ptr [eax]
 0065B612    wait
>0065B613    jmp         0065B8F1
 0065B618    mov         eax,dword ptr [ebx+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065B61E    mov         edx,dword ptr [eax+338];TNunchukObject.gx:Double
 0065B624    mov         dword ptr [edi],edx
 0065B626    mov         edx,dword ptr [eax+33C];TNunchukObject.?f33C:dword
 0065B62C    mov         dword ptr [edi+4],edx
 0065B62F    mov         edx,dword ptr [ebp-4]
 0065B632    mov         ecx,dword ptr [eax+340];TNunchukObject.gy:Double
 0065B638    mov         dword ptr [edx],ecx
 0065B63A    mov         ecx,dword ptr [eax+344];TNunchukObject.?f344:dword
 0065B640    mov         dword ptr [edx+4],ecx
 0065B643    mov         edx,dword ptr [ebp+8]
 0065B646    mov         ecx,dword ptr [eax+348];TNunchukObject.gz:Double
 0065B64C    mov         dword ptr [edx],ecx
 0065B64E    mov         ecx,dword ptr [eax+34C];TNunchukObject.?f34C:dword
 0065B654    mov         dword ptr [edx+4],ecx
>0065B657    jmp         0065B8F1
 0065B65C    mov         eax,dword ptr [ebx+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065B662    call        TAccelerometerObject.RawAccX
 0065B667    fstp        qword ptr [edi]
 0065B669    wait
 0065B66A    mov         eax,dword ptr [ebx+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065B670    call        TAccelerometerObject.RawAccY
 0065B675    mov         eax,dword ptr [ebp-4]
 0065B678    fstp        qword ptr [eax]
 0065B67A    wait
 0065B67B    mov         eax,dword ptr [ebx+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065B681    call        TAccelerometerObject.RawAccZ
 0065B686    mov         eax,dword ptr [ebp+8]
 0065B689    fstp        qword ptr [eax]
 0065B68B    wait
>0065B68C    jmp         0065B8F1
 0065B691    mov         eax,dword ptr [ebx+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065B697    call        TAccelerometerObject.RelAccX
 0065B69C    fstp        qword ptr [edi]
 0065B69E    wait
 0065B69F    mov         eax,dword ptr [ebx+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065B6A5    call        TAccelerometerObject.RelAccY
 0065B6AA    mov         eax,dword ptr [ebp-4]
 0065B6AD    fstp        qword ptr [eax]
 0065B6AF    wait
 0065B6B0    mov         eax,dword ptr [ebx+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065B6B6    call        TAccelerometerObject.RelAccZ
 0065B6BB    mov         eax,dword ptr [ebp+8]
 0065B6BE    fstp        qword ptr [eax]
 0065B6C0    wait
>0065B6C1    jmp         0065B8F1
 0065B6C6    mov         eax,dword ptr [ebx+4B8];TWiimoteObject.Classic:TClassicObject
 0065B6CC    call        TClassicObject.DPadX
 0065B6D1    mov         dword ptr [ebp-8],eax
 0065B6D4    fild        dword ptr [ebp-8]
 0065B6D7    fstp        qword ptr [edi]
 0065B6D9    wait
 0065B6DA    mov         eax,dword ptr [ebx+4B8];TWiimoteObject.Classic:TClassicObject
 0065B6E0    call        TClassicObject.DPadY
 0065B6E5    mov         dword ptr [ebp-8],eax
 0065B6E8    fild        dword ptr [ebp-8]
 0065B6EB    mov         eax,dword ptr [ebp-4]
 0065B6EE    fstp        qword ptr [eax]
 0065B6F0    wait
 0065B6F1    mov         eax,dword ptr [ebp+8]
 0065B6F4    xor         edx,edx
 0065B6F6    mov         dword ptr [eax],edx
 0065B6F8    mov         dword ptr [eax+4],edx
>0065B6FB    jmp         0065B8F1
 0065B700    mov         eax,dword ptr [ebx+4B8];TWiimoteObject.Classic:TClassicObject
 0065B706    call        TClassicObject.A
 0065B70B    mov         esi,eax
 0065B70D    and         esi,7F
 0065B710    mov         eax,dword ptr [ebx+4B8];TWiimoteObject.Classic:TClassicObject
 0065B716    call        TClassicObject.Y
 0065B71B    and         eax,7F
 0065B71E    sub         esi,eax
 0065B720    mov         dword ptr [ebp-8],esi
 0065B723    fild        dword ptr [ebp-8]
 0065B726    fstp        qword ptr [edi]
 0065B728    wait
 0065B729    mov         eax,dword ptr [ebx+4B8];TWiimoteObject.Classic:TClassicObject
 0065B72F    call        TClassicObject.B
 0065B734    mov         esi,eax
 0065B736    and         esi,7F
 0065B739    mov         eax,dword ptr [ebx+4B8];TWiimoteObject.Classic:TClassicObject
 0065B73F    call        TClassicObject.X
 0065B744    and         eax,7F
 0065B747    sub         esi,eax
 0065B749    mov         dword ptr [ebp-8],esi
 0065B74C    fild        dword ptr [ebp-8]
 0065B74F    mov         eax,dword ptr [ebp-4]
 0065B752    fstp        qword ptr [eax]
 0065B754    wait
 0065B755    mov         eax,dword ptr [ebp+8]
 0065B758    xor         edx,edx
 0065B75A    mov         dword ptr [eax],edx
 0065B75C    mov         dword ptr [eax+4],edx
>0065B75F    jmp         0065B8F1
 0065B764    mov         eax,dword ptr [ebx+4B8];TWiimoteObject.Classic:TClassicObject
 0065B76A    call        TClassicObject.LeftStickX
 0065B76F    fstp        qword ptr [edi]
 0065B771    wait
 0065B772    mov         eax,dword ptr [ebx+4B8];TWiimoteObject.Classic:TClassicObject
 0065B778    call        TClassicObject.LeftStickY
 0065B77D    mov         eax,dword ptr [ebp-4]
 0065B780    fstp        qword ptr [eax]
 0065B782    wait
 0065B783    mov         eax,dword ptr [ebp+8]
 0065B786    xor         edx,edx
 0065B788    mov         dword ptr [eax],edx
 0065B78A    mov         dword ptr [eax+4],edx
>0065B78D    jmp         0065B8F1
 0065B792    mov         eax,dword ptr [ebx+4B8];TWiimoteObject.Classic:TClassicObject
 0065B798    call        TClassicObject.RightStickX
 0065B79D    fstp        qword ptr [edi]
 0065B79F    wait
 0065B7A0    mov         eax,dword ptr [ebx+4B8];TWiimoteObject.Classic:TClassicObject
 0065B7A6    call        TClassicObject.RightStickY
 0065B7AB    mov         eax,dword ptr [ebp-4]
 0065B7AE    fstp        qword ptr [eax]
 0065B7B0    wait
 0065B7B1    mov         eax,dword ptr [ebp+8]
 0065B7B4    xor         edx,edx
 0065B7B6    mov         dword ptr [eax],edx
 0065B7B8    mov         dword ptr [eax+4],edx
>0065B7BB    jmp         0065B8F1
 0065B7C0    mov         eax,dword ptr [ebx+4BC];TWiimoteObject.Guitar:TGuitarObject
 0065B7C6    call        TGuitarObject.StickX
 0065B7CB    fstp        qword ptr [edi]
 0065B7CD    wait
 0065B7CE    mov         eax,dword ptr [ebx+4BC];TWiimoteObject.Guitar:TGuitarObject
 0065B7D4    call        TGuitarObject.StickY
 0065B7D9    mov         eax,dword ptr [ebp-4]
 0065B7DC    fstp        qword ptr [eax]
 0065B7DE    wait
 0065B7DF    mov         eax,dword ptr [ebp+8]
 0065B7E2    xor         edx,edx
 0065B7E4    mov         dword ptr [eax],edx
 0065B7E6    mov         dword ptr [eax+4],edx
>0065B7E9    jmp         0065B8F1
 0065B7EE    mov         eax,dword ptr [ebx+4C0];TWiimoteObject.Drums:TDrumsObject
 0065B7F4    call        TDrumsObject.StickX
 0065B7F9    fstp        qword ptr [edi]
 0065B7FB    wait
 0065B7FC    mov         eax,dword ptr [ebx+4C0];TWiimoteObject.Drums:TDrumsObject
 0065B802    call        TDrumsObject.StickY
 0065B807    mov         eax,dword ptr [ebp-4]
 0065B80A    fstp        qword ptr [eax]
 0065B80C    wait
 0065B80D    mov         eax,dword ptr [ebp+8]
 0065B810    xor         edx,edx
 0065B812    mov         dword ptr [eax],edx
 0065B814    mov         dword ptr [eax+4],edx
>0065B817    jmp         0065B8F1
 0065B81C    mov         eax,dword ptr [ebx+4C4];TWiimoteObject.Turntable:TTurntableObject
 0065B822    call        TTurntableObject.StickX
 0065B827    fstp        qword ptr [edi]
 0065B829    wait
 0065B82A    mov         eax,dword ptr [ebx+4C4];TWiimoteObject.Turntable:TTurntableObject
 0065B830    call        TTurntableObject.StickY
 0065B835    mov         eax,dword ptr [ebp-4]
 0065B838    fstp        qword ptr [eax]
 0065B83A    wait
 0065B83B    mov         eax,dword ptr [ebp+8]
 0065B83E    xor         edx,edx
 0065B840    mov         dword ptr [eax],edx
 0065B842    mov         dword ptr [eax+4],edx
>0065B845    jmp         0065B8F1
 0065B84A    mov         eax,dword ptr [ebx+4CC];TWiimoteObject.BalanceBoard:TBalanceBoardObject
 0065B850    call        TBalanceBoardObject.JoyX
 0065B855    fstp        qword ptr [edi]
 0065B857    wait
 0065B858    mov         eax,dword ptr [ebx+4CC];TWiimoteObject.BalanceBoard:TBalanceBoardObject
 0065B85E    call        TBalanceBoardObject.JoyY
 0065B863    mov         eax,dword ptr [ebp-4]
 0065B866    fstp        qword ptr [eax]
 0065B868    wait
 0065B869    mov         eax,dword ptr [ebp+8]
 0065B86C    xor         edx,edx
 0065B86E    mov         dword ptr [eax],edx
 0065B870    mov         dword ptr [eax+4],edx
>0065B873    jmp         0065B8F1
 0065B875    mov         eax,dword ptr [ebx+6E0];TWiimoteObject.varIRx:Double
 0065B87B    mov         dword ptr [edi],eax
 0065B87D    mov         eax,dword ptr [ebx+6E4];TWiimoteObject.?f6E4:dword
 0065B883    mov         dword ptr [edi+4],eax
 0065B886    mov         eax,dword ptr [ebp-4]
 0065B889    mov         edx,dword ptr [ebx+6E8];TWiimoteObject.varIRy:Double
 0065B88F    mov         dword ptr [eax],edx
 0065B891    mov         edx,dword ptr [ebx+6EC];TWiimoteObject.?f6EC:dword
 0065B897    mov         dword ptr [eax+4],edx
 0065B89A    mov         eax,dword ptr [ebp+8]
 0065B89D    xor         edx,edx
 0065B89F    mov         dword ptr [eax],edx
 0065B8A1    mov         dword ptr [eax+4],edx
>0065B8A4    jmp         0065B8F1
 0065B8A6    mov         eax,dword ptr [ebx+588];TWiimoteObject.x:Double
 0065B8AC    mov         dword ptr [edi],eax
 0065B8AE    mov         eax,dword ptr [ebx+58C];TWiimoteObject.?f58C:dword
 0065B8B4    mov         dword ptr [edi+4],eax
 0065B8B7    mov         eax,dword ptr [ebp-4]
 0065B8BA    mov         edx,dword ptr [ebx+590];TWiimoteObject.y:Double
 0065B8C0    mov         dword ptr [eax],edx
 0065B8C2    mov         edx,dword ptr [ebx+594];TWiimoteObject.?f594:dword
 0065B8C8    mov         dword ptr [eax+4],edx
 0065B8CB    mov         eax,dword ptr [ebp+8]
 0065B8CE    mov         edx,dword ptr [ebx+598];TWiimoteObject.z:Double
 0065B8D4    mov         dword ptr [eax],edx
 0065B8D6    mov         edx,dword ptr [ebx+59C];TWiimoteObject.?f59C:dword
 0065B8DC    mov         dword ptr [eax+4],edx
>0065B8DF    jmp         0065B8F1
 0065B8E1    mov         eax,dword ptr [ebp+8]
 0065B8E4    push        eax
 0065B8E5    mov         ecx,dword ptr [ebp-4]
 0065B8E8    mov         edx,edi
 0065B8EA    mov         eax,esi
 0065B8EC    call        TExpression.GetVector
 0065B8F1    pop         edi
 0065B8F2    pop         esi
 0065B8F3    pop         ebx
 0065B8F4    pop         ecx
 0065B8F5    pop         ecx
 0065B8F6    pop         ebp
 0065B8F7    ret         4
*}
end;

//0065B8FC
function TWiimoteValueX.GetWiimote:TWiimoteObject;
begin
{*
 0065B8FC    push        ebx
 0065B8FD    mov         ebx,eax
 0065B8FF    call        0074BF10
 0065B904    mov         edx,dword ptr [ebx+24];TWiimoteValueX.ThingKind:Integer
 0065B907    cmp         edx,4
>0065B90A    ja          0065B959
 0065B90C    jmp         dword ptr [edx*4+65B913]
 0065B90C    dd          0065B927
 0065B90C    dd          0065B931
 0065B90C    dd          0065B93B
 0065B90C    dd          0065B945
 0065B90C    dd          0065B94F
 0065B927    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 0065B92A    call        TWiimoteManager.GetWiimote
 0065B92F    pop         ebx
 0065B930    ret
 0065B931    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 0065B934    call        TWiimoteManager.GetGuitar
 0065B939    pop         ebx
 0065B93A    ret
 0065B93B    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 0065B93E    call        TWiimoteManager.GetBalanceBoard
 0065B943    pop         ebx
 0065B944    ret
 0065B945    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 0065B948    call        TWiimoteManager.GetDrums
 0065B94D    pop         ebx
 0065B94E    ret
 0065B94F    mov         edx,dword ptr [ebx+18];TWiimoteValueX......................................................
 0065B952    call        TWiimoteManager.GetTurntable
 0065B957    pop         ebx
 0065B958    ret
 0065B959    xor         eax,eax
 0065B95B    pop         ebx
 0065B95C    ret
*}
end;

//0065B960
{*function TWiimoteValueX.SetValue(NewValue:Double; ?:?):Boolean;
begin
 0065B960    push        ebp
 0065B961    mov         ebp,esp
 0065B963    push        ebx
 0065B964    push        esi
 0065B965    push        edi
 0065B966    mov         esi,eax
 0065B968    xor         ebx,ebx
 0065B96A    mov         eax,esi
 0065B96C    call        TWiimoteValueX.GetWiimote
 0065B971    mov         edi,eax
 0065B973    test        edi,edi
>0065B975    je          0065C0DE
 0065B97B    mov         bl,1
 0065B97D    mov         eax,dword ptr [esi+20];TWiimoteValueX.Item:Integer
 0065B980    cmp         eax,73
>0065B983    jg          0065BAFE
>0065B989    je          0065BC1A
 0065B98F    cmp         eax,4C
>0065B992    jg          0065BA53
>0065B998    je          0065BE55
 0065B99E    cmp         eax,1A
>0065B9A1    jg          0065BA15
>0065B9A3    je          0065C040
 0065B9A9    cmp         eax,16
>0065B9AC    ja          0065C0DC
 0065B9B2    jmp         dword ptr [eax*4+65B9B9]
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065BC82
 0065B9B2    dd          0065BC01
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065C0DC
 0065B9B2    dd          0065BC98
 0065B9B2    dd          0065BCBC
 0065B9B2    dd          0065BCE2
 0065B9B2    dd          0065BD0A
 0065BA15    cmp         eax,1E
>0065BA18    jg          0065BA3C
>0065BA1A    je          0065C0A2
 0065BA20    sub         eax,1B
>0065BA23    je          0065C069
 0065BA29    dec         eax
>0065BA2A    je          0065C07C
 0065BA30    dec         eax
>0065BA31    je          0065C08F
>0065BA37    jmp         0065C0DC
 0065BA3C    sub         eax,1F
>0065BA3F    je          0065C0B5
 0065BA45    sub         eax,18
>0065BA48    je          0065C056
>0065BA4E    jmp         0065C0DC
 0065BA53    add         eax,0FFFFFFB3
 0065BA56    cmp         eax,25
>0065BA59    ja          0065C0DC
 0065BA5F    jmp         dword ptr [eax*4+65BA66]
 0065BA5F    dd          0065BE9A
 0065BA5F    dd          0065BEDF
 0065BA5F    dd          0065BEB1
 0065BA5F    dd          0065BE6C
 0065BA5F    dd          0065BEF6
 0065BA5F    dd          0065BEC8
 0065BA5F    dd          0065BF0D
 0065BA5F    dd          0065BE83
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065C0DC
 0065BA5F    dd          0065BC3E
 0065BA5F    dd          0065BC69
 0065BA5F    dd          0065BC57
 0065BA5F    dd          0065BC2C
 0065BAFE    cmp         eax,367
>0065BB03    jg          0065BB9E
>0065BB09    je          0065BDCB
 0065BB0F    cmp         eax,149
>0065BB14    jg          0065BB5A
>0065BB16    je          0065BFB5
 0065BB1C    cmp         eax,7E
>0065BB1F    jg          0065BB43
>0065BB21    je          0065BD97
 0065BB27    sub         eax,77
>0065BB2A    je          0065C0DE
 0065BB30    dec         eax
>0065BB31    je          0065C0DE
 0065BB37    dec         eax
>0065BB38    je          0065C0DE
>0065BB3E    jmp         0065C0DC
 0065BB43    sub         eax,147
>0065BB48    je          0065BF98
 0065BB4E    dec         eax
>0065BB4F    je          0065BF7B
>0065BB55    jmp         0065C0DC
 0065BB5A    cmp         eax,159
>0065BB5F    jg          0065BB85
>0065BB61    je          0065BDAE
 0065BB67    sub         eax,14A
>0065BB6C    je          0065BF24
 0065BB72    dec         eax
>0065BB73    je          0065BF41
 0065BB79    dec         eax
>0065BB7A    je          0065BF5E
>0065BB80    jmp         0065C0DC
 0065BB85    sub         eax,171
>0065BB8A    je          0065BFEF
 0065BB90    sub         eax,6
>0065BB93    je          0065BFD2
>0065BB99    jmp         0065C0DC
 0065BB9E    cmp         eax,3A8
>0065BBA3    jg          0065BBD8
>0065BBA5    je          0065BD34
 0065BBAB    add         eax,0FFFFFC98
 0065BBB0    cmp         eax,5
>0065BBB3    ja          0065C0DC
 0065BBB9    jmp         dword ptr [eax*4+65BBC0]
 0065BBB9    dd          0065BDE2
 0065BBB9    dd          0065BDF9
 0065BBB9    dd          0065BE10
 0065BBB9    dd          0065BE27
 0065BBB9    dd          0065BE3E
 0065BBB9    dd          0065BD80
 0065BBD8    add         eax,0FFFFFC50
 0065BBDD    cmp         eax,4
>0065BBE0    ja          0065C0DC
 0065BBE6    jmp         dword ptr [eax*4+65BBED]
 0065BBE6    dd          0065C02A
 0065BBE6    dd          0065BD4A
 0065BBE6    dd          0065BD5C
 0065BBE6    dd          0065BD6E
 0065BBE6    dd          0065C0C8
 0065BC01    push        dword ptr [ebp+0C]
 0065BC04    push        dword ptr [ebp+8]
 0065BC07    call        00686060
 0065BC0C    mov         edx,eax
 0065BC0E    mov         eax,edi
 0065BC10    call        TWiimoteObject.SetRumble
>0065BC15    jmp         0065C0DE
 0065BC1A    push        dword ptr [ebp+0C]
 0065BC1D    push        dword ptr [ebp+8]
 0065BC20    mov         eax,edi
 0065BC22    call        TWiimoteObject.SetFrequency
>0065BC27    jmp         0065C0DE
 0065BC2C    push        dword ptr [ebp+0C]
 0065BC2F    push        dword ptr [ebp+8]
 0065BC32    mov         eax,edi
 0065BC34    call        TWiimoteObject.SetVolume
>0065BC39    jmp         0065C0DE
 0065BC3E    push        dword ptr [ebp+0C]
 0065BC41    push        dword ptr [ebp+8]
 0065BC44    call        00686060
 0065BC49    mov         edx,eax
 0065BC4B    mov         eax,edi
 0065BC4D    call        TWiimoteObject.SetSpeaker
>0065BC52    jmp         0065C0DE
 0065BC57    push        dword ptr [ebp+0C]
 0065BC5A    push        dword ptr [ebp+8]
 0065BC5D    mov         eax,edi
 0065BC5F    call        TWiimoteObject.SetSampleRate
>0065BC64    jmp         0065C0DE
 0065BC69    push        dword ptr [ebp+0C]
 0065BC6C    push        dword ptr [ebp+8]
 0065BC6F    call        00686060
 0065BC74    mov         edx,eax
 0065BC76    mov         eax,edi
 0065BC78    call        TWiimoteObject.SetMute
>0065BC7D    jmp         0065C0DE
 0065BC82    fld         qword ptr [ebp+8]
 0065BC85    call        @ROUND
 0065BC8A    mov         edx,eax
 0065BC8C    mov         eax,edi
 0065BC8E    call        TWiimoteObject.SetLeds
>0065BC93    jmp         0065C0DE
 0065BC98    push        dword ptr [ebp+0C]
 0065BC9B    push        dword ptr [ebp+8]
 0065BC9E    call        00686060
 0065BCA3    mov         edx,eax
 0065BCA5    movzx       eax,byte ptr [edi+48D];TWiimoteObject.FLeds:byte
 0065BCAC    and         al,0FE
 0065BCAE    or          dl,al
 0065BCB0    mov         eax,edi
 0065BCB2    call        TWiimoteObject.SetLeds
>0065BCB7    jmp         0065C0DE
 0065BCBC    push        dword ptr [ebp+0C]
 0065BCBF    push        dword ptr [ebp+8]
 0065BCC2    call        00686060
 0065BCC7    mov         edx,eax
 0065BCC9    add         edx,edx
 0065BCCB    movzx       eax,byte ptr [edi+48D];TWiimoteObject.FLeds:byte
 0065BCD2    and         al,0FD
 0065BCD4    or          dl,al
 0065BCD6    mov         eax,edi
 0065BCD8    call        TWiimoteObject.SetLeds
>0065BCDD    jmp         0065C0DE
 0065BCE2    push        dword ptr [ebp+0C]
 0065BCE5    push        dword ptr [ebp+8]
 0065BCE8    call        00686060
 0065BCED    mov         edx,eax
 0065BCEF    add         edx,edx
 0065BCF1    add         edx,edx
 0065BCF3    movzx       eax,byte ptr [edi+48D];TWiimoteObject.FLeds:byte
 0065BCFA    and         al,0FB
 0065BCFC    or          dl,al
 0065BCFE    mov         eax,edi
 0065BD00    call        TWiimoteObject.SetLeds
>0065BD05    jmp         0065C0DE
 0065BD0A    push        dword ptr [ebp+0C]
 0065BD0D    push        dword ptr [ebp+8]
 0065BD10    call        00686060
 0065BD15    mov         edx,eax
 0065BD17    add         edx,edx
 0065BD19    add         edx,edx
 0065BD1B    add         edx,edx
 0065BD1D    movzx       eax,byte ptr [edi+48D];TWiimoteObject.FLeds:byte
 0065BD24    and         al,0F7
 0065BD26    or          dl,al
 0065BD28    mov         eax,edi
 0065BD2A    call        TWiimoteObject.SetLeds
>0065BD2F    jmp         0065C0DE
 0065BD34    fld         qword ptr [ebp+8]
 0065BD37    call        @ROUND
 0065BD3C    mov         edx,eax
 0065BD3E    mov         eax,edi
 0065BD40    call        TWiimoteObject.SetPlayerLed
>0065BD45    jmp         0065C0DE
 0065BD4A    push        dword ptr [ebp+0C]
 0065BD4D    push        dword ptr [ebp+8]
 0065BD50    mov         eax,edi
 0065BD52    call        TWiimoteObject.SetLedLevel
>0065BD57    jmp         0065C0DE
 0065BD5C    push        dword ptr [ebp+0C]
 0065BD5F    push        dword ptr [ebp+8]
 0065BD62    mov         eax,edi
 0065BD64    call        TWiimoteObject.SetLedDrumLevel
>0065BD69    jmp         0065C0DE
 0065BD6E    push        dword ptr [ebp+0C]
 0065BD71    push        dword ptr [ebp+8]
 0065BD74    mov         eax,edi
 0065BD76    call        TAccelerometerObject.SetYaw
>0065BD7B    jmp         0065C0DE
 0065BD80    mov         eax,dword ptr [ebp+8]
 0065BD83    mov         dword ptr [edi+230],eax;TWiimoteObject.DegPerGyro:Double
 0065BD89    mov         eax,dword ptr [ebp+0C]
 0065BD8C    mov         dword ptr [edi+234],eax;TWiimoteObject.?f234:dword
>0065BD92    jmp         0065C0DE
 0065BD97    mov         eax,dword ptr [ebp+8]
 0065BD9A    mov         dword ptr [edi+2D8],eax;TWiimoteObject.tolerance:Double
 0065BDA0    mov         eax,dword ptr [ebp+0C]
 0065BDA3    mov         dword ptr [edi+2DC],eax;TWiimoteObject.?f2DC:dword
>0065BDA9    jmp         0065C0DE
 0065BDAE    mov         eax,dword ptr [edi+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065BDB4    mov         edx,dword ptr [ebp+8]
 0065BDB7    mov         dword ptr [eax+2D8],edx;TNunchukObject.tolerance:Double
 0065BDBD    mov         edx,dword ptr [ebp+0C]
 0065BDC0    mov         dword ptr [eax+2DC],edx;TNunchukObject.?f2DC:dword
>0065BDC6    jmp         0065C0DE
 0065BDCB    mov         eax,dword ptr [ebp+8]
 0065BDCE    mov         dword ptr [edi+1B0],eax;TWiimoteObject.TotalGyroYaw:Double
 0065BDD4    mov         eax,dword ptr [ebp+0C]
 0065BDD7    mov         dword ptr [edi+1B4],eax;TWiimoteObject.?f1B4:dword
>0065BDDD    jmp         0065C0DE
 0065BDE2    mov         eax,dword ptr [ebp+8]
 0065BDE5    mov         dword ptr [edi+1B8],eax;TWiimoteObject.TotalGyroPitch:Double
 0065BDEB    mov         eax,dword ptr [ebp+0C]
 0065BDEE    mov         dword ptr [edi+1BC],eax;TWiimoteObject.?f1BC:dword
>0065BDF4    jmp         0065C0DE
 0065BDF9    mov         eax,dword ptr [ebp+8]
 0065BDFC    mov         dword ptr [edi+1C0],eax;TWiimoteObject.TotalGyroRoll:Double
 0065BE02    mov         eax,dword ptr [ebp+0C]
 0065BE05    mov         dword ptr [edi+1C4],eax;TWiimoteObject.?f1C4:dword
>0065BE0B    jmp         0065C0DE
 0065BE10    mov         eax,dword ptr [ebp+8]
 0065BE13    mov         dword ptr [edi+180],eax;TWiimoteObject.ZeroYawSpeed:Double
 0065BE19    mov         eax,dword ptr [ebp+0C]
 0065BE1C    mov         dword ptr [edi+184],eax;TWiimoteObject.?f184:dword
>0065BE22    jmp         0065C0DE
 0065BE27    mov         eax,dword ptr [ebp+8]
 0065BE2A    mov         dword ptr [edi+188],eax;TWiimoteObject.ZeroPitchSpeed:Double
 0065BE30    mov         eax,dword ptr [ebp+0C]
 0065BE33    mov         dword ptr [edi+18C],eax;TWiimoteObject.?f18C:dword
>0065BE39    jmp         0065C0DE
 0065BE3E    mov         eax,dword ptr [ebp+8]
 0065BE41    mov         dword ptr [edi+190],eax;TWiimoteObject.ZeroRollSpeed:Double
 0065BE47    mov         eax,dword ptr [ebp+0C]
 0065BE4A    mov         dword ptr [edi+194],eax;TWiimoteObject.?f194:dword
>0065BE50    jmp         0065C0DE
 0065BE55    mov         eax,dword ptr [ebp+8]
 0065BE58    mov         dword ptr [edi+260],eax;TWiimoteObject.cxx:Double
 0065BE5E    mov         eax,dword ptr [ebp+0C]
 0065BE61    mov         dword ptr [edi+264],eax;TWiimoteObject.?f264:dword
>0065BE67    jmp         0065C0DE
 0065BE6C    mov         eax,dword ptr [ebp+8]
 0065BE6F    mov         dword ptr [edi+280],eax;TWiimoteObject.cyy:Double
 0065BE75    mov         eax,dword ptr [ebp+0C]
 0065BE78    mov         dword ptr [edi+284],eax;TWiimoteObject.?f284:dword
>0065BE7E    jmp         0065C0DE
 0065BE83    mov         eax,dword ptr [ebp+8]
 0065BE86    mov         dword ptr [edi+2A0],eax;TWiimoteObject.czz:Double
 0065BE8C    mov         eax,dword ptr [ebp+0C]
 0065BE8F    mov         dword ptr [edi+2A4],eax;TWiimoteObject.?f2A4:dword
>0065BE95    jmp         0065C0DE
 0065BE9A    mov         eax,dword ptr [ebp+8]
 0065BE9D    mov         dword ptr [edi+268],eax;TWiimoteObject.cxy:Double
 0065BEA3    mov         eax,dword ptr [ebp+0C]
 0065BEA6    mov         dword ptr [edi+26C],eax;TWiimoteObject.?f26C:dword
>0065BEAC    jmp         0065C0DE
 0065BEB1    mov         eax,dword ptr [ebp+8]
 0065BEB4    mov         dword ptr [edi+278],eax;TWiimoteObject.cyx:Double
 0065BEBA    mov         eax,dword ptr [ebp+0C]
 0065BEBD    mov         dword ptr [edi+27C],eax;TWiimoteObject.?f27C:dword
>0065BEC3    jmp         0065C0DE
 0065BEC8    mov         eax,dword ptr [ebp+8]
 0065BECB    mov         dword ptr [edi+290],eax;TWiimoteObject.czx:Double
 0065BED1    mov         eax,dword ptr [ebp+0C]
 0065BED4    mov         dword ptr [edi+294],eax;TWiimoteObject.?f294:dword
>0065BEDA    jmp         0065C0DE
 0065BEDF    mov         eax,dword ptr [ebp+8]
 0065BEE2    mov         dword ptr [edi+270],eax;TWiimoteObject.cxz:Double
 0065BEE8    mov         eax,dword ptr [ebp+0C]
 0065BEEB    mov         dword ptr [edi+274],eax;TWiimoteObject.?f274:dword
>0065BEF1    jmp         0065C0DE
 0065BEF6    mov         eax,dword ptr [ebp+8]
 0065BEF9    mov         dword ptr [edi+288],eax;TWiimoteObject.cyz:Double
 0065BEFF    mov         eax,dword ptr [ebp+0C]
 0065BF02    mov         dword ptr [edi+28C],eax;TWiimoteObject.?f28C:dword
>0065BF08    jmp         0065C0DE
 0065BF0D    mov         eax,dword ptr [ebp+8]
 0065BF10    mov         dword ptr [edi+298],eax;TWiimoteObject.czy:Double
 0065BF16    mov         eax,dword ptr [ebp+0C]
 0065BF19    mov         dword ptr [edi+29C],eax;TWiimoteObject.?f29C:dword
>0065BF1F    jmp         0065C0DE
 0065BF24    mov         eax,dword ptr [edi+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065BF2A    mov         edx,dword ptr [ebp+8]
 0065BF2D    mov         dword ptr [eax+260],edx;TNunchukObject.cxx:Double
 0065BF33    mov         edx,dword ptr [ebp+0C]
 0065BF36    mov         dword ptr [eax+264],edx;TNunchukObject.?f264:dword
>0065BF3C    jmp         0065C0DE
 0065BF41    mov         eax,dword ptr [edi+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065BF47    mov         edx,dword ptr [ebp+8]
 0065BF4A    mov         dword ptr [eax+280],edx;TNunchukObject.cyy:Double
 0065BF50    mov         edx,dword ptr [ebp+0C]
 0065BF53    mov         dword ptr [eax+284],edx;TNunchukObject.?f284:dword
>0065BF59    jmp         0065C0DE
 0065BF5E    mov         eax,dword ptr [edi+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065BF64    mov         edx,dword ptr [ebp+8]
 0065BF67    mov         dword ptr [eax+2A0],edx;TNunchukObject.czz:Double
 0065BF6D    mov         edx,dword ptr [ebp+0C]
 0065BF70    mov         dword ptr [eax+2A4],edx;TNunchukObject.?f2A4:dword
>0065BF76    jmp         0065C0DE
 0065BF7B    mov         eax,dword ptr [edi+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065BF81    mov         edx,dword ptr [ebp+8]
 0065BF84    mov         dword ptr [eax+268],edx;TNunchukObject.cxy:Double
 0065BF8A    mov         edx,dword ptr [ebp+0C]
 0065BF8D    mov         dword ptr [eax+26C],edx;TNunchukObject.?f26C:dword
>0065BF93    jmp         0065C0DE
 0065BF98    mov         eax,dword ptr [edi+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065BF9E    mov         edx,dword ptr [ebp+8]
 0065BFA1    mov         dword ptr [eax+278],edx;TNunchukObject.cyx:Double
 0065BFA7    mov         edx,dword ptr [ebp+0C]
 0065BFAA    mov         dword ptr [eax+27C],edx;TNunchukObject.?f27C:dword
>0065BFB0    jmp         0065C0DE
 0065BFB5    mov         eax,dword ptr [edi+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065BFBB    mov         edx,dword ptr [ebp+8]
 0065BFBE    mov         dword ptr [eax+270],edx;TNunchukObject.cxz:Double
 0065BFC4    mov         edx,dword ptr [ebp+0C]
 0065BFC7    mov         dword ptr [eax+274],edx;TNunchukObject.?f274:dword
>0065BFCD    jmp         0065C0DE
 0065BFD2    push        dword ptr [ebp+0C]
 0065BFD5    push        dword ptr [ebp+8]
 0065BFD8    call        00686060
 0065BFDD    mov         edx,eax
 0065BFDF    mov         eax,dword ptr [edi+4B4];TWiimoteObject.Nunchuk:TNunchukObject
 0065BFE5    call        TNunchukObject.SetCalibrated
>0065BFEA    jmp         0065C0DE
 0065BFEF    push        dword ptr [ebp+0C]
 0065BFF2    push        dword ptr [ebp+8]
 0065BFF5    call        00686060
 0065BFFA    test        al,al
>0065BFFC    je          0065C014
 0065BFFE    mov         dword ptr [edi+4B0],2;TWiimoteObject.BladeFXConfidence:Integer
 0065C008    mov         byte ptr [edi+4AB],1;TWiimoteObject.MustBeBladeFX:Boolean
>0065C00F    jmp         0065C0DE
 0065C014    mov         dword ptr [edi+4B0],0FFFFFFFF;TWiimoteObject.BladeFXConfidence:Integer
 0065C01E    mov         byte ptr [edi+4AB],0;TWiimoteObject.MustBeBladeFX:Boolean
>0065C025    jmp         0065C0DE
 0065C02A    push        dword ptr [ebp+0C]
 0065C02D    push        dword ptr [ebp+8]
 0065C030    call        00686060
 0065C035    mov         byte ptr [edi+4AA],al;TWiimoteObject.ThirdParty:Boolean
>0065C03B    jmp         0065C0DE
 0065C040    fld         qword ptr [ebp+8]
 0065C043    call        @ROUND
 0065C048    mov         edx,eax
 0065C04A    mov         eax,edi
 0065C04C    call        TWiimoteObject.SetChannel
>0065C051    jmp         0065C0DE
 0065C056    fld         qword ptr [ebp+8]
 0065C059    call        @ROUND
 0065C05E    mov         edx,eax
 0065C060    mov         eax,edi
 0065C062    call        TWiimoteObject.SetReport11
>0065C067    jmp         0065C0DE
 0065C069    fld         qword ptr [ebp+8]
 0065C06C    call        @ROUND
 0065C071    mov         edx,eax
 0065C073    mov         eax,edi
 0065C075    call        TWiimoteObject.SetReport13
>0065C07A    jmp         0065C0DE
 0065C07C    fld         qword ptr [ebp+8]
 0065C07F    call        @ROUND
 0065C084    mov         edx,eax
 0065C086    mov         eax,edi
 0065C088    call        TWiimoteObject.SetReport14
>0065C08D    jmp         0065C0DE
 0065C08F    fld         qword ptr [ebp+8]
 0065C092    call        @ROUND
 0065C097    mov         edx,eax
 0065C099    mov         eax,edi
 0065C09B    call        TWiimoteObject.SetReport15
>0065C0A0    jmp         0065C0DE
 0065C0A2    fld         qword ptr [ebp+8]
 0065C0A5    call        @ROUND
 0065C0AA    mov         edx,eax
 0065C0AC    mov         eax,edi
 0065C0AE    call        TWiimoteObject.SetReport19
>0065C0B3    jmp         0065C0DE
 0065C0B5    fld         qword ptr [ebp+8]
 0065C0B8    call        @ROUND
 0065C0BD    mov         edx,eax
 0065C0BF    mov         eax,edi
 0065C0C1    call        TWiimoteObject.SetReport1A
>0065C0C6    jmp         0065C0DE
 0065C0C8    mov         eax,dword ptr [ebp+8]
 0065C0CB    mov         dword ptr [edi+3E0],eax;TWiimoteObject.SteeringAngle:Double
 0065C0D1    mov         eax,dword ptr [ebp+0C]
 0065C0D4    mov         dword ptr [edi+3E4],eax;TWiimoteObject.?f3E4:dword
>0065C0DA    jmp         0065C0DE
 0065C0DC    xor         ebx,ebx
 0065C0DE    mov         eax,ebx
 0065C0E0    pop         edi
 0065C0E1    pop         esi
 0065C0E2    pop         ebx
 0065C0E3    pop         ebp
 0065C0E4    ret         8
end;*}

//0065C0E8
{*procedure TWiimoteValueX.ToString(?:?);
begin
 0065C0E8    push        ebp
 0065C0E9    mov         ebp,esp
 0065C0EB    mov         ecx,7
 0065C0F0    push        0
 0065C0F2    push        0
 0065C0F4    dec         ecx
>0065C0F5    jne         0065C0F0
 0065C0F7    push        ecx
 0065C0F8    push        ebx
 0065C0F9    push        esi
 0065C0FA    mov         dword ptr [ebp-0C],edx
 0065C0FD    mov         ebx,eax
 0065C0FF    xor         eax,eax
 0065C101    push        ebp
 0065C102    push        65C5DE
 0065C107    push        dword ptr fs:[eax]
 0065C10A    mov         dword ptr fs:[eax],esp
 0065C10D    lea         edx,[ebp-4]
 0065C110    mov         eax,dword ptr [ebx+20];TWiimoteValueX.Item:Integer
 0065C113    call        00651BB4
 0065C118    mov         eax,dword ptr [ebx+24];TWiimoteValueX.ThingKind:Integer
 0065C11B    test        eax,eax
>0065C11D    jne         0065C1F9
 0065C123    mov         edx,dword ptr [ebp-4]
 0065C126    mov         eax,65C5F8;'.'
 0065C12B    call        Pos
 0065C130    mov         esi,eax
 0065C132    test        esi,esi
>0065C134    jle         0065C19E
 0065C136    lea         eax,[ebp-8]
 0065C139    push        eax
 0065C13A    mov         ecx,esi
 0065C13C    dec         ecx
 0065C13D    mov         edx,1
 0065C142    mov         eax,dword ptr [ebp-4]
 0065C145    call        @UStrCopy
 0065C14A    lea         edx,[ebp-10]
 0065C14D    mov         eax,dword ptr [ebp-8]
 0065C150    call        LowerCase
 0065C155    mov         eax,dword ptr [ebp-10]
 0065C158    mov         edx,65C608;'nunchuk'
 0065C15D    call        @UStrEqual
>0065C162    je          0065C17E
 0065C164    lea         edx,[ebp-14]
 0065C167    mov         eax,dword ptr [ebp-8]
 0065C16A    call        LowerCase
 0065C16F    mov         eax,dword ptr [ebp-14]
 0065C172    mov         edx,65C624;'classic'
 0065C177    call        @UStrEqual
>0065C17C    jne         0065C18F
 0065C17E    lea         eax,[ebp-4]
 0065C181    mov         ecx,esi
 0065C183    mov         edx,1
 0065C188    call        @UStrDelete
>0065C18D    jmp         0065C1AB
 0065C18F    lea         eax,[ebp-8]
 0065C192    mov         edx,65C640;'Wiimote'
 0065C197    call        @UStrLAsg
>0065C19C    jmp         0065C1AB
 0065C19E    lea         eax,[ebp-8]
 0065C1A1    mov         edx,65C640;'Wiimote'
 0065C1A6    call        @UStrLAsg
 0065C1AB    mov         esi,dword ptr [ebx+18];TWiimoteValueX......................................................
 0065C1AE    test        esi,esi
>0065C1B0    jle         0065C1DC
 0065C1B2    push        dword ptr [ebp-8]
 0065C1B5    lea         edx,[ebp-18]
 0065C1B8    mov         eax,esi
 0065C1BA    call        IntToStr
 0065C1BF    push        dword ptr [ebp-18]
 0065C1C2    push        65C5F8;'.'
 0065C1C7    push        dword ptr [ebp-4]
 0065C1CA    mov         eax,dword ptr [ebp-0C]
 0065C1CD    mov         edx,4
 0065C1D2    call        @UStrCatN
>0065C1D7    jmp         0065C5B6
 0065C1DC    push        dword ptr [ebp-8]
 0065C1DF    push        65C5F8;'.'
 0065C1E4    push        dword ptr [ebp-4]
 0065C1E7    mov         eax,dword ptr [ebp-0C]
 0065C1EA    mov         edx,3
 0065C1EF    call        @UStrCatN
>0065C1F4    jmp         0065C5B6
 0065C1F9    cmp         eax,1
>0065C1FC    jne         0065C2D1
 0065C202    mov         edx,dword ptr [ebp-4]
 0065C205    mov         eax,65C5F8;'.'
 0065C20A    call        Pos
 0065C20F    mov         esi,eax
 0065C211    test        esi,esi
>0065C213    jle         0065C266
 0065C215    lea         eax,[ebp-8]
 0065C218    push        eax
 0065C219    mov         ecx,esi
 0065C21B    dec         ecx
 0065C21C    mov         edx,1
 0065C221    mov         eax,dword ptr [ebp-4]
 0065C224    call        @UStrCopy
 0065C229    lea         edx,[ebp-1C]
 0065C22C    mov         eax,dword ptr [ebp-8]
 0065C22F    call        LowerCase
 0065C234    mov         eax,dword ptr [ebp-1C]
 0065C237    mov         edx,65C65C;'guitar'
 0065C23C    call        @UStrEqual
>0065C241    jne         0065C254
 0065C243    lea         eax,[ebp-4]
 0065C246    mov         ecx,esi
 0065C248    mov         edx,1
 0065C24D    call        @UStrDelete
>0065C252    jmp         0065C276
 0065C254    lea         eax,[ebp-4]
 0065C257    mov         ecx,dword ptr [ebp-4]
 0065C25A    mov         edx,65C678;'Wiimote.'
 0065C25F    call        @UStrCat3
>0065C264    jmp         0065C276
 0065C266    lea         eax,[ebp-4]
 0065C269    mov         ecx,dword ptr [ebp-4]
 0065C26C    mov         edx,65C678;'Wiimote.'
 0065C271    call        @UStrCat3
 0065C276    lea         eax,[ebp-8]
 0065C279    mov         edx,65C698;'WiiGuitar'
 0065C27E    call        @UStrLAsg
 0065C283    mov         esi,dword ptr [ebx+18];TWiimoteValueX......................................................
 0065C286    test        esi,esi
>0065C288    jle         0065C2B4
 0065C28A    push        dword ptr [ebp-8]
 0065C28D    lea         edx,[ebp-20]
 0065C290    mov         eax,esi
 0065C292    call        IntToStr
 0065C297    push        dword ptr [ebp-20]
 0065C29A    push        65C5F8;'.'
 0065C29F    push        dword ptr [ebp-4]
 0065C2A2    mov         eax,dword ptr [ebp-0C]
 0065C2A5    mov         edx,4
 0065C2AA    call        @UStrCatN
>0065C2AF    jmp         0065C5B6
 0065C2B4    push        dword ptr [ebp-8]
 0065C2B7    push        65C5F8;'.'
 0065C2BC    push        dword ptr [ebp-4]
 0065C2BF    mov         eax,dword ptr [ebp-0C]
 0065C2C2    mov         edx,3
 0065C2C7    call        @UStrCatN
>0065C2CC    jmp         0065C5B6
 0065C2D1    cmp         eax,2
>0065C2D4    jne         0065C3A9
 0065C2DA    mov         edx,dword ptr [ebp-4]
 0065C2DD    mov         eax,65C5F8;'.'
 0065C2E2    call        Pos
 0065C2E7    mov         esi,eax
 0065C2E9    test        esi,esi
>0065C2EB    jle         0065C33E
 0065C2ED    lea         eax,[ebp-8]
 0065C2F0    push        eax
 0065C2F1    mov         ecx,esi
 0065C2F3    dec         ecx
 0065C2F4    mov         edx,1
 0065C2F9    mov         eax,dword ptr [ebp-4]
 0065C2FC    call        @UStrCopy
 0065C301    lea         edx,[ebp-24]
 0065C304    mov         eax,dword ptr [ebp-8]
 0065C307    call        LowerCase
 0065C30C    mov         eax,dword ptr [ebp-24]
 0065C30F    mov         edx,65C6B8;'balance'
 0065C314    call        @UStrEqual
>0065C319    jne         0065C32C
 0065C31B    lea         eax,[ebp-4]
 0065C31E    mov         ecx,esi
 0065C320    mov         edx,1
 0065C325    call        @UStrDelete
>0065C32A    jmp         0065C34E
 0065C32C    lea         eax,[ebp-4]
 0065C32F    mov         ecx,dword ptr [ebp-4]
 0065C332    mov         edx,65C678;'Wiimote.'
 0065C337    call        @UStrCat3
>0065C33C    jmp         0065C34E
 0065C33E    lea         eax,[ebp-4]
 0065C341    mov         ecx,dword ptr [ebp-4]
 0065C344    mov         edx,65C678;'Wiimote.'
 0065C349    call        @UStrCat3
 0065C34E    lea         eax,[ebp-8]
 0065C351    mov         edx,65C6D4;'BalanceBoard'
 0065C356    call        @UStrLAsg
 0065C35B    mov         esi,dword ptr [ebx+18];TWiimoteValueX......................................................
 0065C35E    test        esi,esi
>0065C360    jle         0065C38C
 0065C362    push        dword ptr [ebp-8]
 0065C365    lea         edx,[ebp-28]
 0065C368    mov         eax,esi
 0065C36A    call        IntToStr
 0065C36F    push        dword ptr [ebp-28]
 0065C372    push        65C5F8;'.'
 0065C377    push        dword ptr [ebp-4]
 0065C37A    mov         eax,dword ptr [ebp-0C]
 0065C37D    mov         edx,4
 0065C382    call        @UStrCatN
>0065C387    jmp         0065C5B6
 0065C38C    push        dword ptr [ebp-8]
 0065C38F    push        65C5F8;'.'
 0065C394    push        dword ptr [ebp-4]
 0065C397    mov         eax,dword ptr [ebp-0C]
 0065C39A    mov         edx,3
 0065C39F    call        @UStrCatN
>0065C3A4    jmp         0065C5B6
 0065C3A9    cmp         eax,3
>0065C3AC    jne         0065C481
 0065C3B2    mov         edx,dword ptr [ebp-4]
 0065C3B5    mov         eax,65C5F8;'.'
 0065C3BA    call        Pos
 0065C3BF    mov         esi,eax
 0065C3C1    test        esi,esi
>0065C3C3    jle         0065C416
 0065C3C5    lea         eax,[ebp-8]
 0065C3C8    push        eax
 0065C3C9    mov         ecx,esi
 0065C3CB    dec         ecx
 0065C3CC    mov         edx,1
 0065C3D1    mov         eax,dword ptr [ebp-4]
 0065C3D4    call        @UStrCopy
 0065C3D9    lea         edx,[ebp-2C]
 0065C3DC    mov         eax,dword ptr [ebp-8]
 0065C3DF    call        LowerCase
 0065C3E4    mov         eax,dword ptr [ebp-2C]
 0065C3E7    mov         edx,65C6FC;'drums'
 0065C3EC    call        @UStrEqual
>0065C3F1    jne         0065C404
 0065C3F3    lea         eax,[ebp-4]
 0065C3F6    mov         ecx,esi
 0065C3F8    mov         edx,1
 0065C3FD    call        @UStrDelete
>0065C402    jmp         0065C426
 0065C404    lea         eax,[ebp-4]
 0065C407    mov         ecx,dword ptr [ebp-4]
 0065C40A    mov         edx,65C678;'Wiimote.'
 0065C40F    call        @UStrCat3
>0065C414    jmp         0065C426
 0065C416    lea         eax,[ebp-4]
 0065C419    mov         ecx,dword ptr [ebp-4]
 0065C41C    mov         edx,65C678;'Wiimote.'
 0065C421    call        @UStrCat3
 0065C426    lea         eax,[ebp-8]
 0065C429    mov         edx,65C714;'WiiDrums'
 0065C42E    call        @UStrLAsg
 0065C433    mov         esi,dword ptr [ebx+18];TWiimoteValueX......................................................
 0065C436    test        esi,esi
>0065C438    jle         0065C464
 0065C43A    push        dword ptr [ebp-8]
 0065C43D    lea         edx,[ebp-30]
 0065C440    mov         eax,esi
 0065C442    call        IntToStr
 0065C447    push        dword ptr [ebp-30]
 0065C44A    push        65C5F8;'.'
 0065C44F    push        dword ptr [ebp-4]
 0065C452    mov         eax,dword ptr [ebp-0C]
 0065C455    mov         edx,4
 0065C45A    call        @UStrCatN
>0065C45F    jmp         0065C5B6
 0065C464    push        dword ptr [ebp-8]
 0065C467    push        65C5F8;'.'
 0065C46C    push        dword ptr [ebp-4]
 0065C46F    mov         eax,dword ptr [ebp-0C]
 0065C472    mov         edx,3
 0065C477    call        @UStrCatN
>0065C47C    jmp         0065C5B6
 0065C481    cmp         eax,4
>0065C484    jne         0065C553
 0065C48A    mov         edx,dword ptr [ebp-4]
 0065C48D    mov         eax,65C5F8;'.'
 0065C492    call        Pos
 0065C497    mov         esi,eax
 0065C499    test        esi,esi
>0065C49B    jle         0065C4EE
 0065C49D    lea         eax,[ebp-8]
 0065C4A0    push        eax
 0065C4A1    mov         ecx,esi
 0065C4A3    dec         ecx
 0065C4A4    mov         edx,1
 0065C4A9    mov         eax,dword ptr [ebp-4]
 0065C4AC    call        @UStrCopy
 0065C4B1    lea         edx,[ebp-34]
 0065C4B4    mov         eax,dword ptr [ebp-8]
 0065C4B7    call        LowerCase
 0065C4BC    mov         eax,dword ptr [ebp-34]
 0065C4BF    mov         edx,65C734;'turntable'
 0065C4C4    call        @UStrEqual
>0065C4C9    jne         0065C4DC
 0065C4CB    lea         eax,[ebp-4]
 0065C4CE    mov         ecx,esi
 0065C4D0    mov         edx,1
 0065C4D5    call        @UStrDelete
>0065C4DA    jmp         0065C4FE
 0065C4DC    lea         eax,[ebp-4]
 0065C4DF    mov         ecx,dword ptr [ebp-4]
 0065C4E2    mov         edx,65C678;'Wiimote.'
 0065C4E7    call        @UStrCat3
>0065C4EC    jmp         0065C4FE
 0065C4EE    lea         eax,[ebp-4]
 0065C4F1    mov         ecx,dword ptr [ebp-4]
 0065C4F4    mov         edx,65C678;'Wiimote.'
 0065C4F9    call        @UStrCat3
 0065C4FE    lea         eax,[ebp-8]
 0065C501    mov         edx,65C754;'WiiTurntable'
 0065C506    call        @UStrLAsg
 0065C50B    mov         esi,dword ptr [ebx+18];TWiimoteValueX......................................................
 0065C50E    test        esi,esi
>0065C510    jle         0065C539
 0065C512    push        dword ptr [ebp-8]
 0065C515    lea         edx,[ebp-38]
 0065C518    mov         eax,esi
 0065C51A    call        IntToStr
 0065C51F    push        dword ptr [ebp-38]
 0065C522    push        65C5F8;'.'
 0065C527    push        dword ptr [ebp-4]
 0065C52A    mov         eax,dword ptr [ebp-0C]
 0065C52D    mov         edx,4
 0065C532    call        @UStrCatN
>0065C537    jmp         0065C5B6
 0065C539    push        dword ptr [ebp-8]
 0065C53C    push        65C5F8;'.'
 0065C541    push        dword ptr [ebp-4]
 0065C544    mov         eax,dword ptr [ebp-0C]
 0065C547    mov         edx,3
 0065C54C    call        @UStrCatN
>0065C551    jmp         0065C5B6
 0065C553    lea         eax,[ebp-8]
 0065C556    mov         edx,65C77C;'WiimoteUnknownThingKind'
 0065C55B    call        @UStrLAsg
 0065C560    lea         eax,[ebp-4]
 0065C563    mov         ecx,dword ptr [ebp-4]
 0065C566    mov         edx,65C678;'Wiimote.'
 0065C56B    call        @UStrCat3
 0065C570    mov         esi,dword ptr [ebx+18];TWiimoteValueX......................................................
 0065C573    test        esi,esi
>0065C575    jle         0065C59E
 0065C577    push        dword ptr [ebp-8]
 0065C57A    lea         edx,[ebp-3C]
 0065C57D    mov         eax,esi
 0065C57F    call        IntToStr
 0065C584    push        dword ptr [ebp-3C]
 0065C587    push        65C5F8;'.'
 0065C58C    push        dword ptr [ebp-4]
 0065C58F    mov         eax,dword ptr [ebp-0C]
 0065C592    mov         edx,4
 0065C597    call        @UStrCatN
>0065C59C    jmp         0065C5B6
 0065C59E    push        dword ptr [ebp-8]
 0065C5A1    push        65C5F8;'.'
 0065C5A6    push        dword ptr [ebp-4]
 0065C5A9    mov         eax,dword ptr [ebp-0C]
 0065C5AC    mov         edx,3
 0065C5B1    call        @UStrCatN
 0065C5B6    xor         eax,eax
 0065C5B8    pop         edx
 0065C5B9    pop         ecx
 0065C5BA    pop         ecx
 0065C5BB    mov         dword ptr fs:[eax],edx
 0065C5BE    push        65C5E5
 0065C5C3    lea         eax,[ebp-3C]
 0065C5C6    mov         edx,0C
 0065C5CB    call        @UStrArrayClr
 0065C5D0    lea         eax,[ebp-8]
 0065C5D3    mov         edx,2
 0065C5D8    call        @UStrArrayClr
 0065C5DD    ret
>0065C5DE    jmp         @HandleFinally
>0065C5E3    jmp         0065C5C3
 0065C5E5    pop         esi
 0065C5E6    pop         ebx
 0065C5E7    mov         esp,ebp
 0065C5E9    pop         ebp
 0065C5EA    ret
end;*}

//0065C7AC
{*function sub_0065C7AC(?:Integer; ?:?):?;
begin
 0065C7AC    push        ebx
 0065C7AD    push        esi
 0065C7AE    mov         esi,edx
 0065C7B0    mov         ebx,eax
 0065C7B2    call        0074BF10
 0065C7B7    test        eax,eax
>0065C7B9    je          0065C7C7
 0065C7BB    mov         ecx,esi
 0065C7BD    mov         edx,ebx
 0065C7BF    call        TWiimoteManager.Peek
 0065C7C4    pop         esi
 0065C7C5    pop         ebx
 0065C7C6    ret
 0065C7C7    mov         eax,0FFFFFFEF
 0065C7CC    pop         esi
 0065C7CD    pop         ebx
 0065C7CE    ret
end;*}

//0065C7D0
procedure sub_0065C7D0(?:Integer; ?:Byte);
begin
{*
 0065C7D0    push        ebx
 0065C7D1    push        esi
 0065C7D2    mov         esi,edx
 0065C7D4    mov         ebx,eax
 0065C7D6    call        0074BF10
 0065C7DB    test        eax,eax
>0065C7DD    je          0065C7FC
 0065C7DF    mov         edx,ebx
 0065C7E1    call        TWiimoteManager.GetWiimote
 0065C7E6    test        eax,eax
>0065C7E8    je          0065C7FC
 0065C7EA    cmp         byte ptr [eax+18],0;TWiimoteObject.Connected:Boolean
>0065C7EE    je          0065C7FC
 0065C7F0    mov         edx,esi
 0065C7F2    mov         ecx,16
 0065C7F7    call        TManagedHidObject.SendReport
 0065C7FC    pop         esi
 0065C7FD    pop         ebx
 0065C7FE    ret
*}
end;

//0065C800
procedure TModuleWiimote.AddFields;
begin
{*
 0065C800    push        ebp
 0065C801    mov         ebp,esp
 0065C803    mov         ecx,0C
 0065C808    push        0
 0065C80A    push        0
 0065C80C    dec         ecx
>0065C80D    jne         0065C808
 0065C80F    push        ebx
 0065C810    push        esi
 0065C811    push        edi
 0065C812    mov         ebx,eax
 0065C814    xor         eax,eax
 0065C816    push        ebp
 0065C817    push        65FED9
 0065C81C    push        dword ptr fs:[eax]
 0065C81F    mov         dword ptr fs:[eax],esp
 0065C822    xor         ecx,ecx
 0065C824    mov         edx,65FEF4;'Exists'
 0065C829    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C82C    call        THashTable.Add
 0065C831    mov         ecx,17
 0065C836    mov         edx,65FF10;'PluggedIn'
 0065C83B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C83E    call        THashTable.Add
 0065C843    mov         ecx,3A8
 0065C848    mov         edx,65FF30;'LedPlayer'
 0065C84D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C850    call        THashTable.Add
 0065C855    mov         ecx,1
 0065C85A    mov         edx,65FF50;'Leds'
 0065C85F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C862    call        THashTable.Add
 0065C867    mov         ecx,3B1
 0065C86C    mov         edx,65FF68;'LedLevel'
 0065C871    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C874    call        THashTable.Add
 0065C879    mov         ecx,3B2
 0065C87E    mov         edx,65FF88;'LedBackwardLevel'
 0065C883    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C886    call        THashTable.Add
 0065C88B    mov         ecx,13
 0065C890    mov         edx,65FFB8;'Led1'
 0065C895    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C898    call        THashTable.Add
 0065C89D    mov         ecx,14
 0065C8A2    mov         edx,65FFD0;'Led2'
 0065C8A7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C8AA    call        THashTable.Add
 0065C8AF    mov         ecx,15
 0065C8B4    mov         edx,65FFE8;'Led3'
 0065C8B9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C8BC    call        THashTable.Add
 0065C8C1    mov         ecx,16
 0065C8C6    mov         edx,660000;'Led4'
 0065C8CB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C8CE    call        THashTable.Add
 0065C8D3    mov         ecx,2
 0065C8D8    mov         edx,660018;'Rumble'
 0065C8DD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C8E0    call        THashTable.Add
 0065C8E5    mov         ecx,2
 0065C8EA    mov         edx,660034;'Vibration1'
 0065C8EF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C8F2    call        THashTable.Add
 0065C8F7    mov         ecx,2
 0065C8FC    mov         edx,660058;'Vibration2'
 0065C901    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C904    call        THashTable.Add
 0065C909    mov         ecx,3
 0065C90E    mov         edx,66007C;'RawForceX'
 0065C913    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C916    call        THashTable.Add
 0065C91B    mov         ecx,4
 0065C920    mov         edx,66009C;'RawForceY'
 0065C925    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C928    call        THashTable.Add
 0065C92D    mov         ecx,5
 0065C932    mov         edx,6600BC;'RawForceZ'
 0065C937    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C93A    call        THashTable.Add
 0065C93F    mov         ecx,7A
 0065C944    mov         edx,6600DC;'DPad'
 0065C949    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C94C    call        THashTable.Add
 0065C951    mov         ecx,7B
 0065C956    mov         edx,6600F4;'DPadSideways'
 0065C95B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C95E    call        THashTable.Add
 0065C963    mov         ecx,3AD
 0065C968    mov         edx,66011C;'DPad3D'
 0065C96D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C970    call        THashTable.Add
 0065C975    mov         ecx,6
 0065C97A    mov         edx,660138;'Up'
 0065C97F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C982    call        THashTable.Add
 0065C987    mov         ecx,7
 0065C98C    mov         edx,66014C;'Down'
 0065C991    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C994    call        THashTable.Add
 0065C999    mov         ecx,8
 0065C99E    mov         edx,660164;'Left'
 0065C9A3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C9A6    call        THashTable.Add
 0065C9AB    mov         ecx,9
 0065C9B0    mov         edx,66017C;'Right'
 0065C9B5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C9B8    call        THashTable.Add
 0065C9BD    mov         ecx,0A
 0065C9C2    mov         edx,660194;'Home'
 0065C9C7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C9CA    call        THashTable.Add
 0065C9CF    mov         ecx,0A
 0065C9D4    mov         edx,6601AC;'HomeButton'
 0065C9D9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C9DC    call        THashTable.Add
 0065C9E1    mov         ecx,0B
 0065C9E6    mov         edx,6601D0;'A'
 0065C9EB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065C9EE    call        THashTable.Add
 0065C9F3    mov         ecx,0C
 0065C9F8    mov         edx,6601E0;'B'
 0065C9FD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CA00    call        THashTable.Add
 0065CA05    mov         ecx,0B
 0065CA0A    mov         edx,6601F0;'AButton'
 0065CA0F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CA12    call        THashTable.Add
 0065CA17    mov         ecx,0C
 0065CA1C    mov         edx,66020C;'BButton'
 0065CA21    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CA24    call        THashTable.Add
 0065CA29    mov         ecx,0D
 0065CA2E    mov         edx,660228;'One'
 0065CA33    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CA36    call        THashTable.Add
 0065CA3B    mov         ecx,0D
 0065CA40    mov         edx,66023C;'OneButton'
 0065CA45    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CA48    call        THashTable.Add
 0065CA4D    mov         ecx,0D
 0065CA52    mov         edx,66025C;'1'
 0065CA57    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CA5A    call        THashTable.Add
 0065CA5F    mov         ecx,0D
 0065CA64    mov         edx,66026C;'1Button'
 0065CA69    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CA6C    call        THashTable.Add
 0065CA71    mov         ecx,0E
 0065CA76    mov         edx,660288;'Two'
 0065CA7B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CA7E    call        THashTable.Add
 0065CA83    mov         ecx,0E
 0065CA88    mov         edx,66029C;'TwoButton'
 0065CA8D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CA90    call        THashTable.Add
 0065CA95    mov         ecx,0E
 0065CA9A    mov         edx,6602BC;'2'
 0065CA9F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CAA2    call        THashTable.Add
 0065CAA7    mov         ecx,0E
 0065CAAC    mov         edx,6602CC;'2Button'
 0065CAB1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CAB4    call        THashTable.Add
 0065CAB9    mov         ecx,0F
 0065CABE    mov         edx,6602E8;'Plus'
 0065CAC3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CAC6    call        THashTable.Add
 0065CACB    mov         ecx,10
 0065CAD0    mov         edx,660300;'Minus'
 0065CAD5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CAD8    call        THashTable.Add
 0065CADD    mov         ecx,0F
 0065CAE2    mov         edx,660318;'PlusButton'
 0065CAE7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CAEA    call        THashTable.Add
 0065CAEF    mov         ecx,10
 0065CAF4    mov         edx,66033C;'MinusButton'
 0065CAF9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CAFC    call        THashTable.Add
 0065CB01    mov         ecx,11
 0065CB06    mov         edx,660360;'HasClassic'
 0065CB0B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CB0E    call        THashTable.Add
 0065CB13    mov         ecx,11
 0065CB18    mov         edx,660384;'Classic.Exists'
 0065CB1D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CB20    call        THashTable.Add
 0065CB25    mov         ecx,372
 0065CB2A    mov         edx,6603B0;'HasMotionPlus'
 0065CB2F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CB32    call        THashTable.Add
 0065CB37    mov         ecx,372
 0065CB3C    mov         edx,6603D8;'MotionPlus.Exists'
 0065CB41    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CB44    call        THashTable.Add
 0065CB49    mov         ecx,208
 0065CB4E    mov         edx,660408;'HasGuitar'
 0065CB53    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CB56    call        THashTable.Add
 0065CB5B    mov         ecx,208
 0065CB60    mov         edx,660428;'Guitar.Exists'
 0065CB65    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CB68    call        THashTable.Add
 0065CB6D    mov         ecx,209
 0065CB72    mov         edx,660450;'Guitar.IsWorldTour'
 0065CB77    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CB7A    call        THashTable.Add
 0065CB7F    mov         ecx,28A
 0065CB84    mov         edx,660484;'Drums.Exists'
 0065CB89    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CB8C    call        THashTable.Add
 0065CB91    mov         ecx,28A
 0065CB96    mov         edx,6604AC;'HasDrums'
 0065CB9B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CB9E    call        THashTable.Add
 0065CBA3    mov         ecx,28A
 0065CBA8    mov         edx,6604CC;'HasDrum'
 0065CBAD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CBB0    call        THashTable.Add
 0065CBB5    mov         ecx,28A
 0065CBBA    mov         edx,6604E8;'HasDrumKit'
 0065CBBF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CBC2    call        THashTable.Add
 0065CBC7    mov         ecx,12
 0065CBCC    mov         edx,66050C;'HasNunchuk'
 0065CBD1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CBD4    call        THashTable.Add
 0065CBD9    mov         ecx,12
 0065CBDE    mov         edx,660530;'HasNunchuck'
 0065CBE3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CBE6    call        THashTable.Add
 0065CBEB    mov         ecx,12
 0065CBF0    mov         edx,660554;'Nunchuk.Exists'
 0065CBF5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CBF8    call        THashTable.Add
 0065CBFD    mov         ecx,171
 0065CC02    mov         edx,660580;'HasBladeFX'
 0065CC07    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CC0A    call        THashTable.Add
 0065CC0F    mov         ecx,171
 0065CC14    mov         edx,6605A4;'BladeFX.Exists'
 0065CC19    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CC1C    call        THashTable.Add
 0065CC21    mov         ecx,171
 0065CC26    mov         edx,6605D0;'Nunchuk.IsBladeFX'
 0065CC2B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CC2E    call        THashTable.Add
 0065CC33    mov         ecx,226
 0065CC38    mov         edx,660600;'HasBalanceBoard'
 0065CC3D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CC40    call        THashTable.Add
 0065CC45    mov         ecx,226
 0065CC4A    mov         edx,66062C;'BalanceBoard.Exists'
 0065CC4F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CC52    call        THashTable.Add
 0065CC57    mov         ecx,4A
 0065CC5C    mov         edx,660660;'Expansion'
 0065CC61    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CC64    call        THashTable.Add
 0065CC69    mov         ecx,4A
 0065CC6E    mov         edx,660680;'Attachment'
 0065CC73    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CC76    call        THashTable.Add
 0065CC7B    mov         ecx,3AE
 0065CC80    mov         edx,6606A4;'Expansion2'
 0065CC85    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CC88    call        THashTable.Add
 0065CC8D    mov         ecx,3AF
 0065CC92    mov         edx,6606C8;'Expansion3'
 0065CC97    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CC9A    call        THashTable.Add
 0065CC9F    mov         ecx,3B0
 0065CCA4    mov         edx,6606EC;'ThirdPartyAttachment'
 0065CCA9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CCAC    call        THashTable.Add
 0065CCB1    mov         ecx,18
 0065CCB6    mov         edx,660724;'Written'
 0065CCBB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CCBE    call        THashTable.Add
 0065CCC3    mov         ecx,19
 0065CCC8    mov         edx,660740;'WriteSuccess'
 0065CCCD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CCD0    call        THashTable.Add
 0065CCD5    mov         ecx,1A
 0065CCDA    mov         edx,660768;'Channel'
 0065CCDF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CCE2    call        THashTable.Add
 0065CCE7    mov         ecx,37
 0065CCEC    mov         edx,660784;'Report11'
 0065CCF1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CCF4    call        THashTable.Add
 0065CCF9    mov         ecx,1B
 0065CCFE    mov         edx,6607A4;'Report13'
 0065CD03    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CD06    call        THashTable.Add
 0065CD0B    mov         ecx,1C
 0065CD10    mov         edx,6607C4;'Report14'
 0065CD15    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CD18    call        THashTable.Add
 0065CD1D    mov         ecx,1D
 0065CD22    mov         edx,6607E4;'Report15'
 0065CD27    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CD2A    call        THashTable.Add
 0065CD2F    mov         ecx,1E
 0065CD34    mov         edx,660804;'Report19'
 0065CD39    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CD3C    call        THashTable.Add
 0065CD41    mov         ecx,1F
 0065CD46    mov         edx,660824;'Report1A'
 0065CD4B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CD4E    call        THashTable.Add
 0065CD53    mov         ecx,20
 0065CD58    mov         edx,660844;'InReport'
 0065CD5D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CD60    call        THashTable.Add
 0065CD65    xor         esi,esi
 0065CD67    lea         edx,[ebp-8]
 0065CD6A    mov         eax,esi
 0065CD6C    call        IntToStr
 0065CD71    mov         ecx,dword ptr [ebp-8]
 0065CD74    lea         eax,[ebp-4]
 0065CD77    mov         edx,660864;'Exp'
 0065CD7C    call        @UStrCat3
 0065CD81    mov         edx,dword ptr [ebp-4]
 0065CD84    lea         ecx,[esi+392]
 0065CD8A    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CD8D    call        THashTable.Add
 0065CD92    inc         esi
 0065CD93    cmp         esi,15
>0065CD96    jne         0065CD67
 0065CD98    xor         esi,esi
 0065CD9A    lea         edx,[ebp-10]
 0065CD9D    mov         eax,esi
 0065CD9F    call        IntToStr
 0065CDA4    mov         ecx,dword ptr [ebp-10]
 0065CDA7    lea         eax,[ebp-0C]
 0065CDAA    mov         edx,660878;'InByte'
 0065CDAF    call        @UStrCat3
 0065CDB4    mov         edx,dword ptr [ebp-0C]
 0065CDB7    lea         ecx,[esi+20]
 0065CDBA    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CDBD    call        THashTable.Add
 0065CDC2    inc         esi
 0065CDC3    cmp         esi,16
>0065CDC6    jne         0065CD9A
 0065CDC8    mov         ecx,36
 0065CDCD    mov         edx,660894;'Count'
 0065CDD2    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CDD5    call        THashTable.Add
 0065CDDA    mov         ecx,38
 0065CDDF    mov         edx,6608AC;'InByteString'
 0065CDE4    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CDE7    call        THashTable.Add
 0065CDEC    mov         ecx,3A7
 0065CDF1    mov         edx,6608D4;'ExpString'
 0065CDF6    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CDF9    call        THashTable.Add
 0065CDFE    mov         ecx,39
 0065CE03    mov         edx,6608F4;'Serial'
 0065CE08    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CE0B    call        THashTable.Add
 0065CE10    mov         ecx,7D
 0065CE15    mov         edx,660910;'BluetoothAddress'
 0065CE1A    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CE1D    call        THashTable.Add
 0065CE22    mov         ecx,39
 0065CE27    mov         edx,660940;'SerialNumber'
 0065CE2C    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CE2F    call        THashTable.Add
 0065CE34    mov         esi,1
 0065CE39    push        660968;'dot'
 0065CE3E    lea         edx,[ebp-18]
 0065CE41    mov         eax,esi
 0065CE43    call        IntToStr
 0065CE48    push        dword ptr [ebp-18]
 0065CE4B    push        66097C;'x'
 0065CE50    lea         eax,[ebp-14]
 0065CE53    mov         edx,3
 0065CE58    call        @UStrCatN
 0065CE5D    mov         edx,dword ptr [ebp-14]
 0065CE60    mov         eax,esi
 0065CE62    dec         eax
 0065CE63    mov         edi,eax
 0065CE65    add         edi,edi
 0065CE67    add         edi,edi
 0065CE69    mov         ecx,edi
 0065CE6B    add         ecx,3A
 0065CE6E    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CE71    call        THashTable.Add
 0065CE76    push        660968;'dot'
 0065CE7B    lea         edx,[ebp-20]
 0065CE7E    mov         eax,esi
 0065CE80    call        IntToStr
 0065CE85    push        dword ptr [ebp-20]
 0065CE88    push        66098C;'y'
 0065CE8D    lea         eax,[ebp-1C]
 0065CE90    mov         edx,3
 0065CE95    call        @UStrCatN
 0065CE9A    mov         edx,dword ptr [ebp-1C]
 0065CE9D    mov         ecx,edi
 0065CE9F    add         ecx,3B
 0065CEA2    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CEA5    call        THashTable.Add
 0065CEAA    push        660968;'dot'
 0065CEAF    lea         edx,[ebp-28]
 0065CEB2    mov         eax,esi
 0065CEB4    call        IntToStr
 0065CEB9    push        dword ptr [ebp-28]
 0065CEBC    push        66099C;'size'
 0065CEC1    lea         eax,[ebp-24]
 0065CEC4    mov         edx,3
 0065CEC9    call        @UStrCatN
 0065CECE    mov         edx,dword ptr [ebp-24]
 0065CED1    mov         ecx,edi
 0065CED3    add         ecx,3C
 0065CED6    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CED9    call        THashTable.Add
 0065CEDE    push        660968;'dot'
 0065CEE3    lea         edx,[ebp-30]
 0065CEE6    mov         eax,esi
 0065CEE8    call        IntToStr
 0065CEED    push        dword ptr [ebp-30]
 0065CEF0    push        6609B4;'vis'
 0065CEF5    lea         eax,[ebp-2C]
 0065CEF8    mov         edx,3
 0065CEFD    call        @UStrCatN
 0065CF02    mov         edx,dword ptr [ebp-2C]
 0065CF05    mov         ecx,edi
 0065CF07    add         ecx,3D
 0065CF0A    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CF0D    call        THashTable.Add
 0065CF12    push        660968;'dot'
 0065CF17    lea         edx,[ebp-38]
 0065CF1A    mov         eax,esi
 0065CF1C    call        IntToStr
 0065CF21    push        dword ptr [ebp-38]
 0065CF24    push        6609C8;'visible'
 0065CF29    lea         eax,[ebp-34]
 0065CF2C    mov         edx,3
 0065CF31    call        @UStrCatN
 0065CF36    mov         edx,dword ptr [ebp-34]
 0065CF39    mov         eax,esi
 0065CF3B    dec         eax
 0065CF3C    mov         ecx,eax
 0065CF3E    add         ecx,ecx
 0065CF40    add         ecx,ecx
 0065CF42    add         ecx,3D
 0065CF45    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CF48    call        THashTable.Add
 0065CF4D    push        660968;'dot'
 0065CF52    lea         edx,[ebp-40]
 0065CF55    mov         eax,esi
 0065CF57    call        IntToStr
 0065CF5C    push        dword ptr [ebp-40]
 0065CF5F    push        6609E4;'intensity'
 0065CF64    lea         eax,[ebp-3C]
 0065CF67    mov         edx,3
 0065CF6C    call        @UStrCatN
 0065CF71    mov         edx,dword ptr [ebp-3C]
 0065CF74    mov         ecx,esi
 0065CF76    dec         ecx
 0065CF77    add         ecx,3A9
 0065CF7D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CF80    call        THashTable.Add
 0065CF85    inc         esi
 0065CF86    cmp         esi,5
>0065CF89    jne         0065CE39
 0065CF8F    mov         ecx,4B
 0065CF94    mov         edx,660A04;'Battery'
 0065CF99    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CF9C    call        THashTable.Add
 0065CFA1    mov         ecx,4C
 0065CFA6    mov         edx,660A20;'cxx'
 0065CFAB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CFAE    call        THashTable.Add
 0065CFB3    mov         ecx,4D
 0065CFB8    mov         edx,660A34;'cxy'
 0065CFBD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CFC0    call        THashTable.Add
 0065CFC5    mov         ecx,4E
 0065CFCA    mov         edx,660A48;'cxz'
 0065CFCF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CFD2    call        THashTable.Add
 0065CFD7    mov         ecx,4F
 0065CFDC    mov         edx,660A5C;'cyx'
 0065CFE1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CFE4    call        THashTable.Add
 0065CFE9    mov         ecx,50
 0065CFEE    mov         edx,660A70;'cyy'
 0065CFF3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065CFF6    call        THashTable.Add
 0065CFFB    mov         ecx,51
 0065D000    mov         edx,660A84;'cyz'
 0065D005    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D008    call        THashTable.Add
 0065D00D    mov         ecx,52
 0065D012    mov         edx,660A98;'czx'
 0065D017    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D01A    call        THashTable.Add
 0065D01F    mov         ecx,53
 0065D024    mov         edx,660AAC;'czy'
 0065D029    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D02C    call        THashTable.Add
 0065D031    mov         ecx,54
 0065D036    mov         edx,660AC0;'czz'
 0065D03B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D03E    call        THashTable.Add
 0065D043    mov         ecx,55
 0065D048    mov         edx,660AD4;'gx'
 0065D04D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D050    call        THashTable.Add
 0065D055    mov         ecx,56
 0065D05A    mov         edx,660AE8;'gy'
 0065D05F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D062    call        THashTable.Add
 0065D067    mov         ecx,57
 0065D06C    mov         edx,660AFC;'gz'
 0065D071    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D074    call        THashTable.Add
 0065D079    mov         ecx,58
 0065D07E    mov         edx,660B10;'RawAccX'
 0065D083    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D086    call        THashTable.Add
 0065D08B    mov         ecx,59
 0065D090    mov         edx,660B2C;'RawAccY'
 0065D095    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D098    call        THashTable.Add
 0065D09D    mov         ecx,5A
 0065D0A2    mov         edx,660B48;'RawAccZ'
 0065D0A7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D0AA    call        THashTable.Add
 0065D0AF    mov         ecx,5B
 0065D0B4    mov         edx,660B64;'RawAcc'
 0065D0B9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D0BC    call        THashTable.Add
 0065D0C1    mov         ecx,5C
 0065D0C6    mov         edx,660B80;'RawForce'
 0065D0CB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D0CE    call        THashTable.Add
 0065D0D3    mov         ecx,5D
 0065D0D8    mov         edx,660BA0;'g'
 0065D0DD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D0E0    call        THashTable.Add
 0065D0E5    mov         ecx,5E
 0065D0EA    mov         edx,660BB0;'Gravity'
 0065D0EF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D0F2    call        THashTable.Add
 0065D0F7    mov         ecx,3B3
 0065D0FC    mov         edx,660BCC;'Yaw'
 0065D101    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D104    call        THashTable.Add
 0065D109    mov         ecx,62
 0065D10E    mov         edx,660BE0;'Pitch'
 0065D113    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D116    call        THashTable.Add
 0065D11B    mov         ecx,63
 0065D120    mov         edx,660BF8;'Roll'
 0065D125    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D128    call        THashTable.Add
 0065D12D    mov         ecx,3B4
 0065D132    mov         edx,660C10;'SteeringAngle'
 0065D137    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D13A    call        THashTable.Add
 0065D13F    mov         ecx,74
 0065D144    mov         edx,660C38;'SmoothPitch'
 0065D149    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D14C    call        THashTable.Add
 0065D151    mov         ecx,75
 0065D156    mov         edx,660C5C;'SmoothRoll'
 0065D15B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D15E    call        THashTable.Add
 0065D163    mov         ecx,390
 0065D168    mov         edx,660C80;'len'
 0065D16D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D170    call        THashTable.Add
 0065D175    mov         ecx,391
 0065D17A    mov         edx,660C94;'frames'
 0065D17F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D182    call        THashTable.Add
 0065D187    mov         ecx,65
 0065D18C    mov         edx,660CB0;'RelAccX'
 0065D191    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D194    call        THashTable.Add
 0065D199    mov         ecx,66
 0065D19E    mov         edx,660CCC;'RelAccY'
 0065D1A3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D1A6    call        THashTable.Add
 0065D1AB    mov         ecx,67
 0065D1B0    mov         edx,660CE8;'RelAccZ'
 0065D1B5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D1B8    call        THashTable.Add
 0065D1BD    mov         ecx,68
 0065D1C2    mov         edx,660D04;'RelAcc'
 0065D1C7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D1CA    call        THashTable.Add
 0065D1CF    mov         ecx,6C
 0065D1D4    mov         edx,66097C;'x'
 0065D1D9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D1DC    call        THashTable.Add
 0065D1E1    mov         ecx,6D
 0065D1E6    mov         edx,66098C;'y'
 0065D1EB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D1EE    call        THashTable.Add
 0065D1F3    mov         ecx,6E
 0065D1F8    mov         edx,660D20;'z'
 0065D1FD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D200    call        THashTable.Add
 0065D205    mov         ecx,388
 0065D20A    mov         edx,660D30;^'RealLeftStick'
 0065D20F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D212    call        THashTable.Add
 0065D217    mov         ecx,388
 0065D21C    mov         edx,660D50;^'RealLeftStick'
 0065D221    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D224    call        THashTable.Add
 0065D229    mov         ecx,388
 0065D22E    mov         edx,660D64;'xyz'
 0065D233    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D236    call        THashTable.Add
 0065D23B    mov         ecx,389
 0065D240    mov         edx,660D78;'PointerXY'
 0065D245    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D248    call        THashTable.Add
 0065D24D    mov         ecx,389
 0065D252    mov         edx,660D98;'Pointer'
 0065D257    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D25A    call        THashTable.Add
 0065D25F    mov         ecx,384
 0065D264    mov         edx,660DB4;'PointerX'
 0065D269    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D26C    call        THashTable.Add
 0065D271    mov         ecx,385
 0065D276    mov         edx,660DD4;'PointerY'
 0065D27B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D27E    call        THashTable.Add
 0065D283    mov         ecx,38E
 0065D288    mov         edx,660DF4;'SmoothPointerX'
 0065D28D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D290    call        THashTable.Add
 0065D295    mov         ecx,38F
 0065D29A    mov         edx,660E20;'SmoothPointerY'
 0065D29F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D2A2    call        THashTable.Add
 0065D2A7    mov         ecx,386
 0065D2AC    mov         edx,660E4C;'PointerVisible'
 0065D2B1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D2B4    call        THashTable.Add
 0065D2B9    mov         ecx,387
 0065D2BE    mov         edx,660E78;'PointerOnScreen'
 0065D2C3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D2C6    call        THashTable.Add
 0065D2CB    mov         ecx,64
 0065D2D0    mov         edx,660EA4;'RotMat'
 0065D2D5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D2D8    call        THashTable.Add
 0065D2DD    mov         ecx,76
 0065D2E2    mov         edx,660EC0;'TimeStamp'
 0065D2E7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D2EA    call        THashTable.Add
 0065D2EF    mov         ecx,8A
 0065D2F4    mov         edx,660EE0;'Shake'
 0065D2F9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D2FC    call        THashTable.Add
 0065D301    mov         ecx,7F
 0065D306    mov         edx,660EF8;'Shakiness'
 0065D30B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D30E    call        THashTable.Add
 0065D313    mov         ecx,84
 0065D318    mov         edx,660F18;'SwingHorizontal'
 0065D31D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D320    call        THashTable.Add
 0065D325    mov         ecx,85
 0065D32A    mov         edx,660F44;'SwingVertical'
 0065D32F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D332    call        THashTable.Add
 0065D337    mov         ecx,86
 0065D33C    mov         edx,660F6C;'Stabbing'
 0065D341    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D344    call        THashTable.Add
 0065D349    mov         ecx,87
 0065D34E    mov         edx,660F8C;'DrumBeat'
 0065D353    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D356    call        THashTable.Add
 0065D35B    mov         ecx,42E
 0065D360    mov         edx,660FAC;'CrossArms'
 0065D365    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D368    call        THashTable.Add
 0065D36D    mov         ecx,42E
 0065D372    mov         edx,660FCC;'Nunchuk.CrossArms'
 0065D377    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D37A    call        THashTable.Add
 0065D37F    mov         ecx,42F
 0065D384    mov         edx,660FFC;'AlternateArmsUpAndDown'
 0065D389    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D38C    call        THashTable.Add
 0065D391    mov         ecx,42F
 0065D396    mov         edx,661038;'Nunchuk.AlternateArmsUpAndDown'
 0065D39B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D39E    call        THashTable.Add
 0065D3A3    mov         ecx,80
 0065D3A8    mov         edx,661084;'OnTable'
 0065D3AD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D3B0    call        THashTable.Add
 0065D3B5    mov         ecx,81
 0065D3BA    mov         edx,6610A0;'LookingAtWatch'
 0065D3BF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D3C2    call        THashTable.Add
 0065D3C7    mov         ecx,82
 0065D3CC    mov         edx,6610CC;'LookingAtRightWatch'
 0065D3D1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D3D4    call        THashTable.Add
 0065D3D9    mov         ecx,88
 0065D3DE    mov         edx,661100;'LookingAtLeftPalm'
 0065D3E3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D3E6    call        THashTable.Add
 0065D3EB    mov         ecx,89
 0065D3F0    mov         edx,661130;'LookingAtRightPalm'
 0065D3F5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D3F8    call        THashTable.Add
 0065D3FD    mov         ecx,83
 0065D402    mov         edx,661164;'UpsidedownOnShoulder'
 0065D407    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D40A    call        THashTable.Add
 0065D40F    mov         ecx,97
 0065D414    mov         edx,66119C;'SwingDown'
 0065D419    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D41C    call        THashTable.Add
 0065D421    mov         ecx,98
 0065D426    mov         edx,6611BC;'SwingDownStop'
 0065D42B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D42E    call        THashTable.Add
 0065D433    mov         ecx,99
 0065D438    mov         edx,6611E4;'SwingDownUp'
 0065D43D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D440    call        THashTable.Add
 0065D445    mov         ecx,9A
 0065D44A    mov         edx,661208;'SwingDownUpStop'
 0065D44F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D452    call        THashTable.Add
 0065D457    mov         ecx,9B
 0065D45C    mov         edx,661234;'SwingDownUpDown'
 0065D461    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D464    call        THashTable.Add
 0065D469    mov         ecx,9C
 0065D46E    mov         edx,661260;'SwingDownUpDownStop'
 0065D473    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D476    call        THashTable.Add
 0065D47B    mov         ecx,9D
 0065D480    mov         edx,661294;'SwingDownUpDownUp'
 0065D485    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D488    call        THashTable.Add
 0065D48D    mov         ecx,9E
 0065D492    mov         edx,6612C4;'SwingDownUpDownUpStop'
 0065D497    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D49A    call        THashTable.Add
 0065D49F    mov         ecx,9F
 0065D4A4    mov         edx,6612FC;'SwingDownUpDownUpDown'
 0065D4A9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D4AC    call        THashTable.Add
 0065D4B1    mov         ecx,0A9
 0065D4B6    mov         edx,661334;'SwingLeft'
 0065D4BB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D4BE    call        THashTable.Add
 0065D4C3    mov         ecx,0AA
 0065D4C8    mov         edx,661354;'SwingLeftStop'
 0065D4CD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D4D0    call        THashTable.Add
 0065D4D5    mov         ecx,0AB
 0065D4DA    mov         edx,66137C;'SwingLeftRight'
 0065D4DF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D4E2    call        THashTable.Add
 0065D4E7    mov         ecx,0AC
 0065D4EC    mov         edx,6613A8;'SwingLeftRightStop'
 0065D4F1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D4F4    call        THashTable.Add
 0065D4F9    mov         ecx,0AD
 0065D4FE    mov         edx,6613DC;'SwingLeftRightLeft'
 0065D503    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D506    call        THashTable.Add
 0065D50B    mov         ecx,0AE
 0065D510    mov         edx,661410;'SwingLeftRightLeftStop'
 0065D515    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D518    call        THashTable.Add
 0065D51D    mov         ecx,0AF
 0065D522    mov         edx,66144C;'SwingLeftRightLeftRight'
 0065D527    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D52A    call        THashTable.Add
 0065D52F    mov         ecx,0B0
 0065D534    mov         edx,661488;'SwingLeftRightLeftRightStop'
 0065D539    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D53C    call        THashTable.Add
 0065D541    mov         ecx,0B1
 0065D546    mov         edx,6614CC;'SwingLeftRightLeftRightLeft'
 0065D54B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D54E    call        THashTable.Add
 0065D553    mov         ecx,0B2
 0065D558    mov         edx,661510;'SwingRight'
 0065D55D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D560    call        THashTable.Add
 0065D565    mov         ecx,0B3
 0065D56A    mov         edx,661534;'SwingRightStop'
 0065D56F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D572    call        THashTable.Add
 0065D577    mov         ecx,0B4
 0065D57C    mov         edx,661560;'SwingRightLeft'
 0065D581    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D584    call        THashTable.Add
 0065D589    mov         ecx,0B5
 0065D58E    mov         edx,66158C;'SwingRightLeftStop'
 0065D593    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D596    call        THashTable.Add
 0065D59B    mov         ecx,0B6
 0065D5A0    mov         edx,6615C0;'SwingRightLeftRight'
 0065D5A5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D5A8    call        THashTable.Add
 0065D5AD    mov         ecx,0B7
 0065D5B2    mov         edx,6615F4;'SwingRightLeftRightStop'
 0065D5B7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D5BA    call        THashTable.Add
 0065D5BF    mov         ecx,0B8
 0065D5C4    mov         edx,661630;'SwingRightLeftRightLeft'
 0065D5C9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D5CC    call        THashTable.Add
 0065D5D1    mov         ecx,0B9
 0065D5D6    mov         edx,66166C;'SwingRightLeftRightLeftStop'
 0065D5DB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D5DE    call        THashTable.Add
 0065D5E3    mov         ecx,0BA
 0065D5E8    mov         edx,6616B0;'SwingRightLeftRightLeftRight'
 0065D5ED    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D5F0    call        THashTable.Add
 0065D5F5    mov         ecx,0A0
 0065D5FA    mov         edx,6616F8;'SwingUp'
 0065D5FF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D602    call        THashTable.Add
 0065D607    mov         ecx,0A1
 0065D60C    mov         edx,661714;'SwingUpStop'
 0065D611    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D614    call        THashTable.Add
 0065D619    mov         ecx,0A2
 0065D61E    mov         edx,661738;'SwingUpDown'
 0065D623    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D626    call        THashTable.Add
 0065D62B    mov         ecx,0A3
 0065D630    mov         edx,66175C;'SwingUpDownStop'
 0065D635    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D638    call        THashTable.Add
 0065D63D    mov         ecx,0A4
 0065D642    mov         edx,661788;'SwingUpDownUp'
 0065D647    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D64A    call        THashTable.Add
 0065D64F    mov         ecx,0A5
 0065D654    mov         edx,6617B0;'SwingUpDownUpStop'
 0065D659    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D65C    call        THashTable.Add
 0065D661    mov         ecx,0A6
 0065D666    mov         edx,6617E0;'SwingUpDownUpDown'
 0065D66B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D66E    call        THashTable.Add
 0065D673    mov         ecx,0A7
 0065D678    mov         edx,661810;'SwingUpDownUpDownStop'
 0065D67D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D680    call        THashTable.Add
 0065D685    mov         ecx,0A8
 0065D68A    mov         edx,661848;'SwingUpDownUpDownUp'
 0065D68F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D692    call        THashTable.Add
 0065D697    mov         ecx,0BB
 0065D69C    mov         edx,66187C;'CurveDownRight'
 0065D6A1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D6A4    call        THashTable.Add
 0065D6A9    mov         ecx,0BC
 0065D6AE    mov         edx,6618A8;'CurveDownRightStop'
 0065D6B3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D6B6    call        THashTable.Add
 0065D6BB    mov         ecx,0BD
 0065D6C0    mov         edx,6618DC;'CurveDownRightUp'
 0065D6C5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D6C8    call        THashTable.Add
 0065D6CD    mov         ecx,0BE
 0065D6D2    mov         edx,66190C;'CurveDownRightUpStop'
 0065D6D7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D6DA    call        THashTable.Add
 0065D6DF    mov         ecx,0BF
 0065D6E4    mov         edx,661944;'SwishAndFlick'
 0065D6E9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D6EC    call        THashTable.Add
 0065D6F1    mov         ecx,0BF
 0065D6F6    mov         edx,66196C;'CurveDownRightUpDown'
 0065D6FB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D6FE    call        THashTable.Add
 0065D703    mov         ecx,0C0
 0065D708    mov         edx,6619A4;'SwishAndFlickStop'
 0065D70D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D710    call        THashTable.Add
 0065D715    mov         ecx,0C0
 0065D71A    mov         edx,6619D4;'CurveDownRightUpDownStop'
 0065D71F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D722    call        THashTable.Add
 0065D727    mov         ecx,0C1
 0065D72C    mov         edx,661A14;'CurveDownRightUpDownRight'
 0065D731    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D734    call        THashTable.Add
 0065D739    mov         ecx,0C2
 0065D73E    mov         edx,661A54;'CurveDownRightUpDownRightStop'
 0065D743    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D746    call        THashTable.Add
 0065D74B    mov         ecx,0C3
 0065D750    mov         edx,661A9C;'CurvyW'
 0065D755    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D758    call        THashTable.Add
 0065D75D    mov         ecx,0C3
 0065D762    mov         edx,661AB8;'CurlyW'
 0065D767    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D76A    call        THashTable.Add
 0065D76F    mov         ecx,0C3
 0065D774    mov         edx,661AD4;'CurveDownRightUpDownRightUp'
 0065D779    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D77C    call        THashTable.Add
 0065D781    mov         ecx,0C4
 0065D786    mov         edx,661B18;'SwishAndFlickAndUp'
 0065D78B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D78E    call        THashTable.Add
 0065D793    mov         ecx,0C4
 0065D798    mov         edx,661B4C;'CurveDownRightUpDownUp'
 0065D79D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D7A0    call        THashTable.Add
 0065D7A5    mov         ecx,0C5
 0065D7AA    mov         edx,661B88;'CurveDownLeft'
 0065D7AF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D7B2    call        THashTable.Add
 0065D7B7    mov         ecx,0C6
 0065D7BC    mov         edx,661BB0;'CurveDownLeftStop'
 0065D7C1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D7C4    call        THashTable.Add
 0065D7C9    mov         ecx,0C7
 0065D7CE    mov         edx,661BE0;'CurveDownLeftUp'
 0065D7D3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D7D6    call        THashTable.Add
 0065D7DB    mov         ecx,0C8
 0065D7E0    mov         edx,661C0C;'CurveDownLeftUpStop'
 0065D7E5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D7E8    call        THashTable.Add
 0065D7ED    mov         ecx,0C9
 0065D7F2    mov         edx,661C40;'CurveDownLeftUpDown'
 0065D7F7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D7FA    call        THashTable.Add
 0065D7FF    mov         ecx,0CA
 0065D804    mov         edx,661C74;'CurveDownLeftUpDownStop'
 0065D809    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D80C    call        THashTable.Add
 0065D811    mov         ecx,0CB
 0065D816    mov         edx,661CB0;'CurveDownLeftUpDownLeft'
 0065D81B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D81E    call        THashTable.Add
 0065D823    mov         ecx,0CC
 0065D828    mov         edx,661CEC;'CurveDownLeftUpDownLeftStop'
 0065D82D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D830    call        THashTable.Add
 0065D835    mov         ecx,0CD
 0065D83A    mov         edx,661D30;'CurveDownLeftUpDownLeftUp'
 0065D83F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D842    call        THashTable.Add
 0065D847    mov         ecx,0CE
 0065D84C    mov         edx,661D70;'CurveDownLeftUpDownUp'
 0065D851    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D854    call        THashTable.Add
 0065D859    mov         ecx,0D1
 0065D85E    mov         edx,661DA8;'CurveUpRight'
 0065D863    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D866    call        THashTable.Add
 0065D86B    mov         ecx,0D2
 0065D870    mov         edx,661DD0;'CurveUpRightStop'
 0065D875    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D878    call        THashTable.Add
 0065D87D    mov         ecx,0D3
 0065D882    mov         edx,661E00;'CurveUpRightDown'
 0065D887    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D88A    call        THashTable.Add
 0065D88F    mov         ecx,0D4
 0065D894    mov         edx,661E30;'CurveUpRightDownStop'
 0065D899    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D89C    call        THashTable.Add
 0065D8A1    mov         ecx,0D5
 0065D8A6    mov         edx,661E68;'CurveUpRightDownUp'
 0065D8AB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D8AE    call        THashTable.Add
 0065D8B3    mov         ecx,0D6
 0065D8B8    mov         edx,661E9C;'CurveUpRightDownUpStop'
 0065D8BD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D8C0    call        THashTable.Add
 0065D8C5    mov         ecx,0D7
 0065D8CA    mov         edx,661ED8;'CurveUpRightDownUpRight'
 0065D8CF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D8D2    call        THashTable.Add
 0065D8D7    mov         ecx,0D8
 0065D8DC    mov         edx,661F14;'CurveUpRightDownUpRightStop'
 0065D8E1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D8E4    call        THashTable.Add
 0065D8E9    mov         ecx,0D9
 0065D8EE    mov         edx,661F58;'CurvyM'
 0065D8F3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D8F6    call        THashTable.Add
 0065D8FB    mov         ecx,0D9
 0065D900    mov         edx,661F74;'CurlyM'
 0065D905    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D908    call        THashTable.Add
 0065D90D    mov         ecx,0D9
 0065D912    mov         edx,661F90;'CurveUpRightDownUpRightDown'
 0065D917    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D91A    call        THashTable.Add
 0065D91F    mov         ecx,0DA
 0065D924    mov         edx,661FD4;'CurveUpRightDownUpDown'
 0065D929    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D92C    call        THashTable.Add
 0065D931    mov         ecx,0DB
 0065D936    mov         edx,662010;'CurveUpLeft'
 0065D93B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D93E    call        THashTable.Add
 0065D943    mov         ecx,0DC
 0065D948    mov         edx,662034;'CurveUpLeftStop'
 0065D94D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D950    call        THashTable.Add
 0065D955    mov         ecx,0DD
 0065D95A    mov         edx,662060;'CurveUpLeftDown'
 0065D95F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D962    call        THashTable.Add
 0065D967    mov         ecx,0DE
 0065D96C    mov         edx,66208C;'CurveUpLeftDownStop'
 0065D971    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D974    call        THashTable.Add
 0065D979    mov         ecx,0DF
 0065D97E    mov         edx,6620C0;'CurveUpLeftDownUp'
 0065D983    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D986    call        THashTable.Add
 0065D98B    mov         ecx,0E0
 0065D990    mov         edx,6620F0;'CurveUpLeftDownUpStop'
 0065D995    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D998    call        THashTable.Add
 0065D99D    mov         ecx,0E1
 0065D9A2    mov         edx,662128;'CurveUpLeftDownUpLeft'
 0065D9A7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D9AA    call        THashTable.Add
 0065D9AF    mov         ecx,0E2
 0065D9B4    mov         edx,662160;'CurveUpLeftDownUpLeftStop'
 0065D9B9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D9BC    call        THashTable.Add
 0065D9C1    mov         ecx,0E3
 0065D9C6    mov         edx,6621A0;'CurveUpLeftDownUpLeftDown'
 0065D9CB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D9CE    call        THashTable.Add
 0065D9D3    mov         ecx,0E4
 0065D9D8    mov         edx,6621E0;'CurveUpLeftDownUpDown'
 0065D9DD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D9E0    call        THashTable.Add
 0065D9E5    mov         ecx,0E5
 0065D9EA    mov         edx,662218;'CurveLeftUp'
 0065D9EF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065D9F2    call        THashTable.Add
 0065D9F7    mov         ecx,0E6
 0065D9FC    mov         edx,66223C;'CurveLeftUpStop'
 0065DA01    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DA04    call        THashTable.Add
 0065DA09    mov         ecx,0E7
 0065DA0E    mov         edx,662268;'CurveLeftUpRight'
 0065DA13    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DA16    call        THashTable.Add
 0065DA1B    mov         ecx,0E8
 0065DA20    mov         edx,662298;'CurveLeftUpRightStop'
 0065DA25    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DA28    call        THashTable.Add
 0065DA2D    mov         ecx,0E9
 0065DA32    mov         edx,6622D0;'CurveLeftUpRightLeft'
 0065DA37    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DA3A    call        THashTable.Add
 0065DA3F    mov         ecx,0EA
 0065DA44    mov         edx,662308;'CurveLeftUpRightLeftStop'
 0065DA49    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DA4C    call        THashTable.Add
 0065DA51    mov         ecx,0EB
 0065DA56    mov         edx,662348;'CurveLeftUpRightLeftUp'
 0065DA5B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DA5E    call        THashTable.Add
 0065DA63    mov         ecx,0EC
 0065DA68    mov         edx,662384;'CurveLeftUpRightLeftUpStop'
 0065DA6D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DA70    call        THashTable.Add
 0065DA75    mov         ecx,0ED
 0065DA7A    mov         edx,6623C8;'CurveLeftUpRightLeftUpRight'
 0065DA7F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DA82    call        THashTable.Add
 0065DA87    mov         ecx,0EE
 0065DA8C    mov         edx,66240C;'CurveLeftUpRightLeftRight'
 0065DA91    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DA94    call        THashTable.Add
 0065DA99    mov         ecx,0EF
 0065DA9E    mov         edx,66244C;'CurveLeftDown'
 0065DAA3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DAA6    call        THashTable.Add
 0065DAAB    mov         ecx,0F0
 0065DAB0    mov         edx,662474;'CurveLeftDownStop'
 0065DAB5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DAB8    call        THashTable.Add
 0065DABD    mov         ecx,0F1
 0065DAC2    mov         edx,6624A4;'CurveLeftDownRight'
 0065DAC7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DACA    call        THashTable.Add
 0065DACF    mov         ecx,0F2
 0065DAD4    mov         edx,6624D8;'CurveLeftDownRightStop'
 0065DAD9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DADC    call        THashTable.Add
 0065DAE1    mov         ecx,0F3
 0065DAE6    mov         edx,662514;'CurveLeftDownRightLeft'
 0065DAEB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DAEE    call        THashTable.Add
 0065DAF3    mov         ecx,0F4
 0065DAF8    mov         edx,662550;'CurveLeftDownRightLeftStop'
 0065DAFD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DB00    call        THashTable.Add
 0065DB05    mov         ecx,0F5
 0065DB0A    mov         edx,662594;'CurveLeftDownRightLeftDown'
 0065DB0F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DB12    call        THashTable.Add
 0065DB17    mov         ecx,0F6
 0065DB1C    mov         edx,6625D8;'CurveLeftDownRightLeftDownStop'
 0065DB21    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DB24    call        THashTable.Add
 0065DB29    mov         ecx,0F7
 0065DB2E    mov         edx,662624;'CurvyE'
 0065DB33    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DB36    call        THashTable.Add
 0065DB3B    mov         ecx,0F7
 0065DB40    mov         edx,662640;'CurlyE'
 0065DB45    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DB48    call        THashTable.Add
 0065DB4D    mov         ecx,0F7
 0065DB52    mov         edx,66265C;'CurveLeftDownRightLeftDownRight'
 0065DB57    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DB5A    call        THashTable.Add
 0065DB5F    mov         ecx,0F8
 0065DB64    mov         edx,6626A8;'CurveLeftDownRightLeftRight'
 0065DB69    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DB6C    call        THashTable.Add
 0065DB71    mov         ecx,0F9
 0065DB76    mov         edx,6626EC;'CurveRightUp'
 0065DB7B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DB7E    call        THashTable.Add
 0065DB83    mov         ecx,0FA
 0065DB88    mov         edx,662714;'CurveRightUpStop'
 0065DB8D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DB90    call        THashTable.Add
 0065DB95    mov         ecx,0FB
 0065DB9A    mov         edx,662744;'CurveRightUpLeft'
 0065DB9F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DBA2    call        THashTable.Add
 0065DBA7    mov         ecx,0FC
 0065DBAC    mov         edx,662774;'CurveRightUpLeftStop'
 0065DBB1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DBB4    call        THashTable.Add
 0065DBB9    mov         ecx,0FD
 0065DBBE    mov         edx,6627AC;'CurveRightUpLeftRight'
 0065DBC3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DBC6    call        THashTable.Add
 0065DBCB    mov         ecx,0FE
 0065DBD0    mov         edx,6627E4;'CurveRightUpLeftRightStop'
 0065DBD5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DBD8    call        THashTable.Add
 0065DBDD    mov         ecx,0FF
 0065DBE2    mov         edx,662824;'CurveRightUpLeftRightUp'
 0065DBE7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DBEA    call        THashTable.Add
 0065DBEF    mov         ecx,100
 0065DBF4    mov         edx,662860;'CurveRightUpLeftRightUpStop'
 0065DBF9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DBFC    call        THashTable.Add
 0065DC01    mov         ecx,101
 0065DC06    mov         edx,6628A4;'CurveRightUpLeftRightUpLeft'
 0065DC0B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DC0E    call        THashTable.Add
 0065DC13    mov         ecx,102
 0065DC18    mov         edx,6628E8;'CurveRightUpLeftRightLeft'
 0065DC1D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DC20    call        THashTable.Add
 0065DC25    mov         ecx,103
 0065DC2A    mov         edx,662928;'CurveRightDown'
 0065DC2F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DC32    call        THashTable.Add
 0065DC37    mov         ecx,104
 0065DC3C    mov         edx,662954;'CurveRightDownStop'
 0065DC41    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DC44    call        THashTable.Add
 0065DC49    mov         ecx,105
 0065DC4E    mov         edx,662988;'CurveRightDownLeft'
 0065DC53    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DC56    call        THashTable.Add
 0065DC5B    mov         ecx,106
 0065DC60    mov         edx,6629BC;'CurveRightDownLeftStop'
 0065DC65    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DC68    call        THashTable.Add
 0065DC6D    mov         ecx,107
 0065DC72    mov         edx,6629F8;'CurveRightDownLeftRight'
 0065DC77    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DC7A    call        THashTable.Add
 0065DC7F    mov         ecx,108
 0065DC84    mov         edx,662A34;'CurveRightDownLeftRightStop'
 0065DC89    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DC8C    call        THashTable.Add
 0065DC91    mov         ecx,109
 0065DC96    mov         edx,662A78;'CurveRightDownLeftRightDown'
 0065DC9B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DC9E    call        THashTable.Add
 0065DCA3    mov         ecx,10A
 0065DCA8    mov         edx,662ABC;'CurveRightDownLeftRightDownStop'
 0065DCAD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DCB0    call        THashTable.Add
 0065DCB5    mov         ecx,10B
 0065DCBA    mov         edx,662B08;'Curvy3'
 0065DCBF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DCC2    call        THashTable.Add
 0065DCC7    mov         ecx,10B
 0065DCCC    mov         edx,662B24;'Curly3'
 0065DCD1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DCD4    call        THashTable.Add
 0065DCD9    mov         ecx,10B
 0065DCDE    mov         edx,662B40;'CurveRightDownLeftRightDownLeft'
 0065DCE3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DCE6    call        THashTable.Add
 0065DCEB    mov         ecx,10C
 0065DCF0    mov         edx,662B8C;'CurveRightDownLeftRightLeft'
 0065DCF5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DCF8    call        THashTable.Add
 0065DCFD    mov         ecx,3B7
 0065DD02    mov         edx,662BD0;'Nunchuk.SwingDown'
 0065DD07    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DD0A    call        THashTable.Add
 0065DD0F    mov         ecx,3B8
 0065DD14    mov         edx,662C00;'Nunchuk.SwingDownStop'
 0065DD19    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DD1C    call        THashTable.Add
 0065DD21    mov         ecx,3B9
 0065DD26    mov         edx,662C38;'Nunchuk.SwingDownUp'
 0065DD2B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DD2E    call        THashTable.Add
 0065DD33    mov         ecx,3BA
 0065DD38    mov         edx,662C6C;'Nunchuk.SwingDownUpStop'
 0065DD3D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DD40    call        THashTable.Add
 0065DD45    mov         ecx,3BB
 0065DD4A    mov         edx,662CA8;'Nunchuk.SwingDownUpDown'
 0065DD4F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DD52    call        THashTable.Add
 0065DD57    mov         ecx,3BC
 0065DD5C    mov         edx,662CE4;'Nunchuk.SwingDownUpDownStop'
 0065DD61    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DD64    call        THashTable.Add
 0065DD69    mov         ecx,3BD
 0065DD6E    mov         edx,662D28;'Nunchuk.SwingDownUpDownUp'
 0065DD73    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DD76    call        THashTable.Add
 0065DD7B    mov         ecx,3BE
 0065DD80    mov         edx,662D68;'Nunchuk.SwingDownUpDownUpStop'
 0065DD85    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DD88    call        THashTable.Add
 0065DD8D    mov         ecx,3BF
 0065DD92    mov         edx,662DB0;'Nunchuk.SwingDownUpDownUpDown'
 0065DD97    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DD9A    call        THashTable.Add
 0065DD9F    mov         ecx,3C9
 0065DDA4    mov         edx,662DF8;'Nunchuk.SwingLeft'
 0065DDA9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DDAC    call        THashTable.Add
 0065DDB1    mov         ecx,3CA
 0065DDB6    mov         edx,662E28;'Nunchuk.SwingLeftStop'
 0065DDBB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DDBE    call        THashTable.Add
 0065DDC3    mov         ecx,3CB
 0065DDC8    mov         edx,662E60;'Nunchuk.SwingLeftRight'
 0065DDCD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DDD0    call        THashTable.Add
 0065DDD5    mov         ecx,3CC
 0065DDDA    mov         edx,662E9C;'Nunchuk.SwingLeftRightStop'
 0065DDDF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DDE2    call        THashTable.Add
 0065DDE7    mov         ecx,3CD
 0065DDEC    mov         edx,662EE0;'Nunchuk.SwingLeftRightLeft'
 0065DDF1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DDF4    call        THashTable.Add
 0065DDF9    mov         ecx,3CE
 0065DDFE    mov         edx,662F24;'Nunchuk.SwingLeftRightLeftStop'
 0065DE03    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DE06    call        THashTable.Add
 0065DE0B    mov         ecx,3CF
 0065DE10    mov         edx,662F70;'Nunchuk.SwingLeftRightLeftRight'
 0065DE15    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DE18    call        THashTable.Add
 0065DE1D    mov         ecx,3D0
 0065DE22    mov         edx,662FBC;'Nunchuk.SwingLeftRightLeftRightStop'
 0065DE27    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DE2A    call        THashTable.Add
 0065DE2F    mov         ecx,3D1
 0065DE34    mov         edx,663010;'Nunchuk.SwingLeftRightLeftRightLeft'
 0065DE39    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DE3C    call        THashTable.Add
 0065DE41    mov         ecx,3D2
 0065DE46    mov         edx,663064;'Nunchuk.SwingRight'
 0065DE4B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DE4E    call        THashTable.Add
 0065DE53    mov         ecx,3D3
 0065DE58    mov         edx,663098;'Nunchuk.SwingRightStop'
 0065DE5D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DE60    call        THashTable.Add
 0065DE65    mov         ecx,3D4
 0065DE6A    mov         edx,6630D4;'Nunchuk.SwingRightLeft'
 0065DE6F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DE72    call        THashTable.Add
 0065DE77    mov         ecx,3D5
 0065DE7C    mov         edx,663110;'Nunchuk.SwingRightLeftStop'
 0065DE81    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DE84    call        THashTable.Add
 0065DE89    mov         ecx,3D6
 0065DE8E    mov         edx,663154;'Nunchuk.SwingRightLeftRight'
 0065DE93    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DE96    call        THashTable.Add
 0065DE9B    mov         ecx,3D7
 0065DEA0    mov         edx,663198;'Nunchuk.SwingRightLeftRightStop'
 0065DEA5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DEA8    call        THashTable.Add
 0065DEAD    mov         ecx,3D8
 0065DEB2    mov         edx,6631E4;'Nunchuk.SwingRightLeftRightLeft'
 0065DEB7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DEBA    call        THashTable.Add
 0065DEBF    mov         ecx,3D9
 0065DEC4    mov         edx,663230;'Nunchuk.SwingRightLeftRightLeftStop'
 0065DEC9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DECC    call        THashTable.Add
 0065DED1    mov         ecx,3DA
 0065DED6    mov         edx,663284;'Nunchuk.SwingRightLeftRightLeftRight'
 0065DEDB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DEDE    call        THashTable.Add
 0065DEE3    mov         ecx,3C0
 0065DEE8    mov         edx,6632DC;'Nunchuk.SwingUp'
 0065DEED    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DEF0    call        THashTable.Add
 0065DEF5    mov         ecx,3C1
 0065DEFA    mov         edx,663308;'Nunchuk.SwingUpStop'
 0065DEFF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DF02    call        THashTable.Add
 0065DF07    mov         ecx,3C2
 0065DF0C    mov         edx,66333C;'Nunchuk.SwingUpDown'
 0065DF11    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DF14    call        THashTable.Add
 0065DF19    mov         ecx,3C3
 0065DF1E    mov         edx,663370;'Nunchuk.SwingUpDownStop'
 0065DF23    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DF26    call        THashTable.Add
 0065DF2B    mov         ecx,3C4
 0065DF30    mov         edx,6633AC;'Nunchuk.SwingUpDownUp'
 0065DF35    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DF38    call        THashTable.Add
 0065DF3D    mov         ecx,3C5
 0065DF42    mov         edx,6633E4;'Nunchuk.SwingUpDownUpStop'
 0065DF47    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DF4A    call        THashTable.Add
 0065DF4F    mov         ecx,3C6
 0065DF54    mov         edx,663424;'Nunchuk.SwingUpDownUpDown'
 0065DF59    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DF5C    call        THashTable.Add
 0065DF61    mov         ecx,3C7
 0065DF66    mov         edx,663464;'Nunchuk.SwingUpDownUpDownStop'
 0065DF6B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DF6E    call        THashTable.Add
 0065DF73    mov         ecx,3C8
 0065DF78    mov         edx,6634AC;'Nunchuk.SwingUpDownUpDownUp'
 0065DF7D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DF80    call        THashTable.Add
 0065DF85    mov         ecx,3DB
 0065DF8A    mov         edx,6634F0;'Nunchuk.CurveDownRight'
 0065DF8F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DF92    call        THashTable.Add
 0065DF97    mov         ecx,3DC
 0065DF9C    mov         edx,66352C;'Nunchuk.CurveDownRightStop'
 0065DFA1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DFA4    call        THashTable.Add
 0065DFA9    mov         ecx,3DD
 0065DFAE    mov         edx,663570;'Nunchuk.CurveDownRightUp'
 0065DFB3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DFB6    call        THashTable.Add
 0065DFBB    mov         ecx,3DE
 0065DFC0    mov         edx,6635B0;'Nunchuk.CurveDownRightUpStop'
 0065DFC5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DFC8    call        THashTable.Add
 0065DFCD    mov         ecx,3DF
 0065DFD2    mov         edx,6635F8;'Nunchuk.SwishAndFlick'
 0065DFD7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DFDA    call        THashTable.Add
 0065DFDF    mov         ecx,3DF
 0065DFE4    mov         edx,663630;'Nunchuk.CurveDownRightUpDown'
 0065DFE9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DFEC    call        THashTable.Add
 0065DFF1    mov         ecx,3E0
 0065DFF6    mov         edx,663678;'Nunchuk.SwishAndFlickStop'
 0065DFFB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065DFFE    call        THashTable.Add
 0065E003    mov         ecx,3E0
 0065E008    mov         edx,6636B8;'Nunchuk.CurveDownRightUpDownStop'
 0065E00D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E010    call        THashTable.Add
 0065E015    mov         ecx,3E1
 0065E01A    mov         edx,663708;'Nunchuk.CurveDownRightUpDownRight'
 0065E01F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E022    call        THashTable.Add
 0065E027    mov         ecx,3E2
 0065E02C    mov         edx,663758;'Nunchuk.CurveDownRightUpDownRightStop'
 0065E031    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E034    call        THashTable.Add
 0065E039    mov         ecx,3E3
 0065E03E    mov         edx,6637B0;'Nunchuk.CurvyW'
 0065E043    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E046    call        THashTable.Add
 0065E04B    mov         ecx,3E3
 0065E050    mov         edx,6637DC;'Nunchuk.CurlyW'
 0065E055    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E058    call        THashTable.Add
 0065E05D    mov         ecx,3E3
 0065E062    mov         edx,663808;'Nunchuk.CurveDownRightUpDownRightUp'
 0065E067    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E06A    call        THashTable.Add
 0065E06F    mov         ecx,3E4
 0065E074    mov         edx,66385C;'Nunchuk.SwishAndFlickAndUp'
 0065E079    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E07C    call        THashTable.Add
 0065E081    mov         ecx,3E4
 0065E086    mov         edx,6638A0;'Nunchuk.CurveDownRightUpDownUp'
 0065E08B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E08E    call        THashTable.Add
 0065E093    mov         ecx,3E5
 0065E098    mov         edx,6638EC;'Nunchuk.CurveDownLeft'
 0065E09D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E0A0    call        THashTable.Add
 0065E0A5    mov         ecx,3E6
 0065E0AA    mov         edx,663924;'Nunchuk.CurveDownLeftStop'
 0065E0AF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E0B2    call        THashTable.Add
 0065E0B7    mov         ecx,3E7
 0065E0BC    mov         edx,663964;'Nunchuk.CurveDownLeftUp'
 0065E0C1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E0C4    call        THashTable.Add
 0065E0C9    mov         ecx,3E8
 0065E0CE    mov         edx,6639A0;'Nunchuk.CurveDownLeftUpStop'
 0065E0D3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E0D6    call        THashTable.Add
 0065E0DB    mov         ecx,3E9
 0065E0E0    mov         edx,6639E4;'Nunchuk.CurveDownLeftUpDown'
 0065E0E5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E0E8    call        THashTable.Add
 0065E0ED    mov         ecx,3EA
 0065E0F2    mov         edx,663A28;'Nunchuk.CurveDownLeftUpDownStop'
 0065E0F7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E0FA    call        THashTable.Add
 0065E0FF    mov         ecx,3EB
 0065E104    mov         edx,663A74;'Nunchuk.CurveDownLeftUpDownLeft'
 0065E109    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E10C    call        THashTable.Add
 0065E111    mov         ecx,3EC
 0065E116    mov         edx,663AC0;'Nunchuk.CurveDownLeftUpDownLeftStop'
 0065E11B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E11E    call        THashTable.Add
 0065E123    mov         ecx,3ED
 0065E128    mov         edx,663B14;'Nunchuk.CurveDownLeftUpDownLeftUp'
 0065E12D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E130    call        THashTable.Add
 0065E135    mov         ecx,3EE
 0065E13A    mov         edx,663B64;'Nunchuk.CurveDownLeftUpDownUp'
 0065E13F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E142    call        THashTable.Add
 0065E147    mov         ecx,3F1
 0065E14C    mov         edx,663BAC;'Nunchuk.CurveUpRight'
 0065E151    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E154    call        THashTable.Add
 0065E159    mov         ecx,3F2
 0065E15E    mov         edx,663BE4;'Nunchuk.CurveUpRightStop'
 0065E163    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E166    call        THashTable.Add
 0065E16B    mov         ecx,3F3
 0065E170    mov         edx,663C24;'Nunchuk.CurveUpRightDown'
 0065E175    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E178    call        THashTable.Add
 0065E17D    mov         ecx,3F4
 0065E182    mov         edx,663C64;'Nunchuk.CurveUpRightDownStop'
 0065E187    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E18A    call        THashTable.Add
 0065E18F    mov         ecx,3F5
 0065E194    mov         edx,663CAC;'Nunchuk.CurveUpRightDownUp'
 0065E199    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E19C    call        THashTable.Add
 0065E1A1    mov         ecx,3F6
 0065E1A6    mov         edx,663CF0;'Nunchuk.CurveUpRightDownUpStop'
 0065E1AB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E1AE    call        THashTable.Add
 0065E1B3    mov         ecx,3F7
 0065E1B8    mov         edx,663D3C;'Nunchuk.CurveUpRightDownUpRight'
 0065E1BD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E1C0    call        THashTable.Add
 0065E1C5    mov         ecx,3F8
 0065E1CA    mov         edx,663D88;'Nunchuk.CurveUpRightDownUpRightStop'
 0065E1CF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E1D2    call        THashTable.Add
 0065E1D7    mov         ecx,3F9
 0065E1DC    mov         edx,663DDC;'Nunchuk.CurvyM'
 0065E1E1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E1E4    call        THashTable.Add
 0065E1E9    mov         ecx,3F9
 0065E1EE    mov         edx,663E08;'Nunchuk.CurlyM'
 0065E1F3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E1F6    call        THashTable.Add
 0065E1FB    mov         ecx,3F9
 0065E200    mov         edx,663E34;'Nunchuk.CurveUpRightDownUpRightDown'
 0065E205    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E208    call        THashTable.Add
 0065E20D    mov         ecx,3FA
 0065E212    mov         edx,663E88;'Nunchuk.CurveUpRightDownUpDown'
 0065E217    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E21A    call        THashTable.Add
 0065E21F    mov         ecx,3FB
 0065E224    mov         edx,663ED4;'Nunchuk.CurveUpLeft'
 0065E229    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E22C    call        THashTable.Add
 0065E231    mov         ecx,3FC
 0065E236    mov         edx,663F08;'Nunchuk.CurveUpLeftStop'
 0065E23B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E23E    call        THashTable.Add
 0065E243    mov         ecx,3FD
 0065E248    mov         edx,663F44;'Nunchuk.CurveUpLeftDown'
 0065E24D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E250    call        THashTable.Add
 0065E255    mov         ecx,3FE
 0065E25A    mov         edx,663F80;'Nunchuk.CurveUpLeftDownStop'
 0065E25F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E262    call        THashTable.Add
 0065E267    mov         ecx,3FF
 0065E26C    mov         edx,663FC4;'Nunchuk.CurveUpLeftDownUp'
 0065E271    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E274    call        THashTable.Add
 0065E279    mov         ecx,400
 0065E27E    mov         edx,664004;'Nunchuk.CurveUpLeftDownUpStop'
 0065E283    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E286    call        THashTable.Add
 0065E28B    mov         ecx,401
 0065E290    mov         edx,66404C;'Nunchuk.CurveUpLeftDownUpLeft'
 0065E295    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E298    call        THashTable.Add
 0065E29D    mov         ecx,402
 0065E2A2    mov         edx,664094;'Nunchuk.CurveUpLeftDownUpLeftStop'
 0065E2A7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E2AA    call        THashTable.Add
 0065E2AF    mov         ecx,403
 0065E2B4    mov         edx,6640E4;'Nunchuk.CurveUpLeftDownUpLeftDown'
 0065E2B9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E2BC    call        THashTable.Add
 0065E2C1    mov         ecx,404
 0065E2C6    mov         edx,664134;'Nunchuk.CurveUpLeftDownUpDown'
 0065E2CB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E2CE    call        THashTable.Add
 0065E2D3    mov         ecx,405
 0065E2D8    mov         edx,66417C;'Nunchuk.CurveLeftUp'
 0065E2DD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E2E0    call        THashTable.Add
 0065E2E5    mov         ecx,406
 0065E2EA    mov         edx,6641B0;'Nunchuk.CurveLeftUpStop'
 0065E2EF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E2F2    call        THashTable.Add
 0065E2F7    mov         ecx,407
 0065E2FC    mov         edx,6641EC;'Nunchuk.CurveLeftUpRight'
 0065E301    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E304    call        THashTable.Add
 0065E309    mov         ecx,408
 0065E30E    mov         edx,66422C;'Nunchuk.CurveLeftUpRightStop'
 0065E313    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E316    call        THashTable.Add
 0065E31B    mov         ecx,409
 0065E320    mov         edx,664274;'Nunchuk.CurveLeftUpRightLeft'
 0065E325    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E328    call        THashTable.Add
 0065E32D    mov         ecx,40A
 0065E332    mov         edx,6642BC;'Nunchuk.CurveLeftUpRightLeftStop'
 0065E337    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E33A    call        THashTable.Add
 0065E33F    mov         ecx,40B
 0065E344    mov         edx,66430C;'Nunchuk.CurveLeftUpRightLeftUp'
 0065E349    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E34C    call        THashTable.Add
 0065E351    mov         ecx,40C
 0065E356    mov         edx,664358;'Nunchuk.CurveLeftUpRightLeftUpStop'
 0065E35B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E35E    call        THashTable.Add
 0065E363    mov         ecx,40D
 0065E368    mov         edx,6643AC;'Nunchuk.CurveLeftUpRightLeftUpRight'
 0065E36D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E370    call        THashTable.Add
 0065E375    mov         ecx,40E
 0065E37A    mov         edx,664400;'Nunchuk.CurveLeftUpRightLeftRight'
 0065E37F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E382    call        THashTable.Add
 0065E387    mov         ecx,40F
 0065E38C    mov         edx,664450;'Nunchuk.CurveLeftDown'
 0065E391    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E394    call        THashTable.Add
 0065E399    mov         ecx,410
 0065E39E    mov         edx,664488;'Nunchuk.CurveLeftDownStop'
 0065E3A3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E3A6    call        THashTable.Add
 0065E3AB    mov         ecx,411
 0065E3B0    mov         edx,6644C8;'Nunchuk.CurveLeftDownRight'
 0065E3B5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E3B8    call        THashTable.Add
 0065E3BD    mov         ecx,412
 0065E3C2    mov         edx,66450C;'Nunchuk.CurveLeftDownRightStop'
 0065E3C7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E3CA    call        THashTable.Add
 0065E3CF    mov         ecx,413
 0065E3D4    mov         edx,664558;'Nunchuk.CurveLeftDownRightLeft'
 0065E3D9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E3DC    call        THashTable.Add
 0065E3E1    mov         ecx,414
 0065E3E6    mov         edx,6645A4;'Nunchuk.CurveLeftDownRightLeftStop'
 0065E3EB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E3EE    call        THashTable.Add
 0065E3F3    mov         ecx,415
 0065E3F8    mov         edx,6645F8;'Nunchuk.CurveLeftDownRightLeftDown'
 0065E3FD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E400    call        THashTable.Add
 0065E405    mov         ecx,416
 0065E40A    mov         edx,66464C;'Nunchuk.CurveLeftDownRightLeftDownStop'
 0065E40F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E412    call        THashTable.Add
 0065E417    mov         ecx,417
 0065E41C    mov         edx,6646A8;'Nunchuk.CurvyE'
 0065E421    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E424    call        THashTable.Add
 0065E429    mov         ecx,417
 0065E42E    mov         edx,6646D4;'Nunchuk.CurlyE'
 0065E433    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E436    call        THashTable.Add
 0065E43B    mov         ecx,417
 0065E440    mov         edx,664700;'Nunchuk.CurveLeftDownRightLeftDownRight'
 0065E445    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E448    call        THashTable.Add
 0065E44D    mov         ecx,418
 0065E452    mov         edx,66475C;'Nunchuk.CurveLeftDownRightLeftRight'
 0065E457    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E45A    call        THashTable.Add
 0065E45F    mov         ecx,419
 0065E464    mov         edx,6647B0;'Nunchuk.CurveRightUp'
 0065E469    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E46C    call        THashTable.Add
 0065E471    mov         ecx,41A
 0065E476    mov         edx,6647E8;'Nunchuk.CurveRightUpStop'
 0065E47B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E47E    call        THashTable.Add
 0065E483    mov         ecx,41B
 0065E488    mov         edx,664828;'Nunchuk.CurveRightUpLeft'
 0065E48D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E490    call        THashTable.Add
 0065E495    mov         ecx,41C
 0065E49A    mov         edx,664868;'Nunchuk.CurveRightUpLeftStop'
 0065E49F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E4A2    call        THashTable.Add
 0065E4A7    mov         ecx,41D
 0065E4AC    mov         edx,6648B0;'Nunchuk.CurveRightUpLeftRight'
 0065E4B1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E4B4    call        THashTable.Add
 0065E4B9    mov         ecx,41E
 0065E4BE    mov         edx,6648F8;'Nunchuk.CurveRightUpLeftRightStop'
 0065E4C3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E4C6    call        THashTable.Add
 0065E4CB    mov         ecx,41F
 0065E4D0    mov         edx,664948;'Nunchuk.CurveRightUpLeftRightUp'
 0065E4D5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E4D8    call        THashTable.Add
 0065E4DD    mov         ecx,420
 0065E4E2    mov         edx,664994;'Nunchuk.CurveRightUpLeftRightUpStop'
 0065E4E7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E4EA    call        THashTable.Add
 0065E4EF    mov         ecx,421
 0065E4F4    mov         edx,6649E8;'Nunchuk.CurveRightUpLeftRightUpLeft'
 0065E4F9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E4FC    call        THashTable.Add
 0065E501    mov         ecx,422
 0065E506    mov         edx,664A3C;'Nunchuk.CurveRightUpLeftRightLeft'
 0065E50B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E50E    call        THashTable.Add
 0065E513    mov         ecx,423
 0065E518    mov         edx,664A8C;'Nunchuk.CurveRightDown'
 0065E51D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E520    call        THashTable.Add
 0065E525    mov         ecx,424
 0065E52A    mov         edx,664AC8;'Nunchuk.CurveRightDownStop'
 0065E52F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E532    call        THashTable.Add
 0065E537    mov         ecx,425
 0065E53C    mov         edx,664B0C;'Nunchuk.CurveRightDownLeft'
 0065E541    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E544    call        THashTable.Add
 0065E549    mov         ecx,426
 0065E54E    mov         edx,664B50;'Nunchuk.CurveRightDownLeftStop'
 0065E553    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E556    call        THashTable.Add
 0065E55B    mov         ecx,427
 0065E560    mov         edx,664B9C;'Nunchuk.CurveRightDownLeftRight'
 0065E565    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E568    call        THashTable.Add
 0065E56D    mov         ecx,428
 0065E572    mov         edx,664BE8;'Nunchuk.CurveRightDownLeftRightStop'
 0065E577    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E57A    call        THashTable.Add
 0065E57F    mov         ecx,429
 0065E584    mov         edx,664C3C;'Nunchuk.CurveRightDownLeftRightDown'
 0065E589    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E58C    call        THashTable.Add
 0065E591    mov         ecx,42A
 0065E596    mov         edx,664C90;'Nunchuk.CurveRightDownLeftRightDownStop'
 0065E59B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E59E    call        THashTable.Add
 0065E5A3    mov         ecx,42B
 0065E5A8    mov         edx,664CEC;'Nunchuk.Curvy3'
 0065E5AD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E5B0    call        THashTable.Add
 0065E5B5    mov         ecx,42B
 0065E5BA    mov         edx,664D18;'Nunchuk.Curly3'
 0065E5BF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E5C2    call        THashTable.Add
 0065E5C7    mov         ecx,42B
 0065E5CC    mov         edx,664D44;'Nunchuk.CurveRightDownLeftRightDownLeft'
 0065E5D1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E5D4    call        THashTable.Add
 0065E5D9    mov         ecx,42C
 0065E5DE    mov         edx,664DA0;'Nunchuk.CurveRightDownLeftRightLeft'
 0065E5E3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E5E6    call        THashTable.Add
 0065E5EB    mov         ecx,0CF
 0065E5F0    mov         edx,664DF4;'CircleAnticlockwise'
 0065E5F5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E5F8    call        THashTable.Add
 0065E5FD    mov         ecx,0CF
 0065E602    mov         edx,664E28;'CircleCounterClockwise'
 0065E607    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E60A    call        THashTable.Add
 0065E60F    mov         ecx,0D0
 0065E614    mov         edx,664E64;'CircleClockwise'
 0065E619    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E61C    call        THashTable.Add
 0065E621    mov         ecx,0CF
 0065E626    mov         edx,664E90;'Nunchuk.CircleAnticlockwise'
 0065E62B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E62E    call        THashTable.Add
 0065E633    mov         ecx,0CF
 0065E638    mov         edx,664ED4;'Nunchuk.CircleCounterClockwise'
 0065E63D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E640    call        THashTable.Add
 0065E645    mov         ecx,0D0
 0065E64A    mov         edx,664F20;'Nunchuk.CircleClockwise'
 0065E64F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E652    call        THashTable.Add
 0065E657    mov         ecx,15A
 0065E65C    mov         edx,664F5C;'Nunchuk.Joy'
 0065E661    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E664    call        THashTable.Add
 0065E669    mov         ecx,166
 0065E66E    mov         edx,664F80;'Nunchuk.Joy3D'
 0065E673    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E676    call        THashTable.Add
 0065E67B    mov         ecx,12C
 0065E680    mov         edx,664FA8;'Nunchuk.JoyX'
 0065E685    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E688    call        THashTable.Add
 0065E68D    mov         ecx,12D
 0065E692    mov         edx,664FD0;'Nunchuk.JoyY'
 0065E697    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E69A    call        THashTable.Add
 0065E69F    mov         ecx,162
 0065E6A4    mov         edx,664FF8;'Nunchuk.Up'
 0065E6A9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E6AC    call        THashTable.Add
 0065E6B1    mov         ecx,163
 0065E6B6    mov         edx,66501C;'Nunchuk.Down'
 0065E6BB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E6BE    call        THashTable.Add
 0065E6C3    mov         ecx,164
 0065E6C8    mov         edx,665044;'Nunchuk.Left'
 0065E6CD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E6D0    call        THashTable.Add
 0065E6D5    mov         ecx,165
 0065E6DA    mov         edx,66506C;'Nunchuk.Right'
 0065E6DF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E6E2    call        THashTable.Add
 0065E6E7    mov         ecx,12F
 0065E6EC    mov         edx,665094;'Nunchuk.ZButton'
 0065E6F1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E6F4    call        THashTable.Add
 0065E6F9    mov         ecx,12E
 0065E6FE    mov         edx,6650C0;'Nunchuk.CButton'
 0065E703    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E706    call        THashTable.Add
 0065E70B    mov         ecx,172
 0065E710    mov         edx,6650EC;'Nunchuk.ClassicButton'
 0065E715    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E718    call        THashTable.Add
 0065E71D    mov         ecx,176
 0065E722    mov         edx,665124;'Nunchuk.FXButton'
 0065E727    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E72A    call        THashTable.Add
 0065E72F    mov         ecx,173
 0065E734    mov         edx,665154;'Nunchuk.BladeFXReplugged'
 0065E739    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E73C    call        THashTable.Add
 0065E741    mov         ecx,173
 0065E746    mov         edx,665194;'BladeFXReplugged'
 0065E74B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E74E    call        THashTable.Add
 0065E753    mov         ecx,174
 0065E758    mov         edx,6651C4;'Nunchuk.BladeFXOverflow'
 0065E75D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E760    call        THashTable.Add
 0065E765    mov         ecx,174
 0065E76A    mov         edx,665200;'BladeFXOverflow'
 0065E76F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E772    call        THashTable.Add
 0065E777    mov         ecx,175
 0065E77C    mov         edx,66522C;'Nunchuk.BladeFXClassicMode'
 0065E781    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E784    call        THashTable.Add
 0065E789    mov         ecx,175
 0065E78E    mov         edx,665270;'BladeFXClassicMode'
 0065E793    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E796    call        THashTable.Add
 0065E79B    mov         ecx,177
 0065E7A0    mov         edx,6652A4;'Nunchuk.Calibrated'
 0065E7A5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E7A8    call        THashTable.Add
 0065E7AD    mov         ecx,12F
 0065E7B2    mov         edx,6652D8;'Nunchuk.Z'
 0065E7B7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E7BA    call        THashTable.Add
 0065E7BF    mov         ecx,12E
 0065E7C4    mov         edx,6652F8;'Nunchuk.C'
 0065E7C9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E7CC    call        THashTable.Add
 0065E7D1    mov         ecx,130
 0065E7D6    mov         edx,665318;'Nunchuk.RawForceX'
 0065E7DB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E7DE    call        THashTable.Add
 0065E7E3    mov         ecx,131
 0065E7E8    mov         edx,665348;'Nunchuk.RawForceY'
 0065E7ED    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E7F0    call        THashTable.Add
 0065E7F5    mov         ecx,132
 0065E7FA    mov         edx,665378;'Nunchuk.RawForceZ'
 0065E7FF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E802    call        THashTable.Add
 0065E807    mov         ecx,143
 0065E80C    mov         edx,6653A8;'Nunchuk.gx'
 0065E811    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E814    call        THashTable.Add
 0065E819    mov         ecx,144
 0065E81E    mov         edx,6653CC;'Nunchuk.gy'
 0065E823    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E826    call        THashTable.Add
 0065E82B    mov         ecx,145
 0065E830    mov         edx,6653F0;'Nunchuk.gz'
 0065E835    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E838    call        THashTable.Add
 0065E83D    mov         ecx,146
 0065E842    mov         edx,665414;'Nunchuk.g'
 0065E847    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E84A    call        THashTable.Add
 0065E84F    mov         ecx,147
 0065E854    mov         edx,665434;'Nunchuk.cyx'
 0065E859    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E85C    call        THashTable.Add
 0065E861    mov         ecx,148
 0065E866    mov         edx,665458;'Nunchuk.cxy'
 0065E86B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E86E    call        THashTable.Add
 0065E873    mov         ecx,149
 0065E878    mov         edx,66547C;'Nunchuk.cxz'
 0065E87D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E880    call        THashTable.Add
 0065E885    mov         ecx,14A
 0065E88A    mov         edx,6654A0;'Nunchuk.cxx'
 0065E88F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E892    call        THashTable.Add
 0065E897    mov         ecx,14B
 0065E89C    mov         edx,6654C4;'Nunchuk.cyy'
 0065E8A1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E8A4    call        THashTable.Add
 0065E8A9    mov         ecx,14C
 0065E8AE    mov         edx,6654E8;'Nunchuk.czz'
 0065E8B3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E8B6    call        THashTable.Add
 0065E8BB    mov         ecx,14D
 0065E8C0    mov         edx,66550C;'Nunchuk.Pitch'
 0065E8C5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E8C8    call        THashTable.Add
 0065E8CD    mov         ecx,14E
 0065E8D2    mov         edx,665534;'Nunchuk.Roll'
 0065E8D7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E8DA    call        THashTable.Add
 0065E8DF    mov         ecx,157
 0065E8E4    mov         edx,66555C;'Nunchuk.SmoothPitch'
 0065E8E9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E8EC    call        THashTable.Add
 0065E8F1    mov         ecx,158
 0065E8F6    mov         edx,665590;'Nunchuk.SmoothRoll'
 0065E8FB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E8FE    call        THashTable.Add
 0065E903    mov         ecx,152
 0065E908    mov         edx,6655C4;'Nunchuk.RawAcc'
 0065E90D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E910    call        THashTable.Add
 0065E915    mov         ecx,14F
 0065E91A    mov         edx,6655F0;'Nunchuk.RawAccX'
 0065E91F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E922    call        THashTable.Add
 0065E927    mov         ecx,150
 0065E92C    mov         edx,66561C;'Nunchuk.RawAccY'
 0065E931    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E934    call        THashTable.Add
 0065E939    mov         ecx,151
 0065E93E    mov         edx,665648;'Nunchuk.RawAccZ'
 0065E943    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E946    call        THashTable.Add
 0065E94B    mov         ecx,156
 0065E950    mov         edx,665674;'Nunchuk.RelAcc'
 0065E955    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E958    call        THashTable.Add
 0065E95D    mov         ecx,153
 0065E962    mov         edx,6656A0;'Nunchuk.RelAccX'
 0065E967    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E96A    call        THashTable.Add
 0065E96F    mov         ecx,154
 0065E974    mov         edx,6656CC;'Nunchuk.RelAccY'
 0065E979    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E97C    call        THashTable.Add
 0065E981    mov         ecx,155
 0065E986    mov         edx,6656F8;'Nunchuk.RelAccZ'
 0065E98B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E98E    call        THashTable.Add
 0065E993    xor         esi,esi
 0065E995    lea         edx,[ebp-48]
 0065E998    mov         eax,esi
 0065E99A    call        IntToStr
 0065E99F    mov         ecx,dword ptr [ebp-48]
 0065E9A2    lea         eax,[ebp-44]
 0065E9A5    mov         edx,665724;'Nunchuk.Byte'
 0065E9AA    call        @UStrCat3
 0065E9AF    mov         edx,dword ptr [ebp-44]
 0065E9B2    lea         ecx,[esi+133]
 0065E9B8    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E9BB    call        THashTable.Add
 0065E9C0    inc         esi
 0065E9C1    cmp         esi,10
>0065E9C4    jne         0065E995
 0065E9C6    xor         esi,esi
 0065E9C8    lea         edx,[ebp-50]
 0065E9CB    mov         eax,esi
 0065E9CD    call        IntToStr
 0065E9D2    mov         ecx,dword ptr [ebp-50]
 0065E9D5    lea         eax,[ebp-4C]
 0065E9D8    mov         edx,66574C;'Classic.Byte'
 0065E9DD    call        @UStrCat3
 0065E9E2    mov         edx,dword ptr [ebp-4C]
 0065E9E5    lea         ecx,[esi+133]
 0065E9EB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065E9EE    call        THashTable.Add
 0065E9F3    inc         esi
 0065E9F4    cmp         esi,10
>0065E9F7    jne         0065E9C8
 0065E9F9    mov         ecx,167
 0065E9FE    mov         edx,665774;'Nunchuk.RotMat'
 0065EA03    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EA06    call        THashTable.Add
 0065EA0B    mov         ecx,15B
 0065EA10    mov         edx,6657A0;'Nunchuk.Shakiness'
 0065EA15    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EA18    call        THashTable.Add
 0065EA1D    mov         ecx,15C
 0065EA22    mov         edx,6657D0;'Nunchuk.OnTable'
 0065EA27    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EA2A    call        THashTable.Add
 0065EA2F    mov         ecx,15D
 0065EA34    mov         edx,6657FC;'Nunchuk.LookingAtWatch'
 0065EA39    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EA3C    call        THashTable.Add
 0065EA41    mov         ecx,15E
 0065EA46    mov         edx,665838;'Nunchuk.LookingAtRightWatch'
 0065EA4B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EA4E    call        THashTable.Add
 0065EA53    mov         ecx,15F
 0065EA58    mov         edx,66587C;'Nunchuk.LookingAtLeftPalm'
 0065EA5D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EA60    call        THashTable.Add
 0065EA65    mov         ecx,160
 0065EA6A    mov         edx,6658BC;'Nunchuk.LookingAtRightPalm'
 0065EA6F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EA72    call        THashTable.Add
 0065EA77    mov         ecx,161
 0065EA7C    mov         edx,665900;'Nunchuk.UpsidedownOnShoulder'
 0065EA81    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EA84    call        THashTable.Add
 0065EA89    mov         ecx,168
 0065EA8E    mov         edx,665948;'Nunchuk.ReportCount'
 0065EA93    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EA96    call        THashTable.Add
 0065EA9B    mov         ecx,3B7
 0065EAA0    mov         edx,662BD0;'Nunchuk.SwingDown'
 0065EAA5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EAA8    call        THashTable.Add
 0065EAAD    mov         ecx,3B9
 0065EAB2    mov         edx,662C38;'Nunchuk.SwingDownUp'
 0065EAB7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EABA    call        THashTable.Add
 0065EABF    mov         ecx,3BB
 0065EAC4    mov         edx,662CA8;'Nunchuk.SwingDownUpDown'
 0065EAC9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EACC    call        THashTable.Add
 0065EAD1    mov         ecx,3BD
 0065EAD6    mov         edx,662D28;'Nunchuk.SwingDownUpDownUp'
 0065EADB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EADE    call        THashTable.Add
 0065EAE3    mov         ecx,16D
 0065EAE8    mov         edx,66597C;'Nunchuk.SwingHorizontal'
 0065EAED    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EAF0    call        THashTable.Add
 0065EAF5    mov         ecx,16E
 0065EAFA    mov         edx,6659B8;'Nunchuk.SwingVertical'
 0065EAFF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EB02    call        THashTable.Add
 0065EB07    mov         ecx,16F
 0065EB0C    mov         edx,6659F0;'Nunchuk.Stabbing'
 0065EB11    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EB14    call        THashTable.Add
 0065EB19    mov         ecx,170
 0065EB1E    mov         edx,665A20;'Nunchuk.DrumBeat'
 0065EB23    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EB26    call        THashTable.Add
 0065EB2B    mov         ecx,169
 0065EB30    mov         edx,665A50;'Nunchuk.Shake'
 0065EB35    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EB38    call        THashTable.Add
 0065EB3D    mov         ecx,1AA
 0065EB42    mov         edx,665A78;'Classic.LeftStick'
 0065EB47    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EB4A    call        THashTable.Add
 0065EB4F    mov         ecx,1AB
 0065EB54    mov         edx,665AA8;'Classic.RightStick'
 0065EB59    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EB5C    call        THashTable.Add
 0065EB61    mov         ecx,1AA
 0065EB66    mov         edx,665ADC;'Classic.Joy1'
 0065EB6B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EB6E    call        THashTable.Add
 0065EB73    mov         ecx,1AB
 0065EB78    mov         edx,665B04;'Classic.Joy2'
 0065EB7D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EB80    call        THashTable.Add
 0065EB85    mov         ecx,1AF
 0065EB8A    mov         edx,665B2C;'Classic.ButtonDir'
 0065EB8F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EB92    call        THashTable.Add
 0065EB97    mov         ecx,1AC
 0065EB9C    mov         edx,665B5C;'Classic.DPad'
 0065EBA1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EBA4    call        THashTable.Add
 0065EBA9    mov         ecx,1AD
 0065EBAE    mov         edx,665B84;'Classic.DPadX'
 0065EBB3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EBB6    call        THashTable.Add
 0065EBBB    mov         ecx,1AE
 0065EBC0    mov         edx,665BAC;'Classic.DPadY'
 0065EBC5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EBC8    call        THashTable.Add
 0065EBCD    mov         ecx,1A6
 0065EBD2    mov         edx,665BD4;'Classic.LeftStickX'
 0065EBD7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EBDA    call        THashTable.Add
 0065EBDF    mov         ecx,1A7
 0065EBE4    mov         edx,665C08;'Classic.LeftStickY'
 0065EBE9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EBEC    call        THashTable.Add
 0065EBF1    mov         ecx,1A8
 0065EBF6    mov         edx,665C3C;'Classic.RightStickX'
 0065EBFB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EBFE    call        THashTable.Add
 0065EC03    mov         ecx,1A9
 0065EC08    mov         edx,665C70;'Classic.RightStickY'
 0065EC0D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EC10    call        THashTable.Add
 0065EC15    mov         ecx,1A6
 0065EC1A    mov         edx,665CA4;'Classic.Joy1X'
 0065EC1F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EC22    call        THashTable.Add
 0065EC27    mov         ecx,1A7
 0065EC2C    mov         edx,665CCC;'Classic.Joy1Y'
 0065EC31    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EC34    call        THashTable.Add
 0065EC39    mov         ecx,1A8
 0065EC3E    mov         edx,665CF4;'Classic.Joy2X'
 0065EC43    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EC46    call        THashTable.Add
 0065EC4B    mov         ecx,1A9
 0065EC50    mov         edx,665D1C;'Classic.Joy2Y'
 0065EC55    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EC58    call        THashTable.Add
 0065EC5D    mov         ecx,1A0
 0065EC62    mov         edx,665D44;'Classic.RawJoy1X'
 0065EC67    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EC6A    call        THashTable.Add
 0065EC6F    mov         ecx,1A1
 0065EC74    mov         edx,665D74;'Classic.RawJoy1Y'
 0065EC79    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EC7C    call        THashTable.Add
 0065EC81    mov         ecx,1A2
 0065EC86    mov         edx,665DA4;'Classic.RawJoy2X'
 0065EC8B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EC8E    call        THashTable.Add
 0065EC93    mov         ecx,1A3
 0065EC98    mov         edx,665DD4;'Classic.RawJoy2Y'
 0065EC9D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065ECA0    call        THashTable.Add
 0065ECA5    mov         ecx,1A4
 0065ECAA    mov         edx,665E04;'Classic.L'
 0065ECAF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065ECB2    call        THashTable.Add
 0065ECB7    mov         ecx,1A5
 0065ECBC    mov         edx,665E24;'Classic.R'
 0065ECC1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065ECC4    call        THashTable.Add
 0065ECC9    mov         ecx,190
 0065ECCE    mov         edx,665E44;'Classic.Up'
 0065ECD3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065ECD6    call        THashTable.Add
 0065ECDB    mov         ecx,191
 0065ECE0    mov         edx,665E68;'Classic.Left'
 0065ECE5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065ECE8    call        THashTable.Add
 0065ECED    mov         ecx,192
 0065ECF2    mov         edx,665E90;'Classic.ZR'
 0065ECF7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065ECFA    call        THashTable.Add
 0065ECFF    mov         ecx,193
 0065ED04    mov         edx,665EB4;'Classic.x'
 0065ED09    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065ED0C    call        THashTable.Add
 0065ED11    mov         ecx,194
 0065ED16    mov         edx,665ED4;'Classic.a'
 0065ED1B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065ED1E    call        THashTable.Add
 0065ED23    mov         ecx,195
 0065ED28    mov         edx,665EF4;'Classic.y'
 0065ED2D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065ED30    call        THashTable.Add
 0065ED35    mov         ecx,196
 0065ED3A    mov         edx,665F14;'Classic.b'
 0065ED3F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065ED42    call        THashTable.Add
 0065ED47    mov         ecx,197
 0065ED4C    mov         edx,665F34;'Classic.ZL'
 0065ED51    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065ED54    call        THashTable.Add
 0065ED59    mov         ecx,198
 0065ED5E    mov         edx,665F58;'Classic.Unused'
 0065ED63    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065ED66    call        THashTable.Add
 0065ED6B    mov         ecx,199
 0065ED70    mov         edx,665F84;'Classic.RFull'
 0065ED75    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065ED78    call        THashTable.Add
 0065ED7D    mov         ecx,19A
 0065ED82    mov         edx,665FAC;'Classic.Plus'
 0065ED87    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065ED8A    call        THashTable.Add
 0065ED8F    mov         ecx,19A
 0065ED94    mov         edx,665FD4;'Classic.Start'
 0065ED99    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065ED9C    call        THashTable.Add
 0065EDA1    mov         ecx,19B
 0065EDA6    mov         edx,665FFC;'Classic.Home'
 0065EDAB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EDAE    call        THashTable.Add
 0065EDB3    mov         ecx,19C
 0065EDB8    mov         edx,666024;'Classic.Minus'
 0065EDBD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EDC0    call        THashTable.Add
 0065EDC5    mov         ecx,19C
 0065EDCA    mov         edx,66604C;'Classic.Select'
 0065EDCF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EDD2    call        THashTable.Add
 0065EDD7    mov         ecx,19D
 0065EDDC    mov         edx,666078;'Classic.LFull'
 0065EDE1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EDE4    call        THashTable.Add
 0065EDE9    mov         ecx,19E
 0065EDEE    mov         edx,6660A0;'Classic.Down'
 0065EDF3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EDF6    call        THashTable.Add
 0065EDFB    mov         ecx,19F
 0065EE00    mov         edx,6660C8;'Classic.Right'
 0065EE05    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EE08    call        THashTable.Add
 0065EE0D    mov         ecx,1F4
 0065EE12    mov         edx,6660F0;'Guitar.StrumUp'
 0065EE17    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EE1A    call        THashTable.Add
 0065EE1F    mov         ecx,1F7
 0065EE24    mov         edx,66611C;'Guitar.Fret3'
 0065EE29    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EE2C    call        THashTable.Add
 0065EE31    mov         ecx,1F8
 0065EE36    mov         edx,666144;'Guitar.Fret1'
 0065EE3B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EE3E    call        THashTable.Add
 0065EE43    mov         ecx,1F9
 0065EE48    mov         edx,66616C;'Guitar.Fret4'
 0065EE4D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EE50    call        THashTable.Add
 0065EE55    mov         ecx,1FA
 0065EE5A    mov         edx,666194;'Guitar.Fret2'
 0065EE5F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EE62    call        THashTable.Add
 0065EE67    mov         ecx,1FB
 0065EE6C    mov         edx,6661BC;'Guitar.Fret5'
 0065EE71    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EE74    call        THashTable.Add
 0065EE79    mov         ecx,1F7
 0065EE7E    mov         edx,6661E4;'Guitar.Yellow'
 0065EE83    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EE86    call        THashTable.Add
 0065EE8B    mov         ecx,1F8
 0065EE90    mov         edx,66620C;'Guitar.Green'
 0065EE95    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EE98    call        THashTable.Add
 0065EE9D    mov         ecx,1F9
 0065EEA2    mov         edx,666234;'Guitar.Blue'
 0065EEA7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EEAA    call        THashTable.Add
 0065EEAF    mov         ecx,1FA
 0065EEB4    mov         edx,666258;'Guitar.Red'
 0065EEB9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EEBC    call        THashTable.Add
 0065EEC1    mov         ecx,1FB
 0065EEC6    mov         edx,66627C;'Guitar.Orange'
 0065EECB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EECE    call        THashTable.Add
 0065EED3    mov         ecx,1FE
 0065EED8    mov         edx,6662A4;'Guitar.Plus'
 0065EEDD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EEE0    call        THashTable.Add
 0065EEE5    mov         ecx,1FE
 0065EEEA    mov         edx,6662C8;'Guitar.Start'
 0065EEEF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EEF2    call        THashTable.Add
 0065EEF7    mov         ecx,200
 0065EEFC    mov         edx,6662F0;'Guitar.Minus'
 0065EF01    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EF04    call        THashTable.Add
 0065EF09    mov         ecx,200
 0065EF0E    mov         edx,666318;'Guitar.Select'
 0065EF13    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EF16    call        THashTable.Add
 0065EF1B    mov         ecx,202
 0065EF20    mov         edx,666340;'Guitar.StrumDown'
 0065EF25    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EF28    call        THashTable.Add
 0065EF2D    mov         ecx,207
 0065EF32    mov         edx,666370;'Guitar.Joy'
 0065EF37    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EF3A    call        THashTable.Add
 0065EF3F    mov         ecx,204
 0065EF44    mov         edx,666394;'Guitar.JoyX'
 0065EF49    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EF4C    call        THashTable.Add
 0065EF51    mov         ecx,205
 0065EF56    mov         edx,6663B8;'Guitar.JoyY'
 0065EF5B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EF5E    call        THashTable.Add
 0065EF63    mov         ecx,206
 0065EF68    mov         edx,6663DC;'Guitar.WhammyBar'
 0065EF6D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EF70    call        THashTable.Add
 0065EF75    mov         ecx,20A
 0065EF7A    mov         edx,66640C;'Guitar.TouchBar'
 0065EF7F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EF82    call        THashTable.Add
 0065EF87    mov         ecx,20B
 0065EF8C    mov         edx,666438;'Guitar.RawTouchBar'
 0065EF91    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EF94    call        THashTable.Add
 0065EF99    mov         ecx,20C
 0065EF9E    mov         edx,66646C;'Guitar.TouchGreen'
 0065EFA3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EFA6    call        THashTable.Add
 0065EFAB    mov         ecx,20D
 0065EFB0    mov         edx,66649C;'Guitar.TouchRed'
 0065EFB5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EFB8    call        THashTable.Add
 0065EFBD    mov         ecx,20E
 0065EFC2    mov         edx,6664C8;'Guitar.TouchYellow'
 0065EFC7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EFCA    call        THashTable.Add
 0065EFCF    mov         ecx,20F
 0065EFD4    mov         edx,6664FC;'Guitar.TouchBlue'
 0065EFD9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EFDC    call        THashTable.Add
 0065EFE1    mov         ecx,210
 0065EFE6    mov         edx,66652C;'Guitar.TouchOrange'
 0065EFEB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065EFEE    call        THashTable.Add
 0065EFF3    mov         ecx,20C
 0065EFF8    mov         edx,666560;'Guitar.TouchFret1'
 0065EFFD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F000    call        THashTable.Add
 0065F005    mov         ecx,20D
 0065F00A    mov         edx,666590;'Guitar.TouchFret2'
 0065F00F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F012    call        THashTable.Add
 0065F017    mov         ecx,20E
 0065F01C    mov         edx,6665C0;'Guitar.TouchFret3'
 0065F021    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F024    call        THashTable.Add
 0065F029    mov         ecx,20F
 0065F02E    mov         edx,6665F0;'Guitar.TouchFret4'
 0065F033    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F036    call        THashTable.Add
 0065F03B    mov         ecx,210
 0065F040    mov         edx,666620;'Guitar.TouchFret5'
 0065F045    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F048    call        THashTable.Add
 0065F04D    mov         ecx,7C
 0065F052    mov         edx,666650;'Guitar.DPad'
 0065F057    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F05A    call        THashTable.Add
 0065F05F    mov         ecx,0B
 0065F064    mov         edx,666674;'Guitar.A'
 0065F069    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F06C    call        THashTable.Add
 0065F071    mov         ecx,0A
 0065F076    mov         edx,666694;'Guitar.Home'
 0065F07B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F07E    call        THashTable.Add
 0065F083    mov         ecx,0E
 0065F088    mov         edx,6666B8;'Guitar.Two'
 0065F08D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F090    call        THashTable.Add
 0065F095    mov         ecx,0D
 0065F09A    mov         edx,6666DC;'Guitar.One'
 0065F09F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F0A2    call        THashTable.Add
 0065F0A7    mov         ecx,0E
 0065F0AC    mov         edx,666700;'Guitar.2'
 0065F0B1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F0B4    call        THashTable.Add
 0065F0B9    mov         ecx,0D
 0065F0BE    mov         edx,666720;'Guitar.1'
 0065F0C3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F0C6    call        THashTable.Add
 0065F0CB    mov         ecx,10
 0065F0D0    mov         edx,666740;'Guitar.WiimoteMinus'
 0065F0D5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F0D8    call        THashTable.Add
 0065F0DD    mov         ecx,0F
 0065F0E2    mov         edx,666774;'Guitar.WiimotePlus'
 0065F0E7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F0EA    call        THashTable.Add
 0065F0EF    mov         ecx,2
 0065F0F4    mov         edx,6667A8;'Guitar.Rumble'
 0065F0F9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F0FC    call        THashTable.Add
 0065F101    mov         ecx,1
 0065F106    mov         edx,6667D0;'Guitar.Leds'
 0065F10B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F10E    call        THashTable.Add
 0065F113    mov         ecx,13
 0065F118    mov         edx,6667F4;'Guitar.Led1'
 0065F11D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F120    call        THashTable.Add
 0065F125    mov         ecx,14
 0065F12A    mov         edx,666818;'Guitar.Led2'
 0065F12F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F132    call        THashTable.Add
 0065F137    mov         ecx,15
 0065F13C    mov         edx,66683C;'Guitar.Led3'
 0065F141    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F144    call        THashTable.Add
 0065F149    mov         ecx,16
 0065F14E    mov         edx,666860;'Guitar.Led4'
 0065F153    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F156    call        THashTable.Add
 0065F15B    mov         ecx,3A8
 0065F160    mov         edx,666884;'Guitar.LedPlayer'
 0065F165    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F168    call        THashTable.Add
 0065F16D    mov         ecx,3B2
 0065F172    mov         edx,6668B4;'Guitar.LedLevel'
 0065F177    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F17A    call        THashTable.Add
 0065F17F    mov         ecx,73
 0065F184    mov         edx,6668E0;'Guitar.Frequency'
 0065F189    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F18C    call        THashTable.Add
 0065F191    mov         ecx,72
 0065F196    mov         edx,666910;'Guitar.Volume'
 0065F19B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F19E    call        THashTable.Add
 0065F1A3    mov         ecx,6F
 0065F1A8    mov         edx,666938;'Guitar.Speaker'
 0065F1AD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F1B0    call        THashTable.Add
 0065F1B5    mov         ecx,70
 0065F1BA    mov         edx,666964;'Guitar.Mute'
 0065F1BF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F1C2    call        THashTable.Add
 0065F1C7    mov         ecx,62
 0065F1CC    mov         edx,666988;'Guitar.Pitch'
 0065F1D1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F1D4    call        THashTable.Add
 0065F1D9    mov         ecx,63
 0065F1DE    mov         edx,6669B0;'Guitar.Roll'
 0065F1E3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F1E6    call        THashTable.Add
 0065F1EB    mov         ecx,74
 0065F1F0    mov         edx,6669D4;'Guitar.SmoothPitch'
 0065F1F5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F1F8    call        THashTable.Add
 0065F1FD    mov         ecx,75
 0065F202    mov         edx,666A08;'Guitar.SmoothRoll'
 0065F207    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F20A    call        THashTable.Add
 0065F20F    mov         ecx,28B
 0065F214    mov         edx,666A38;'Drums.Red'
 0065F219    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F21C    call        THashTable.Add
 0065F221    mov         ecx,28D
 0065F226    mov         edx,666A58;'Drums.Blue'
 0065F22B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F22E    call        THashTable.Add
 0065F233    mov         ecx,28C
 0065F238    mov         edx,666A7C;'Drums.Green'
 0065F23D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F240    call        THashTable.Add
 0065F245    mov         ecx,28E
 0065F24A    mov         edx,666AA0;'Drums.Yellow'
 0065F24F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F252    call        THashTable.Add
 0065F257    mov         ecx,28F
 0065F25C    mov         edx,666AC8;'Drums.Orange'
 0065F261    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F264    call        THashTable.Add
 0065F269    mov         ecx,290
 0065F26E    mov         edx,666AF0;'Drums.Pedal'
 0065F273    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F276    call        THashTable.Add
 0065F27B    mov         ecx,290
 0065F280    mov         edx,666B14;'Drums.Bass'
 0065F285    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F288    call        THashTable.Add
 0065F28D    mov         ecx,296
 0065F292    mov         edx,666B38;'Drums.HiHat'
 0065F297    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F29A    call        THashTable.Add
 0065F29F    mov         ecx,292
 0065F2A4    mov         edx,666B5C;'Drums.Plus'
 0065F2A9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F2AC    call        THashTable.Add
 0065F2B1    mov         ecx,291
 0065F2B6    mov         edx,666B80;'Drums.Minus'
 0065F2BB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F2BE    call        THashTable.Add
 0065F2C3    mov         ecx,293
 0065F2C8    mov         edx,666BA4;'Drums.JoyX'
 0065F2CD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F2D0    call        THashTable.Add
 0065F2D5    mov         ecx,294
 0065F2DA    mov         edx,666BC8;'Drums.JoyY'
 0065F2DF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F2E2    call        THashTable.Add
 0065F2E7    mov         ecx,295
 0065F2EC    mov         edx,666BEC;'Drums.Joy'
 0065F2F1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F2F4    call        THashTable.Add
 0065F2F9    mov         ecx,297
 0065F2FE    mov         edx,666C0C;'Drums.RedSpeed'
 0065F303    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F306    call        THashTable.Add
 0065F30B    mov         ecx,299
 0065F310    mov         edx,666C38;'Drums.BlueSpeed'
 0065F315    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F318    call        THashTable.Add
 0065F31D    mov         ecx,298
 0065F322    mov         edx,666C64;'Drums.GreenSpeed'
 0065F327    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F32A    call        THashTable.Add
 0065F32F    mov         ecx,29A
 0065F334    mov         edx,666C94;'Drums.YellowSpeed'
 0065F339    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F33C    call        THashTable.Add
 0065F341    mov         ecx,29B
 0065F346    mov         edx,666CC4;'Drums.OrangeSpeed'
 0065F34B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F34E    call        THashTable.Add
 0065F353    mov         ecx,29C
 0065F358    mov         edx,666CF4;'Drums.PedalSpeed'
 0065F35D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F360    call        THashTable.Add
 0065F365    mov         ecx,29C
 0065F36A    mov         edx,666D24;'Drums.BassSpeed'
 0065F36F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F372    call        THashTable.Add
 0065F377    mov         ecx,29F
 0065F37C    mov         edx,666D50;'Drums.HiHatSpeed'
 0065F381    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F384    call        THashTable.Add
 0065F389    mov         ecx,29D
 0065F38E    mov         edx,666D80;'Drums.Speed'
 0065F393    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F396    call        THashTable.Add
 0065F39B    mov         ecx,29E
 0065F3A0    mov         edx,666DA4;'Drums.HasSpeed'
 0065F3A5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F3A8    call        THashTable.Add
 0065F3AD    mov         ecx,3B2
 0065F3B2    mov         edx,666DD0;'Drums.LedLevel'
 0065F3B7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F3BA    call        THashTable.Add
 0065F3BF    mov         ecx,7C
 0065F3C4    mov         edx,666DFC;'Drums.DPad'
 0065F3C9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F3CC    call        THashTable.Add
 0065F3D1    mov         ecx,8
 0065F3D6    mov         edx,666E20;'Drums.DPadUp'
 0065F3DB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F3DE    call        THashTable.Add
 0065F3E3    mov         ecx,9
 0065F3E8    mov         edx,666E48;'Drums.DPadDown'
 0065F3ED    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F3F0    call        THashTable.Add
 0065F3F5    mov         ecx,7
 0065F3FA    mov         edx,666E74;'Drums.DPadLeft'
 0065F3FF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F402    call        THashTable.Add
 0065F407    mov         ecx,6
 0065F40C    mov         edx,666EA0;'Drums.DPadRight'
 0065F411    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F414    call        THashTable.Add
 0065F419    mov         ecx,0B
 0065F41E    mov         edx,666ECC;'Drums.A'
 0065F423    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F426    call        THashTable.Add
 0065F42B    mov         ecx,0A
 0065F430    mov         edx,666EE8;'Drums.Home'
 0065F435    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F438    call        THashTable.Add
 0065F43D    mov         ecx,0D
 0065F442    mov         edx,666F0C;'Drums.One'
 0065F447    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F44A    call        THashTable.Add
 0065F44F    mov         ecx,0E
 0065F454    mov         edx,666F2C;'Drums.Two'
 0065F459    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F45C    call        THashTable.Add
 0065F461    mov         ecx,0D
 0065F466    mov         edx,666F4C;'Drums.1'
 0065F46B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F46E    call        THashTable.Add
 0065F473    mov         ecx,0E
 0065F478    mov         edx,666F68;'Drums.2'
 0065F47D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F480    call        THashTable.Add
 0065F485    mov         ecx,10
 0065F48A    mov         edx,666F84;'Drums.WiimoteMinus'
 0065F48F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F492    call        THashTable.Add
 0065F497    mov         ecx,0F
 0065F49C    mov         edx,666FB8;'Drums.WiimotePlus'
 0065F4A1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F4A4    call        THashTable.Add
 0065F4A9    mov         ecx,1
 0065F4AE    mov         edx,666FE8;'Drums.Leds'
 0065F4B3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F4B6    call        THashTable.Add
 0065F4BB    mov         ecx,13
 0065F4C0    mov         edx,66700C;'Drums.Led1'
 0065F4C5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F4C8    call        THashTable.Add
 0065F4CD    mov         ecx,14
 0065F4D2    mov         edx,667030;'Drums.Led2'
 0065F4D7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F4DA    call        THashTable.Add
 0065F4DF    mov         ecx,15
 0065F4E4    mov         edx,667054;'Drums.Led3'
 0065F4E9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F4EC    call        THashTable.Add
 0065F4F1    mov         ecx,16
 0065F4F6    mov         edx,667078;'Drums.Led4'
 0065F4FB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F4FE    call        THashTable.Add
 0065F503    mov         ecx,3A8
 0065F508    mov         edx,66709C;'Drums.LedPlayer'
 0065F50D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F510    call        THashTable.Add
 0065F515    mov         ecx,4B
 0065F51A    mov         edx,6670C8;'Drums.Battery'
 0065F51F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F522    call        THashTable.Add
 0065F527    mov         ecx,6F
 0065F52C    mov         edx,6670F0;'Drums.Speaker'
 0065F531    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F534    call        THashTable.Add
 0065F539    mov         ecx,70
 0065F53E    mov         edx,667118;'Drums.Mute'
 0065F543    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F546    call        THashTable.Add
 0065F54B    mov         ecx,71
 0065F550    mov         edx,66713C;'Drums.SampleRate'
 0065F555    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F558    call        THashTable.Add
 0065F55D    mov         ecx,72
 0065F562    mov         edx,66716C;'Drums.Volume'
 0065F567    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F56A    call        THashTable.Add
 0065F56F    mov         ecx,73
 0065F574    mov         edx,667194;'Drums.Frequency'
 0065F579    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F57C    call        THashTable.Add
 0065F581    mov         ecx,73
 0065F586    mov         edx,6671C0;'Drums.Freq'
 0065F58B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F58E    call        THashTable.Add
 0065F593    mov         ecx,2
 0065F598    mov         edx,6671E4;'Drums.Rumble'
 0065F59D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F5A0    call        THashTable.Add
 0065F5A5    mov         ecx,44C
 0065F5AA    mov         edx,66720C;'Turntable.Exists'
 0065F5AF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F5B2    call        THashTable.Add
 0065F5B7    mov         ecx,44D
 0065F5BC    mov         edx,66723C;'Turntable.Euphoria'
 0065F5C1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F5C4    call        THashTable.Add
 0065F5C9    mov         ecx,44E
 0065F5CE    mov         edx,667270;'Turntable.Plus'
 0065F5D3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F5D6    call        THashTable.Add
 0065F5DB    mov         ecx,44F
 0065F5E0    mov         edx,66729C;'Turntable.Minus'
 0065F5E5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F5E8    call        THashTable.Add
 0065F5ED    mov         ecx,450
 0065F5F2    mov         edx,6672C8;'Turntable.QuestionQuestion'
 0065F5F7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F5FA    call        THashTable.Add
 0065F5FF    mov         ecx,451
 0065F604    mov         edx,66730C;'Turntable.Red'
 0065F609    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F60C    call        THashTable.Add
 0065F611    mov         ecx,452
 0065F616    mov         edx,667334;'Turntable.Green'
 0065F61B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F61E    call        THashTable.Add
 0065F623    mov         ecx,453
 0065F628    mov         edx,667360;'Turntable.Blue'
 0065F62D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F630    call        THashTable.Add
 0065F635    mov         ecx,454
 0065F63A    mov         edx,66738C;'Turntable.LeftRed'
 0065F63F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F642    call        THashTable.Add
 0065F647    mov         ecx,455
 0065F64C    mov         edx,6673BC;'Turntable.LeftGreen'
 0065F651    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F654    call        THashTable.Add
 0065F659    mov         ecx,456
 0065F65E    mov         edx,6673F0;'Turntable.LeftBlue'
 0065F663    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F666    call        THashTable.Add
 0065F66B    mov         ecx,457
 0065F670    mov         edx,667424;'Turntable.RightRed'
 0065F675    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F678    call        THashTable.Add
 0065F67D    mov         ecx,458
 0065F682    mov         edx,667458;'Turntable.RightGreen'
 0065F687    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F68A    call        THashTable.Add
 0065F68F    mov         ecx,459
 0065F694    mov         edx,667490;'Turntable.RightBlue'
 0065F699    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F69C    call        THashTable.Add
 0065F6A1    mov         ecx,45A
 0065F6A6    mov         edx,6674C4;'Turntable.EffectDial'
 0065F6AB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F6AE    call        THashTable.Add
 0065F6B3    mov         ecx,45B
 0065F6B8    mov         edx,6674FC;'Turntable.CrossFade'
 0065F6BD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F6C0    call        THashTable.Add
 0065F6C5    mov         ecx,45C
 0065F6CA    mov         edx,667530;'Turntable.StickX'
 0065F6CF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F6D2    call        THashTable.Add
 0065F6D7    mov         ecx,45D
 0065F6DC    mov         edx,667560;'Turntable.StickY'
 0065F6E1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F6E4    call        THashTable.Add
 0065F6E9    mov         ecx,45E
 0065F6EE    mov         edx,667590;'Turntable.Stick'
 0065F6F3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F6F6    call        THashTable.Add
 0065F6FB    mov         ecx,45F
 0065F700    mov         edx,6675BC;'Turntable.RawLeftTurntable'
 0065F705    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F708    call        THashTable.Add
 0065F70D    mov         ecx,460
 0065F712    mov         edx,667600;'Turntable.RawRightTurntable'
 0065F717    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F71A    call        THashTable.Add
 0065F71F    mov         ecx,3B1
 0065F724    mov         edx,667644;'Turntable.LedLevel'
 0065F729    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F72C    call        THashTable.Add
 0065F731    mov         ecx,7B
 0065F736    mov         edx,667678;'Turntable.DPad'
 0065F73B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F73E    call        THashTable.Add
 0065F743    mov         ecx,9
 0065F748    mov         edx,6676A4;'Turntable.DPadUp'
 0065F74D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F750    call        THashTable.Add
 0065F755    mov         ecx,8
 0065F75A    mov         edx,6676D4;'Turntable.DPadDown'
 0065F75F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F762    call        THashTable.Add
 0065F767    mov         ecx,6
 0065F76C    mov         edx,667708;'Turntable.DPadLeft'
 0065F771    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F774    call        THashTable.Add
 0065F779    mov         ecx,7
 0065F77E    mov         edx,66773C;'Turntable.DPadRight'
 0065F783    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F786    call        THashTable.Add
 0065F78B    mov         ecx,0B
 0065F790    mov         edx,667770;'Turntable.A'
 0065F795    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F798    call        THashTable.Add
 0065F79D    mov         ecx,0A
 0065F7A2    mov         edx,667794;'Turntable.Home'
 0065F7A7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F7AA    call        THashTable.Add
 0065F7AF    mov         ecx,0D
 0065F7B4    mov         edx,6677C0;'Turntable.One'
 0065F7B9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F7BC    call        THashTable.Add
 0065F7C1    mov         ecx,0E
 0065F7C6    mov         edx,6677E8;'Turntable.Two'
 0065F7CB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F7CE    call        THashTable.Add
 0065F7D3    mov         ecx,0D
 0065F7D8    mov         edx,667810;'Turntable.1'
 0065F7DD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F7E0    call        THashTable.Add
 0065F7E5    mov         ecx,0E
 0065F7EA    mov         edx,667834;'Turntable.2'
 0065F7EF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F7F2    call        THashTable.Add
 0065F7F7    mov         ecx,10
 0065F7FC    mov         edx,667858;'Turntable.WiimoteMinus'
 0065F801    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F804    call        THashTable.Add
 0065F809    mov         ecx,0F
 0065F80E    mov         edx,667894;'Turntable.WiimotePlus'
 0065F813    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F816    call        THashTable.Add
 0065F81B    mov         ecx,1
 0065F820    mov         edx,6678CC;'Turntable.Leds'
 0065F825    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F828    call        THashTable.Add
 0065F82D    mov         ecx,13
 0065F832    mov         edx,6678F8;'Turntable.Led1'
 0065F837    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F83A    call        THashTable.Add
 0065F83F    mov         ecx,14
 0065F844    mov         edx,667924;'Turntable.Led2'
 0065F849    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F84C    call        THashTable.Add
 0065F851    mov         ecx,15
 0065F856    mov         edx,667950;'Turntable.Led3'
 0065F85B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F85E    call        THashTable.Add
 0065F863    mov         ecx,16
 0065F868    mov         edx,66797C;'Turntable.Led4'
 0065F86D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F870    call        THashTable.Add
 0065F875    mov         ecx,3A8
 0065F87A    mov         edx,6679A8;'Turntable.LedPlayer'
 0065F87F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F882    call        THashTable.Add
 0065F887    mov         ecx,4B
 0065F88C    mov         edx,6679DC;'Turntable.Battery'
 0065F891    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F894    call        THashTable.Add
 0065F899    mov         ecx,6F
 0065F89E    mov         edx,667A0C;'Turntable.Speaker'
 0065F8A3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F8A6    call        THashTable.Add
 0065F8AB    mov         ecx,70
 0065F8B0    mov         edx,667A3C;'Turntable.Mute'
 0065F8B5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F8B8    call        THashTable.Add
 0065F8BD    mov         ecx,71
 0065F8C2    mov         edx,667A68;'Turntable.SampleRate'
 0065F8C7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F8CA    call        THashTable.Add
 0065F8CF    mov         ecx,72
 0065F8D4    mov         edx,667AA0;'Turntable.Volume'
 0065F8D9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F8DC    call        THashTable.Add
 0065F8E1    mov         ecx,73
 0065F8E6    mov         edx,667AD0;'Turntable.Frequency'
 0065F8EB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F8EE    call        THashTable.Add
 0065F8F3    mov         ecx,73
 0065F8F8    mov         edx,667B04;'Turntable.Freq'
 0065F8FD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F900    call        THashTable.Add
 0065F905    mov         ecx,2
 0065F90A    mov         edx,667B30;'Turntable.Rumble'
 0065F90F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F912    call        THashTable.Add
 0065F917    mov         ecx,22B
 0065F91C    mov         edx,667B60;'BalanceBoard.Weight'
 0065F921    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F924    call        THashTable.Add
 0065F929    mov         ecx,22C
 0065F92E    mov         edx,667B94;'BalanceBoard.FrontLeft'
 0065F933    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F936    call        THashTable.Add
 0065F93B    mov         ecx,22D
 0065F940    mov         edx,667BD0;'BalanceBoard.FrontRight'
 0065F945    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F948    call        THashTable.Add
 0065F94D    mov         ecx,22E
 0065F952    mov         edx,667C0C;'BalanceBoard.BackLeft'
 0065F957    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F95A    call        THashTable.Add
 0065F95F    mov         ecx,22F
 0065F964    mov         edx,667C44;'BalanceBoard.BackRight'
 0065F969    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F96C    call        THashTable.Add
 0065F971    mov         ecx,227
 0065F976    mov         edx,667C80;'BalanceBoard.RawFrontLeft'
 0065F97B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F97E    call        THashTable.Add
 0065F983    mov         ecx,228
 0065F988    mov         edx,667CC0;'BalanceBoard.RawFrontRight'
 0065F98D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F990    call        THashTable.Add
 0065F995    mov         ecx,229
 0065F99A    mov         edx,667D04;'BalanceBoard.RawBackLeft'
 0065F99F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F9A2    call        THashTable.Add
 0065F9A7    mov         ecx,22A
 0065F9AC    mov         edx,667D44;'BalanceBoard.RawBackRight'
 0065F9B1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F9B4    call        THashTable.Add
 0065F9B9    mov         ecx,232
 0065F9BE    mov         edx,667D84;'BalanceBoard.WeightLeft'
 0065F9C3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F9C6    call        THashTable.Add
 0065F9CB    mov         ecx,233
 0065F9D0    mov         edx,667DC0;'BalanceBoard.WeightRight'
 0065F9D5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F9D8    call        THashTable.Add
 0065F9DD    mov         ecx,234
 0065F9E2    mov         edx,667E00;'BalanceBoard.WeightFront'
 0065F9E7    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F9EA    call        THashTable.Add
 0065F9EF    mov         ecx,235
 0065F9F4    mov         edx,667E40;'BalanceBoard.WeightBack'
 0065F9F9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065F9FC    call        THashTable.Add
 0065FA01    mov         ecx,230
 0065FA06    mov         edx,667E7C;'BalanceBoard.EE'
 0065FA0B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FA0E    call        THashTable.Add
 0065FA13    mov         ecx,231
 0065FA18    mov         edx,667EA8;'BalanceBoard.QuestionQuestion'
 0065FA1D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FA20    call        THashTable.Add
 0065FA25    mov         ecx,236
 0065FA2A    mov         edx,667EF0;'BalanceBoard.JoyX'
 0065FA2F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FA32    call        THashTable.Add
 0065FA37    mov         ecx,237
 0065FA3C    mov         edx,667F20;'BalanceBoard.JoyY'
 0065FA41    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FA44    call        THashTable.Add
 0065FA49    mov         ecx,238
 0065FA4E    mov         edx,667F50;'BalanceBoard.Joy'
 0065FA53    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FA56    call        THashTable.Add
 0065FA5B    mov         ecx,13
 0065FA60    mov         edx,667F80;'BalanceBoard.LED'
 0065FA65    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FA68    call        THashTable.Add
 0065FA6D    mov         ecx,0B
 0065FA72    mov         edx,667FB0;'BalanceBoard.Button'
 0065FA77    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FA7A    call        THashTable.Add
 0065FA7F    mov         ecx,239
 0065FA84    mov         edx,667FE4;'BalanceBoard.CalibFrontLeftMin'
 0065FA89    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FA8C    call        THashTable.Add
 0065FA91    mov         ecx,23C
 0065FA96    mov         edx,668030;'BalanceBoard.CalibFrontRightMin'
 0065FA9B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FA9E    call        THashTable.Add
 0065FAA3    mov         ecx,23F
 0065FAA8    mov         edx,66807C;'BalanceBoard.CalibBackLeftMin'
 0065FAAD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FAB0    call        THashTable.Add
 0065FAB5    mov         ecx,242
 0065FABA    mov         edx,6680C4;'BalanceBoard.CalibBackRightMin'
 0065FABF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FAC2    call        THashTable.Add
 0065FAC7    mov         ecx,23A
 0065FACC    mov         edx,668110;'BalanceBoard.CalibFrontLeftMid'
 0065FAD1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FAD4    call        THashTable.Add
 0065FAD9    mov         ecx,23D
 0065FADE    mov         edx,66815C;'BalanceBoard.CalibFrontRightMid'
 0065FAE3    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FAE6    call        THashTable.Add
 0065FAEB    mov         ecx,240
 0065FAF0    mov         edx,6681A8;'BalanceBoard.CalibBackLeftMid'
 0065FAF5    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FAF8    call        THashTable.Add
 0065FAFD    mov         ecx,243
 0065FB02    mov         edx,6681F0;'BalanceBoard.CalibBackRightMid'
 0065FB07    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FB0A    call        THashTable.Add
 0065FB0F    mov         ecx,23B
 0065FB14    mov         edx,66823C;'BalanceBoard.CalibFrontLeftMax'
 0065FB19    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FB1C    call        THashTable.Add
 0065FB21    mov         ecx,23E
 0065FB26    mov         edx,668288;'BalanceBoard.CalibFrontRightMax'
 0065FB2B    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FB2E    call        THashTable.Add
 0065FB33    mov         ecx,241
 0065FB38    mov         edx,6682D4;'BalanceBoard.CalibBackLeftMax'
 0065FB3D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FB40    call        THashTable.Add
 0065FB45    mov         ecx,244
 0065FB4A    mov         edx,66831C;'BalanceBoard.CalibBackRightMax'
 0065FB4F    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FB52    call        THashTable.Add
 0065FB57    mov         ecx,245
 0065FB5C    mov         edx,668368;'BalanceBoard.CalibPre'
 0065FB61    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FB64    call        THashTable.Add
 0065FB69    mov         ecx,246
 0065FB6E    mov         edx,6683A0;'BalanceBoard.CalibPreZero'
 0065FB73    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FB76    call        THashTable.Add
 0065FB7B    mov         ecx,247
 0065FB80    mov         edx,6683E0;'BalanceBoard.CalibPost1'
 0065FB85    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FB88    call        THashTable.Add
 0065FB8D    mov         ecx,248
 0065FB92    mov         edx,66841C;'BalanceBoard.CalibPost2'
 0065FB97    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FB9A    call        THashTable.Add
 0065FB9F    mov         ecx,6F
 0065FBA4    mov         edx,668458;'Speaker'
 0065FBA9    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FBAC    call        THashTable.Add
 0065FBB1    mov         ecx,70
 0065FBB6    mov         edx,668474;'Mute'
 0065FBBB    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FBBE    call        THashTable.Add
 0065FBC3    mov         ecx,71
 0065FBC8    mov         edx,66848C;'SampleRate'
 0065FBCD    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FBD0    call        THashTable.Add
 0065FBD5    mov         ecx,72
 0065FBDA    mov         edx,6684B0;'Volume'
 0065FBDF    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FBE2    call        THashTable.Add
 0065FBE7    mov         ecx,73
 0065FBEC    mov         edx,6684CC;'Frequency'
 0065FBF1    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FBF4    call        THashTable.Add
 0065FBF9    mov         ecx,73
 0065FBFE    mov         edx,6684EC;'Freq'
 0065FC03    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FC06    call        THashTable.Add
 0065FC0B    xor         esi,esi
 0065FC0D    lea         ecx,[ebp-58]
 0065FC10    mov         edx,2
 0065FC15    mov         eax,esi
 0065FC17    call        IntToHex
 0065FC1C    mov         ecx,dword ptr [ebp-58]
 0065FC1F    lea         eax,[ebp-54]
 0065FC22    mov         edx,668504;'MotionPlus.Calib'
 0065FC27    call        @UStrCat3
 0065FC2C    mov         edx,dword ptr [ebp-54]
 0065FC2F    lea         ecx,[esi+33C]
 0065FC35    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FC38    call        THashTable.Add
 0065FC3D    inc         esi
 0065FC3E    cmp         esi,20
>0065FC41    jne         0065FC0D
 0065FC43    xor         esi,esi
 0065FC45    lea         ecx,[ebp-60]
 0065FC48    mov         edx,2
 0065FC4D    mov         eax,esi
 0065FC4F    call        IntToHex
 0065FC54    mov         ecx,dword ptr [ebp-60]
 0065FC57    lea         eax,[ebp-5C]
 0065FC5A    mov         edx,668534;'MotionPlus.Data'
 0065FC5F    call        @UStrCat3
 0065FC64    mov         edx,dword ptr [ebp-5C]
 0065FC67    lea         ecx,[esi+2BC]
 0065FC6D    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FC70    call        THashTable.Add
 0065FC75    inc         esi
 0065FC76    cmp         esi,80
>0065FC7C    jne         0065FC45
 0065FC7E    mov         ecx,35D
 0065FC83    mov         edx,668560;'MotionPlus.Flags'
 0065FC88    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FC8B    call        THashTable.Add
 0065FC90    mov         ecx,35E
 0065FC95    mov         edx,668590;'MotionPlus.RawGyroYaw'
 0065FC9A    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FC9D    call        THashTable.Add
 0065FCA2    mov         ecx,360
 0065FCA7    mov         edx,6685C8;'MotionPlus.RawGyroPitch'
 0065FCAC    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FCAF    call        THashTable.Add
 0065FCB4    mov         ecx,35F
 0065FCB9    mov         edx,668604;'MotionPlus.RawGyroRoll'
 0065FCBE    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FCC1    call        THashTable.Add
 0065FCC6    mov         ecx,361
 0065FCCB    mov         edx,668640;'MotionPlus.RawYawSpeed'
 0065FCD0    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FCD3    call        THashTable.Add
 0065FCD8    mov         ecx,362
 0065FCDD    mov         edx,66867C;'MotionPlus.RawPitchSpeed'
 0065FCE2    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FCE5    call        THashTable.Add
 0065FCEA    mov         ecx,363
 0065FCEF    mov         edx,6686BC;'MotionPlus.RawRollSpeed'
 0065FCF4    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FCF7    call        THashTable.Add
 0065FCFC    mov         ecx,364
 0065FD01    mov         edx,6686F8;'MotionPlus.YawSpeed'
 0065FD06    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FD09    call        THashTable.Add
 0065FD0E    mov         ecx,365
 0065FD13    mov         edx,66872C;'MotionPlus.PitchSpeed'
 0065FD18    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FD1B    call        THashTable.Add
 0065FD20    mov         ecx,366
 0065FD25    mov         edx,668764;'MotionPlus.RollSpeed'
 0065FD2A    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FD2D    call        THashTable.Add
 0065FD32    mov         ecx,36E
 0065FD37    mov         edx,66879C;'FastYaw'
 0065FD3C    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FD3F    call        THashTable.Add
 0065FD44    mov         ecx,36F
 0065FD49    mov         edx,6687B8;'FastPitch'
 0065FD4E    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FD51    call        THashTable.Add
 0065FD56    mov         ecx,370
 0065FD5B    mov         edx,6687D8;'FastRoll'
 0065FD60    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FD63    call        THashTable.Add
 0065FD68    mov         ecx,371
 0065FD6D    mov         edx,6687F8;'MotionPlusHasExpansion'
 0065FD72    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FD75    call        THashTable.Add
 0065FD7A    mov         ecx,364
 0065FD7F    mov         edx,668834;'YawSpeed'
 0065FD84    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FD87    call        THashTable.Add
 0065FD8C    mov         ecx,365
 0065FD91    mov         edx,668854;'PitchSpeed'
 0065FD96    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FD99    call        THashTable.Add
 0065FD9E    mov         ecx,366
 0065FDA3    mov         edx,668878;'RollSpeed'
 0065FDA8    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FDAB    call        THashTable.Add
 0065FDB0    mov         ecx,367
 0065FDB5    mov         edx,668898;'MotionPlus.GyroYaw'
 0065FDBA    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FDBD    call        THashTable.Add
 0065FDC2    mov         ecx,368
 0065FDC7    mov         edx,6688CC;'MotionPlus.GyroPitch'
 0065FDCC    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FDCF    call        THashTable.Add
 0065FDD4    mov         ecx,369
 0065FDD9    mov         edx,668904;'MotionPlus.GyroRoll'
 0065FDDE    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FDE1    call        THashTable.Add
 0065FDE6    mov         ecx,367
 0065FDEB    mov         edx,668938;'GyroYaw'
 0065FDF0    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FDF3    call        THashTable.Add
 0065FDF8    mov         ecx,368
 0065FDFD    mov         edx,668954;'GyroPitch'
 0065FE02    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FE05    call        THashTable.Add
 0065FE0A    mov         ecx,369
 0065FE0F    mov         edx,668974;'GyroRoll'
 0065FE14    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FE17    call        THashTable.Add
 0065FE1C    mov         ecx,36A
 0065FE21    mov         edx,668994;'MotionPlus.RawGyroZeroYaw'
 0065FE26    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FE29    call        THashTable.Add
 0065FE2E    mov         ecx,36B
 0065FE33    mov         edx,6689D4;'MotionPlus.RawGyroZeroPitch'
 0065FE38    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FE3B    call        THashTable.Add
 0065FE40    mov         ecx,36C
 0065FE45    mov         edx,668A18;'MotionPlus.RawGyroZeroRoll'
 0065FE4A    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FE4D    call        THashTable.Add
 0065FE52    mov         ecx,36D
 0065FE57    mov         edx,668A5C;'MotionPlus.DegPerGyro'
 0065FE5C    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FE5F    call        THashTable.Add
 0065FE64    mov         ecx,77
 0065FE69    mov         edx,668A94;'SensorBarDots'
 0065FE6E    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FE71    call        THashTable.Add
 0065FE76    mov         ecx,78
 0065FE7B    mov         edx,668ABC;'SensorBarSeparation'
 0065FE80    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FE83    call        THashTable.Add
 0065FE88    mov         ecx,78
 0065FE8D    mov         edx,668AF0;'SensorBarSeperation'
 0065FE92    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FE95    call        THashTable.Add
 0065FE9A    mov         ecx,79
 0065FE9F    mov         edx,668B24;'SensorBarDistance'
 0065FEA4    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FEA7    call        THashTable.Add
 0065FEAC    mov         ecx,373
 0065FEB1    mov         edx,668B54;'TrackingState'
 0065FEB6    mov         eax,dword ptr [ebx+1C];TModuleWiimote.Fields:THashTable
 0065FEB9    call        THashTable.Add
 0065FEBE    xor         eax,eax
 0065FEC0    pop         edx
 0065FEC1    pop         ecx
 0065FEC2    pop         ecx
 0065FEC3    mov         dword ptr fs:[eax],edx
 0065FEC6    push        65FEE0
 0065FECB    lea         eax,[ebp-60]
 0065FECE    mov         edx,18
 0065FED3    call        @UStrArrayClr
 0065FED8    ret
>0065FED9    jmp         @HandleFinally
>0065FEDE    jmp         0065FECB
 0065FEE0    pop         edi
 0065FEE1    pop         esi
 0065FEE2    pop         ebx
 0065FEE3    mov         esp,ebp
 0065FEE5    pop         ebp
 0065FEE6    ret
*}
end;

//00668B70
procedure TModuleWiimote.ClearRead;
begin
{*
 00668B70    mov         byte ptr ds:[81ECBC],0;gvar_0081ECBC
 00668B77    ret
*}
end;

//00668B78
constructor TModuleWiimote.Create;
begin
{*
 00668B78    push        ebx
 00668B79    push        esi
 00668B7A    test        dl,dl
>00668B7C    je          00668B86
 00668B7E    add         esp,0FFFFFFF0
 00668B81    call        @ClassCreate
 00668B86    mov         ebx,edx
 00668B88    mov         esi,eax
 00668B8A    push        668BD4;'WiiRemote'
 00668B8F    push        668BF4;'WiimoteX'
 00668B94    push        0
 00668B96    push        0
 00668B98    mov         ecx,668C14;'Wiimote'
 00668B9D    xor         edx,edx
 00668B9F    mov         eax,esi
 00668BA1    call        005E4830
 00668BA6    mov         dword ptr [esi+20],460;TModuleWiimote.MaxFieldNumber:Integer
 00668BAD    mov         eax,esi
 00668BAF    test        bl,bl
>00668BB1    je          00668BC2
 00668BB3    call        @AfterConstruction
 00668BB8    pop         dword ptr fs:[0]
 00668BBF    add         esp,0C
 00668BC2    mov         eax,esi
 00668BC4    pop         esi
 00668BC5    pop         ebx
 00668BC6    ret
*}
end;

//00668C24
function TModuleWiimote.CreateValue(Identifier:string):TExpression;
begin
{*
 00668C24    push        ebp
 00668C25    mov         ebp,esp
 00668C27    push        ecx
 00668C28    push        ebx
 00668C29    mov         dword ptr [ebp-4],edx
 00668C2C    mov         ebx,eax
 00668C2E    mov         eax,dword ptr [ebp-4]
 00668C31    call        @UStrAddRef
 00668C36    xor         eax,eax
 00668C38    push        ebp
 00668C39    push        668C6E
 00668C3E    push        dword ptr fs:[eax]
 00668C41    mov         dword ptr fs:[eax],esp
 00668C44    mov         edx,dword ptr [ebp-4]
 00668C47    mov         eax,ebx
 00668C49    call        TPieModule.CreateValue
 00668C4E    mov         eax,dword ptr [ebp-4]
 00668C51    call        00654EA8
 00668C56    mov         ebx,eax
 00668C58    xor         eax,eax
 00668C5A    pop         edx
 00668C5B    pop         ecx
 00668C5C    pop         ecx
 00668C5D    mov         dword ptr fs:[eax],edx
 00668C60    push        668C75
 00668C65    lea         eax,[ebp-4]
 00668C68    call        @UStrClr
 00668C6D    ret
>00668C6E    jmp         @HandleFinally
>00668C73    jmp         00668C65
 00668C75    mov         eax,ebx
 00668C77    pop         ebx
 00668C78    pop         ecx
 00668C79    pop         ebp
 00668C7A    ret
*}
end;

//00668C7C
procedure TModuleWiimote.GetGoodFields;
begin
{*
 00668C7C    call        00651BD0
 00668C81    ret
*}
end;

//00668C84
procedure TModuleWiimote.GetRange(blank:Boolean; min:Integer; max:Integer);
begin
{*
 00668C84    push        ebp
 00668C85    mov         ebp,esp
 00668C87    mov         byte ptr [edx],1
 00668C8A    mov         dword ptr [ecx],1
 00668C90    mov         eax,dword ptr [ebp+8]
 00668C93    mov         dword ptr [eax],14
 00668C99    pop         ebp
 00668C9A    ret         4
*}
end;

//00668CA0
procedure TModuleWiimote.MonitorFrame;
begin
{*
 00668CA0    push        ebp
 00668CA1    mov         ebp,esp
 00668CA3    mov         ecx,37
 00668CA8    push        0
 00668CAA    push        0
 00668CAC    dec         ecx
>00668CAD    jne         00668CA8
 00668CAF    push        ecx
 00668CB0    push        ebx
 00668CB1    push        esi
 00668CB2    push        edi
 00668CB3    mov         esi,eax
 00668CB5    xor         eax,eax
 00668CB7    push        ebp
 00668CB8    push        669EBD
 00668CBD    push        dword ptr fs:[eax]
 00668CC0    mov         dword ptr fs:[eax],esp
 00668CC3    cmp         byte ptr [esi+28],0;TModuleWiimote.Monitoring:Boolean
>00668CC7    je          00669E8A
 00668CCD    mov         eax,esi
 00668CCF    mov         edx,dword ptr [eax]
 00668CD1    call        dword ptr [edx+3C];TModuleWiimote.Read
 00668CD4    test        al,al
>00668CD6    je          00669E8A
 00668CDC    call        0074BF10
 00668CE1    mov         eax,dword ptr [eax+4C]
 00668CE4    mov         eax,dword ptr [eax+8]
 00668CE7    dec         eax
 00668CE8    test        eax,eax
>00668CEA    jl          00669E83
 00668CF0    inc         eax
 00668CF1    mov         dword ptr [ebp-8],eax
 00668CF4    xor         edi,edi
 00668CF6    call        0074BF10
 00668CFB    mov         ebx,dword ptr [eax+4C]
 00668CFE    mov         edx,edi
 00668D00    mov         eax,ebx
 00668D02    call        TList.Get
 00668D07    mov         ebx,eax
 00668D09    test        ebx,ebx
>00668D0B    je          00669E79
 00668D11    test        edi,edi
>00668D13    jne         00668D24
 00668D15    lea         eax,[ebp-4]
 00668D18    mov         edx,669ED8;'Wiimote.'
 00668D1D    call        @UStrLAsg
>00668D22    jmp         00668D49
 00668D24    push        669EF8;'Wiimote'
 00668D29    lea         edx,[ebp-0C]
 00668D2C    lea         eax,[edi+1]
 00668D2F    call        IntToStr
 00668D34    push        dword ptr [ebp-0C]
 00668D37    push        669F14;'.'
 00668D3C    lea         eax,[ebp-4]
 00668D3F    mov         edx,3
 00668D44    call        @UStrCatN
 00668D49    mov         eax,ebx
 00668D4B    call        TWiimoteObject.A
 00668D50    test        al,al
>00668D52    je          00668D6E
 00668D54    lea         eax,[ebp-10]
 00668D57    mov         ecx,669F24;'A'
 00668D5C    mov         edx,dword ptr [ebp-4]
 00668D5F    call        @UStrCat3
 00668D64    mov         edx,dword ptr [ebp-10]
 00668D67    mov         eax,esi
 00668D69    call        005E4F20
 00668D6E    mov         eax,ebx
 00668D70    call        TWiimoteObject.B
 00668D75    test        al,al
>00668D77    je          00668D93
 00668D79    lea         eax,[ebp-14]
 00668D7C    mov         ecx,669F34;'B'
 00668D81    mov         edx,dword ptr [ebp-4]
 00668D84    call        @UStrCat3
 00668D89    mov         edx,dword ptr [ebp-14]
 00668D8C    mov         eax,esi
 00668D8E    call        005E4F20
 00668D93    mov         eax,ebx
 00668D95    call        TWiimoteObject.Minus
 00668D9A    test        al,al
>00668D9C    je          00668DB8
 00668D9E    lea         eax,[ebp-18]
 00668DA1    mov         ecx,669F44;'Minus'
 00668DA6    mov         edx,dword ptr [ebp-4]
 00668DA9    call        @UStrCat3
 00668DAE    mov         edx,dword ptr [ebp-18]
 00668DB1    mov         eax,esi
 00668DB3    call        005E4F20
 00668DB8    mov         eax,ebx
 00668DBA    call        TWiimoteObject.HOME
 00668DBF    test        al,al
>00668DC1    je          00668DDD
 00668DC3    lea         eax,[ebp-1C]
 00668DC6    mov         ecx,669F5C;'Home'
 00668DCB    mov         edx,dword ptr [ebp-4]
 00668DCE    call        @UStrCat3
 00668DD3    mov         edx,dword ptr [ebp-1C]
 00668DD6    mov         eax,esi
 00668DD8    call        005E4F20
 00668DDD    mov         eax,ebx
 00668DDF    call        TWiimoteObject.Plus
 00668DE4    test        al,al
>00668DE6    je          00668E02
 00668DE8    lea         eax,[ebp-20]
 00668DEB    mov         ecx,669F74;'Plus'
 00668DF0    mov         edx,dword ptr [ebp-4]
 00668DF3    call        @UStrCat3
 00668DF8    mov         edx,dword ptr [ebp-20]
 00668DFB    mov         eax,esi
 00668DFD    call        005E4F20
 00668E02    mov         eax,ebx
 00668E04    call        TWiimoteObject.One
 00668E09    test        al,al
>00668E0B    je          00668E27
 00668E0D    lea         eax,[ebp-24]
 00668E10    mov         ecx,669F8C;'One'
 00668E15    mov         edx,dword ptr [ebp-4]
 00668E18    call        @UStrCat3
 00668E1D    mov         edx,dword ptr [ebp-24]
 00668E20    mov         eax,esi
 00668E22    call        005E4F20
 00668E27    mov         eax,ebx
 00668E29    call        TWiimoteObject.Two
 00668E2E    test        al,al
>00668E30    je          00668E4C
 00668E32    lea         eax,[ebp-28]
 00668E35    mov         ecx,669FA0;'Two'
 00668E3A    mov         edx,dword ptr [ebp-4]
 00668E3D    call        @UStrCat3
 00668E42    mov         edx,dword ptr [ebp-28]
 00668E45    mov         eax,esi
 00668E47    call        005E4F20
 00668E4C    mov         eax,ebx
 00668E4E    call        TWiimoteObject.Up
 00668E53    test        al,al
>00668E55    je          00668E71
 00668E57    lea         eax,[ebp-2C]
 00668E5A    mov         ecx,669FB4;'Up'
 00668E5F    mov         edx,dword ptr [ebp-4]
 00668E62    call        @UStrCat3
 00668E67    mov         edx,dword ptr [ebp-2C]
 00668E6A    mov         eax,esi
 00668E6C    call        005E4F20
 00668E71    mov         eax,ebx
 00668E73    call        TWiimoteObject.Down
 00668E78    test        al,al
>00668E7A    je          00668E96
 00668E7C    lea         eax,[ebp-30]
 00668E7F    mov         ecx,669FC8;'Down'
 00668E84    mov         edx,dword ptr [ebp-4]
 00668E87    call        @UStrCat3
 00668E8C    mov         edx,dword ptr [ebp-30]
 00668E8F    mov         eax,esi
 00668E91    call        005E4F20
 00668E96    mov         eax,ebx
 00668E98    call        TWiimoteObject.Left
 00668E9D    test        al,al
>00668E9F    je          00668EBB
 00668EA1    lea         eax,[ebp-34]
 00668EA4    mov         ecx,669FE0;'Left'
 00668EA9    mov         edx,dword ptr [ebp-4]
 00668EAC    call        @UStrCat3
 00668EB1    mov         edx,dword ptr [ebp-34]
 00668EB4    mov         eax,esi
 00668EB6    call        005E4F20
 00668EBB    mov         eax,ebx
 00668EBD    call        TWiimoteObject.Right
 00668EC2    test        al,al
>00668EC4    je          00668EE0
 00668EC6    lea         eax,[ebp-38]
 00668EC9    mov         ecx,669FF8;'Right'
 00668ECE    mov         edx,dword ptr [ebp-4]
 00668ED1    call        @UStrCat3
 00668ED6    mov         edx,dword ptr [ebp-38]
 00668ED9    mov         eax,esi
 00668EDB    call        005E4F20
 00668EE0    cmp         byte ptr [ebx+41E],0
>00668EE7    je          00668EF3
 00668EE9    mov         edx,dword ptr [ebp-4]
 00668EEC    mov         eax,esi
 00668EEE    call        005E5190
 00668EF3    movzx       eax,byte ptr [ebx+42D]
 00668EFA    cmp         eax,46
>00668EFD    ja          006699D4
 00668F03    jmp         dword ptr [eax*4+668F0A]
 00668F03    dd          006699F4
 00668F03    dd          0066902B
 00668F03    dd          0066904A
 00668F03    dd          00669069
 00668F03    dd          00669088
 00668F03    dd          006690A7
 00668F03    dd          006692A3
 00668F03    dd          006692C8
 00668F03    dd          006692ED
 00668F03    dd          00669312
 00668F03    dd          00669337
 00668F03    dd          0066935C
 00668F03    dd          00669381
 00668F03    dd          006693A6
 00668F03    dd          006693CB
 00668F03    dd          006693F0
 00668F03    dd          00669415
 00668F03    dd          0066943A
 00668F03    dd          006690C6
 00668F03    dd          006690E5
 00668F03    dd          00669104
 00668F03    dd          00669123
 00668F03    dd          00669142
 00668F03    dd          0066945F
 00668F03    dd          00669484
 00668F03    dd          006694A9
 00668F03    dd          006694CE
 00668F03    dd          006694F3
 00668F03    dd          00669518
 00668F03    dd          0066953D
 00668F03    dd          00669562
 00668F03    dd          00669587
 00668F03    dd          006695AC
 00668F03    dd          006695D1
 00668F03    dd          006695F6
 00668F03    dd          00669161
 00668F03    dd          00669180
 00668F03    dd          0066919F
 00668F03    dd          006691BE
 00668F03    dd          006691DD
 00668F03    dd          0066961B
 00668F03    dd          00669640
 00668F03    dd          00669665
 00668F03    dd          0066968A
 00668F03    dd          006696AF
 00668F03    dd          006696D4
 00668F03    dd          006696F9
 00668F03    dd          0066971E
 00668F03    dd          00669743
 00668F03    dd          00669768
 00668F03    dd          0066978D
 00668F03    dd          006697B2
 00668F03    dd          006691FC
 00668F03    dd          0066921B
 00668F03    dd          0066923A
 00668F03    dd          00669259
 00668F03    dd          0066927E
 00668F03    dd          006697D7
 00668F03    dd          006697FC
 00668F03    dd          00669821
 00668F03    dd          00669846
 00668F03    dd          0066986B
 00668F03    dd          00669890
 00668F03    dd          006698B5
 00668F03    dd          006698DA
 00668F03    dd          006698FF
 00668F03    dd          00669924
 00668F03    dd          00669949
 00668F03    dd          0066996E
 00668F03    dd          00669990
 00668F03    dd          006699B2
>00669026    jmp         006699F4
 0066902B    lea         eax,[ebp-3C]
 0066902E    mov         ecx,66A010;'SwingDownStop'
 00669033    mov         edx,dword ptr [ebp-4]
 00669036    call        @UStrCat3
 0066903B    mov         edx,dword ptr [ebp-3C]
 0066903E    mov         eax,esi
 00669040    call        005E51D8
>00669045    jmp         006699F4
 0066904A    lea         eax,[ebp-40]
 0066904D    mov         ecx,66A038;'SwingDownUpStop'
 00669052    mov         edx,dword ptr [ebp-4]
 00669055    call        @UStrCat3
 0066905A    mov         edx,dword ptr [ebp-40]
 0066905D    mov         eax,esi
 0066905F    call        005E51D8
>00669064    jmp         006699F4
 00669069    lea         eax,[ebp-44]
 0066906C    mov         ecx,66A064;'SwingDownUpDownStop'
 00669071    mov         edx,dword ptr [ebp-4]
 00669074    call        @UStrCat3
 00669079    mov         edx,dword ptr [ebp-44]
 0066907C    mov         eax,esi
 0066907E    call        005E51D8
>00669083    jmp         006699F4
 00669088    lea         eax,[ebp-48]
 0066908B    mov         ecx,66A098;'SwingDownUpDownUpStop'
 00669090    mov         edx,dword ptr [ebp-4]
 00669093    call        @UStrCat3
 00669098    mov         edx,dword ptr [ebp-48]
 0066909B    mov         eax,esi
 0066909D    call        005E51D8
>006690A2    jmp         006699F4
 006690A7    lea         eax,[ebp-4C]
 006690AA    mov         ecx,66A0D0;'SwingDownUpDownUpDownStop'
 006690AF    mov         edx,dword ptr [ebp-4]
 006690B2    call        @UStrCat3
 006690B7    mov         edx,dword ptr [ebp-4C]
 006690BA    mov         eax,esi
 006690BC    call        005E51D8
>006690C1    jmp         006699F4
 006690C6    lea         eax,[ebp-50]
 006690C9    mov         ecx,66A110;'SwingUpStop'
 006690CE    mov         edx,dword ptr [ebp-4]
 006690D1    call        @UStrCat3
 006690D6    mov         edx,dword ptr [ebp-50]
 006690D9    mov         eax,esi
 006690DB    call        005E51D8
>006690E0    jmp         006699F4
 006690E5    lea         eax,[ebp-54]
 006690E8    mov         ecx,66A134;'SwingUpDownStop'
 006690ED    mov         edx,dword ptr [ebp-4]
 006690F0    call        @UStrCat3
 006690F5    mov         edx,dword ptr [ebp-54]
 006690F8    mov         eax,esi
 006690FA    call        005E51D8
>006690FF    jmp         006699F4
 00669104    lea         eax,[ebp-58]
 00669107    mov         ecx,66A160;'SwingUpDownUpStop'
 0066910C    mov         edx,dword ptr [ebp-4]
 0066910F    call        @UStrCat3
 00669114    mov         edx,dword ptr [ebp-58]
 00669117    mov         eax,esi
 00669119    call        005E51D8
>0066911E    jmp         006699F4
 00669123    lea         eax,[ebp-5C]
 00669126    mov         ecx,66A190;'SwingUpDownUpDownStop'
 0066912B    mov         edx,dword ptr [ebp-4]
 0066912E    call        @UStrCat3
 00669133    mov         edx,dword ptr [ebp-5C]
 00669136    mov         eax,esi
 00669138    call        005E51D8
>0066913D    jmp         006699F4
 00669142    lea         eax,[ebp-60]
 00669145    mov         ecx,66A1C8;'SwingUpDownUpDownUpStop'
 0066914A    mov         edx,dword ptr [ebp-4]
 0066914D    call        @UStrCat3
 00669152    mov         edx,dword ptr [ebp-60]
 00669155    mov         eax,esi
 00669157    call        005E51D8
>0066915C    jmp         006699F4
 00669161    lea         eax,[ebp-64]
 00669164    mov         ecx,66A204;'SwingLeftStop'
 00669169    mov         edx,dword ptr [ebp-4]
 0066916C    call        @UStrCat3
 00669171    mov         edx,dword ptr [ebp-64]
 00669174    mov         eax,esi
 00669176    call        005E51D8
>0066917B    jmp         006699F4
 00669180    lea         eax,[ebp-68]
 00669183    mov         ecx,66A22C;'SwingLeftRightStop'
 00669188    mov         edx,dword ptr [ebp-4]
 0066918B    call        @UStrCat3
 00669190    mov         edx,dword ptr [ebp-68]
 00669193    mov         eax,esi
 00669195    call        005E51D8
>0066919A    jmp         006699F4
 0066919F    lea         eax,[ebp-6C]
 006691A2    mov         ecx,66A260;'SwingLeftRightLeftStop'
 006691A7    mov         edx,dword ptr [ebp-4]
 006691AA    call        @UStrCat3
 006691AF    mov         edx,dword ptr [ebp-6C]
 006691B2    mov         eax,esi
 006691B4    call        005E51D8
>006691B9    jmp         006699F4
 006691BE    lea         eax,[ebp-70]
 006691C1    mov         ecx,66A29C;'SwingLeftRightLeftRightStop'
 006691C6    mov         edx,dword ptr [ebp-4]
 006691C9    call        @UStrCat3
 006691CE    mov         edx,dword ptr [ebp-70]
 006691D1    mov         eax,esi
 006691D3    call        005E51D8
>006691D8    jmp         006699F4
 006691DD    lea         eax,[ebp-74]
 006691E0    mov         ecx,66A2E0;'SwingLeftRightLeftRightLeftStop'
 006691E5    mov         edx,dword ptr [ebp-4]
 006691E8    call        @UStrCat3
 006691ED    mov         edx,dword ptr [ebp-74]
 006691F0    mov         eax,esi
 006691F2    call        005E51D8
>006691F7    jmp         006699F4
 006691FC    lea         eax,[ebp-78]
 006691FF    mov         ecx,66A32C;'SwingRightStop'
 00669204    mov         edx,dword ptr [ebp-4]
 00669207    call        @UStrCat3
 0066920C    mov         edx,dword ptr [ebp-78]
 0066920F    mov         eax,esi
 00669211    call        005E51D8
>00669216    jmp         006699F4
 0066921B    lea         eax,[ebp-7C]
 0066921E    mov         ecx,66A358;'SwingRightLeftStop'
 00669223    mov         edx,dword ptr [ebp-4]
 00669226    call        @UStrCat3
 0066922B    mov         edx,dword ptr [ebp-7C]
 0066922E    mov         eax,esi
 00669230    call        005E51D8
>00669235    jmp         006699F4
 0066923A    lea         eax,[ebp-80]
 0066923D    mov         ecx,66A38C;'SwingRightLeftRightStop'
 00669242    mov         edx,dword ptr [ebp-4]
 00669245    call        @UStrCat3
 0066924A    mov         edx,dword ptr [ebp-80]
 0066924D    mov         eax,esi
 0066924F    call        005E51D8
>00669254    jmp         006699F4
 00669259    lea         eax,[ebp-84]
 0066925F    mov         ecx,66A3C8;'SwingRightLeftRightLeftStop'
 00669264    mov         edx,dword ptr [ebp-4]
 00669267    call        @UStrCat3
 0066926C    mov         edx,dword ptr [ebp-84]
 00669272    mov         eax,esi
 00669274    call        005E51D8
>00669279    jmp         006699F4
 0066927E    lea         eax,[ebp-88]
 00669284    mov         ecx,66A40C;'SwingRightLeftRightLeftRightStop'
 00669289    mov         edx,dword ptr [ebp-4]
 0066928C    call        @UStrCat3
 00669291    mov         edx,dword ptr [ebp-88]
 00669297    mov         eax,esi
 00669299    call        005E51D8
>0066929E    jmp         006699F4
 006692A3    lea         eax,[ebp-8C]
 006692A9    mov         ecx,66A45C;'CurveDownRight'
 006692AE    mov         edx,dword ptr [ebp-4]
 006692B1    call        @UStrCat3
 006692B6    mov         edx,dword ptr [ebp-8C]
 006692BC    mov         eax,esi
 006692BE    call        005E51D8
>006692C3    jmp         006699F4
 006692C8    lea         eax,[ebp-90]
 006692CE    mov         ecx,66A488;'CurveDownRightUp'
 006692D3    mov         edx,dword ptr [ebp-4]
 006692D6    call        @UStrCat3
 006692DB    mov         edx,dword ptr [ebp-90]
 006692E1    mov         eax,esi
 006692E3    call        005E51D8
>006692E8    jmp         006699F4
 006692ED    lea         eax,[ebp-94]
 006692F3    mov         ecx,66A4B8;'CurveDownRightUpDown'
 006692F8    mov         edx,dword ptr [ebp-4]
 006692FB    call        @UStrCat3
 00669300    mov         edx,dword ptr [ebp-94]
 00669306    mov         eax,esi
 00669308    call        005E51D8
>0066930D    jmp         006699F4
 00669312    lea         eax,[ebp-98]
 00669318    mov         ecx,66A4F0;'CurveDownRightUpDownUp'
 0066931D    mov         edx,dword ptr [ebp-4]
 00669320    call        @UStrCat3
 00669325    mov         edx,dword ptr [ebp-98]
 0066932B    mov         eax,esi
 0066932D    call        005E51D8
>00669332    jmp         006699F4
 00669337    lea         eax,[ebp-9C]
 0066933D    mov         ecx,66A52C;'CurveDownRightUpDownRight'
 00669342    mov         edx,dword ptr [ebp-4]
 00669345    call        @UStrCat3
 0066934A    mov         edx,dword ptr [ebp-9C]
 00669350    mov         eax,esi
 00669352    call        005E51D8
>00669357    jmp         006699F4
 0066935C    lea         eax,[ebp-0A0]
 00669362    mov         ecx,66A56C;'CurveDownRightUpDownRightUp'
 00669367    mov         edx,dword ptr [ebp-4]
 0066936A    call        @UStrCat3
 0066936F    mov         edx,dword ptr [ebp-0A0]
 00669375    mov         eax,esi
 00669377    call        005E51D8
>0066937C    jmp         006699F4
 00669381    lea         eax,[ebp-0A4]
 00669387    mov         ecx,66A5B0;'CurveDownLeft'
 0066938C    mov         edx,dword ptr [ebp-4]
 0066938F    call        @UStrCat3
 00669394    mov         edx,dword ptr [ebp-0A4]
 0066939A    mov         eax,esi
 0066939C    call        005E51D8
>006693A1    jmp         006699F4
 006693A6    lea         eax,[ebp-0A8]
 006693AC    mov         ecx,66A5D8;'CurveDownLeftUp'
 006693B1    mov         edx,dword ptr [ebp-4]
 006693B4    call        @UStrCat3
 006693B9    mov         edx,dword ptr [ebp-0A8]
 006693BF    mov         eax,esi
 006693C1    call        005E51D8
>006693C6    jmp         006699F4
 006693CB    lea         eax,[ebp-0AC]
 006693D1    mov         ecx,66A604;'CurveDownLeftUpDown'
 006693D6    mov         edx,dword ptr [ebp-4]
 006693D9    call        @UStrCat3
 006693DE    mov         edx,dword ptr [ebp-0AC]
 006693E4    mov         eax,esi
 006693E6    call        005E51D8
>006693EB    jmp         006699F4
 006693F0    lea         eax,[ebp-0B0]
 006693F6    mov         ecx,66A638;'CurveDownLeftUpDownUp'
 006693FB    mov         edx,dword ptr [ebp-4]
 006693FE    call        @UStrCat3
 00669403    mov         edx,dword ptr [ebp-0B0]
 00669409    mov         eax,esi
 0066940B    call        005E51D8
>00669410    jmp         006699F4
 00669415    lea         eax,[ebp-0B4]
 0066941B    mov         ecx,66A670;'CurveDownLeftUpDownLeft'
 00669420    mov         edx,dword ptr [ebp-4]
 00669423    call        @UStrCat3
 00669428    mov         edx,dword ptr [ebp-0B4]
 0066942E    mov         eax,esi
 00669430    call        005E51D8
>00669435    jmp         006699F4
 0066943A    lea         eax,[ebp-0B8]
 00669440    mov         ecx,66A6AC;'CurveDownLeftUpDownLeftUp'
 00669445    mov         edx,dword ptr [ebp-4]
 00669448    call        @UStrCat3
 0066944D    mov         edx,dword ptr [ebp-0B8]
 00669453    mov         eax,esi
 00669455    call        005E51D8
>0066945A    jmp         006699F4
 0066945F    lea         eax,[ebp-0BC]
 00669465    mov         ecx,66A6EC;'CurveUpRight'
 0066946A    mov         edx,dword ptr [ebp-4]
 0066946D    call        @UStrCat3
 00669472    mov         edx,dword ptr [ebp-0BC]
 00669478    mov         eax,esi
 0066947A    call        005E51D8
>0066947F    jmp         006699F4
 00669484    lea         eax,[ebp-0C0]
 0066948A    mov         ecx,66A714;'CurveUpRightDown'
 0066948F    mov         edx,dword ptr [ebp-4]
 00669492    call        @UStrCat3
 00669497    mov         edx,dword ptr [ebp-0C0]
 0066949D    mov         eax,esi
 0066949F    call        005E51D8
>006694A4    jmp         006699F4
 006694A9    lea         eax,[ebp-0C4]
 006694AF    mov         ecx,66A744;'CurveUpRightDownUp'
 006694B4    mov         edx,dword ptr [ebp-4]
 006694B7    call        @UStrCat3
 006694BC    mov         edx,dword ptr [ebp-0C4]
 006694C2    mov         eax,esi
 006694C4    call        005E51D8
>006694C9    jmp         006699F4
 006694CE    lea         eax,[ebp-0C8]
 006694D4    mov         ecx,66A778;'CurveUpRightDownUpDown'
 006694D9    mov         edx,dword ptr [ebp-4]
 006694DC    call        @UStrCat3
 006694E1    mov         edx,dword ptr [ebp-0C8]
 006694E7    mov         eax,esi
 006694E9    call        005E51D8
>006694EE    jmp         006699F4
 006694F3    lea         eax,[ebp-0CC]
 006694F9    mov         ecx,66A7B4;'CurveUpRightDownUpRight'
 006694FE    mov         edx,dword ptr [ebp-4]
 00669501    call        @UStrCat3
 00669506    mov         edx,dword ptr [ebp-0CC]
 0066950C    mov         eax,esi
 0066950E    call        005E51D8
>00669513    jmp         006699F4
 00669518    lea         eax,[ebp-0D0]
 0066951E    mov         ecx,66A7F0;'CurveUpRightDownUpRightDown'
 00669523    mov         edx,dword ptr [ebp-4]
 00669526    call        @UStrCat3
 0066952B    mov         edx,dword ptr [ebp-0D0]
 00669531    mov         eax,esi
 00669533    call        005E51D8
>00669538    jmp         006699F4
 0066953D    lea         eax,[ebp-0D4]
 00669543    mov         ecx,66A834;'CurveUpLeft'
 00669548    mov         edx,dword ptr [ebp-4]
 0066954B    call        @UStrCat3
 00669550    mov         edx,dword ptr [ebp-0D4]
 00669556    mov         eax,esi
 00669558    call        005E51D8
>0066955D    jmp         006699F4
 00669562    lea         eax,[ebp-0D8]
 00669568    mov         ecx,66A858;'CurveUpLeftDown'
 0066956D    mov         edx,dword ptr [ebp-4]
 00669570    call        @UStrCat3
 00669575    mov         edx,dword ptr [ebp-0D8]
 0066957B    mov         eax,esi
 0066957D    call        005E51D8
>00669582    jmp         006699F4
 00669587    lea         eax,[ebp-0DC]
 0066958D    mov         ecx,66A884;'CurveUpLeftDownUp'
 00669592    mov         edx,dword ptr [ebp-4]
 00669595    call        @UStrCat3
 0066959A    mov         edx,dword ptr [ebp-0DC]
 006695A0    mov         eax,esi
 006695A2    call        005E51D8
>006695A7    jmp         006699F4
 006695AC    lea         eax,[ebp-0E0]
 006695B2    mov         ecx,66A8B4;'CurveUpLeftDownUpDown'
 006695B7    mov         edx,dword ptr [ebp-4]
 006695BA    call        @UStrCat3
 006695BF    mov         edx,dword ptr [ebp-0E0]
 006695C5    mov         eax,esi
 006695C7    call        005E51D8
>006695CC    jmp         006699F4
 006695D1    lea         eax,[ebp-0E4]
 006695D7    mov         ecx,66A8EC;'CurveUpLeftDownUpLeft'
 006695DC    mov         edx,dword ptr [ebp-4]
 006695DF    call        @UStrCat3
 006695E4    mov         edx,dword ptr [ebp-0E4]
 006695EA    mov         eax,esi
 006695EC    call        005E51D8
>006695F1    jmp         006699F4
 006695F6    lea         eax,[ebp-0E8]
 006695FC    mov         ecx,66A924;'CurveUpLeftDownUpLeftDown'
 00669601    mov         edx,dword ptr [ebp-4]
 00669604    call        @UStrCat3
 00669609    mov         edx,dword ptr [ebp-0E8]
 0066960F    mov         eax,esi
 00669611    call        005E51D8
>00669616    jmp         006699F4
 0066961B    lea         eax,[ebp-0EC]
 00669621    mov         ecx,66A964;'CurveLeftUp'
 00669626    mov         edx,dword ptr [ebp-4]
 00669629    call        @UStrCat3
 0066962E    mov         edx,dword ptr [ebp-0EC]
 00669634    mov         eax,esi
 00669636    call        005E51D8
>0066963B    jmp         006699F4
 00669640    lea         eax,[ebp-0F0]
 00669646    mov         ecx,66A988;'CurveLeftUpRight'
 0066964B    mov         edx,dword ptr [ebp-4]
 0066964E    call        @UStrCat3
 00669653    mov         edx,dword ptr [ebp-0F0]
 00669659    mov         eax,esi
 0066965B    call        005E51D8
>00669660    jmp         006699F4
 00669665    lea         eax,[ebp-0F4]
 0066966B    mov         ecx,66A9B8;'CurveLeftUpRightLeft'
 00669670    mov         edx,dword ptr [ebp-4]
 00669673    call        @UStrCat3
 00669678    mov         edx,dword ptr [ebp-0F4]
 0066967E    mov         eax,esi
 00669680    call        005E51D8
>00669685    jmp         006699F4
 0066968A    lea         eax,[ebp-0F8]
 00669690    mov         ecx,66A9F0;'CurveLeftUpRightLeftRight'
 00669695    mov         edx,dword ptr [ebp-4]
 00669698    call        @UStrCat3
 0066969D    mov         edx,dword ptr [ebp-0F8]
 006696A3    mov         eax,esi
 006696A5    call        005E51D8
>006696AA    jmp         006699F4
 006696AF    lea         eax,[ebp-0FC]
 006696B5    mov         ecx,66AA30;'CurveLeftUpRightLeftUp'
 006696BA    mov         edx,dword ptr [ebp-4]
 006696BD    call        @UStrCat3
 006696C2    mov         edx,dword ptr [ebp-0FC]
 006696C8    mov         eax,esi
 006696CA    call        005E51D8
>006696CF    jmp         006699F4
 006696D4    lea         eax,[ebp-100]
 006696DA    mov         ecx,66AA6C;'CurveLeftUpRightLeftUpRight'
 006696DF    mov         edx,dword ptr [ebp-4]
 006696E2    call        @UStrCat3
 006696E7    mov         edx,dword ptr [ebp-100]
 006696ED    mov         eax,esi
 006696EF    call        005E51D8
>006696F4    jmp         006699F4
 006696F9    lea         eax,[ebp-104]
 006696FF    mov         ecx,66AAB0;'CurveLeftDown'
 00669704    mov         edx,dword ptr [ebp-4]
 00669707    call        @UStrCat3
 0066970C    mov         edx,dword ptr [ebp-104]
 00669712    mov         eax,esi
 00669714    call        005E51D8
>00669719    jmp         006699F4
 0066971E    lea         eax,[ebp-108]
 00669724    mov         ecx,66AAD8;'CurveLeftDownRight'
 00669729    mov         edx,dword ptr [ebp-4]
 0066972C    call        @UStrCat3
 00669731    mov         edx,dword ptr [ebp-108]
 00669737    mov         eax,esi
 00669739    call        005E51D8
>0066973E    jmp         006699F4
 00669743    lea         eax,[ebp-10C]
 00669749    mov         ecx,66AB0C;'CurveLeftDownRightLeft'
 0066974E    mov         edx,dword ptr [ebp-4]
 00669751    call        @UStrCat3
 00669756    mov         edx,dword ptr [ebp-10C]
 0066975C    mov         eax,esi
 0066975E    call        005E51D8
>00669763    jmp         006699F4
 00669768    lea         eax,[ebp-110]
 0066976E    mov         ecx,66AB48;'CurveLeftDownRightLeftRight'
 00669773    mov         edx,dword ptr [ebp-4]
 00669776    call        @UStrCat3
 0066977B    mov         edx,dword ptr [ebp-110]
 00669781    mov         eax,esi
 00669783    call        005E51D8
>00669788    jmp         006699F4
 0066978D    lea         eax,[ebp-114]
 00669793    mov         ecx,66AB8C;'CurveLeftDownRightLeftDown'
 00669798    mov         edx,dword ptr [ebp-4]
 0066979B    call        @UStrCat3
 006697A0    mov         edx,dword ptr [ebp-114]
 006697A6    mov         eax,esi
 006697A8    call        005E51D8
>006697AD    jmp         006699F4
 006697B2    lea         eax,[ebp-118]
 006697B8    mov         ecx,66ABD0;'CurveLeftDownRightLeftDownRight'
 006697BD    mov         edx,dword ptr [ebp-4]
 006697C0    call        @UStrCat3
 006697C5    mov         edx,dword ptr [ebp-118]
 006697CB    mov         eax,esi
 006697CD    call        005E51D8
>006697D2    jmp         006699F4
 006697D7    lea         eax,[ebp-11C]
 006697DD    mov         ecx,66AC1C;'CurveRightUp'
 006697E2    mov         edx,dword ptr [ebp-4]
 006697E5    call        @UStrCat3
 006697EA    mov         edx,dword ptr [ebp-11C]
 006697F0    mov         eax,esi
 006697F2    call        005E51D8
>006697F7    jmp         006699F4
 006697FC    lea         eax,[ebp-120]
 00669802    mov         ecx,66AC44;'CurveRightUpLeft'
 00669807    mov         edx,dword ptr [ebp-4]
 0066980A    call        @UStrCat3
 0066980F    mov         edx,dword ptr [ebp-120]
 00669815    mov         eax,esi
 00669817    call        005E51D8
>0066981C    jmp         006699F4
 00669821    lea         eax,[ebp-124]
 00669827    mov         ecx,66AC74;'CurveRightUpLeftRight'
 0066982C    mov         edx,dword ptr [ebp-4]
 0066982F    call        @UStrCat3
 00669834    mov         edx,dword ptr [ebp-124]
 0066983A    mov         eax,esi
 0066983C    call        005E51D8
>00669841    jmp         006699F4
 00669846    lea         eax,[ebp-128]
 0066984C    mov         ecx,66ACAC;'CurveRightUpLeftRightLeft'
 00669851    mov         edx,dword ptr [ebp-4]
 00669854    call        @UStrCat3
 00669859    mov         edx,dword ptr [ebp-128]
 0066985F    mov         eax,esi
 00669861    call        005E51D8
>00669866    jmp         006699F4
 0066986B    lea         eax,[ebp-12C]
 00669871    mov         ecx,66ACEC;'CurveRightUpLeftRightUp'
 00669876    mov         edx,dword ptr [ebp-4]
 00669879    call        @UStrCat3
 0066987E    mov         edx,dword ptr [ebp-12C]
 00669884    mov         eax,esi
 00669886    call        005E51D8
>0066988B    jmp         006699F4
 00669890    lea         eax,[ebp-130]
 00669896    mov         ecx,66AD28;'CurveRightUpLeftRightUpLeft'
 0066989B    mov         edx,dword ptr [ebp-4]
 0066989E    call        @UStrCat3
 006698A3    mov         edx,dword ptr [ebp-130]
 006698A9    mov         eax,esi
 006698AB    call        005E51D8
>006698B0    jmp         006699F4
 006698B5    lea         eax,[ebp-134]
 006698BB    mov         ecx,66AD6C;'CurveRightDown'
 006698C0    mov         edx,dword ptr [ebp-4]
 006698C3    call        @UStrCat3
 006698C8    mov         edx,dword ptr [ebp-134]
 006698CE    mov         eax,esi
 006698D0    call        005E51D8
>006698D5    jmp         006699F4
 006698DA    lea         eax,[ebp-138]
 006698E0    mov         ecx,66AD98;'CurveRightDownLeft'
 006698E5    mov         edx,dword ptr [ebp-4]
 006698E8    call        @UStrCat3
 006698ED    mov         edx,dword ptr [ebp-138]
 006698F3    mov         eax,esi
 006698F5    call        005E51D8
>006698FA    jmp         006699F4
 006698FF    lea         eax,[ebp-13C]
 00669905    mov         ecx,66ADCC;'CurveRightDownLeftRight'
 0066990A    mov         edx,dword ptr [ebp-4]
 0066990D    call        @UStrCat3
 00669912    mov         edx,dword ptr [ebp-13C]
 00669918    mov         eax,esi
 0066991A    call        005E51D8
>0066991F    jmp         006699F4
 00669924    lea         eax,[ebp-140]
 0066992A    mov         ecx,66AE08;'CurveRightDownLeftRightLeft'
 0066992F    mov         edx,dword ptr [ebp-4]
 00669932    call        @UStrCat3
 00669937    mov         edx,dword ptr [ebp-140]
 0066993D    mov         eax,esi
 0066993F    call        005E51D8
>00669944    jmp         006699F4
 00669949    lea         eax,[ebp-144]
 0066994F    mov         ecx,66AE4C;'CurveRightDownLeftRightDown'
 00669954    mov         edx,dword ptr [ebp-4]
 00669957    call        @UStrCat3
 0066995C    mov         edx,dword ptr [ebp-144]
 00669962    mov         eax,esi
 00669964    call        005E51D8
>00669969    jmp         006699F4
 0066996E    lea         eax,[ebp-148]
 00669974    mov         ecx,66AE90;'CurveRightDownLeftRightDownLeft'
 00669979    mov         edx,dword ptr [ebp-4]
 0066997C    call        @UStrCat3
 00669981    mov         edx,dword ptr [ebp-148]
 00669987    mov         eax,esi
 00669989    call        005E51D8
>0066998E    jmp         006699F4
 00669990    lea         eax,[ebp-14C]
 00669996    mov         ecx,66AEDC;'CircleAnticlockwise'
 0066999B    mov         edx,dword ptr [ebp-4]
 0066999E    call        @UStrCat3
 006699A3    mov         edx,dword ptr [ebp-14C]
 006699A9    mov         eax,esi
 006699AB    call        005E51D8
>006699B0    jmp         006699F4
 006699B2    lea         eax,[ebp-150]
 006699B8    mov         ecx,66AF10;'CircleClockwise'
 006699BD    mov         edx,dword ptr [ebp-4]
 006699C0    call        @UStrCat3
 006699C5    mov         edx,dword ptr [ebp-150]
 006699CB    mov         eax,esi
 006699CD    call        005E51D8
>006699D2    jmp         006699F4
 006699D4    lea         eax,[ebp-154]
 006699DA    mov         ecx,66AF3C;'ERROR'
 006699DF    mov         edx,dword ptr [ebp-4]
 006699E2    call        @UStrCat3
 006699E7    mov         edx,dword ptr [ebp-154]
 006699ED    mov         eax,esi
 006699EF    call        005E51D8
 006699F4    movzx       eax,byte ptr [ebx+42F]
 006699FB    add         eax,0FFFFFFFB
 006699FE    cmp         eax,41
>00669A01    ja          00669DD3
 00669A07    movzx       eax,byte ptr [eax+669A15]
 00669A0E    jmp         dword ptr [eax*4+669A57]
 00669A0E    db          3
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          8
 00669A0E    db          0
 00669A0E    db          7
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          10
 00669A0E    db          0
 00669A0E    db          9
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          4
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          12
 00669A0E    db          0
 00669A0E    db          11
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          14
 00669A0E    db          0
 00669A0E    db          13
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          5
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          16
 00669A0E    db          0
 00669A0E    db          15
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          18
 00669A0E    db          0
 00669A0E    db          17
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          6
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          20
 00669A0E    db          0
 00669A0E    db          19
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          0
 00669A0E    db          22
 00669A0E    db          0
 00669A0E    db          21
 00669A0E    db          1
 00669A0E    db          2
 00669A0E    dd          00669DD3
 00669A0E    dd          00669AB3
 00669A0E    dd          00669AD8
 00669A0E    dd          00669AFD
 00669A0E    dd          00669B22
 00669A0E    dd          00669B47
 00669A0E    dd          00669B6C
 00669A0E    dd          00669B91
 00669A0E    dd          00669BB6
 00669A0E    dd          00669BDB
 00669A0E    dd          00669C00
 00669A0E    dd          00669C25
 00669A0E    dd          00669C4A
 00669A0E    dd          00669C6F
 00669A0E    dd          00669C94
 00669A0E    dd          00669CB9
 00669A0E    dd          00669CDE
 00669A0E    dd          00669D03
 00669A0E    dd          00669D28
 00669A0E    dd          00669D4D
 00669A0E    dd          00669D6F
 00669A0E    dd          00669D91
 00669A0E    dd          00669DB3
 00669AB3    lea         eax,[ebp-158]
 00669AB9    mov         ecx,66AEDC;'CircleAnticlockwise'
 00669ABE    mov         edx,dword ptr [ebp-4]
 00669AC1    call        @UStrCat3
 00669AC6    mov         edx,dword ptr [ebp-158]
 00669ACC    mov         eax,esi
 00669ACE    call        005E51D8
>00669AD3    jmp         00669DD3
 00669AD8    lea         eax,[ebp-15C]
 00669ADE    mov         ecx,66AF10;'CircleClockwise'
 00669AE3    mov         edx,dword ptr [ebp-4]
 00669AE6    call        @UStrCat3
 00669AEB    mov         edx,dword ptr [ebp-15C]
 00669AF1    mov         eax,esi
 00669AF3    call        005E51D8
>00669AF8    jmp         00669DD3
 00669AFD    lea         eax,[ebp-160]
 00669B03    mov         ecx,66AF54;'SwingDownUpDownUpDown'
 00669B08    mov         edx,dword ptr [ebp-4]
 00669B0B    call        @UStrCat3
 00669B10    mov         edx,dword ptr [ebp-160]
 00669B16    mov         eax,esi
 00669B18    call        005E51D8
>00669B1D    jmp         00669DD3
 00669B22    lea         eax,[ebp-164]
 00669B28    mov         ecx,66AF8C;'SwingUpDownUpDownUp'
 00669B2D    mov         edx,dword ptr [ebp-4]
 00669B30    call        @UStrCat3
 00669B35    mov         edx,dword ptr [ebp-164]
 00669B3B    mov         eax,esi
 00669B3D    call        005E51D8
>00669B42    jmp         00669DD3
 00669B47    lea         eax,[ebp-168]
 00669B4D    mov         ecx,66AFC0;'SwingLeftRightLeftRightLeft'
 00669B52    mov         edx,dword ptr [ebp-4]
 00669B55    call        @UStrCat3
 00669B5A    mov         edx,dword ptr [ebp-168]
 00669B60    mov         eax,esi
 00669B62    call        005E51D8
>00669B67    jmp         00669DD3
 00669B6C    lea         eax,[ebp-16C]
 00669B72    mov         ecx,66B004;'SwingRightLeftRightLeftRight'
 00669B77    mov         edx,dword ptr [ebp-4]
 00669B7A    call        @UStrCat3
 00669B7F    mov         edx,dword ptr [ebp-16C]
 00669B85    mov         eax,esi
 00669B87    call        005E51D8
>00669B8C    jmp         00669DD3
 00669B91    lea         eax,[ebp-170]
 00669B97    mov         ecx,66A56C;'CurveDownRightUpDownRightUp'
 00669B9C    mov         edx,dword ptr [ebp-4]
 00669B9F    call        @UStrCat3
 00669BA4    mov         edx,dword ptr [ebp-170]
 00669BAA    mov         eax,esi
 00669BAC    call        005E51D8
>00669BB1    jmp         00669DD3
 00669BB6    lea         eax,[ebp-174]
 00669BBC    mov         ecx,66A4F0;'CurveDownRightUpDownUp'
 00669BC1    mov         edx,dword ptr [ebp-4]
 00669BC4    call        @UStrCat3
 00669BC9    mov         edx,dword ptr [ebp-174]
 00669BCF    mov         eax,esi
 00669BD1    call        005E51D8
>00669BD6    jmp         00669DD3
 00669BDB    lea         eax,[ebp-178]
 00669BE1    mov         ecx,66A6AC;'CurveDownLeftUpDownLeftUp'
 00669BE6    mov         edx,dword ptr [ebp-4]
 00669BE9    call        @UStrCat3
 00669BEE    mov         edx,dword ptr [ebp-178]
 00669BF4    mov         eax,esi
 00669BF6    call        005E51D8
>00669BFB    jmp         00669DD3
 00669C00    lea         eax,[ebp-17C]
 00669C06    mov         ecx,66A638;'CurveDownLeftUpDownUp'
 00669C0B    mov         edx,dword ptr [ebp-4]
 00669C0E    call        @UStrCat3
 00669C13    mov         edx,dword ptr [ebp-17C]
 00669C19    mov         eax,esi
 00669C1B    call        005E51D8
>00669C20    jmp         00669DD3
 00669C25    lea         eax,[ebp-180]
 00669C2B    mov         ecx,66A7F0;'CurveUpRightDownUpRightDown'
 00669C30    mov         edx,dword ptr [ebp-4]
 00669C33    call        @UStrCat3
 00669C38    mov         edx,dword ptr [ebp-180]
 00669C3E    mov         eax,esi
 00669C40    call        005E51D8
>00669C45    jmp         00669DD3
 00669C4A    lea         eax,[ebp-184]
 00669C50    mov         ecx,66A778;'CurveUpRightDownUpDown'
 00669C55    mov         edx,dword ptr [ebp-4]
 00669C58    call        @UStrCat3
 00669C5D    mov         edx,dword ptr [ebp-184]
 00669C63    mov         eax,esi
 00669C65    call        005E51D8
>00669C6A    jmp         00669DD3
 00669C6F    lea         eax,[ebp-188]
 00669C75    mov         ecx,66A924;'CurveUpLeftDownUpLeftDown'
 00669C7A    mov         edx,dword ptr [ebp-4]
 00669C7D    call        @UStrCat3
 00669C82    mov         edx,dword ptr [ebp-188]
 00669C88    mov         eax,esi
 00669C8A    call        005E51D8
>00669C8F    jmp         00669DD3
 00669C94    lea         eax,[ebp-18C]
 00669C9A    mov         ecx,66A8B4;'CurveUpLeftDownUpDown'
 00669C9F    mov         edx,dword ptr [ebp-4]
 00669CA2    call        @UStrCat3
 00669CA7    mov         edx,dword ptr [ebp-18C]
 00669CAD    mov         eax,esi
 00669CAF    call        005E51D8
>00669CB4    jmp         00669DD3
 00669CB9    lea         eax,[ebp-190]
 00669CBF    mov         ecx,66AA6C;'CurveLeftUpRightLeftUpRight'
 00669CC4    mov         edx,dword ptr [ebp-4]
 00669CC7    call        @UStrCat3
 00669CCC    mov         edx,dword ptr [ebp-190]
 00669CD2    mov         eax,esi
 00669CD4    call        005E51D8
>00669CD9    jmp         00669DD3
 00669CDE    lea         eax,[ebp-194]
 00669CE4    mov         ecx,66A9F0;'CurveLeftUpRightLeftRight'
 00669CE9    mov         edx,dword ptr [ebp-4]
 00669CEC    call        @UStrCat3
 00669CF1    mov         edx,dword ptr [ebp-194]
 00669CF7    mov         eax,esi
 00669CF9    call        005E51D8
>00669CFE    jmp         00669DD3
 00669D03    lea         eax,[ebp-198]
 00669D09    mov         ecx,66ABD0;'CurveLeftDownRightLeftDownRight'
 00669D0E    mov         edx,dword ptr [ebp-4]
 00669D11    call        @UStrCat3
 00669D16    mov         edx,dword ptr [ebp-198]
 00669D1C    mov         eax,esi
 00669D1E    call        005E51D8
>00669D23    jmp         00669DD3
 00669D28    lea         eax,[ebp-19C]
 00669D2E    mov         ecx,66AB48;'CurveLeftDownRightLeftRight'
 00669D33    mov         edx,dword ptr [ebp-4]
 00669D36    call        @UStrCat3
 00669D3B    mov         edx,dword ptr [ebp-19C]
 00669D41    mov         eax,esi
 00669D43    call        005E51D8
>00669D48    jmp         00669DD3
 00669D4D    lea         eax,[ebp-1A0]
 00669D53    mov         ecx,66AD28;'CurveRightUpLeftRightUpLeft'
 00669D58    mov         edx,dword ptr [ebp-4]
 00669D5B    call        @UStrCat3
 00669D60    mov         edx,dword ptr [ebp-1A0]
 00669D66    mov         eax,esi
 00669D68    call        005E51D8
>00669D6D    jmp         00669DD3
 00669D6F    lea         eax,[ebp-1A4]
 00669D75    mov         ecx,66ACAC;'CurveRightUpLeftRightLeft'
 00669D7A    mov         edx,dword ptr [ebp-4]
 00669D7D    call        @UStrCat3
 00669D82    mov         edx,dword ptr [ebp-1A4]
 00669D88    mov         eax,esi
 00669D8A    call        005E51D8
>00669D8F    jmp         00669DD3
 00669D91    lea         eax,[ebp-1A8]
 00669D97    mov         ecx,66AE90;'CurveRightDownLeftRightDownLeft'
 00669D9C    mov         edx,dword ptr [ebp-4]
 00669D9F    call        @UStrCat3
 00669DA4    mov         edx,dword ptr [ebp-1A8]
 00669DAA    mov         eax,esi
 00669DAC    call        005E51D8
>00669DB1    jmp         00669DD3
 00669DB3    lea         eax,[ebp-1AC]
 00669DB9    mov         ecx,66AE08;'CurveRightDownLeftRightLeft'
 00669DBE    mov         edx,dword ptr [ebp-4]
 00669DC1    call        @UStrCat3
 00669DC6    mov         edx,dword ptr [ebp-1AC]
 00669DCC    mov         eax,esi
 00669DCE    call        005E51D8
 00669DD3    mov         eax,ebx
 00669DD5    call        TAccelerometerObject.Stabbing
 00669DDA    test        al,al
>00669DDC    je          00669DFE
 00669DDE    lea         eax,[ebp-1B0]
 00669DE4    mov         ecx,66B04C;'Stabbing'
 00669DE9    mov         edx,dword ptr [ebp-4]
 00669DEC    call        @UStrCat3
 00669DF1    mov         edx,dword ptr [ebp-1B0]
 00669DF7    mov         eax,esi
 00669DF9    call        005E5004
 00669DFE    cmp         byte ptr [ebx+434],0
>00669E05    je          00669E27
 00669E07    lea         eax,[ebp-1B4]
 00669E0D    mov         ecx,66B06C;'UpsideDownOnShoulder'
 00669E12    mov         edx,dword ptr [ebp-4]
 00669E15    call        @UStrCat3
 00669E1A    mov         edx,dword ptr [ebp-1B4]
 00669E20    mov         eax,esi
 00669E22    call        005E5050
 00669E27    cmp         byte ptr [ebx+431],0
>00669E2E    je          00669E50
 00669E30    lea         eax,[ebp-1B8]
 00669E36    mov         ecx,66B0A4;'LookingAtRightWatch'
 00669E3B    mov         edx,dword ptr [ebp-4]
 00669E3E    call        @UStrCat3
 00669E43    mov         edx,dword ptr [ebp-1B8]
 00669E49    mov         eax,esi
 00669E4B    call        005E5050
 00669E50    cmp         byte ptr [ebx+433],0
>00669E57    je          00669E79
 00669E59    lea         eax,[ebp-1BC]
 00669E5F    mov         ecx,66B0D8;'LookingAtRightPalm'
 00669E64    mov         edx,dword ptr [ebp-4]
 00669E67    call        @UStrCat3
 00669E6C    mov         edx,dword ptr [ebp-1BC]
 00669E72    mov         eax,esi
 00669E74    call        005E5050
 00669E79    inc         edi
 00669E7A    dec         dword ptr [ebp-8]
>00669E7D    jne         00668CF6
 00669E83    mov         eax,esi
 00669E85    call        005E509C
 00669E8A    xor         eax,eax
 00669E8C    pop         edx
 00669E8D    pop         ecx
 00669E8E    pop         ecx
 00669E8F    mov         dword ptr fs:[eax],edx
 00669E92    push        669EC4
 00669E97    lea         eax,[ebp-1BC]
 00669E9D    mov         edx,64
 00669EA2    call        @UStrArrayClr
 00669EA7    lea         eax,[ebp-2C]
 00669EAA    mov         edx,9
 00669EAF    call        @UStrArrayClr
 00669EB4    lea         eax,[ebp-4]
 00669EB7    call        @UStrClr
 00669EBC    ret
>00669EBD    jmp         @HandleFinally
>00669EC2    jmp         00669E97
 00669EC4    pop         edi
 00669EC5    pop         esi
 00669EC6    pop         ebx
 00669EC7    mov         esp,ebp
 00669EC9    pop         ebp
 00669ECA    ret
*}
end;

//0066B100
procedure TModuleWiimote.PrepareForGUI;
begin
{*
 0066B100    ret
*}
end;

//0066B104
procedure TModuleWiimote.PrepareForMonitoring;
begin
{*
 0066B104    ret
*}
end;

//0066B108
function TModuleWiimote.Read:Boolean;
begin
{*
 0066B108    push        ebx
 0066B109    cmp         byte ptr ds:[81ECBC],0;gvar_0081ECBC
>0066B110    jne         0066B127
 0066B112    mov         bl,1
 0066B114    call        0074BF10
 0066B119    call        TWiimoteManager.ReadWiimotes
 0066B11E    mov         byte ptr ds:[81ECBC],1;gvar_0081ECBC
>0066B125    jmp         0066B129
 0066B127    mov         bl,1
 0066B129    mov         eax,ebx
 0066B12B    pop         ebx
 0066B12C    ret
*}
end;

//0066B130
procedure TModuleWiimote.StartCompiletime;
begin
{*
 0066B130    call        TPieModule.StartCompiletime
 0066B135    cmp         byte ptr ds:[81ECBD],0;gvar_0081ECBD
>0066B13C    jne         0066B14F
 0066B13E    mov         byte ptr ds:[81ECBD],1;gvar_0081ECBD
 0066B145    call        0074BF10
 0066B14A    call        TWiimoteManager.StartCompileTime
 0066B14F    ret
*}
end;

//0066B150
procedure TModuleWiimote.StartGUI;
begin
{*
 0066B150    call        0074BF10
 0066B155    call        TWiimoteManager.StartGUI
 0066B15A    ret
*}
end;

//0066B15C
procedure TModuleWiimote.StartMonitoring;
begin
{*
 0066B15C    push        ebx
 0066B15D    mov         ebx,eax
 0066B15F    mov         byte ptr [ebx+28],1;TModuleWiimote.Monitoring:Boolean
 0066B163    mov         eax,dword ptr [ebx+30];TModuleWiimote.OldButtonsDown:TStringList
 0066B166    mov         edx,dword ptr [eax]
 0066B168    call        dword ptr [edx+44];TStringList.Clear
 0066B16B    mov         eax,dword ptr [ebx+2C];TModuleWiimote.ButtonsDown:TStringList
 0066B16E    mov         edx,dword ptr [eax]
 0066B170    call        dword ptr [edx+44];TStringList.Clear
 0066B173    pop         ebx
 0066B174    ret
*}
end;

//0066B178
procedure TModuleWiimote.StartRuntime;
begin
{*
 0066B178    push        ebx
 0066B179    mov         ebx,eax
 0066B17B    mov         eax,ebx
 0066B17D    call        TPieModule.StartRuntime
 0066B182    cmp         byte ptr [ebx+24],0;TModuleWiimote.Used:Boolean
>0066B186    je          0066B192
 0066B188    call        0074BF10
 0066B18D    call        TWiimoteManager.StartRuntime
 0066B192    pop         ebx
 0066B193    ret
*}
end;

//0066B194
procedure TModuleWiimote.StopCompiletime;
begin
{*
 0066B194    mov         byte ptr ds:[81ECBD],0;gvar_0081ECBD
 0066B19B    call        TPieModule.StopCompiletime
 0066B1A0    ret
*}
end;

//0066B1A4
procedure TModuleWiimote.StopGUI;
begin
{*
 0066B1A4    call        0074BF10
 0066B1A9    call        TWiimoteManager.StopGUI
 0066B1AE    ret
*}
end;

//0066B1B0
procedure TModuleWiimote.StopMonitoring;
begin
{*
 0066B1B0    mov         byte ptr [eax+28],0;TModuleWiimote.Monitoring:Boolean
 0066B1B4    ret
*}
end;

//0066B1B8
procedure TModuleWiimote.StopRuntime;
begin
{*
 0066B1B8    push        ebx
 0066B1B9    mov         ebx,eax
 0066B1BB    cmp         byte ptr [ebx+24],0;TModuleWiimote.Used:Boolean
>0066B1BF    je          0066B1CB
 0066B1C1    call        0074BF10
 0066B1C6    call        TWiimoteManager.StopRuntime
 0066B1CB    mov         eax,ebx
 0066B1CD    call        TPieModule.StopRuntime
 0066B1D2    pop         ebx
 0066B1D3    ret
*}
end;

//0066B1D4
procedure TModuleNunchuk.ClearRead;
begin
{*
 0066B1D4    call        TPieModule.ClearRead
 0066B1D9    mov         byte ptr ds:[81ECBC],0;gvar_0081ECBC
 0066B1E0    ret
*}
end;

//0066B1E4
constructor TModuleNunchuk.Create;
begin
{*
 0066B1E4    push        ebx
 0066B1E5    push        esi
 0066B1E6    test        dl,dl
>0066B1E8    je          0066B1F2
 0066B1EA    add         esp,0FFFFFFF0
 0066B1ED    call        @ClassCreate
 0066B1F2    mov         ebx,edx
 0066B1F4    mov         esi,eax
 0066B1F6    push        66B238;'Nunchuck'
 0066B1FB    push        0
 0066B1FD    push        0
 0066B1FF    push        0
 0066B201    mov         ecx,66B258;'Nunchuk'
 0066B206    xor         edx,edx
 0066B208    mov         eax,esi
 0066B20A    call        005E4830
 0066B20F    mov         eax,esi
 0066B211    test        bl,bl
>0066B213    je          0066B224
 0066B215    call        @AfterConstruction
 0066B21A    pop         dword ptr fs:[0]
 0066B221    add         esp,0C
 0066B224    mov         eax,esi
 0066B226    pop         esi
 0066B227    pop         ebx
 0066B228    ret
*}
end;

//0066B268
function TModuleNunchuk.CreateValue(Identifier:string):TExpression;
begin
{*
 0066B268    push        ebp
 0066B269    mov         ebp,esp
 0066B26B    push        ecx
 0066B26C    push        ebx
 0066B26D    mov         dword ptr [ebp-4],edx
 0066B270    mov         ebx,eax
 0066B272    mov         eax,dword ptr [ebp-4]
 0066B275    call        @UStrAddRef
 0066B27A    xor         eax,eax
 0066B27C    push        ebp
 0066B27D    push        66B2B2
 0066B282    push        dword ptr fs:[eax]
 0066B285    mov         dword ptr fs:[eax],esp
 0066B288    mov         edx,dword ptr [ebp-4]
 0066B28B    mov         eax,ebx
 0066B28D    call        TPieModule.CreateValue
 0066B292    mov         eax,dword ptr [ebp-4]
 0066B295    call        00654EA8
 0066B29A    mov         ebx,eax
 0066B29C    xor         eax,eax
 0066B29E    pop         edx
 0066B29F    pop         ecx
 0066B2A0    pop         ecx
 0066B2A1    mov         dword ptr fs:[eax],edx
 0066B2A4    push        66B2B9
 0066B2A9    lea         eax,[ebp-4]
 0066B2AC    call        @UStrClr
 0066B2B1    ret
>0066B2B2    jmp         @HandleFinally
>0066B2B7    jmp         0066B2A9
 0066B2B9    mov         eax,ebx
 0066B2BB    pop         ebx
 0066B2BC    pop         ecx
 0066B2BD    pop         ebp
 0066B2BE    ret
*}
end;

//0066B2C0
procedure TModuleNunchuk.GetFields;
begin
{*
 0066B2C0    call        00652EB0
 0066B2C5    ret
*}
end;

//0066B2C8
procedure TModuleNunchuk.GetGoodFields;
begin
{*
 0066B2C8    call        00652EB0
 0066B2CD    ret
*}
end;

//0066B2D0
procedure TModuleNunchuk.GetRange(blank:Boolean; min:Integer; max:Integer);
begin
{*
 0066B2D0    push        ebp
 0066B2D1    mov         ebp,esp
 0066B2D3    mov         byte ptr [edx],1
 0066B2D6    mov         dword ptr [ecx],1
 0066B2DC    mov         eax,dword ptr [ebp+8]
 0066B2DF    mov         dword ptr [eax],14
 0066B2E5    pop         ebp
 0066B2E6    ret         4
*}
end;

//0066B2EC
procedure TModuleNunchuk.MonitorFrame;
begin
{*
 0066B2EC    push        ebp
 0066B2ED    mov         ebp,esp
 0066B2EF    mov         ecx,36
 0066B2F4    push        0
 0066B2F6    push        0
 0066B2F8    dec         ecx
>0066B2F9    jne         0066B2F4
 0066B2FB    push        ebx
 0066B2FC    push        esi
 0066B2FD    push        edi
 0066B2FE    mov         esi,eax
 0066B300    xor         eax,eax
 0066B302    push        ebp
 0066B303    push        66C48D
 0066B308    push        dword ptr fs:[eax]
 0066B30B    mov         dword ptr fs:[eax],esp
 0066B30E    cmp         byte ptr [esi+28],0;TModuleNunchuk.Monitoring:Boolean
>0066B312    je          0066C45A
 0066B318    mov         eax,esi
 0066B31A    mov         edx,dword ptr [eax]
 0066B31C    call        dword ptr [edx+3C];TModuleNunchuk.Read
 0066B31F    test        al,al
>0066B321    je          0066C45A
 0066B327    call        0074BF10
 0066B32C    mov         eax,dword ptr [eax+4C]
 0066B32F    mov         eax,dword ptr [eax+8]
 0066B332    dec         eax
 0066B333    test        eax,eax
>0066B335    jl          0066C453
 0066B33B    inc         eax
 0066B33C    mov         dword ptr [ebp-8],eax
 0066B33F    xor         edi,edi
 0066B341    call        0074BF10
 0066B346    mov         ebx,dword ptr [eax+4C]
 0066B349    mov         edx,edi
 0066B34B    mov         eax,ebx
 0066B34D    call        TList.Get
 0066B352    mov         ebx,eax
 0066B354    test        ebx,ebx
>0066B356    je          0066C449
 0066B35C    test        edi,edi
>0066B35E    jne         0066B36F
 0066B360    lea         eax,[ebp-4]
 0066B363    mov         edx,66C4A8;'Nunchuk.'
 0066B368    call        @UStrLAsg
>0066B36D    jmp         0066B394
 0066B36F    push        66C4C8;'Nunchuk'
 0066B374    lea         edx,[ebp-0C]
 0066B377    lea         eax,[edi+1]
 0066B37A    call        IntToStr
 0066B37F    push        dword ptr [ebp-0C]
 0066B382    push        66C4E4;'.'
 0066B387    lea         eax,[ebp-4]
 0066B38A    mov         edx,3
 0066B38F    call        @UStrCatN
 0066B394    mov         ebx,dword ptr [ebx+4B4]
 0066B39A    mov         eax,ebx
 0066B39C    call        TNunchukObject.C
 0066B3A1    test        al,al
>0066B3A3    je          0066B3BF
 0066B3A5    lea         eax,[ebp-10]
 0066B3A8    mov         ecx,66C4F4;'C'
 0066B3AD    mov         edx,dword ptr [ebp-4]
 0066B3B0    call        @UStrCat3
 0066B3B5    mov         edx,dword ptr [ebp-10]
 0066B3B8    mov         eax,esi
 0066B3BA    call        005E4F20
 0066B3BF    mov         eax,ebx
 0066B3C1    call        TNunchukObject.Z
 0066B3C6    test        al,al
>0066B3C8    je          0066B3E4
 0066B3CA    lea         eax,[ebp-14]
 0066B3CD    mov         ecx,66C504;'Z'
 0066B3D2    mov         edx,dword ptr [ebp-4]
 0066B3D5    call        @UStrCat3
 0066B3DA    mov         edx,dword ptr [ebp-14]
 0066B3DD    mov         eax,esi
 0066B3DF    call        005E4F20
 0066B3E4    mov         eax,ebx
 0066B3E6    call        TNunchukObject.FX
 0066B3EB    test        al,al
>0066B3ED    je          0066B409
 0066B3EF    lea         eax,[ebp-18]
 0066B3F2    mov         ecx,66C514;'FX'
 0066B3F7    mov         edx,dword ptr [ebp-4]
 0066B3FA    call        @UStrCat3
 0066B3FF    mov         edx,dword ptr [ebp-18]
 0066B402    mov         eax,esi
 0066B404    call        005E4F20
 0066B409    mov         eax,ebx
 0066B40B    call        TNunchukObject.Classic
 0066B410    test        al,al
>0066B412    je          0066B42E
 0066B414    lea         eax,[ebp-1C]
 0066B417    mov         ecx,66C528;'Classic'
 0066B41C    mov         edx,dword ptr [ebp-4]
 0066B41F    call        @UStrCat3
 0066B424    mov         edx,dword ptr [ebp-1C]
 0066B427    mov         eax,esi
 0066B429    call        005E4F20
 0066B42E    mov         eax,ebx
 0066B430    call        TNunchukObject.Up
 0066B435    test        al,al
>0066B437    je          0066B453
 0066B439    lea         eax,[ebp-20]
 0066B43C    mov         ecx,66C544;'Up'
 0066B441    mov         edx,dword ptr [ebp-4]
 0066B444    call        @UStrCat3
 0066B449    mov         edx,dword ptr [ebp-20]
 0066B44C    mov         eax,esi
 0066B44E    call        005E4F20
 0066B453    mov         eax,ebx
 0066B455    call        TNunchukObject.Down
 0066B45A    test        al,al
>0066B45C    je          0066B478
 0066B45E    lea         eax,[ebp-24]
 0066B461    mov         ecx,66C558;'Down'
 0066B466    mov         edx,dword ptr [ebp-4]
 0066B469    call        @UStrCat3
 0066B46E    mov         edx,dword ptr [ebp-24]
 0066B471    mov         eax,esi
 0066B473    call        005E4F20
 0066B478    mov         eax,ebx
 0066B47A    call        TNunchukObject.Left
 0066B47F    test        al,al
>0066B481    je          0066B49D
 0066B483    lea         eax,[ebp-28]
 0066B486    mov         ecx,66C570;'Left'
 0066B48B    mov         edx,dword ptr [ebp-4]
 0066B48E    call        @UStrCat3
 0066B493    mov         edx,dword ptr [ebp-28]
 0066B496    mov         eax,esi
 0066B498    call        005E4F20
 0066B49D    mov         eax,ebx
 0066B49F    call        TNunchukObject.Right
 0066B4A4    test        al,al
>0066B4A6    je          0066B4C2
 0066B4A8    lea         eax,[ebp-2C]
 0066B4AB    mov         ecx,66C588;'Right'
 0066B4B0    mov         edx,dword ptr [ebp-4]
 0066B4B3    call        @UStrCat3
 0066B4B8    mov         edx,dword ptr [ebp-2C]
 0066B4BB    mov         eax,esi
 0066B4BD    call        005E4F20
 0066B4C2    mov         eax,ebx
 0066B4C4    call        TAccelerometerObject.Stabbing
 0066B4C9    test        al,al
>0066B4CB    je          0066B4E7
 0066B4CD    lea         eax,[ebp-30]
 0066B4D0    mov         ecx,66C5A0;'Stabbing'
 0066B4D5    mov         edx,dword ptr [ebp-4]
 0066B4D8    call        @UStrCat3
 0066B4DD    mov         edx,dword ptr [ebp-30]
 0066B4E0    mov         eax,esi
 0066B4E2    call        005E5004
 0066B4E7    cmp         byte ptr [ebx+434],0
>0066B4EE    je          0066B50A
 0066B4F0    lea         eax,[ebp-34]
 0066B4F3    mov         ecx,66C5C0;'UpsideDownOnShoulder'
 0066B4F8    mov         edx,dword ptr [ebp-4]
 0066B4FB    call        @UStrCat3
 0066B500    mov         edx,dword ptr [ebp-34]
 0066B503    mov         eax,esi
 0066B505    call        005E5050
 0066B50A    cmp         byte ptr [ebx+430],0
>0066B511    je          0066B52D
 0066B513    lea         eax,[ebp-38]
 0066B516    mov         ecx,66C5F8;'LookingAtRightWatch'
 0066B51B    mov         edx,dword ptr [ebp-4]
 0066B51E    call        @UStrCat3
 0066B523    mov         edx,dword ptr [ebp-38]
 0066B526    mov         eax,esi
 0066B528    call        005E5050
 0066B52D    cmp         byte ptr [ebx+432],0
>0066B534    je          0066B550
 0066B536    lea         eax,[ebp-3C]
 0066B539    mov         ecx,66C62C;'LookingAtRightPalm'
 0066B53E    mov         edx,dword ptr [ebp-4]
 0066B541    call        @UStrCat3
 0066B546    mov         edx,dword ptr [ebp-3C]
 0066B549    mov         eax,esi
 0066B54B    call        005E5050
 0066B550    cmp         byte ptr [ebx+41E],0
>0066B557    je          0066B563
 0066B559    mov         edx,dword ptr [ebp-4]
 0066B55C    mov         eax,esi
 0066B55E    call        005E5190
 0066B563    movzx       eax,byte ptr [ebx+42D]
 0066B56A    cmp         eax,46
>0066B56D    ja          0066C04A
 0066B573    jmp         dword ptr [eax*4+66B57A]
 0066B573    dd          0066C06A
 0066B573    dd          0066B69B
 0066B573    dd          0066B6BA
 0066B573    dd          0066B6D9
 0066B573    dd          0066B6F8
 0066B573    dd          0066B717
 0066B573    dd          0066B919
 0066B573    dd          0066B93E
 0066B573    dd          0066B963
 0066B573    dd          0066B988
 0066B573    dd          0066B9AD
 0066B573    dd          0066B9D2
 0066B573    dd          0066B9F7
 0066B573    dd          0066BA1C
 0066B573    dd          0066BA41
 0066B573    dd          0066BA66
 0066B573    dd          0066BA8B
 0066B573    dd          0066BAB0
 0066B573    dd          0066B736
 0066B573    dd          0066B755
 0066B573    dd          0066B774
 0066B573    dd          0066B793
 0066B573    dd          0066B7B2
 0066B573    dd          0066BAD5
 0066B573    dd          0066BAFA
 0066B573    dd          0066BB1F
 0066B573    dd          0066BB44
 0066B573    dd          0066BB69
 0066B573    dd          0066BB8E
 0066B573    dd          0066BBB3
 0066B573    dd          0066BBD8
 0066B573    dd          0066BBFD
 0066B573    dd          0066BC22
 0066B573    dd          0066BC47
 0066B573    dd          0066BC6C
 0066B573    dd          0066B7D1
 0066B573    dd          0066B7F0
 0066B573    dd          0066B80F
 0066B573    dd          0066B82E
 0066B573    dd          0066B84D
 0066B573    dd          0066BC91
 0066B573    dd          0066BCB6
 0066B573    dd          0066BCDB
 0066B573    dd          0066BD00
 0066B573    dd          0066BD25
 0066B573    dd          0066BD4A
 0066B573    dd          0066BD6F
 0066B573    dd          0066BD94
 0066B573    dd          0066BDB9
 0066B573    dd          0066BDDE
 0066B573    dd          0066BE03
 0066B573    dd          0066BE28
 0066B573    dd          0066B86C
 0066B573    dd          0066B88B
 0066B573    dd          0066B8AA
 0066B573    dd          0066B8CF
 0066B573    dd          0066B8F4
 0066B573    dd          0066BE4D
 0066B573    dd          0066BE72
 0066B573    dd          0066BE97
 0066B573    dd          0066BEBC
 0066B573    dd          0066BEE1
 0066B573    dd          0066BF06
 0066B573    dd          0066BF2B
 0066B573    dd          0066BF50
 0066B573    dd          0066BF75
 0066B573    dd          0066BF9A
 0066B573    dd          0066BFBF
 0066B573    dd          0066BFE4
 0066B573    dd          0066C006
 0066B573    dd          0066C028
>0066B696    jmp         0066C06A
 0066B69B    lea         eax,[ebp-40]
 0066B69E    mov         ecx,66C660;'SwingDownStop'
 0066B6A3    mov         edx,dword ptr [ebp-4]
 0066B6A6    call        @UStrCat3
 0066B6AB    mov         edx,dword ptr [ebp-40]
 0066B6AE    mov         eax,esi
 0066B6B0    call        005E51D8
>0066B6B5    jmp         0066C06A
 0066B6BA    lea         eax,[ebp-44]
 0066B6BD    mov         ecx,66C688;'SwingDownUpStop'
 0066B6C2    mov         edx,dword ptr [ebp-4]
 0066B6C5    call        @UStrCat3
 0066B6CA    mov         edx,dword ptr [ebp-44]
 0066B6CD    mov         eax,esi
 0066B6CF    call        005E51D8
>0066B6D4    jmp         0066C06A
 0066B6D9    lea         eax,[ebp-48]
 0066B6DC    mov         ecx,66C6B4;'SwingDownUpDownStop'
 0066B6E1    mov         edx,dword ptr [ebp-4]
 0066B6E4    call        @UStrCat3
 0066B6E9    mov         edx,dword ptr [ebp-48]
 0066B6EC    mov         eax,esi
 0066B6EE    call        005E51D8
>0066B6F3    jmp         0066C06A
 0066B6F8    lea         eax,[ebp-4C]
 0066B6FB    mov         ecx,66C6E8;'SwingDownUpDownUpStop'
 0066B700    mov         edx,dword ptr [ebp-4]
 0066B703    call        @UStrCat3
 0066B708    mov         edx,dword ptr [ebp-4C]
 0066B70B    mov         eax,esi
 0066B70D    call        005E51D8
>0066B712    jmp         0066C06A
 0066B717    lea         eax,[ebp-50]
 0066B71A    mov         ecx,66C720;'SwingDownUpDownUpDownStop'
 0066B71F    mov         edx,dword ptr [ebp-4]
 0066B722    call        @UStrCat3
 0066B727    mov         edx,dword ptr [ebp-50]
 0066B72A    mov         eax,esi
 0066B72C    call        005E51D8
>0066B731    jmp         0066C06A
 0066B736    lea         eax,[ebp-54]
 0066B739    mov         ecx,66C760;'SwingUpStop'
 0066B73E    mov         edx,dword ptr [ebp-4]
 0066B741    call        @UStrCat3
 0066B746    mov         edx,dword ptr [ebp-54]
 0066B749    mov         eax,esi
 0066B74B    call        005E51D8
>0066B750    jmp         0066C06A
 0066B755    lea         eax,[ebp-58]
 0066B758    mov         ecx,66C784;'SwingUpDownStop'
 0066B75D    mov         edx,dword ptr [ebp-4]
 0066B760    call        @UStrCat3
 0066B765    mov         edx,dword ptr [ebp-58]
 0066B768    mov         eax,esi
 0066B76A    call        005E51D8
>0066B76F    jmp         0066C06A
 0066B774    lea         eax,[ebp-5C]
 0066B777    mov         ecx,66C7B0;'SwingUpDownUpStop'
 0066B77C    mov         edx,dword ptr [ebp-4]
 0066B77F    call        @UStrCat3
 0066B784    mov         edx,dword ptr [ebp-5C]
 0066B787    mov         eax,esi
 0066B789    call        005E51D8
>0066B78E    jmp         0066C06A
 0066B793    lea         eax,[ebp-60]
 0066B796    mov         ecx,66C7E0;'SwingUpDownUpDownStop'
 0066B79B    mov         edx,dword ptr [ebp-4]
 0066B79E    call        @UStrCat3
 0066B7A3    mov         edx,dword ptr [ebp-60]
 0066B7A6    mov         eax,esi
 0066B7A8    call        005E51D8
>0066B7AD    jmp         0066C06A
 0066B7B2    lea         eax,[ebp-64]
 0066B7B5    mov         ecx,66C818;'SwingUpDownUpDownUpStop'
 0066B7BA    mov         edx,dword ptr [ebp-4]
 0066B7BD    call        @UStrCat3
 0066B7C2    mov         edx,dword ptr [ebp-64]
 0066B7C5    mov         eax,esi
 0066B7C7    call        005E51D8
>0066B7CC    jmp         0066C06A
 0066B7D1    lea         eax,[ebp-68]
 0066B7D4    mov         ecx,66C854;'SwingLeftStop'
 0066B7D9    mov         edx,dword ptr [ebp-4]
 0066B7DC    call        @UStrCat3
 0066B7E1    mov         edx,dword ptr [ebp-68]
 0066B7E4    mov         eax,esi
 0066B7E6    call        005E51D8
>0066B7EB    jmp         0066C06A
 0066B7F0    lea         eax,[ebp-6C]
 0066B7F3    mov         ecx,66C87C;'SwingLeftRightStop'
 0066B7F8    mov         edx,dword ptr [ebp-4]
 0066B7FB    call        @UStrCat3
 0066B800    mov         edx,dword ptr [ebp-6C]
 0066B803    mov         eax,esi
 0066B805    call        005E51D8
>0066B80A    jmp         0066C06A
 0066B80F    lea         eax,[ebp-70]
 0066B812    mov         ecx,66C8B0;'SwingLeftRightLeftStop'
 0066B817    mov         edx,dword ptr [ebp-4]
 0066B81A    call        @UStrCat3
 0066B81F    mov         edx,dword ptr [ebp-70]
 0066B822    mov         eax,esi
 0066B824    call        005E51D8
>0066B829    jmp         0066C06A
 0066B82E    lea         eax,[ebp-74]
 0066B831    mov         ecx,66C8EC;'SwingLeftRightLeftRightStop'
 0066B836    mov         edx,dword ptr [ebp-4]
 0066B839    call        @UStrCat3
 0066B83E    mov         edx,dword ptr [ebp-74]
 0066B841    mov         eax,esi
 0066B843    call        005E51D8
>0066B848    jmp         0066C06A
 0066B84D    lea         eax,[ebp-78]
 0066B850    mov         ecx,66C930;'SwingLeftRightLeftRightLeftStop'
 0066B855    mov         edx,dword ptr [ebp-4]
 0066B858    call        @UStrCat3
 0066B85D    mov         edx,dword ptr [ebp-78]
 0066B860    mov         eax,esi
 0066B862    call        005E51D8
>0066B867    jmp         0066C06A
 0066B86C    lea         eax,[ebp-7C]
 0066B86F    mov         ecx,66C97C;'SwingRightStop'
 0066B874    mov         edx,dword ptr [ebp-4]
 0066B877    call        @UStrCat3
 0066B87C    mov         edx,dword ptr [ebp-7C]
 0066B87F    mov         eax,esi
 0066B881    call        005E51D8
>0066B886    jmp         0066C06A
 0066B88B    lea         eax,[ebp-80]
 0066B88E    mov         ecx,66C9A8;'SwingRightLeftStop'
 0066B893    mov         edx,dword ptr [ebp-4]
 0066B896    call        @UStrCat3
 0066B89B    mov         edx,dword ptr [ebp-80]
 0066B89E    mov         eax,esi
 0066B8A0    call        005E51D8
>0066B8A5    jmp         0066C06A
 0066B8AA    lea         eax,[ebp-84]
 0066B8B0    mov         ecx,66C9DC;'SwingRightLeftRightStop'
 0066B8B5    mov         edx,dword ptr [ebp-4]
 0066B8B8    call        @UStrCat3
 0066B8BD    mov         edx,dword ptr [ebp-84]
 0066B8C3    mov         eax,esi
 0066B8C5    call        005E51D8
>0066B8CA    jmp         0066C06A
 0066B8CF    lea         eax,[ebp-88]
 0066B8D5    mov         ecx,66CA18;'SwingRightLeftRightLeftStop'
 0066B8DA    mov         edx,dword ptr [ebp-4]
 0066B8DD    call        @UStrCat3
 0066B8E2    mov         edx,dword ptr [ebp-88]
 0066B8E8    mov         eax,esi
 0066B8EA    call        005E51D8
>0066B8EF    jmp         0066C06A
 0066B8F4    lea         eax,[ebp-8C]
 0066B8FA    mov         ecx,66CA5C;'SwingRightLeftRightLeftRightStop'
 0066B8FF    mov         edx,dword ptr [ebp-4]
 0066B902    call        @UStrCat3
 0066B907    mov         edx,dword ptr [ebp-8C]
 0066B90D    mov         eax,esi
 0066B90F    call        005E51D8
>0066B914    jmp         0066C06A
 0066B919    lea         eax,[ebp-90]
 0066B91F    mov         ecx,66CAAC;'CurveDownRight'
 0066B924    mov         edx,dword ptr [ebp-4]
 0066B927    call        @UStrCat3
 0066B92C    mov         edx,dword ptr [ebp-90]
 0066B932    mov         eax,esi
 0066B934    call        005E51D8
>0066B939    jmp         0066C06A
 0066B93E    lea         eax,[ebp-94]
 0066B944    mov         ecx,66CAD8;'CurveDownRightUp'
 0066B949    mov         edx,dword ptr [ebp-4]
 0066B94C    call        @UStrCat3
 0066B951    mov         edx,dword ptr [ebp-94]
 0066B957    mov         eax,esi
 0066B959    call        005E51D8
>0066B95E    jmp         0066C06A
 0066B963    lea         eax,[ebp-98]
 0066B969    mov         ecx,66CB08;'CurveDownRightUpDown'
 0066B96E    mov         edx,dword ptr [ebp-4]
 0066B971    call        @UStrCat3
 0066B976    mov         edx,dword ptr [ebp-98]
 0066B97C    mov         eax,esi
 0066B97E    call        005E51D8
>0066B983    jmp         0066C06A
 0066B988    lea         eax,[ebp-9C]
 0066B98E    mov         ecx,66CB40;'CurveDownRightUpDownUp'
 0066B993    mov         edx,dword ptr [ebp-4]
 0066B996    call        @UStrCat3
 0066B99B    mov         edx,dword ptr [ebp-9C]
 0066B9A1    mov         eax,esi
 0066B9A3    call        005E51D8
>0066B9A8    jmp         0066C06A
 0066B9AD    lea         eax,[ebp-0A0]
 0066B9B3    mov         ecx,66CB7C;'CurveDownRightUpDownRight'
 0066B9B8    mov         edx,dword ptr [ebp-4]
 0066B9BB    call        @UStrCat3
 0066B9C0    mov         edx,dword ptr [ebp-0A0]
 0066B9C6    mov         eax,esi
 0066B9C8    call        005E51D8
>0066B9CD    jmp         0066C06A
 0066B9D2    lea         eax,[ebp-0A4]
 0066B9D8    mov         ecx,66CBBC;'CurveDownRightUpDownRightUp'
 0066B9DD    mov         edx,dword ptr [ebp-4]
 0066B9E0    call        @UStrCat3
 0066B9E5    mov         edx,dword ptr [ebp-0A4]
 0066B9EB    mov         eax,esi
 0066B9ED    call        005E51D8
>0066B9F2    jmp         0066C06A
 0066B9F7    lea         eax,[ebp-0A8]
 0066B9FD    mov         ecx,66CC00;'CurveDownLeft'
 0066BA02    mov         edx,dword ptr [ebp-4]
 0066BA05    call        @UStrCat3
 0066BA0A    mov         edx,dword ptr [ebp-0A8]
 0066BA10    mov         eax,esi
 0066BA12    call        005E51D8
>0066BA17    jmp         0066C06A
 0066BA1C    lea         eax,[ebp-0AC]
 0066BA22    mov         ecx,66CC28;'CurveDownLeftUp'
 0066BA27    mov         edx,dword ptr [ebp-4]
 0066BA2A    call        @UStrCat3
 0066BA2F    mov         edx,dword ptr [ebp-0AC]
 0066BA35    mov         eax,esi
 0066BA37    call        005E51D8
>0066BA3C    jmp         0066C06A
 0066BA41    lea         eax,[ebp-0B0]
 0066BA47    mov         ecx,66CC54;'CurveDownLeftUpDown'
 0066BA4C    mov         edx,dword ptr [ebp-4]
 0066BA4F    call        @UStrCat3
 0066BA54    mov         edx,dword ptr [ebp-0B0]
 0066BA5A    mov         eax,esi
 0066BA5C    call        005E51D8
>0066BA61    jmp         0066C06A
 0066BA66    lea         eax,[ebp-0B4]
 0066BA6C    mov         ecx,66CC88;'CurveDownLeftUpDownUp'
 0066BA71    mov         edx,dword ptr [ebp-4]
 0066BA74    call        @UStrCat3
 0066BA79    mov         edx,dword ptr [ebp-0B4]
 0066BA7F    mov         eax,esi
 0066BA81    call        005E51D8
>0066BA86    jmp         0066C06A
 0066BA8B    lea         eax,[ebp-0B8]
 0066BA91    mov         ecx,66CCC0;'CurveDownLeftUpDownLeft'
 0066BA96    mov         edx,dword ptr [ebp-4]
 0066BA99    call        @UStrCat3
 0066BA9E    mov         edx,dword ptr [ebp-0B8]
 0066BAA4    mov         eax,esi
 0066BAA6    call        005E51D8
>0066BAAB    jmp         0066C06A
 0066BAB0    lea         eax,[ebp-0BC]
 0066BAB6    mov         ecx,66CCFC;'CurveDownLeftUpDownLeftUp'
 0066BABB    mov         edx,dword ptr [ebp-4]
 0066BABE    call        @UStrCat3
 0066BAC3    mov         edx,dword ptr [ebp-0BC]
 0066BAC9    mov         eax,esi
 0066BACB    call        005E51D8
>0066BAD0    jmp         0066C06A
 0066BAD5    lea         eax,[ebp-0C0]
 0066BADB    mov         ecx,66CD3C;'CurveUpRight'
 0066BAE0    mov         edx,dword ptr [ebp-4]
 0066BAE3    call        @UStrCat3
 0066BAE8    mov         edx,dword ptr [ebp-0C0]
 0066BAEE    mov         eax,esi
 0066BAF0    call        005E51D8
>0066BAF5    jmp         0066C06A
 0066BAFA    lea         eax,[ebp-0C4]
 0066BB00    mov         ecx,66CD64;'CurveUpRightDown'
 0066BB05    mov         edx,dword ptr [ebp-4]
 0066BB08    call        @UStrCat3
 0066BB0D    mov         edx,dword ptr [ebp-0C4]
 0066BB13    mov         eax,esi
 0066BB15    call        005E51D8
>0066BB1A    jmp         0066C06A
 0066BB1F    lea         eax,[ebp-0C8]
 0066BB25    mov         ecx,66CD94;'CurveUpRightDownUp'
 0066BB2A    mov         edx,dword ptr [ebp-4]
 0066BB2D    call        @UStrCat3
 0066BB32    mov         edx,dword ptr [ebp-0C8]
 0066BB38    mov         eax,esi
 0066BB3A    call        005E51D8
>0066BB3F    jmp         0066C06A
 0066BB44    lea         eax,[ebp-0CC]
 0066BB4A    mov         ecx,66CDC8;'CurveUpRightDownUpDown'
 0066BB4F    mov         edx,dword ptr [ebp-4]
 0066BB52    call        @UStrCat3
 0066BB57    mov         edx,dword ptr [ebp-0CC]
 0066BB5D    mov         eax,esi
 0066BB5F    call        005E51D8
>0066BB64    jmp         0066C06A
 0066BB69    lea         eax,[ebp-0D0]
 0066BB6F    mov         ecx,66CE04;'CurveUpRightDownUpRight'
 0066BB74    mov         edx,dword ptr [ebp-4]
 0066BB77    call        @UStrCat3
 0066BB7C    mov         edx,dword ptr [ebp-0D0]
 0066BB82    mov         eax,esi
 0066BB84    call        005E51D8
>0066BB89    jmp         0066C06A
 0066BB8E    lea         eax,[ebp-0D4]
 0066BB94    mov         ecx,66CE40;'CurveUpRightDownUpRightDown'
 0066BB99    mov         edx,dword ptr [ebp-4]
 0066BB9C    call        @UStrCat3
 0066BBA1    mov         edx,dword ptr [ebp-0D4]
 0066BBA7    mov         eax,esi
 0066BBA9    call        005E51D8
>0066BBAE    jmp         0066C06A
 0066BBB3    lea         eax,[ebp-0D8]
 0066BBB9    mov         ecx,66CE84;'CurveUpLeft'
 0066BBBE    mov         edx,dword ptr [ebp-4]
 0066BBC1    call        @UStrCat3
 0066BBC6    mov         edx,dword ptr [ebp-0D8]
 0066BBCC    mov         eax,esi
 0066BBCE    call        005E51D8
>0066BBD3    jmp         0066C06A
 0066BBD8    lea         eax,[ebp-0DC]
 0066BBDE    mov         ecx,66CEA8;'CurveUpLeftDown'
 0066BBE3    mov         edx,dword ptr [ebp-4]
 0066BBE6    call        @UStrCat3
 0066BBEB    mov         edx,dword ptr [ebp-0DC]
 0066BBF1    mov         eax,esi
 0066BBF3    call        005E51D8
>0066BBF8    jmp         0066C06A
 0066BBFD    lea         eax,[ebp-0E0]
 0066BC03    mov         ecx,66CED4;'CurveUpLeftDownUp'
 0066BC08    mov         edx,dword ptr [ebp-4]
 0066BC0B    call        @UStrCat3
 0066BC10    mov         edx,dword ptr [ebp-0E0]
 0066BC16    mov         eax,esi
 0066BC18    call        005E51D8
>0066BC1D    jmp         0066C06A
 0066BC22    lea         eax,[ebp-0E4]
 0066BC28    mov         ecx,66CF04;'CurveUpLeftDownUpDown'
 0066BC2D    mov         edx,dword ptr [ebp-4]
 0066BC30    call        @UStrCat3
 0066BC35    mov         edx,dword ptr [ebp-0E4]
 0066BC3B    mov         eax,esi
 0066BC3D    call        005E51D8
>0066BC42    jmp         0066C06A
 0066BC47    lea         eax,[ebp-0E8]
 0066BC4D    mov         ecx,66CF3C;'CurveUpLeftDownUpLeft'
 0066BC52    mov         edx,dword ptr [ebp-4]
 0066BC55    call        @UStrCat3
 0066BC5A    mov         edx,dword ptr [ebp-0E8]
 0066BC60    mov         eax,esi
 0066BC62    call        005E51D8
>0066BC67    jmp         0066C06A
 0066BC6C    lea         eax,[ebp-0EC]
 0066BC72    mov         ecx,66CF74;'CurveUpLeftDownUpLeftDown'
 0066BC77    mov         edx,dword ptr [ebp-4]
 0066BC7A    call        @UStrCat3
 0066BC7F    mov         edx,dword ptr [ebp-0EC]
 0066BC85    mov         eax,esi
 0066BC87    call        005E51D8
>0066BC8C    jmp         0066C06A
 0066BC91    lea         eax,[ebp-0F0]
 0066BC97    mov         ecx,66CFB4;'CurveLeftUp'
 0066BC9C    mov         edx,dword ptr [ebp-4]
 0066BC9F    call        @UStrCat3
 0066BCA4    mov         edx,dword ptr [ebp-0F0]
 0066BCAA    mov         eax,esi
 0066BCAC    call        005E51D8
>0066BCB1    jmp         0066C06A
 0066BCB6    lea         eax,[ebp-0F4]
 0066BCBC    mov         ecx,66CFD8;'CurveLeftUpRight'
 0066BCC1    mov         edx,dword ptr [ebp-4]
 0066BCC4    call        @UStrCat3
 0066BCC9    mov         edx,dword ptr [ebp-0F4]
 0066BCCF    mov         eax,esi
 0066BCD1    call        005E51D8
>0066BCD6    jmp         0066C06A
 0066BCDB    lea         eax,[ebp-0F8]
 0066BCE1    mov         ecx,66D008;'CurveLeftUpRightLeft'
 0066BCE6    mov         edx,dword ptr [ebp-4]
 0066BCE9    call        @UStrCat3
 0066BCEE    mov         edx,dword ptr [ebp-0F8]
 0066BCF4    mov         eax,esi
 0066BCF6    call        005E51D8
>0066BCFB    jmp         0066C06A
 0066BD00    lea         eax,[ebp-0FC]
 0066BD06    mov         ecx,66D040;'CurveLeftUpRightLeftRight'
 0066BD0B    mov         edx,dword ptr [ebp-4]
 0066BD0E    call        @UStrCat3
 0066BD13    mov         edx,dword ptr [ebp-0FC]
 0066BD19    mov         eax,esi
 0066BD1B    call        005E51D8
>0066BD20    jmp         0066C06A
 0066BD25    lea         eax,[ebp-100]
 0066BD2B    mov         ecx,66D080;'CurveLeftUpRightLeftUp'
 0066BD30    mov         edx,dword ptr [ebp-4]
 0066BD33    call        @UStrCat3
 0066BD38    mov         edx,dword ptr [ebp-100]
 0066BD3E    mov         eax,esi
 0066BD40    call        005E51D8
>0066BD45    jmp         0066C06A
 0066BD4A    lea         eax,[ebp-104]
 0066BD50    mov         ecx,66D0BC;'CurveLeftUpRightLeftUpRight'
 0066BD55    mov         edx,dword ptr [ebp-4]
 0066BD58    call        @UStrCat3
 0066BD5D    mov         edx,dword ptr [ebp-104]
 0066BD63    mov         eax,esi
 0066BD65    call        005E51D8
>0066BD6A    jmp         0066C06A
 0066BD6F    lea         eax,[ebp-108]
 0066BD75    mov         ecx,66D100;'CurveLeftDown'
 0066BD7A    mov         edx,dword ptr [ebp-4]
 0066BD7D    call        @UStrCat3
 0066BD82    mov         edx,dword ptr [ebp-108]
 0066BD88    mov         eax,esi
 0066BD8A    call        005E51D8
>0066BD8F    jmp         0066C06A
 0066BD94    lea         eax,[ebp-10C]
 0066BD9A    mov         ecx,66D128;'CurveLeftDownRight'
 0066BD9F    mov         edx,dword ptr [ebp-4]
 0066BDA2    call        @UStrCat3
 0066BDA7    mov         edx,dword ptr [ebp-10C]
 0066BDAD    mov         eax,esi
 0066BDAF    call        005E51D8
>0066BDB4    jmp         0066C06A
 0066BDB9    lea         eax,[ebp-110]
 0066BDBF    mov         ecx,66D15C;'CurveLeftDownRightLeft'
 0066BDC4    mov         edx,dword ptr [ebp-4]
 0066BDC7    call        @UStrCat3
 0066BDCC    mov         edx,dword ptr [ebp-110]
 0066BDD2    mov         eax,esi
 0066BDD4    call        005E51D8
>0066BDD9    jmp         0066C06A
 0066BDDE    lea         eax,[ebp-114]
 0066BDE4    mov         ecx,66D198;'CurveLeftDownRightLeftRight'
 0066BDE9    mov         edx,dword ptr [ebp-4]
 0066BDEC    call        @UStrCat3
 0066BDF1    mov         edx,dword ptr [ebp-114]
 0066BDF7    mov         eax,esi
 0066BDF9    call        005E51D8
>0066BDFE    jmp         0066C06A
 0066BE03    lea         eax,[ebp-118]
 0066BE09    mov         ecx,66D1DC;'CurveLeftDownRightLeftDown'
 0066BE0E    mov         edx,dword ptr [ebp-4]
 0066BE11    call        @UStrCat3
 0066BE16    mov         edx,dword ptr [ebp-118]
 0066BE1C    mov         eax,esi
 0066BE1E    call        005E51D8
>0066BE23    jmp         0066C06A
 0066BE28    lea         eax,[ebp-11C]
 0066BE2E    mov         ecx,66D220;'CurveLeftDownRightLeftDownRight'
 0066BE33    mov         edx,dword ptr [ebp-4]
 0066BE36    call        @UStrCat3
 0066BE3B    mov         edx,dword ptr [ebp-11C]
 0066BE41    mov         eax,esi
 0066BE43    call        005E51D8
>0066BE48    jmp         0066C06A
 0066BE4D    lea         eax,[ebp-120]
 0066BE53    mov         ecx,66D26C;'CurveRightUp'
 0066BE58    mov         edx,dword ptr [ebp-4]
 0066BE5B    call        @UStrCat3
 0066BE60    mov         edx,dword ptr [ebp-120]
 0066BE66    mov         eax,esi
 0066BE68    call        005E51D8
>0066BE6D    jmp         0066C06A
 0066BE72    lea         eax,[ebp-124]
 0066BE78    mov         ecx,66D294;'CurveRightUpLeft'
 0066BE7D    mov         edx,dword ptr [ebp-4]
 0066BE80    call        @UStrCat3
 0066BE85    mov         edx,dword ptr [ebp-124]
 0066BE8B    mov         eax,esi
 0066BE8D    call        005E51D8
>0066BE92    jmp         0066C06A
 0066BE97    lea         eax,[ebp-128]
 0066BE9D    mov         ecx,66D2C4;'CurveRightUpLeftRight'
 0066BEA2    mov         edx,dword ptr [ebp-4]
 0066BEA5    call        @UStrCat3
 0066BEAA    mov         edx,dword ptr [ebp-128]
 0066BEB0    mov         eax,esi
 0066BEB2    call        005E51D8
>0066BEB7    jmp         0066C06A
 0066BEBC    lea         eax,[ebp-12C]
 0066BEC2    mov         ecx,66D2FC;'CurveRightUpLeftRightLeft'
 0066BEC7    mov         edx,dword ptr [ebp-4]
 0066BECA    call        @UStrCat3
 0066BECF    mov         edx,dword ptr [ebp-12C]
 0066BED5    mov         eax,esi
 0066BED7    call        005E51D8
>0066BEDC    jmp         0066C06A
 0066BEE1    lea         eax,[ebp-130]
 0066BEE7    mov         ecx,66D33C;'CurveRightUpLeftRightUp'
 0066BEEC    mov         edx,dword ptr [ebp-4]
 0066BEEF    call        @UStrCat3
 0066BEF4    mov         edx,dword ptr [ebp-130]
 0066BEFA    mov         eax,esi
 0066BEFC    call        005E51D8
>0066BF01    jmp         0066C06A
 0066BF06    lea         eax,[ebp-134]
 0066BF0C    mov         ecx,66D378;'CurveRightUpLeftRightUpLeft'
 0066BF11    mov         edx,dword ptr [ebp-4]
 0066BF14    call        @UStrCat3
 0066BF19    mov         edx,dword ptr [ebp-134]
 0066BF1F    mov         eax,esi
 0066BF21    call        005E51D8
>0066BF26    jmp         0066C06A
 0066BF2B    lea         eax,[ebp-138]
 0066BF31    mov         ecx,66D3BC;'CurveRightDown'
 0066BF36    mov         edx,dword ptr [ebp-4]
 0066BF39    call        @UStrCat3
 0066BF3E    mov         edx,dword ptr [ebp-138]
 0066BF44    mov         eax,esi
 0066BF46    call        005E51D8
>0066BF4B    jmp         0066C06A
 0066BF50    lea         eax,[ebp-13C]
 0066BF56    mov         ecx,66D3E8;'CurveRightDownLeft'
 0066BF5B    mov         edx,dword ptr [ebp-4]
 0066BF5E    call        @UStrCat3
 0066BF63    mov         edx,dword ptr [ebp-13C]
 0066BF69    mov         eax,esi
 0066BF6B    call        005E51D8
>0066BF70    jmp         0066C06A
 0066BF75    lea         eax,[ebp-140]
 0066BF7B    mov         ecx,66D41C;'CurveRightDownLeftRight'
 0066BF80    mov         edx,dword ptr [ebp-4]
 0066BF83    call        @UStrCat3
 0066BF88    mov         edx,dword ptr [ebp-140]
 0066BF8E    mov         eax,esi
 0066BF90    call        005E51D8
>0066BF95    jmp         0066C06A
 0066BF9A    lea         eax,[ebp-144]
 0066BFA0    mov         ecx,66D458;'CurveRightDownLeftRightLeft'
 0066BFA5    mov         edx,dword ptr [ebp-4]
 0066BFA8    call        @UStrCat3
 0066BFAD    mov         edx,dword ptr [ebp-144]
 0066BFB3    mov         eax,esi
 0066BFB5    call        005E51D8
>0066BFBA    jmp         0066C06A
 0066BFBF    lea         eax,[ebp-148]
 0066BFC5    mov         ecx,66D49C;'CurveRightDownLeftRightDown'
 0066BFCA    mov         edx,dword ptr [ebp-4]
 0066BFCD    call        @UStrCat3
 0066BFD2    mov         edx,dword ptr [ebp-148]
 0066BFD8    mov         eax,esi
 0066BFDA    call        005E51D8
>0066BFDF    jmp         0066C06A
 0066BFE4    lea         eax,[ebp-14C]
 0066BFEA    mov         ecx,66D4E0;'CurveRightDownLeftRightDownLeft'
 0066BFEF    mov         edx,dword ptr [ebp-4]
 0066BFF2    call        @UStrCat3
 0066BFF7    mov         edx,dword ptr [ebp-14C]
 0066BFFD    mov         eax,esi
 0066BFFF    call        005E51D8
>0066C004    jmp         0066C06A
 0066C006    lea         eax,[ebp-150]
 0066C00C    mov         ecx,66D52C;'CircleAnticlockwise'
 0066C011    mov         edx,dword ptr [ebp-4]
 0066C014    call        @UStrCat3
 0066C019    mov         edx,dword ptr [ebp-150]
 0066C01F    mov         eax,esi
 0066C021    call        005E51D8
>0066C026    jmp         0066C06A
 0066C028    lea         eax,[ebp-154]
 0066C02E    mov         ecx,66D560;'CircleClockwise'
 0066C033    mov         edx,dword ptr [ebp-4]
 0066C036    call        @UStrCat3
 0066C03B    mov         edx,dword ptr [ebp-154]
 0066C041    mov         eax,esi
 0066C043    call        005E51D8
>0066C048    jmp         0066C06A
 0066C04A    lea         eax,[ebp-158]
 0066C050    mov         ecx,66D58C;'ERROR'
 0066C055    mov         edx,dword ptr [ebp-4]
 0066C058    call        @UStrCat3
 0066C05D    mov         edx,dword ptr [ebp-158]
 0066C063    mov         eax,esi
 0066C065    call        005E51D8
 0066C06A    movzx       eax,byte ptr [ebx+42F]
 0066C071    add         eax,0FFFFFFFB
 0066C074    cmp         eax,41
>0066C077    ja          0066C449
 0066C07D    movzx       eax,byte ptr [eax+66C08B]
 0066C084    jmp         dword ptr [eax*4+66C0CD]
 0066C084    db          3
 0066C084    db          0
 0066C084    db          0
 0066C084    db          0
 0066C084    db          8
 0066C084    db          0
 0066C084    db          7
 0066C084    db          0
 0066C084    db          0
 0066C084    db          0
 0066C084    db          10
 0066C084    db          0
 0066C084    db          9
 0066C084    db          0
 0066C084    db          0
 0066C084    db          0
 0066C084    db          0
 0066C084    db          4
 0066C084    db          0
 0066C084    db          0
 0066C084    db          0
 0066C084    db          12
 0066C084    db          0
 0066C084    db          11
 0066C084    db          0
 0066C084    db          0
 0066C084    db          0
 0066C084    db          14
 0066C084    db          0
 0066C084    db          13
 0066C084    db          0
 0066C084    db          0
 0066C084    db          0
 0066C084    db          0
 0066C084    db          5
 0066C084    db          0
 0066C084    db          0
 0066C084    db          0
 0066C084    db          16
 0066C084    db          0
 0066C084    db          15
 0066C084    db          0
 0066C084    db          0
 0066C084    db          0
 0066C084    db          18
 0066C084    db          0
 0066C084    db          17
 0066C084    db          0
 0066C084    db          0
 0066C084    db          0
 0066C084    db          0
 0066C084    db          6
 0066C084    db          0
 0066C084    db          0
 0066C084    db          0
 0066C084    db          20
 0066C084    db          0
 0066C084    db          19
 0066C084    db          0
 0066C084    db          0
 0066C084    db          0
 0066C084    db          22
 0066C084    db          0
 0066C084    db          21
 0066C084    db          1
 0066C084    db          2
 0066C084    dd          0066C449
 0066C084    dd          0066C129
 0066C084    dd          0066C14E
 0066C084    dd          0066C173
 0066C084    dd          0066C198
 0066C084    dd          0066C1BD
 0066C084    dd          0066C1E2
 0066C084    dd          0066C207
 0066C084    dd          0066C22C
 0066C084    dd          0066C251
 0066C084    dd          0066C276
 0066C084    dd          0066C29B
 0066C084    dd          0066C2C0
 0066C084    dd          0066C2E5
 0066C084    dd          0066C30A
 0066C084    dd          0066C32F
 0066C084    dd          0066C354
 0066C084    dd          0066C379
 0066C084    dd          0066C39E
 0066C084    dd          0066C3C3
 0066C084    dd          0066C3E5
 0066C084    dd          0066C407
 0066C084    dd          0066C429
 0066C129    lea         eax,[ebp-15C]
 0066C12F    mov         ecx,66D52C;'CircleAnticlockwise'
 0066C134    mov         edx,dword ptr [ebp-4]
 0066C137    call        @UStrCat3
 0066C13C    mov         edx,dword ptr [ebp-15C]
 0066C142    mov         eax,esi
 0066C144    call        005E51D8
>0066C149    jmp         0066C449
 0066C14E    lea         eax,[ebp-160]
 0066C154    mov         ecx,66D560;'CircleClockwise'
 0066C159    mov         edx,dword ptr [ebp-4]
 0066C15C    call        @UStrCat3
 0066C161    mov         edx,dword ptr [ebp-160]
 0066C167    mov         eax,esi
 0066C169    call        005E51D8
>0066C16E    jmp         0066C449
 0066C173    lea         eax,[ebp-164]
 0066C179    mov         ecx,66D5A4;'SwingDownUpDownUpDown'
 0066C17E    mov         edx,dword ptr [ebp-4]
 0066C181    call        @UStrCat3
 0066C186    mov         edx,dword ptr [ebp-164]
 0066C18C    mov         eax,esi
 0066C18E    call        005E51D8
>0066C193    jmp         0066C449
 0066C198    lea         eax,[ebp-168]
 0066C19E    mov         ecx,66D5DC;'SwingUpDownUpDownUp'
 0066C1A3    mov         edx,dword ptr [ebp-4]
 0066C1A6    call        @UStrCat3
 0066C1AB    mov         edx,dword ptr [ebp-168]
 0066C1B1    mov         eax,esi
 0066C1B3    call        005E51D8
>0066C1B8    jmp         0066C449
 0066C1BD    lea         eax,[ebp-16C]
 0066C1C3    mov         ecx,66D610;'SwingLeftRightLeftRightLeft'
 0066C1C8    mov         edx,dword ptr [ebp-4]
 0066C1CB    call        @UStrCat3
 0066C1D0    mov         edx,dword ptr [ebp-16C]
 0066C1D6    mov         eax,esi
 0066C1D8    call        005E51D8
>0066C1DD    jmp         0066C449
 0066C1E2    lea         eax,[ebp-170]
 0066C1E8    mov         ecx,66D654;'SwingRightLeftRightLeftRight'
 0066C1ED    mov         edx,dword ptr [ebp-4]
 0066C1F0    call        @UStrCat3
 0066C1F5    mov         edx,dword ptr [ebp-170]
 0066C1FB    mov         eax,esi
 0066C1FD    call        005E51D8
>0066C202    jmp         0066C449
 0066C207    lea         eax,[ebp-174]
 0066C20D    mov         ecx,66CBBC;'CurveDownRightUpDownRightUp'
 0066C212    mov         edx,dword ptr [ebp-4]
 0066C215    call        @UStrCat3
 0066C21A    mov         edx,dword ptr [ebp-174]
 0066C220    mov         eax,esi
 0066C222    call        005E51D8
>0066C227    jmp         0066C449
 0066C22C    lea         eax,[ebp-178]
 0066C232    mov         ecx,66CB40;'CurveDownRightUpDownUp'
 0066C237    mov         edx,dword ptr [ebp-4]
 0066C23A    call        @UStrCat3
 0066C23F    mov         edx,dword ptr [ebp-178]
 0066C245    mov         eax,esi
 0066C247    call        005E51D8
>0066C24C    jmp         0066C449
 0066C251    lea         eax,[ebp-17C]
 0066C257    mov         ecx,66CCFC;'CurveDownLeftUpDownLeftUp'
 0066C25C    mov         edx,dword ptr [ebp-4]
 0066C25F    call        @UStrCat3
 0066C264    mov         edx,dword ptr [ebp-17C]
 0066C26A    mov         eax,esi
 0066C26C    call        005E51D8
>0066C271    jmp         0066C449
 0066C276    lea         eax,[ebp-180]
 0066C27C    mov         ecx,66CC88;'CurveDownLeftUpDownUp'
 0066C281    mov         edx,dword ptr [ebp-4]
 0066C284    call        @UStrCat3
 0066C289    mov         edx,dword ptr [ebp-180]
 0066C28F    mov         eax,esi
 0066C291    call        005E51D8
>0066C296    jmp         0066C449
 0066C29B    lea         eax,[ebp-184]
 0066C2A1    mov         ecx,66CE40;'CurveUpRightDownUpRightDown'
 0066C2A6    mov         edx,dword ptr [ebp-4]
 0066C2A9    call        @UStrCat3
 0066C2AE    mov         edx,dword ptr [ebp-184]
 0066C2B4    mov         eax,esi
 0066C2B6    call        005E51D8
>0066C2BB    jmp         0066C449
 0066C2C0    lea         eax,[ebp-188]
 0066C2C6    mov         ecx,66CDC8;'CurveUpRightDownUpDown'
 0066C2CB    mov         edx,dword ptr [ebp-4]
 0066C2CE    call        @UStrCat3
 0066C2D3    mov         edx,dword ptr [ebp-188]
 0066C2D9    mov         eax,esi
 0066C2DB    call        005E51D8
>0066C2E0    jmp         0066C449
 0066C2E5    lea         eax,[ebp-18C]
 0066C2EB    mov         ecx,66CF74;'CurveUpLeftDownUpLeftDown'
 0066C2F0    mov         edx,dword ptr [ebp-4]
 0066C2F3    call        @UStrCat3
 0066C2F8    mov         edx,dword ptr [ebp-18C]
 0066C2FE    mov         eax,esi
 0066C300    call        005E51D8
>0066C305    jmp         0066C449
 0066C30A    lea         eax,[ebp-190]
 0066C310    mov         ecx,66CF04;'CurveUpLeftDownUpDown'
 0066C315    mov         edx,dword ptr [ebp-4]
 0066C318    call        @UStrCat3
 0066C31D    mov         edx,dword ptr [ebp-190]
 0066C323    mov         eax,esi
 0066C325    call        005E51D8
>0066C32A    jmp         0066C449
 0066C32F    lea         eax,[ebp-194]
 0066C335    mov         ecx,66D0BC;'CurveLeftUpRightLeftUpRight'
 0066C33A    mov         edx,dword ptr [ebp-4]
 0066C33D    call        @UStrCat3
 0066C342    mov         edx,dword ptr [ebp-194]
 0066C348    mov         eax,esi
 0066C34A    call        005E51D8
>0066C34F    jmp         0066C449
 0066C354    lea         eax,[ebp-198]
 0066C35A    mov         ecx,66D040;'CurveLeftUpRightLeftRight'
 0066C35F    mov         edx,dword ptr [ebp-4]
 0066C362    call        @UStrCat3
 0066C367    mov         edx,dword ptr [ebp-198]
 0066C36D    mov         eax,esi
 0066C36F    call        005E51D8
>0066C374    jmp         0066C449
 0066C379    lea         eax,[ebp-19C]
 0066C37F    mov         ecx,66D220;'CurveLeftDownRightLeftDownRight'
 0066C384    mov         edx,dword ptr [ebp-4]
 0066C387    call        @UStrCat3
 0066C38C    mov         edx,dword ptr [ebp-19C]
 0066C392    mov         eax,esi
 0066C394    call        005E51D8
>0066C399    jmp         0066C449
 0066C39E    lea         eax,[ebp-1A0]
 0066C3A4    mov         ecx,66D198;'CurveLeftDownRightLeftRight'
 0066C3A9    mov         edx,dword ptr [ebp-4]
 0066C3AC    call        @UStrCat3
 0066C3B1    mov         edx,dword ptr [ebp-1A0]
 0066C3B7    mov         eax,esi
 0066C3B9    call        005E51D8
>0066C3BE    jmp         0066C449
 0066C3C3    lea         eax,[ebp-1A4]
 0066C3C9    mov         ecx,66D378;'CurveRightUpLeftRightUpLeft'
 0066C3CE    mov         edx,dword ptr [ebp-4]
 0066C3D1    call        @UStrCat3
 0066C3D6    mov         edx,dword ptr [ebp-1A4]
 0066C3DC    mov         eax,esi
 0066C3DE    call        005E51D8
>0066C3E3    jmp         0066C449
 0066C3E5    lea         eax,[ebp-1A8]
 0066C3EB    mov         ecx,66D2FC;'CurveRightUpLeftRightLeft'
 0066C3F0    mov         edx,dword ptr [ebp-4]
 0066C3F3    call        @UStrCat3
 0066C3F8    mov         edx,dword ptr [ebp-1A8]
 0066C3FE    mov         eax,esi
 0066C400    call        005E51D8
>0066C405    jmp         0066C449
 0066C407    lea         eax,[ebp-1AC]
 0066C40D    mov         ecx,66D4E0;'CurveRightDownLeftRightDownLeft'
 0066C412    mov         edx,dword ptr [ebp-4]
 0066C415    call        @UStrCat3
 0066C41A    mov         edx,dword ptr [ebp-1AC]
 0066C420    mov         eax,esi
 0066C422    call        005E51D8
>0066C427    jmp         0066C449
 0066C429    lea         eax,[ebp-1B0]
 0066C42F    mov         ecx,66D458;'CurveRightDownLeftRightLeft'
 0066C434    mov         edx,dword ptr [ebp-4]
 0066C437    call        @UStrCat3
 0066C43C    mov         edx,dword ptr [ebp-1B0]
 0066C442    mov         eax,esi
 0066C444    call        005E51D8
 0066C449    inc         edi
 0066C44A    dec         dword ptr [ebp-8]
>0066C44D    jne         0066B341
 0066C453    mov         eax,esi
 0066C455    call        005E509C
 0066C45A    xor         eax,eax
 0066C45C    pop         edx
 0066C45D    pop         ecx
 0066C45E    pop         ecx
 0066C45F    mov         dword ptr fs:[eax],edx
 0066C462    push        66C494
 0066C467    lea         eax,[ebp-1B0]
 0066C46D    mov         edx,64
 0066C472    call        @UStrArrayClr
 0066C477    lea         eax,[ebp-20]
 0066C47A    mov         edx,6
 0066C47F    call        @UStrArrayClr
 0066C484    lea         eax,[ebp-4]
 0066C487    call        @UStrClr
 0066C48C    ret
>0066C48D    jmp         @HandleFinally
>0066C492    jmp         0066C467
 0066C494    pop         edi
 0066C495    pop         esi
 0066C496    pop         ebx
 0066C497    mov         esp,ebp
 0066C499    pop         ebp
 0066C49A    ret
*}
end;

//0066D690
procedure TModuleNunchuk.PrepareForGUI;
begin
{*
 0066D690    ret
*}
end;

//0066D694
procedure TModuleNunchuk.PrepareForMonitoring;
begin
{*
 0066D694    ret
*}
end;

//0066D698
function TModuleNunchuk.Read:Boolean;
begin
{*
 0066D698    push        ebx
 0066D699    cmp         byte ptr ds:[81ECBC],0;gvar_0081ECBC
>0066D6A0    jne         0066D6B7
 0066D6A2    mov         bl,1
 0066D6A4    call        0074BF10
 0066D6A9    call        TWiimoteManager.ReadWiimotes
 0066D6AE    mov         byte ptr ds:[81ECBC],1;gvar_0081ECBC
>0066D6B5    jmp         0066D6B9
 0066D6B7    mov         bl,1
 0066D6B9    mov         eax,ebx
 0066D6BB    pop         ebx
 0066D6BC    ret
*}
end;

//0066D6C0
procedure TModuleNunchuk.StartCompiletime;
begin
{*
 0066D6C0    call        TPieModule.StartCompiletime
 0066D6C5    cmp         byte ptr ds:[81ECBD],0;gvar_0081ECBD
>0066D6CC    jne         0066D6DF
 0066D6CE    mov         byte ptr ds:[81ECBD],1;gvar_0081ECBD
 0066D6D5    call        0074BF10
 0066D6DA    call        TWiimoteManager.StartCompileTime
 0066D6DF    ret
*}
end;

//0066D6E0
procedure TModuleNunchuk.StartGUI;
begin
{*
 0066D6E0    call        0074BF10
 0066D6E5    call        TWiimoteManager.StartGUI
 0066D6EA    ret
*}
end;

//0066D6EC
procedure TModuleNunchuk.StartMonitoring;
begin
{*
 0066D6EC    push        ebx
 0066D6ED    mov         ebx,eax
 0066D6EF    mov         byte ptr [ebx+28],1;TModuleNunchuk.Monitoring:Boolean
 0066D6F3    mov         eax,dword ptr [ebx+30];TModuleNunchuk.OldButtonsDown:TStringList
 0066D6F6    mov         edx,dword ptr [eax]
 0066D6F8    call        dword ptr [edx+44];TStringList.Clear
 0066D6FB    mov         eax,dword ptr [ebx+2C];TModuleNunchuk.ButtonsDown:TStringList
 0066D6FE    mov         edx,dword ptr [eax]
 0066D700    call        dword ptr [edx+44];TStringList.Clear
 0066D703    pop         ebx
 0066D704    ret
*}
end;

//0066D708
procedure TModuleNunchuk.StartRuntime;
begin
{*
 0066D708    call        TPieModule.StartRuntime
 0066D70D    call        0074BF10
 0066D712    call        TWiimoteManager.StartRuntime
 0066D717    ret
*}
end;

//0066D718
procedure TModuleNunchuk.StopCompiletime;
begin
{*
 0066D718    mov         byte ptr ds:[81ECBD],0;gvar_0081ECBD
 0066D71F    call        TPieModule.StopCompiletime
 0066D724    ret
*}
end;

//0066D728
procedure TModuleNunchuk.StopGUI;
begin
{*
 0066D728    call        0074BF10
 0066D72D    call        TWiimoteManager.StopGUI
 0066D732    ret
*}
end;

//0066D734
procedure TModuleNunchuk.StopMonitoring;
begin
{*
 0066D734    mov         byte ptr [eax+28],0;TModuleNunchuk.Monitoring:Boolean
 0066D738    ret
*}
end;

//0066D73C
procedure TModuleNunchuk.StopRuntime;
begin
{*
 0066D73C    push        ebx
 0066D73D    mov         ebx,eax
 0066D73F    call        0074BF10
 0066D744    call        TWiimoteManager.StopRuntime
 0066D749    mov         eax,ebx
 0066D74B    call        TPieModule.StopRuntime
 0066D750    pop         ebx
 0066D751    ret
*}
end;

//0066D754
procedure TModuleClassic.ClearRead;
begin
{*
 0066D754    call        TPieModule.ClearRead
 0066D759    mov         byte ptr ds:[81ECBC],0;gvar_0081ECBC
 0066D760    ret
*}
end;

//0066D764
constructor TModuleClassic.Create;
begin
{*
 0066D764    push        ebx
 0066D765    push        esi
 0066D766    test        dl,dl
>0066D768    je          0066D772
 0066D76A    add         esp,0FFFFFFF0
 0066D76D    call        @ClassCreate
 0066D772    mov         ebx,edx
 0066D774    mov         esi,eax
 0066D776    push        66D7B8;'ClassicController'
 0066D77B    push        0
 0066D77D    push        0
 0066D77F    push        0
 0066D781    mov         ecx,66D7E8;'Classic'
 0066D786    xor         edx,edx
 0066D788    mov         eax,esi
 0066D78A    call        005E4830
 0066D78F    mov         eax,esi
 0066D791    test        bl,bl
>0066D793    je          0066D7A4
 0066D795    call        @AfterConstruction
 0066D79A    pop         dword ptr fs:[0]
 0066D7A1    add         esp,0C
 0066D7A4    mov         eax,esi
 0066D7A6    pop         esi
 0066D7A7    pop         ebx
 0066D7A8    ret
*}
end;

//0066D7F8
function TModuleClassic.CreateValue(Identifier:string):TExpression;
begin
{*
 0066D7F8    push        ebp
 0066D7F9    mov         ebp,esp
 0066D7FB    push        ecx
 0066D7FC    push        ebx
 0066D7FD    mov         dword ptr [ebp-4],edx
 0066D800    mov         ebx,eax
 0066D802    mov         eax,dword ptr [ebp-4]
 0066D805    call        @UStrAddRef
 0066D80A    xor         eax,eax
 0066D80C    push        ebp
 0066D80D    push        66D842
 0066D812    push        dword ptr fs:[eax]
 0066D815    mov         dword ptr fs:[eax],esp
 0066D818    mov         edx,dword ptr [ebp-4]
 0066D81B    mov         eax,ebx
 0066D81D    call        TPieModule.CreateValue
 0066D822    mov         eax,dword ptr [ebp-4]
 0066D825    call        00654EA8
 0066D82A    mov         ebx,eax
 0066D82C    xor         eax,eax
 0066D82E    pop         edx
 0066D82F    pop         ecx
 0066D830    pop         ecx
 0066D831    mov         dword ptr fs:[eax],edx
 0066D834    push        66D849
 0066D839    lea         eax,[ebp-4]
 0066D83C    call        @UStrClr
 0066D841    ret
>0066D842    jmp         @HandleFinally
>0066D847    jmp         0066D839
 0066D849    mov         eax,ebx
 0066D84B    pop         ebx
 0066D84C    pop         ecx
 0066D84D    pop         ebp
 0066D84E    ret
*}
end;

//0066D850
procedure TModuleClassic.GetFields;
begin
{*
 0066D850    call        0065360C
 0066D855    ret
*}
end;

//0066D858
procedure TModuleClassic.GetGoodFields;
begin
{*
 0066D858    call        0065360C
 0066D85D    ret
*}
end;

//0066D860
procedure TModuleClassic.GetRange(blank:Boolean; min:Integer; max:Integer);
begin
{*
 0066D860    push        ebp
 0066D861    mov         ebp,esp
 0066D863    mov         byte ptr [edx],1
 0066D866    mov         dword ptr [ecx],1
 0066D86C    mov         eax,dword ptr [ebp+8]
 0066D86F    mov         dword ptr [eax],14
 0066D875    pop         ebp
 0066D876    ret         4
*}
end;

//0066D87C
procedure TModuleClassic.MonitorFrame;
begin
{*
 0066D87C    push        ebp
 0066D87D    mov         ebp,esp
 0066D87F    mov         ecx,9
 0066D884    push        0
 0066D886    push        0
 0066D888    dec         ecx
>0066D889    jne         0066D884
 0066D88B    push        ecx
 0066D88C    push        ebx
 0066D88D    push        esi
 0066D88E    push        edi
 0066D88F    mov         esi,eax
 0066D891    xor         eax,eax
 0066D893    push        ebp
 0066D894    push        66DBAF
 0066D899    push        dword ptr fs:[eax]
 0066D89C    mov         dword ptr fs:[eax],esp
 0066D89F    cmp         byte ptr [esi+28],0;TModuleClassic.Monitoring:Boolean
>0066D8A3    je          0066DB8C
 0066D8A9    mov         eax,esi
 0066D8AB    mov         edx,dword ptr [eax]
 0066D8AD    call        dword ptr [edx+3C];TModuleClassic.Read
 0066D8B0    test        al,al
>0066D8B2    je          0066DB8C
 0066D8B8    call        0074BF10
 0066D8BD    mov         eax,dword ptr [eax+4C]
 0066D8C0    mov         eax,dword ptr [eax+8]
 0066D8C3    dec         eax
 0066D8C4    test        eax,eax
>0066D8C6    jl          0066DB85
 0066D8CC    inc         eax
 0066D8CD    mov         dword ptr [ebp-8],eax
 0066D8D0    xor         edi,edi
 0066D8D2    call        0074BF10
 0066D8D7    mov         ebx,dword ptr [eax+4C]
 0066D8DA    mov         edx,edi
 0066D8DC    mov         eax,ebx
 0066D8DE    call        TList.Get
 0066D8E3    mov         ebx,eax
 0066D8E5    test        ebx,ebx
>0066D8E7    je          0066DB7B
 0066D8ED    test        edi,edi
>0066D8EF    jne         0066D900
 0066D8F1    lea         eax,[ebp-4]
 0066D8F4    mov         edx,66DBCC;'Classic.'
 0066D8F9    call        @UStrLAsg
>0066D8FE    jmp         0066D925
 0066D900    push        66DBEC;'Classic'
 0066D905    lea         edx,[ebp-0C]
 0066D908    lea         eax,[edi+1]
 0066D90B    call        IntToStr
 0066D910    push        dword ptr [ebp-0C]
 0066D913    push        66DC08;'.'
 0066D918    lea         eax,[ebp-4]
 0066D91B    mov         edx,3
 0066D920    call        @UStrCatN
 0066D925    mov         ebx,dword ptr [ebx+4B8]
 0066D92B    mov         eax,ebx
 0066D92D    call        TClassicObject.A
 0066D932    test        al,al
>0066D934    je          0066D950
 0066D936    lea         eax,[ebp-10]
 0066D939    mov         ecx,66DC18;'A'
 0066D93E    mov         edx,dword ptr [ebp-4]
 0066D941    call        @UStrCat3
 0066D946    mov         edx,dword ptr [ebp-10]
 0066D949    mov         eax,esi
 0066D94B    call        005E4F20
 0066D950    mov         eax,ebx
 0066D952    call        TClassicObject.B
 0066D957    test        al,al
>0066D959    je          0066D975
 0066D95B    lea         eax,[ebp-14]
 0066D95E    mov         ecx,66DC28;'B'
 0066D963    mov         edx,dword ptr [ebp-4]
 0066D966    call        @UStrCat3
 0066D96B    mov         edx,dword ptr [ebp-14]
 0066D96E    mov         eax,esi
 0066D970    call        005E4F20
 0066D975    mov         eax,ebx
 0066D977    call        TClassicObject.X
 0066D97C    test        al,al
>0066D97E    je          0066D99A
 0066D980    lea         eax,[ebp-18]
 0066D983    mov         ecx,66DC38;'X'
 0066D988    mov         edx,dword ptr [ebp-4]
 0066D98B    call        @UStrCat3
 0066D990    mov         edx,dword ptr [ebp-18]
 0066D993    mov         eax,esi
 0066D995    call        005E4F20
 0066D99A    mov         eax,ebx
 0066D99C    call        TClassicObject.Y
 0066D9A1    test        al,al
>0066D9A3    je          0066D9BF
 0066D9A5    lea         eax,[ebp-1C]
 0066D9A8    mov         ecx,66DC48;'Y'
 0066D9AD    mov         edx,dword ptr [ebp-4]
 0066D9B0    call        @UStrCat3
 0066D9B5    mov         edx,dword ptr [ebp-1C]
 0066D9B8    mov         eax,esi
 0066D9BA    call        005E4F20
 0066D9BF    mov         eax,ebx
 0066D9C1    call        TClassicObject.Plus
 0066D9C6    test        al,al
>0066D9C8    je          0066D9E4
 0066D9CA    lea         eax,[ebp-20]
 0066D9CD    mov         ecx,66DC58;'Plus'
 0066D9D2    mov         edx,dword ptr [ebp-4]
 0066D9D5    call        @UStrCat3
 0066D9DA    mov         edx,dword ptr [ebp-20]
 0066D9DD    mov         eax,esi
 0066D9DF    call        005E4F20
 0066D9E4    mov         eax,ebx
 0066D9E6    call        TClassicObject.HOME
 0066D9EB    test        al,al
>0066D9ED    je          0066DA09
 0066D9EF    lea         eax,[ebp-24]
 0066D9F2    mov         ecx,66DC70;'Home'
 0066D9F7    mov         edx,dword ptr [ebp-4]
 0066D9FA    call        @UStrCat3
 0066D9FF    mov         edx,dword ptr [ebp-24]
 0066DA02    mov         eax,esi
 0066DA04    call        005E4F20
 0066DA09    mov         eax,ebx
 0066DA0B    call        TClassicObject.Minus
 0066DA10    test        al,al
>0066DA12    je          0066DA2E
 0066DA14    lea         eax,[ebp-28]
 0066DA17    mov         ecx,66DC88;'Minus'
 0066DA1C    mov         edx,dword ptr [ebp-4]
 0066DA1F    call        @UStrCat3
 0066DA24    mov         edx,dword ptr [ebp-28]
 0066DA27    mov         eax,esi
 0066DA29    call        005E4F20
 0066DA2E    mov         eax,ebx
 0066DA30    call        TClassicObject.Unused
 0066DA35    test        al,al
>0066DA37    je          0066DA53
 0066DA39    lea         eax,[ebp-2C]
 0066DA3C    mov         ecx,66DCA0;'Unused'
 0066DA41    mov         edx,dword ptr [ebp-4]
 0066DA44    call        @UStrCat3
 0066DA49    mov         edx,dword ptr [ebp-2C]
 0066DA4C    mov         eax,esi
 0066DA4E    call        005E4F20
 0066DA53    mov         eax,ebx
 0066DA55    call        TClassicObject.LFull
 0066DA5A    test        al,al
>0066DA5C    je          0066DA78
 0066DA5E    lea         eax,[ebp-30]
 0066DA61    mov         ecx,66DCBC;'LFull'
 0066DA66    mov         edx,dword ptr [ebp-4]
 0066DA69    call        @UStrCat3
 0066DA6E    mov         edx,dword ptr [ebp-30]
 0066DA71    mov         eax,esi
 0066DA73    call        005E4F20
 0066DA78    mov         eax,ebx
 0066DA7A    call        TClassicObject.ZL
 0066DA7F    test        al,al
>0066DA81    je          0066DA9D
 0066DA83    lea         eax,[ebp-34]
 0066DA86    mov         ecx,66DCD4;'ZL'
 0066DA8B    mov         edx,dword ptr [ebp-4]
 0066DA8E    call        @UStrCat3
 0066DA93    mov         edx,dword ptr [ebp-34]
 0066DA96    mov         eax,esi
 0066DA98    call        005E4F20
 0066DA9D    mov         eax,ebx
 0066DA9F    call        TClassicObject.RFull
 0066DAA4    test        al,al
>0066DAA6    je          0066DAC2
 0066DAA8    lea         eax,[ebp-38]
 0066DAAB    mov         ecx,66DCE8;'RFull'
 0066DAB0    mov         edx,dword ptr [ebp-4]
 0066DAB3    call        @UStrCat3
 0066DAB8    mov         edx,dword ptr [ebp-38]
 0066DABB    mov         eax,esi
 0066DABD    call        005E4F20
 0066DAC2    mov         eax,ebx
 0066DAC4    call        TClassicObject.ZR
 0066DAC9    test        al,al
>0066DACB    je          0066DAE7
 0066DACD    lea         eax,[ebp-3C]
 0066DAD0    mov         ecx,66DD00;'ZR'
 0066DAD5    mov         edx,dword ptr [ebp-4]
 0066DAD8    call        @UStrCat3
 0066DADD    mov         edx,dword ptr [ebp-3C]
 0066DAE0    mov         eax,esi
 0066DAE2    call        005E4F20
 0066DAE7    mov         eax,ebx
 0066DAE9    call        TClassicObject.Up
 0066DAEE    test        al,al
>0066DAF0    je          0066DB0C
 0066DAF2    lea         eax,[ebp-40]
 0066DAF5    mov         ecx,66DD14;'Up'
 0066DAFA    mov         edx,dword ptr [ebp-4]
 0066DAFD    call        @UStrCat3
 0066DB02    mov         edx,dword ptr [ebp-40]
 0066DB05    mov         eax,esi
 0066DB07    call        005E4F20
 0066DB0C    mov         eax,ebx
 0066DB0E    call        TClassicObject.Down
 0066DB13    test        al,al
>0066DB15    je          0066DB31
 0066DB17    lea         eax,[ebp-44]
 0066DB1A    mov         ecx,66DD28;'Down'
 0066DB1F    mov         edx,dword ptr [ebp-4]
 0066DB22    call        @UStrCat3
 0066DB27    mov         edx,dword ptr [ebp-44]
 0066DB2A    mov         eax,esi
 0066DB2C    call        005E4F20
 0066DB31    mov         eax,ebx
 0066DB33    call        TClassicObject.Left
 0066DB38    test        al,al
>0066DB3A    je          0066DB56
 0066DB3C    lea         eax,[ebp-48]
 0066DB3F    mov         ecx,66DD40;'Left'
 0066DB44    mov         edx,dword ptr [ebp-4]
 0066DB47    call        @UStrCat3
 0066DB4C    mov         edx,dword ptr [ebp-48]
 0066DB4F    mov         eax,esi
 0066DB51    call        005E4F20
 0066DB56    mov         eax,ebx
 0066DB58    call        TClassicObject.Right
 0066DB5D    test        al,al
>0066DB5F    je          0066DB7B
 0066DB61    lea         eax,[ebp-4C]
 0066DB64    mov         ecx,66DD58;'Right'
 0066DB69    mov         edx,dword ptr [ebp-4]
 0066DB6C    call        @UStrCat3
 0066DB71    mov         edx,dword ptr [ebp-4C]
 0066DB74    mov         eax,esi
 0066DB76    call        005E4F20
 0066DB7B    inc         edi
 0066DB7C    dec         dword ptr [ebp-8]
>0066DB7F    jne         0066D8D2
 0066DB85    mov         eax,esi
 0066DB87    call        005E509C
 0066DB8C    xor         eax,eax
 0066DB8E    pop         edx
 0066DB8F    pop         ecx
 0066DB90    pop         ecx
 0066DB91    mov         dword ptr fs:[eax],edx
 0066DB94    push        66DBB6
 0066DB99    lea         eax,[ebp-4C]
 0066DB9C    mov         edx,11
 0066DBA1    call        @UStrArrayClr
 0066DBA6    lea         eax,[ebp-4]
 0066DBA9    call        @UStrClr
 0066DBAE    ret
>0066DBAF    jmp         @HandleFinally
>0066DBB4    jmp         0066DB99
 0066DBB6    pop         edi
 0066DBB7    pop         esi
 0066DBB8    pop         ebx
 0066DBB9    mov         esp,ebp
 0066DBBB    pop         ebp
 0066DBBC    ret
*}
end;

//0066DD64
procedure TModuleClassic.PrepareForGUI;
begin
{*
 0066DD64    ret
*}
end;

//0066DD68
procedure TModuleClassic.PrepareForMonitoring;
begin
{*
 0066DD68    ret
*}
end;

//0066DD6C
function TModuleClassic.Read:Boolean;
begin
{*
 0066DD6C    push        ebx
 0066DD6D    cmp         byte ptr ds:[81ECBC],0;gvar_0081ECBC
>0066DD74    jne         0066DD8B
 0066DD76    mov         bl,1
 0066DD78    call        0074BF10
 0066DD7D    call        TWiimoteManager.ReadWiimotes
 0066DD82    mov         byte ptr ds:[81ECBC],1;gvar_0081ECBC
>0066DD89    jmp         0066DD8D
 0066DD8B    mov         bl,1
 0066DD8D    mov         eax,ebx
 0066DD8F    pop         ebx
 0066DD90    ret
*}
end;

//0066DD94
procedure TModuleClassic.StartCompiletime;
begin
{*
 0066DD94    call        TPieModule.StartCompiletime
 0066DD99    cmp         byte ptr ds:[81ECBD],0;gvar_0081ECBD
>0066DDA0    jne         0066DDB3
 0066DDA2    mov         byte ptr ds:[81ECBD],1;gvar_0081ECBD
 0066DDA9    call        0074BF10
 0066DDAE    call        TWiimoteManager.StartCompileTime
 0066DDB3    ret
*}
end;

//0066DDB4
procedure TModuleClassic.StartGUI;
begin
{*
 0066DDB4    call        0074BF10
 0066DDB9    call        TWiimoteManager.StartGUI
 0066DDBE    ret
*}
end;

//0066DDC0
procedure TModuleClassic.StartMonitoring;
begin
{*
 0066DDC0    push        ebx
 0066DDC1    mov         ebx,eax
 0066DDC3    mov         byte ptr [ebx+28],1;TModuleClassic.Monitoring:Boolean
 0066DDC7    mov         eax,dword ptr [ebx+30];TModuleClassic.OldButtonsDown:TStringList
 0066DDCA    mov         edx,dword ptr [eax]
 0066DDCC    call        dword ptr [edx+44];TStringList.Clear
 0066DDCF    mov         eax,dword ptr [ebx+2C];TModuleClassic.ButtonsDown:TStringList
 0066DDD2    mov         edx,dword ptr [eax]
 0066DDD4    call        dword ptr [edx+44];TStringList.Clear
 0066DDD7    pop         ebx
 0066DDD8    ret
*}
end;

//0066DDDC
procedure TModuleClassic.StartRuntime;
begin
{*
 0066DDDC    call        TPieModule.StartRuntime
 0066DDE1    call        0074BF10
 0066DDE6    call        TWiimoteManager.StartRuntime
 0066DDEB    ret
*}
end;

//0066DDEC
procedure TModuleClassic.StopCompiletime;
begin
{*
 0066DDEC    mov         byte ptr ds:[81ECBD],0;gvar_0081ECBD
 0066DDF3    call        TPieModule.StopCompiletime
 0066DDF8    ret
*}
end;

//0066DDFC
procedure TModuleClassic.StopGUI;
begin
{*
 0066DDFC    call        0074BF10
 0066DE01    call        TWiimoteManager.StopGUI
 0066DE06    ret
*}
end;

//0066DE08
procedure TModuleClassic.StopMonitoring;
begin
{*
 0066DE08    mov         byte ptr [eax+28],0;TModuleClassic.Monitoring:Boolean
 0066DE0C    ret
*}
end;

//0066DE10
procedure TModuleClassic.StopRuntime;
begin
{*
 0066DE10    push        ebx
 0066DE11    mov         ebx,eax
 0066DE13    call        0074BF10
 0066DE18    call        TWiimoteManager.StopRuntime
 0066DE1D    mov         eax,ebx
 0066DE1F    call        TPieModule.StopRuntime
 0066DE24    pop         ebx
 0066DE25    ret
*}
end;

//0066DE28
procedure TModuleGuitar.ClearRead;
begin
{*
 0066DE28    call        TPieModule.ClearRead
 0066DE2D    mov         byte ptr ds:[81ECBC],0;gvar_0081ECBC
 0066DE34    ret
*}
end;

//0066DE38
constructor TModuleGuitar.Create;
begin
{*
 0066DE38    push        ebx
 0066DE39    push        esi
 0066DE3A    test        dl,dl
>0066DE3C    je          0066DE46
 0066DE3E    add         esp,0FFFFFFF0
 0066DE41    call        @ClassCreate
 0066DE46    mov         ebx,edx
 0066DE48    mov         esi,eax
 0066DE4A    push        0
 0066DE4C    push        0
 0066DE4E    push        0
 0066DE50    push        0
 0066DE52    mov         ecx,66DE88;'WiiGuitar'
 0066DE57    xor         edx,edx
 0066DE59    mov         eax,esi
 0066DE5B    call        005E4830
 0066DE60    mov         eax,esi
 0066DE62    test        bl,bl
>0066DE64    je          0066DE75
 0066DE66    call        @AfterConstruction
 0066DE6B    pop         dword ptr fs:[0]
 0066DE72    add         esp,0C
 0066DE75    mov         eax,esi
 0066DE77    pop         esi
 0066DE78    pop         ebx
 0066DE79    ret
*}
end;

//0066DE9C
function TModuleGuitar.CreateValue(Identifier:string):TExpression;
begin
{*
 0066DE9C    push        ebp
 0066DE9D    mov         ebp,esp
 0066DE9F    push        ecx
 0066DEA0    push        ebx
 0066DEA1    mov         dword ptr [ebp-4],edx
 0066DEA4    mov         ebx,eax
 0066DEA6    mov         eax,dword ptr [ebp-4]
 0066DEA9    call        @UStrAddRef
 0066DEAE    xor         eax,eax
 0066DEB0    push        ebp
 0066DEB1    push        66DEE6
 0066DEB6    push        dword ptr fs:[eax]
 0066DEB9    mov         dword ptr fs:[eax],esp
 0066DEBC    mov         edx,dword ptr [ebp-4]
 0066DEBF    mov         eax,ebx
 0066DEC1    call        TPieModule.CreateValue
 0066DEC6    mov         eax,dword ptr [ebp-4]
 0066DEC9    call        00654EA8
 0066DECE    mov         ebx,eax
 0066DED0    xor         eax,eax
 0066DED2    pop         edx
 0066DED3    pop         ecx
 0066DED4    pop         ecx
 0066DED5    mov         dword ptr fs:[eax],edx
 0066DED8    push        66DEED
 0066DEDD    lea         eax,[ebp-4]
 0066DEE0    call        @UStrClr
 0066DEE5    ret
>0066DEE6    jmp         @HandleFinally
>0066DEEB    jmp         0066DEDD
 0066DEED    mov         eax,ebx
 0066DEEF    pop         ebx
 0066DEF0    pop         ecx
 0066DEF1    pop         ebp
 0066DEF2    ret
*}
end;

//0066DEF4
procedure TModuleGuitar.GetFields;
begin
{*
 0066DEF4    call        00653A78
 0066DEF9    ret
*}
end;

//0066DEFC
procedure TModuleGuitar.GetGoodFields;
begin
{*
 0066DEFC    call        00653A78
 0066DF01    ret
*}
end;

//0066DF04
procedure TModuleGuitar.GetRange(blank:Boolean; min:Integer; max:Integer);
begin
{*
 0066DF04    push        ebp
 0066DF05    mov         ebp,esp
 0066DF07    mov         byte ptr [edx],1
 0066DF0A    mov         dword ptr [ecx],1
 0066DF10    mov         eax,dword ptr [ebp+8]
 0066DF13    mov         dword ptr [eax],14
 0066DF19    pop         ebp
 0066DF1A    ret         4
*}
end;

//0066DF20
procedure TModuleGuitar.MonitorFrame;
begin
{*
 0066DF20    push        ebp
 0066DF21    mov         ebp,esp
 0066DF23    mov         ecx,0E
 0066DF28    push        0
 0066DF2A    push        0
 0066DF2C    dec         ecx
>0066DF2D    jne         0066DF28
 0066DF2F    push        ebx
 0066DF30    push        esi
 0066DF31    push        edi
 0066DF32    mov         esi,eax
 0066DF34    xor         eax,eax
 0066DF36    push        ebp
 0066DF37    push        66E381
 0066DF3C    push        dword ptr fs:[eax]
 0066DF3F    mov         dword ptr fs:[eax],esp
 0066DF42    cmp         byte ptr [esi+28],0;TModuleGuitar.Monitoring:Boolean
>0066DF46    je          0066E35E
 0066DF4C    mov         eax,esi
 0066DF4E    mov         edx,dword ptr [eax]
 0066DF50    call        dword ptr [edx+3C];TModuleGuitar.Read
 0066DF53    test        al,al
>0066DF55    je          0066E35E
 0066DF5B    call        0074BF10
 0066DF60    mov         eax,dword ptr [eax+54]
 0066DF63    mov         eax,dword ptr [eax+8]
 0066DF66    dec         eax
 0066DF67    test        eax,eax
>0066DF69    jl          0066E357
 0066DF6F    inc         eax
 0066DF70    mov         dword ptr [ebp-0C],eax
 0066DF73    mov         dword ptr [ebp-8],0
 0066DF7A    call        0074BF10
 0066DF7F    mov         ebx,dword ptr [ebp-8]
 0066DF82    inc         ebx
 0066DF83    mov         edx,ebx
 0066DF85    call        TWiimoteManager.GetGuitar
 0066DF8A    mov         edi,eax
 0066DF8C    test        edi,edi
>0066DF8E    je          0066E34B
 0066DF94    cmp         dword ptr [ebp-8],0
>0066DF98    jne         0066DFA9
 0066DF9A    lea         eax,[ebp-4]
 0066DF9D    mov         edx,66E39C;'WiiGuitar.'
 0066DFA2    call        @UStrLAsg
>0066DFA7    jmp         0066DFCD
 0066DFA9    push        66E3C0;'WiiGuitar'
 0066DFAE    lea         edx,[ebp-10]
 0066DFB1    mov         eax,ebx
 0066DFB3    call        IntToStr
 0066DFB8    push        dword ptr [ebp-10]
 0066DFBB    push        66E3E0;'.'
 0066DFC0    lea         eax,[ebp-4]
 0066DFC3    mov         edx,3
 0066DFC8    call        @UStrCatN
 0066DFCD    mov         ebx,dword ptr [edi+4BC];TWiimoteObject.Guitar:TGuitarObject
 0066DFD3    mov         eax,ebx
 0066DFD5    call        TGuitarObject.Fret1
 0066DFDA    test        al,al
>0066DFDC    je          0066DFF8
 0066DFDE    lea         eax,[ebp-14]
 0066DFE1    mov         ecx,66E3F0;'Fret1'
 0066DFE6    mov         edx,dword ptr [ebp-4]
 0066DFE9    call        @UStrCat3
 0066DFEE    mov         edx,dword ptr [ebp-14]
 0066DFF1    mov         eax,esi
 0066DFF3    call        005E4F20
 0066DFF8    mov         eax,ebx
 0066DFFA    call        TGuitarObject.Fret2
 0066DFFF    test        al,al
>0066E001    je          0066E01D
 0066E003    lea         eax,[ebp-18]
 0066E006    mov         ecx,66E408;'Fret2'
 0066E00B    mov         edx,dword ptr [ebp-4]
 0066E00E    call        @UStrCat3
 0066E013    mov         edx,dword ptr [ebp-18]
 0066E016    mov         eax,esi
 0066E018    call        005E4F20
 0066E01D    mov         eax,ebx
 0066E01F    call        TGuitarObject.Fret3
 0066E024    test        al,al
>0066E026    je          0066E042
 0066E028    lea         eax,[ebp-1C]
 0066E02B    mov         ecx,66E420;'Fret3'
 0066E030    mov         edx,dword ptr [ebp-4]
 0066E033    call        @UStrCat3
 0066E038    mov         edx,dword ptr [ebp-1C]
 0066E03B    mov         eax,esi
 0066E03D    call        005E4F20
 0066E042    mov         eax,ebx
 0066E044    call        TGuitarObject.Fret4
 0066E049    test        al,al
>0066E04B    je          0066E067
 0066E04D    lea         eax,[ebp-20]
 0066E050    mov         ecx,66E438;'Fret4'
 0066E055    mov         edx,dword ptr [ebp-4]
 0066E058    call        @UStrCat3
 0066E05D    mov         edx,dword ptr [ebp-20]
 0066E060    mov         eax,esi
 0066E062    call        005E4F20
 0066E067    mov         eax,ebx
 0066E069    call        TGuitarObject.Fret5
 0066E06E    test        al,al
>0066E070    je          0066E08C
 0066E072    lea         eax,[ebp-24]
 0066E075    mov         ecx,66E450;'Fret5'
 0066E07A    mov         edx,dword ptr [ebp-4]
 0066E07D    call        @UStrCat3
 0066E082    mov         edx,dword ptr [ebp-24]
 0066E085    mov         eax,esi
 0066E087    call        005E4F20
 0066E08C    mov         eax,ebx
 0066E08E    call        TGuitarObject.TouchFret1
 0066E093    test        al,al
>0066E095    je          0066E0B1
 0066E097    lea         eax,[ebp-28]
 0066E09A    mov         ecx,66E468;'TouchFret1'
 0066E09F    mov         edx,dword ptr [ebp-4]
 0066E0A2    call        @UStrCat3
 0066E0A7    mov         edx,dword ptr [ebp-28]
 0066E0AA    mov         eax,esi
 0066E0AC    call        005E4F20
 0066E0B1    mov         eax,ebx
 0066E0B3    call        TGuitarObject.TouchFret2
 0066E0B8    test        al,al
>0066E0BA    je          0066E0D6
 0066E0BC    lea         eax,[ebp-2C]
 0066E0BF    mov         ecx,66E48C;'TouchFret2'
 0066E0C4    mov         edx,dword ptr [ebp-4]
 0066E0C7    call        @UStrCat3
 0066E0CC    mov         edx,dword ptr [ebp-2C]
 0066E0CF    mov         eax,esi
 0066E0D1    call        005E4F20
 0066E0D6    mov         eax,ebx
 0066E0D8    call        TGuitarObject.TouchFret3
 0066E0DD    test        al,al
>0066E0DF    je          0066E0FB
 0066E0E1    lea         eax,[ebp-30]
 0066E0E4    mov         ecx,66E4B0;'TouchFret3'
 0066E0E9    mov         edx,dword ptr [ebp-4]
 0066E0EC    call        @UStrCat3
 0066E0F1    mov         edx,dword ptr [ebp-30]
 0066E0F4    mov         eax,esi
 0066E0F6    call        005E4F20
 0066E0FB    mov         eax,ebx
 0066E0FD    call        TGuitarObject.TouchFret4
 0066E102    test        al,al
>0066E104    je          0066E120
 0066E106    lea         eax,[ebp-34]
 0066E109    mov         ecx,66E4D4;'TouchFret4'
 0066E10E    mov         edx,dword ptr [ebp-4]
 0066E111    call        @UStrCat3
 0066E116    mov         edx,dword ptr [ebp-34]
 0066E119    mov         eax,esi
 0066E11B    call        005E4F20
 0066E120    mov         eax,ebx
 0066E122    call        TGuitarObject.TouchFret5
 0066E127    test        al,al
>0066E129    je          0066E145
 0066E12B    lea         eax,[ebp-38]
 0066E12E    mov         ecx,66E4F8;'TouchFret5'
 0066E133    mov         edx,dword ptr [ebp-4]
 0066E136    call        @UStrCat3
 0066E13B    mov         edx,dword ptr [ebp-38]
 0066E13E    mov         eax,esi
 0066E140    call        005E4F20
 0066E145    mov         eax,ebx
 0066E147    call        TGuitarObject.StrumUp
 0066E14C    test        al,al
>0066E14E    je          0066E16A
 0066E150    lea         eax,[ebp-3C]
 0066E153    mov         ecx,66E51C;'StrumUp'
 0066E158    mov         edx,dword ptr [ebp-4]
 0066E15B    call        @UStrCat3
 0066E160    mov         edx,dword ptr [ebp-3C]
 0066E163    mov         eax,esi
 0066E165    call        005E4F20
 0066E16A    mov         eax,ebx
 0066E16C    call        TGuitarObject.StrumDown
 0066E171    test        al,al
>0066E173    je          0066E18F
 0066E175    lea         eax,[ebp-40]
 0066E178    mov         ecx,66E538;'StrumDown'
 0066E17D    mov         edx,dword ptr [ebp-4]
 0066E180    call        @UStrCat3
 0066E185    mov         edx,dword ptr [ebp-40]
 0066E188    mov         eax,esi
 0066E18A    call        005E4F20
 0066E18F    mov         eax,ebx
 0066E191    call        TGuitarObject.Plus
 0066E196    test        al,al
>0066E198    je          0066E1B4
 0066E19A    lea         eax,[ebp-44]
 0066E19D    mov         ecx,66E558;'Plus'
 0066E1A2    mov         edx,dword ptr [ebp-4]
 0066E1A5    call        @UStrCat3
 0066E1AA    mov         edx,dword ptr [ebp-44]
 0066E1AD    mov         eax,esi
 0066E1AF    call        005E4F20
 0066E1B4    mov         eax,ebx
 0066E1B6    call        TGuitarObject.Minus
 0066E1BB    test        al,al
>0066E1BD    je          0066E1D9
 0066E1BF    lea         eax,[ebp-48]
 0066E1C2    mov         ecx,66E570;'Minus'
 0066E1C7    mov         edx,dword ptr [ebp-4]
 0066E1CA    call        @UStrCat3
 0066E1CF    mov         edx,dword ptr [ebp-48]
 0066E1D2    mov         eax,esi
 0066E1D4    call        005E4F20
 0066E1D9    mov         eax,edi
 0066E1DB    call        TWiimoteObject.A
 0066E1E0    test        al,al
>0066E1E2    je          0066E1FE
 0066E1E4    lea         eax,[ebp-4C]
 0066E1E7    mov         ecx,66E588;'A'
 0066E1EC    mov         edx,dword ptr [ebp-4]
 0066E1EF    call        @UStrCat3
 0066E1F4    mov         edx,dword ptr [ebp-4C]
 0066E1F7    mov         eax,esi
 0066E1F9    call        005E4F20
 0066E1FE    mov         eax,edi
 0066E200    call        TWiimoteObject.One
 0066E205    test        al,al
>0066E207    je          0066E223
 0066E209    lea         eax,[ebp-50]
 0066E20C    mov         ecx,66E598;'One'
 0066E211    mov         edx,dword ptr [ebp-4]
 0066E214    call        @UStrCat3
 0066E219    mov         edx,dword ptr [ebp-50]
 0066E21C    mov         eax,esi
 0066E21E    call        005E4F20
 0066E223    mov         eax,edi
 0066E225    call        TWiimoteObject.Two
 0066E22A    test        al,al
>0066E22C    je          0066E248
 0066E22E    lea         eax,[ebp-54]
 0066E231    mov         ecx,66E5AC;'Two'
 0066E236    mov         edx,dword ptr [ebp-4]
 0066E239    call        @UStrCat3
 0066E23E    mov         edx,dword ptr [ebp-54]
 0066E241    mov         eax,esi
 0066E243    call        005E4F20
 0066E248    mov         eax,edi
 0066E24A    call        TWiimoteObject.HOME
 0066E24F    test        al,al
>0066E251    je          0066E26D
 0066E253    lea         eax,[ebp-58]
 0066E256    mov         ecx,66E5C0;'Home'
 0066E25B    mov         edx,dword ptr [ebp-4]
 0066E25E    call        @UStrCat3
 0066E263    mov         edx,dword ptr [ebp-58]
 0066E266    mov         eax,esi
 0066E268    call        005E4F20
 0066E26D    mov         eax,edi
 0066E26F    call        TWiimoteObject.Up
 0066E274    test        al,al
>0066E276    je          0066E292
 0066E278    lea         eax,[ebp-5C]
 0066E27B    mov         ecx,66E5D8;'Wiimote.Up'
 0066E280    mov         edx,dword ptr [ebp-4]
 0066E283    call        @UStrCat3
 0066E288    mov         edx,dword ptr [ebp-5C]
 0066E28B    mov         eax,esi
 0066E28D    call        005E4F20
 0066E292    mov         eax,edi
 0066E294    call        TWiimoteObject.Down
 0066E299    test        al,al
>0066E29B    je          0066E2B7
 0066E29D    lea         eax,[ebp-60]
 0066E2A0    mov         ecx,66E5FC;'Wiimote.Down'
 0066E2A5    mov         edx,dword ptr [ebp-4]
 0066E2A8    call        @UStrCat3
 0066E2AD    mov         edx,dword ptr [ebp-60]
 0066E2B0    mov         eax,esi
 0066E2B2    call        005E4F20
 0066E2B7    mov         eax,edi
 0066E2B9    call        TWiimoteObject.Left
 0066E2BE    test        al,al
>0066E2C0    je          0066E2DC
 0066E2C2    lea         eax,[ebp-64]
 0066E2C5    mov         ecx,66E624;'Wiimote.Left'
 0066E2CA    mov         edx,dword ptr [ebp-4]
 0066E2CD    call        @UStrCat3
 0066E2D2    mov         edx,dword ptr [ebp-64]
 0066E2D5    mov         eax,esi
 0066E2D7    call        005E4F20
 0066E2DC    mov         eax,edi
 0066E2DE    call        TWiimoteObject.Right
 0066E2E3    test        al,al
>0066E2E5    je          0066E301
 0066E2E7    lea         eax,[ebp-68]
 0066E2EA    mov         ecx,66E64C;'Wiimote.Right'
 0066E2EF    mov         edx,dword ptr [ebp-4]
 0066E2F2    call        @UStrCat3
 0066E2F7    mov         edx,dword ptr [ebp-68]
 0066E2FA    mov         eax,esi
 0066E2FC    call        005E4F20
 0066E301    mov         eax,edi
 0066E303    call        TWiimoteObject.Plus
 0066E308    test        al,al
>0066E30A    je          0066E326
 0066E30C    lea         eax,[ebp-6C]
 0066E30F    mov         ecx,66E674;'WiimotePlus'
 0066E314    mov         edx,dword ptr [ebp-4]
 0066E317    call        @UStrCat3
 0066E31C    mov         edx,dword ptr [ebp-6C]
 0066E31F    mov         eax,esi
 0066E321    call        005E4F20
 0066E326    mov         eax,edi
 0066E328    call        TWiimoteObject.Minus
 0066E32D    test        al,al
>0066E32F    je          0066E34B
 0066E331    lea         eax,[ebp-70]
 0066E334    mov         ecx,66E698;'WiimoteMinus'
 0066E339    mov         edx,dword ptr [ebp-4]
 0066E33C    call        @UStrCat3
 0066E341    mov         edx,dword ptr [ebp-70]
 0066E344    mov         eax,esi
 0066E346    call        005E4F20
 0066E34B    inc         dword ptr [ebp-8]
 0066E34E    dec         dword ptr [ebp-0C]
>0066E351    jne         0066DF7A
 0066E357    mov         eax,esi
 0066E359    call        005E509C
 0066E35E    xor         eax,eax
 0066E360    pop         edx
 0066E361    pop         ecx
 0066E362    pop         ecx
 0066E363    mov         dword ptr fs:[eax],edx
 0066E366    push        66E388
 0066E36B    lea         eax,[ebp-70]
 0066E36E    mov         edx,19
 0066E373    call        @UStrArrayClr
 0066E378    lea         eax,[ebp-4]
 0066E37B    call        @UStrClr
 0066E380    ret
>0066E381    jmp         @HandleFinally
>0066E386    jmp         0066E36B
 0066E388    pop         edi
 0066E389    pop         esi
 0066E38A    pop         ebx
 0066E38B    mov         esp,ebp
 0066E38D    pop         ebp
 0066E38E    ret
*}
end;

//0066E6B4
procedure TModuleGuitar.PrepareForGUI;
begin
{*
 0066E6B4    ret
*}
end;

//0066E6B8
procedure TModuleGuitar.PrepareForMonitoring;
begin
{*
 0066E6B8    ret
*}
end;

//0066E6BC
function TModuleGuitar.Read:Boolean;
begin
{*
 0066E6BC    push        ebx
 0066E6BD    cmp         byte ptr ds:[81ECBC],0;gvar_0081ECBC
>0066E6C4    jne         0066E6DB
 0066E6C6    mov         bl,1
 0066E6C8    call        0074BF10
 0066E6CD    call        TWiimoteManager.ReadWiimotes
 0066E6D2    mov         byte ptr ds:[81ECBC],1;gvar_0081ECBC
>0066E6D9    jmp         0066E6DD
 0066E6DB    mov         bl,1
 0066E6DD    mov         eax,ebx
 0066E6DF    pop         ebx
 0066E6E0    ret
*}
end;

//0066E6E4
procedure TModuleGuitar.StartCompiletime;
begin
{*
 0066E6E4    call        TPieModule.StartCompiletime
 0066E6E9    cmp         byte ptr ds:[81ECBD],0;gvar_0081ECBD
>0066E6F0    jne         0066E703
 0066E6F2    mov         byte ptr ds:[81ECBD],1;gvar_0081ECBD
 0066E6F9    call        0074BF10
 0066E6FE    call        TWiimoteManager.StartCompileTime
 0066E703    ret
*}
end;

//0066E704
procedure TModuleGuitar.StartGUI;
begin
{*
 0066E704    call        0074BF10
 0066E709    call        TWiimoteManager.StartGUI
 0066E70E    ret
*}
end;

//0066E710
procedure TModuleGuitar.StartMonitoring;
begin
{*
 0066E710    push        ebx
 0066E711    mov         ebx,eax
 0066E713    mov         byte ptr [ebx+28],1;TModuleGuitar.Monitoring:Boolean
 0066E717    mov         eax,dword ptr [ebx+30];TModuleGuitar.OldButtonsDown:TStringList
 0066E71A    mov         edx,dword ptr [eax]
 0066E71C    call        dword ptr [edx+44];TStringList.Clear
 0066E71F    mov         eax,dword ptr [ebx+2C];TModuleGuitar.ButtonsDown:TStringList
 0066E722    mov         edx,dword ptr [eax]
 0066E724    call        dword ptr [edx+44];TStringList.Clear
 0066E727    pop         ebx
 0066E728    ret
*}
end;

//0066E72C
procedure TModuleGuitar.StartRuntime;
begin
{*
 0066E72C    call        TPieModule.StartRuntime
 0066E731    call        0074BF10
 0066E736    call        TWiimoteManager.StartRuntime
 0066E73B    ret
*}
end;

//0066E73C
procedure TModuleGuitar.StopCompiletime;
begin
{*
 0066E73C    mov         byte ptr ds:[81ECBD],0;gvar_0081ECBD
 0066E743    call        TPieModule.StopCompiletime
 0066E748    ret
*}
end;

//0066E74C
procedure TModuleGuitar.StopGUI;
begin
{*
 0066E74C    call        0074BF10
 0066E751    call        TWiimoteManager.StopGUI
 0066E756    ret
*}
end;

//0066E758
procedure TModuleGuitar.StopMonitoring;
begin
{*
 0066E758    mov         byte ptr [eax+28],0;TModuleGuitar.Monitoring:Boolean
 0066E75C    ret
*}
end;

//0066E760
procedure TModuleGuitar.StopRuntime;
begin
{*
 0066E760    push        ebx
 0066E761    mov         ebx,eax
 0066E763    call        0074BF10
 0066E768    call        TWiimoteManager.StopRuntime
 0066E76D    mov         eax,ebx
 0066E76F    call        TPieModule.StopRuntime
 0066E774    pop         ebx
 0066E775    ret
*}
end;

//0066E778
procedure TModuleDrums.ClearRead;
begin
{*
 0066E778    call        TPieModule.ClearRead
 0066E77D    mov         byte ptr ds:[81ECBC],0;gvar_0081ECBC
 0066E784    ret
*}
end;

//0066E788
constructor TModuleDrums.Create;
begin
{*
 0066E788    push        ebx
 0066E789    push        esi
 0066E78A    test        dl,dl
>0066E78C    je          0066E796
 0066E78E    add         esp,0FFFFFFF0
 0066E791    call        @ClassCreate
 0066E796    mov         ebx,edx
 0066E798    mov         esi,eax
 0066E79A    push        66E7DC;'WiiDrumKit'
 0066E79F    push        0
 0066E7A1    push        0
 0066E7A3    push        0
 0066E7A5    mov         ecx,66E800;'WiiDrums'
 0066E7AA    xor         edx,edx
 0066E7AC    mov         eax,esi
 0066E7AE    call        005E4830
 0066E7B3    mov         eax,esi
 0066E7B5    test        bl,bl
>0066E7B7    je          0066E7C8
 0066E7B9    call        @AfterConstruction
 0066E7BE    pop         dword ptr fs:[0]
 0066E7C5    add         esp,0C
 0066E7C8    mov         eax,esi
 0066E7CA    pop         esi
 0066E7CB    pop         ebx
 0066E7CC    ret
*}
end;

//0066E814
function TModuleDrums.CreateValue(Identifier:string):TExpression;
begin
{*
 0066E814    push        ebp
 0066E815    mov         ebp,esp
 0066E817    push        ecx
 0066E818    push        ebx
 0066E819    mov         dword ptr [ebp-4],edx
 0066E81C    mov         ebx,eax
 0066E81E    mov         eax,dword ptr [ebp-4]
 0066E821    call        @UStrAddRef
 0066E826    xor         eax,eax
 0066E828    push        ebp
 0066E829    push        66E85E
 0066E82E    push        dword ptr fs:[eax]
 0066E831    mov         dword ptr fs:[eax],esp
 0066E834    mov         edx,dword ptr [ebp-4]
 0066E837    mov         eax,ebx
 0066E839    call        TPieModule.CreateValue
 0066E83E    mov         eax,dword ptr [ebp-4]
 0066E841    call        00654EA8
 0066E846    mov         ebx,eax
 0066E848    xor         eax,eax
 0066E84A    pop         edx
 0066E84B    pop         ecx
 0066E84C    pop         ecx
 0066E84D    mov         dword ptr fs:[eax],edx
 0066E850    push        66E865
 0066E855    lea         eax,[ebp-4]
 0066E858    call        @UStrClr
 0066E85D    ret
>0066E85E    jmp         @HandleFinally
>0066E863    jmp         0066E855
 0066E865    mov         eax,ebx
 0066E867    pop         ebx
 0066E868    pop         ecx
 0066E869    pop         ebp
 0066E86A    ret
*}
end;

//0066E86C
procedure TModuleDrums.GetFields;
begin
{*
 0066E86C    call        00653DA4
 0066E871    ret
*}
end;

//0066E874
procedure TModuleDrums.GetGoodFields;
begin
{*
 0066E874    call        00653DA4
 0066E879    ret
*}
end;

//0066E87C
procedure TModuleDrums.GetRange(blank:Boolean; min:Integer; max:Integer);
begin
{*
 0066E87C    push        ebp
 0066E87D    mov         ebp,esp
 0066E87F    mov         byte ptr [edx],1
 0066E882    mov         dword ptr [ecx],1
 0066E888    mov         eax,dword ptr [ebp+8]
 0066E88B    mov         dword ptr [eax],14
 0066E891    pop         ebp
 0066E892    ret         4
*}
end;

//0066E898
procedure TModuleDrums.MonitorFrame;
begin
{*
 0066E898    push        ebp
 0066E899    mov         ebp,esp
 0066E89B    mov         ecx,0B
 0066E8A0    push        0
 0066E8A2    push        0
 0066E8A4    dec         ecx
>0066E8A5    jne         0066E8A0
 0066E8A7    push        ebx
 0066E8A8    push        esi
 0066E8A9    push        edi
 0066E8AA    mov         esi,eax
 0066E8AC    xor         eax,eax
 0066E8AE    push        ebp
 0066E8AF    push        66EC1B
 0066E8B4    push        dword ptr fs:[eax]
 0066E8B7    mov         dword ptr fs:[eax],esp
 0066E8BA    cmp         byte ptr [esi+28],0;TModuleDrums.Monitoring:Boolean
>0066E8BE    je          0066EBF8
 0066E8C4    mov         eax,esi
 0066E8C6    mov         edx,dword ptr [eax]
 0066E8C8    call        dword ptr [edx+3C];TModuleDrums.Read
 0066E8CB    test        al,al
>0066E8CD    je          0066EBF8
 0066E8D3    call        0074BF10
 0066E8D8    mov         eax,dword ptr [eax+54]
 0066E8DB    mov         eax,dword ptr [eax+8]
 0066E8DE    dec         eax
 0066E8DF    test        eax,eax
>0066E8E1    jl          0066EBF1
 0066E8E7    inc         eax
 0066E8E8    mov         dword ptr [ebp-0C],eax
 0066E8EB    mov         dword ptr [ebp-8],0
 0066E8F2    call        0074BF10
 0066E8F7    mov         edi,dword ptr [ebp-8]
 0066E8FA    inc         edi
 0066E8FB    mov         edx,edi
 0066E8FD    call        TWiimoteManager.GetGuitar
 0066E902    mov         ebx,eax
 0066E904    test        ebx,ebx
>0066E906    je          0066EBE5
 0066E90C    cmp         dword ptr [ebp-8],0
>0066E910    jne         0066E921
 0066E912    lea         eax,[ebp-4]
 0066E915    mov         edx,66EC38;'WiiDrums.'
 0066E91A    call        @UStrLAsg
>0066E91F    jmp         0066E945
 0066E921    push        66EC58;'WiiDrums'
 0066E926    lea         edx,[ebp-10]
 0066E929    mov         eax,edi
 0066E92B    call        IntToStr
 0066E930    push        dword ptr [ebp-10]
 0066E933    push        66EC78;'.'
 0066E938    lea         eax,[ebp-4]
 0066E93B    mov         edx,3
 0066E940    call        @UStrCatN
 0066E945    mov         edi,dword ptr [ebx+4C0];TWiimoteObject.Drums:TDrumsObject
 0066E94B    mov         eax,edi
 0066E94D    call        TDrumsObject.Red
 0066E952    test        al,al
>0066E954    je          0066E970
 0066E956    lea         eax,[ebp-14]
 0066E959    mov         ecx,66EC88;'Red'
 0066E95E    mov         edx,dword ptr [ebp-4]
 0066E961    call        @UStrCat3
 0066E966    mov         edx,dword ptr [ebp-14]
 0066E969    mov         eax,esi
 0066E96B    call        005E4F20
 0066E970    mov         eax,edi
 0066E972    call        TDrumsObject.Green
 0066E977    test        al,al
>0066E979    je          0066E995
 0066E97B    lea         eax,[ebp-18]
 0066E97E    mov         ecx,66EC9C;'Green'
 0066E983    mov         edx,dword ptr [ebp-4]
 0066E986    call        @UStrCat3
 0066E98B    mov         edx,dword ptr [ebp-18]
 0066E98E    mov         eax,esi
 0066E990    call        005E4F20
 0066E995    mov         eax,edi
 0066E997    call        TDrumsObject.Blue
 0066E99C    test        al,al
>0066E99E    je          0066E9BA
 0066E9A0    lea         eax,[ebp-1C]
 0066E9A3    mov         ecx,66ECB4;'Blue'
 0066E9A8    mov         edx,dword ptr [ebp-4]
 0066E9AB    call        @UStrCat3
 0066E9B0    mov         edx,dword ptr [ebp-1C]
 0066E9B3    mov         eax,esi
 0066E9B5    call        005E4F20
 0066E9BA    mov         eax,edi
 0066E9BC    call        TDrumsObject.Yellow
 0066E9C1    test        al,al
>0066E9C3    je          0066E9DF
 0066E9C5    lea         eax,[ebp-20]
 0066E9C8    mov         ecx,66ECCC;'Yellow'
 0066E9CD    mov         edx,dword ptr [ebp-4]
 0066E9D0    call        @UStrCat3
 0066E9D5    mov         edx,dword ptr [ebp-20]
 0066E9D8    mov         eax,esi
 0066E9DA    call        005E4F20
 0066E9DF    mov         eax,edi
 0066E9E1    call        TDrumsObject.Orange
 0066E9E6    test        al,al
>0066E9E8    je          0066EA04
 0066E9EA    lea         eax,[ebp-24]
 0066E9ED    mov         ecx,66ECE8;'Orange'
 0066E9F2    mov         edx,dword ptr [ebp-4]
 0066E9F5    call        @UStrCat3
 0066E9FA    mov         edx,dword ptr [ebp-24]
 0066E9FD    mov         eax,esi
 0066E9FF    call        005E4F20
 0066EA04    mov         eax,edi
 0066EA06    call        TDrumsObject.Bass
 0066EA0B    test        al,al
>0066EA0D    je          0066EA29
 0066EA0F    lea         eax,[ebp-28]
 0066EA12    mov         ecx,66ED04;'Bass'
 0066EA17    mov         edx,dword ptr [ebp-4]
 0066EA1A    call        @UStrCat3
 0066EA1F    mov         edx,dword ptr [ebp-28]
 0066EA22    mov         eax,esi
 0066EA24    call        005E4F20
 0066EA29    mov         eax,edi
 0066EA2B    call        TDrumsObject.Plus
 0066EA30    test        al,al
>0066EA32    je          0066EA4E
 0066EA34    lea         eax,[ebp-2C]
 0066EA37    mov         ecx,66ED1C;'Plus'
 0066EA3C    mov         edx,dword ptr [ebp-4]
 0066EA3F    call        @UStrCat3
 0066EA44    mov         edx,dword ptr [ebp-2C]
 0066EA47    mov         eax,esi
 0066EA49    call        005E4F20
 0066EA4E    mov         eax,edi
 0066EA50    call        TDrumsObject.Minus
 0066EA55    test        al,al
>0066EA57    je          0066EA73
 0066EA59    lea         eax,[ebp-30]
 0066EA5C    mov         ecx,66ED34;'Minus'
 0066EA61    mov         edx,dword ptr [ebp-4]
 0066EA64    call        @UStrCat3
 0066EA69    mov         edx,dword ptr [ebp-30]
 0066EA6C    mov         eax,esi
 0066EA6E    call        005E4F20
 0066EA73    mov         eax,ebx
 0066EA75    call        TWiimoteObject.A
 0066EA7A    test        al,al
>0066EA7C    je          0066EA98
 0066EA7E    lea         eax,[ebp-34]
 0066EA81    mov         ecx,66ED4C;'A'
 0066EA86    mov         edx,dword ptr [ebp-4]
 0066EA89    call        @UStrCat3
 0066EA8E    mov         edx,dword ptr [ebp-34]
 0066EA91    mov         eax,esi
 0066EA93    call        005E4F20
 0066EA98    mov         eax,ebx
 0066EA9A    call        TWiimoteObject.One
 0066EA9F    test        al,al
>0066EAA1    je          0066EABD
 0066EAA3    lea         eax,[ebp-38]
 0066EAA6    mov         ecx,66ED5C;'One'
 0066EAAB    mov         edx,dword ptr [ebp-4]
 0066EAAE    call        @UStrCat3
 0066EAB3    mov         edx,dword ptr [ebp-38]
 0066EAB6    mov         eax,esi
 0066EAB8    call        005E4F20
 0066EABD    mov         eax,ebx
 0066EABF    call        TWiimoteObject.Two
 0066EAC4    test        al,al
>0066EAC6    je          0066EAE2
 0066EAC8    lea         eax,[ebp-3C]
 0066EACB    mov         ecx,66ED70;'Two'
 0066EAD0    mov         edx,dword ptr [ebp-4]
 0066EAD3    call        @UStrCat3
 0066EAD8    mov         edx,dword ptr [ebp-3C]
 0066EADB    mov         eax,esi
 0066EADD    call        005E4F20
 0066EAE2    mov         eax,ebx
 0066EAE4    call        TWiimoteObject.HOME
 0066EAE9    test        al,al
>0066EAEB    je          0066EB07
 0066EAED    lea         eax,[ebp-40]
 0066EAF0    mov         ecx,66ED84;'Home'
 0066EAF5    mov         edx,dword ptr [ebp-4]
 0066EAF8    call        @UStrCat3
 0066EAFD    mov         edx,dword ptr [ebp-40]
 0066EB00    mov         eax,esi
 0066EB02    call        005E4F20
 0066EB07    mov         eax,ebx
 0066EB09    call        TWiimoteObject.Up
 0066EB0E    test        al,al
>0066EB10    je          0066EB2C
 0066EB12    lea         eax,[ebp-44]
 0066EB15    mov         ecx,66ED9C;'DPadRight'
 0066EB1A    mov         edx,dword ptr [ebp-4]
 0066EB1D    call        @UStrCat3
 0066EB22    mov         edx,dword ptr [ebp-44]
 0066EB25    mov         eax,esi
 0066EB27    call        005E4F20
 0066EB2C    mov         eax,ebx
 0066EB2E    call        TWiimoteObject.Down
 0066EB33    test        al,al
>0066EB35    je          0066EB51
 0066EB37    lea         eax,[ebp-48]
 0066EB3A    mov         ecx,66EDBC;'DPadLeft'
 0066EB3F    mov         edx,dword ptr [ebp-4]
 0066EB42    call        @UStrCat3
 0066EB47    mov         edx,dword ptr [ebp-48]
 0066EB4A    mov         eax,esi
 0066EB4C    call        005E4F20
 0066EB51    mov         eax,ebx
 0066EB53    call        TWiimoteObject.Left
 0066EB58    test        al,al
>0066EB5A    je          0066EB76
 0066EB5C    lea         eax,[ebp-4C]
 0066EB5F    mov         ecx,66EDDC;'DPadUp'
 0066EB64    mov         edx,dword ptr [ebp-4]
 0066EB67    call        @UStrCat3
 0066EB6C    mov         edx,dword ptr [ebp-4C]
 0066EB6F    mov         eax,esi
 0066EB71    call        005E4F20
 0066EB76    mov         eax,ebx
 0066EB78    call        TWiimoteObject.Right
 0066EB7D    test        al,al
>0066EB7F    je          0066EB9B
 0066EB81    lea         eax,[ebp-50]
 0066EB84    mov         ecx,66EDF8;'DPadDown'
 0066EB89    mov         edx,dword ptr [ebp-4]
 0066EB8C    call        @UStrCat3
 0066EB91    mov         edx,dword ptr [ebp-50]
 0066EB94    mov         eax,esi
 0066EB96    call        005E4F20
 0066EB9B    mov         eax,ebx
 0066EB9D    call        TWiimoteObject.Plus
 0066EBA2    test        al,al
>0066EBA4    je          0066EBC0
 0066EBA6    lea         eax,[ebp-54]
 0066EBA9    mov         ecx,66EE18;'WiimotePlus'
 0066EBAE    mov         edx,dword ptr [ebp-4]
 0066EBB1    call        @UStrCat3
 0066EBB6    mov         edx,dword ptr [ebp-54]
 0066EBB9    mov         eax,esi
 0066EBBB    call        005E4F20
 0066EBC0    mov         eax,ebx
 0066EBC2    call        TWiimoteObject.Minus
 0066EBC7    test        al,al
>0066EBC9    je          0066EBE5
 0066EBCB    lea         eax,[ebp-58]
 0066EBCE    mov         ecx,66EE3C;'WiimoteMinus'
 0066EBD3    mov         edx,dword ptr [ebp-4]
 0066EBD6    call        @UStrCat3
 0066EBDB    mov         edx,dword ptr [ebp-58]
 0066EBDE    mov         eax,esi
 0066EBE0    call        005E4F20
 0066EBE5    inc         dword ptr [ebp-8]
 0066EBE8    dec         dword ptr [ebp-0C]
>0066EBEB    jne         0066E8F2
 0066EBF1    mov         eax,esi
 0066EBF3    call        005E509C
 0066EBF8    xor         eax,eax
 0066EBFA    pop         edx
 0066EBFB    pop         ecx
 0066EBFC    pop         ecx
 0066EBFD    mov         dword ptr fs:[eax],edx
 0066EC00    push        66EC22
 0066EC05    lea         eax,[ebp-58]
 0066EC08    mov         edx,13
 0066EC0D    call        @UStrArrayClr
 0066EC12    lea         eax,[ebp-4]
 0066EC15    call        @UStrClr
 0066EC1A    ret
>0066EC1B    jmp         @HandleFinally
>0066EC20    jmp         0066EC05
 0066EC22    pop         edi
 0066EC23    pop         esi
 0066EC24    pop         ebx
 0066EC25    mov         esp,ebp
 0066EC27    pop         ebp
 0066EC28    ret
*}
end;

//0066EE58
procedure TModuleDrums.PrepareForGUI;
begin
{*
 0066EE58    ret
*}
end;

//0066EE5C
procedure TModuleDrums.PrepareForMonitoring;
begin
{*
 0066EE5C    ret
*}
end;

//0066EE60
function TModuleDrums.Read:Boolean;
begin
{*
 0066EE60    push        ebx
 0066EE61    cmp         byte ptr ds:[81ECBC],0;gvar_0081ECBC
>0066EE68    jne         0066EE7F
 0066EE6A    mov         bl,1
 0066EE6C    call        0074BF10
 0066EE71    call        TWiimoteManager.ReadWiimotes
 0066EE76    mov         byte ptr ds:[81ECBC],1;gvar_0081ECBC
>0066EE7D    jmp         0066EE81
 0066EE7F    mov         bl,1
 0066EE81    mov         eax,ebx
 0066EE83    pop         ebx
 0066EE84    ret
*}
end;

//0066EE88
procedure TModuleDrums.StartCompiletime;
begin
{*
 0066EE88    call        TPieModule.StartCompiletime
 0066EE8D    cmp         byte ptr ds:[81ECBD],0;gvar_0081ECBD
>0066EE94    jne         0066EEA7
 0066EE96    mov         byte ptr ds:[81ECBD],1;gvar_0081ECBD
 0066EE9D    call        0074BF10
 0066EEA2    call        TWiimoteManager.StartCompileTime
 0066EEA7    ret
*}
end;

//0066EEA8
procedure TModuleDrums.StartGUI;
begin
{*
 0066EEA8    call        0074BF10
 0066EEAD    call        TWiimoteManager.StartGUI
 0066EEB2    ret
*}
end;

//0066EEB4
procedure TModuleDrums.StartMonitoring;
begin
{*
 0066EEB4    push        ebx
 0066EEB5    mov         ebx,eax
 0066EEB7    mov         byte ptr [ebx+28],1;TModuleDrums.Monitoring:Boolean
 0066EEBB    mov         eax,dword ptr [ebx+30];TModuleDrums.OldButtonsDown:TStringList
 0066EEBE    mov         edx,dword ptr [eax]
 0066EEC0    call        dword ptr [edx+44];TStringList.Clear
 0066EEC3    mov         eax,dword ptr [ebx+2C];TModuleDrums.ButtonsDown:TStringList
 0066EEC6    mov         edx,dword ptr [eax]
 0066EEC8    call        dword ptr [edx+44];TStringList.Clear
 0066EECB    pop         ebx
 0066EECC    ret
*}
end;

//0066EED0
procedure TModuleDrums.StartRuntime;
begin
{*
 0066EED0    call        TPieModule.StartRuntime
 0066EED5    call        0074BF10
 0066EEDA    call        TWiimoteManager.StartRuntime
 0066EEDF    ret
*}
end;

//0066EEE0
procedure TModuleDrums.StopCompiletime;
begin
{*
 0066EEE0    mov         byte ptr ds:[81ECBD],0;gvar_0081ECBD
 0066EEE7    call        TPieModule.StopCompiletime
 0066EEEC    ret
*}
end;

//0066EEF0
procedure TModuleDrums.StopGUI;
begin
{*
 0066EEF0    call        0074BF10
 0066EEF5    call        TWiimoteManager.StopGUI
 0066EEFA    ret
*}
end;

//0066EEFC
procedure TModuleDrums.StopMonitoring;
begin
{*
 0066EEFC    mov         byte ptr [eax+28],0;TModuleDrums.Monitoring:Boolean
 0066EF00    ret
*}
end;

//0066EF04
procedure TModuleDrums.StopRuntime;
begin
{*
 0066EF04    push        ebx
 0066EF05    mov         ebx,eax
 0066EF07    call        0074BF10
 0066EF0C    call        TWiimoteManager.StopRuntime
 0066EF11    mov         eax,ebx
 0066EF13    call        TPieModule.StopRuntime
 0066EF18    pop         ebx
 0066EF19    ret
*}
end;

//0066EF1C
procedure TModuleTurntable.ClearRead;
begin
{*
 0066EF1C    call        TPieModule.ClearRead
 0066EF21    mov         byte ptr ds:[81ECBC],0;gvar_0081ECBC
 0066EF28    ret
*}
end;

//0066EF2C
constructor TModuleTurntable.Create;
begin
{*
 0066EF2C    push        ebx
 0066EF2D    push        esi
 0066EF2E    test        dl,dl
>0066EF30    je          0066EF3A
 0066EF32    add         esp,0FFFFFFF0
 0066EF35    call        @ClassCreate
 0066EF3A    mov         ebx,edx
 0066EF3C    mov         esi,eax
 0066EF3E    push        66EF80;'WiiDJHero'
 0066EF43    push        0
 0066EF45    push        0
 0066EF47    push        0
 0066EF49    mov         ecx,66EFA0;'WiiTurntable'
 0066EF4E    xor         edx,edx
 0066EF50    mov         eax,esi
 0066EF52    call        005E4830
 0066EF57    mov         eax,esi
 0066EF59    test        bl,bl
>0066EF5B    je          0066EF6C
 0066EF5D    call        @AfterConstruction
 0066EF62    pop         dword ptr fs:[0]
 0066EF69    add         esp,0C
 0066EF6C    mov         eax,esi
 0066EF6E    pop         esi
 0066EF6F    pop         ebx
 0066EF70    ret
*}
end;

//0066EFBC
function TModuleTurntable.CreateValue(Identifier:string):TExpression;
begin
{*
 0066EFBC    push        ebp
 0066EFBD    mov         ebp,esp
 0066EFBF    push        ecx
 0066EFC0    push        ebx
 0066EFC1    mov         dword ptr [ebp-4],edx
 0066EFC4    mov         ebx,eax
 0066EFC6    mov         eax,dword ptr [ebp-4]
 0066EFC9    call        @UStrAddRef
 0066EFCE    xor         eax,eax
 0066EFD0    push        ebp
 0066EFD1    push        66F006
 0066EFD6    push        dword ptr fs:[eax]
 0066EFD9    mov         dword ptr fs:[eax],esp
 0066EFDC    mov         edx,dword ptr [ebp-4]
 0066EFDF    mov         eax,ebx
 0066EFE1    call        TPieModule.CreateValue
 0066EFE6    mov         eax,dword ptr [ebp-4]
 0066EFE9    call        00654EA8
 0066EFEE    mov         ebx,eax
 0066EFF0    xor         eax,eax
 0066EFF2    pop         edx
 0066EFF3    pop         ecx
 0066EFF4    pop         ecx
 0066EFF5    mov         dword ptr fs:[eax],edx
 0066EFF8    push        66F00D
 0066EFFD    lea         eax,[ebp-4]
 0066F000    call        @UStrClr
 0066F005    ret
>0066F006    jmp         @HandleFinally
>0066F00B    jmp         0066EFFD
 0066F00D    mov         eax,ebx
 0066F00F    pop         ebx
 0066F010    pop         ecx
 0066F011    pop         ebp
 0066F012    ret
*}
end;

//0066F014
procedure TModuleTurntable.GetFields;
begin
{*
 0066F014    call        00654348
 0066F019    ret
*}
end;

//0066F01C
procedure TModuleTurntable.GetGoodFields;
begin
{*
 0066F01C    mov         edx,dword ptr [eax]
 0066F01E    call        dword ptr [edx+18];TModuleTurntable.GetFields
 0066F021    ret
*}
end;

//0066F024
procedure TModuleTurntable.GetRange(blank:Boolean; min:Integer; max:Integer);
begin
{*
 0066F024    push        ebp
 0066F025    mov         ebp,esp
 0066F027    mov         byte ptr [edx],1
 0066F02A    mov         dword ptr [ecx],1
 0066F030    mov         eax,dword ptr [ebp+8]
 0066F033    mov         dword ptr [eax],14
 0066F039    pop         ebp
 0066F03A    ret         4
*}
end;

//0066F040
procedure TModuleTurntable.MonitorFrame;
begin
{*
 0066F040    push        ebp
 0066F041    mov         ebp,esp
 0066F043    mov         ecx,0B
 0066F048    push        0
 0066F04A    push        0
 0066F04C    dec         ecx
>0066F04D    jne         0066F048
 0066F04F    push        ecx
 0066F050    push        ebx
 0066F051    push        esi
 0066F052    push        edi
 0066F053    mov         esi,eax
 0066F055    xor         eax,eax
 0066F057    push        ebp
 0066F058    push        66F3E9
 0066F05D    push        dword ptr fs:[eax]
 0066F060    mov         dword ptr fs:[eax],esp
 0066F063    cmp         byte ptr [esi+28],0;TModuleTurntable.Monitoring:Boolean
>0066F067    je          0066F3C6
 0066F06D    mov         eax,esi
 0066F06F    mov         edx,dword ptr [eax]
 0066F071    call        dword ptr [edx+3C];TModuleTurntable.Read
 0066F074    test        al,al
>0066F076    je          0066F3C6
 0066F07C    call        0074BF10
 0066F081    mov         eax,dword ptr [eax+5C]
 0066F084    mov         eax,dword ptr [eax+8]
 0066F087    dec         eax
 0066F088    test        eax,eax
>0066F08A    jl          0066F3BF
 0066F090    inc         eax
 0066F091    mov         dword ptr [ebp-0C],eax
 0066F094    mov         dword ptr [ebp-8],0
 0066F09B    call        0074BF10
 0066F0A0    mov         edi,dword ptr [ebp-8]
 0066F0A3    inc         edi
 0066F0A4    mov         edx,edi
 0066F0A6    call        TWiimoteManager.GetTurntable
 0066F0AB    mov         ebx,eax
 0066F0AD    test        ebx,ebx
>0066F0AF    je          0066F3B3
 0066F0B5    cmp         dword ptr [ebp-8],0
>0066F0B9    jne         0066F0CA
 0066F0BB    lea         eax,[ebp-4]
 0066F0BE    mov         edx,66F404;'WiiTurntable.'
 0066F0C3    call        @UStrLAsg
>0066F0C8    jmp         0066F0EE
 0066F0CA    push        66F42C;'WiiTurntable'
 0066F0CF    lea         edx,[ebp-10]
 0066F0D2    mov         eax,edi
 0066F0D4    call        IntToStr
 0066F0D9    push        dword ptr [ebp-10]
 0066F0DC    push        66F454;'.'
 0066F0E1    lea         eax,[ebp-4]
 0066F0E4    mov         edx,3
 0066F0E9    call        @UStrCatN
 0066F0EE    mov         edi,dword ptr [ebx+4C4];TWiimoteObject.Turntable:TTurntableObject
 0066F0F4    mov         eax,edi
 0066F0F6    call        TTurntableObject.Euphoria
 0066F0FB    test        al,al
>0066F0FD    je          0066F119
 0066F0FF    lea         eax,[ebp-14]
 0066F102    mov         ecx,66F464;'Euphoria'
 0066F107    mov         edx,dword ptr [ebp-4]
 0066F10A    call        @UStrCat3
 0066F10F    mov         edx,dword ptr [ebp-14]
 0066F112    mov         eax,esi
 0066F114    call        005E4F20
 0066F119    mov         eax,edi
 0066F11B    call        TTurntableObject.Plus
 0066F120    test        al,al
>0066F122    je          0066F13E
 0066F124    lea         eax,[ebp-18]
 0066F127    mov         ecx,66F484;'Plus'
 0066F12C    mov         edx,dword ptr [ebp-4]
 0066F12F    call        @UStrCat3
 0066F134    mov         edx,dword ptr [ebp-18]
 0066F137    mov         eax,esi
 0066F139    call        005E4F20
 0066F13E    mov         eax,edi
 0066F140    call        TTurntableObject.Minus
 0066F145    test        al,al
>0066F147    je          0066F163
 0066F149    lea         eax,[ebp-1C]
 0066F14C    mov         ecx,66F49C;'Minus'
 0066F151    mov         edx,dword ptr [ebp-4]
 0066F154    call        @UStrCat3
 0066F159    mov         edx,dword ptr [ebp-1C]
 0066F15C    mov         eax,esi
 0066F15E    call        005E4F20
 0066F163    mov         eax,edi
 0066F165    call        TTurntableObject.LeftRed
 0066F16A    test        al,al
>0066F16C    je          0066F188
 0066F16E    lea         eax,[ebp-20]
 0066F171    mov         ecx,66F4B4;'LeftRed'
 0066F176    mov         edx,dword ptr [ebp-4]
 0066F179    call        @UStrCat3
 0066F17E    mov         edx,dword ptr [ebp-20]
 0066F181    mov         eax,esi
 0066F183    call        005E4F20
 0066F188    mov         eax,edi
 0066F18A    call        TTurntableObject.LeftGreen
 0066F18F    test        al,al
>0066F191    je          0066F1AD
 0066F193    lea         eax,[ebp-24]
 0066F196    mov         ecx,66F4D0;'LeftGreen'
 0066F19B    mov         edx,dword ptr [ebp-4]
 0066F19E    call        @UStrCat3
 0066F1A3    mov         edx,dword ptr [ebp-24]
 0066F1A6    mov         eax,esi
 0066F1A8    call        005E4F20
 0066F1AD    mov         eax,edi
 0066F1AF    call        TTurntableObject.LeftBlue
 0066F1B4    test        al,al
>0066F1B6    je          0066F1D2
 0066F1B8    lea         eax,[ebp-28]
 0066F1BB    mov         ecx,66F4F0;'LeftBlue'
 0066F1C0    mov         edx,dword ptr [ebp-4]
 0066F1C3    call        @UStrCat3
 0066F1C8    mov         edx,dword ptr [ebp-28]
 0066F1CB    mov         eax,esi
 0066F1CD    call        005E4F20
 0066F1D2    mov         eax,edi
 0066F1D4    call        TTurntableObject.RightRed
 0066F1D9    test        al,al
>0066F1DB    je          0066F1F7
 0066F1DD    lea         eax,[ebp-2C]
 0066F1E0    mov         ecx,66F510;'RightRed'
 0066F1E5    mov         edx,dword ptr [ebp-4]
 0066F1E8    call        @UStrCat3
 0066F1ED    mov         edx,dword ptr [ebp-2C]
 0066F1F0    mov         eax,esi
 0066F1F2    call        005E4F20
 0066F1F7    mov         eax,edi
 0066F1F9    call        TTurntableObject.RightGreen
 0066F1FE    test        al,al
>0066F200    je          0066F21C
 0066F202    lea         eax,[ebp-30]
 0066F205    mov         ecx,66F530;'RightGreen'
 0066F20A    mov         edx,dword ptr [ebp-4]
 0066F20D    call        @UStrCat3
 0066F212    mov         edx,dword ptr [ebp-30]
 0066F215    mov         eax,esi
 0066F217    call        005E4F20
 0066F21C    mov         eax,edi
 0066F21E    call        TTurntableObject.RightBlue
 0066F223    test        al,al
>0066F225    je          0066F241
 0066F227    lea         eax,[ebp-34]
 0066F22A    mov         ecx,66F554;'RightBlue'
 0066F22F    mov         edx,dword ptr [ebp-4]
 0066F232    call        @UStrCat3
 0066F237    mov         edx,dword ptr [ebp-34]
 0066F23A    mov         eax,esi
 0066F23C    call        005E4F20
 0066F241    mov         eax,ebx
 0066F243    call        TWiimoteObject.A
 0066F248    test        al,al
>0066F24A    je          0066F266
 0066F24C    lea         eax,[ebp-38]
 0066F24F    mov         ecx,66F574;'A'
 0066F254    mov         edx,dword ptr [ebp-4]
 0066F257    call        @UStrCat3
 0066F25C    mov         edx,dword ptr [ebp-38]
 0066F25F    mov         eax,esi
 0066F261    call        005E4F20
 0066F266    mov         eax,ebx
 0066F268    call        TWiimoteObject.One
 0066F26D    test        al,al
>0066F26F    je          0066F28B
 0066F271    lea         eax,[ebp-3C]
 0066F274    mov         ecx,66F584;'One'
 0066F279    mov         edx,dword ptr [ebp-4]
 0066F27C    call        @UStrCat3
 0066F281    mov         edx,dword ptr [ebp-3C]
 0066F284    mov         eax,esi
 0066F286    call        005E4F20
 0066F28B    mov         eax,ebx
 0066F28D    call        TWiimoteObject.Two
 0066F292    test        al,al
>0066F294    je          0066F2B0
 0066F296    lea         eax,[ebp-40]
 0066F299    mov         ecx,66F598;'Two'
 0066F29E    mov         edx,dword ptr [ebp-4]
 0066F2A1    call        @UStrCat3
 0066F2A6    mov         edx,dword ptr [ebp-40]
 0066F2A9    mov         eax,esi
 0066F2AB    call        005E4F20
 0066F2B0    mov         eax,ebx
 0066F2B2    call        TWiimoteObject.HOME
 0066F2B7    test        al,al
>0066F2B9    je          0066F2D5
 0066F2BB    lea         eax,[ebp-44]
 0066F2BE    mov         ecx,66F5AC;'Home'
 0066F2C3    mov         edx,dword ptr [ebp-4]
 0066F2C6    call        @UStrCat3
 0066F2CB    mov         edx,dword ptr [ebp-44]
 0066F2CE    mov         eax,esi
 0066F2D0    call        005E4F20
 0066F2D5    mov         eax,ebx
 0066F2D7    call        TWiimoteObject.Up
 0066F2DC    test        al,al
>0066F2DE    je          0066F2FA
 0066F2E0    lea         eax,[ebp-48]
 0066F2E3    mov         ecx,66F5C4;'Wiimote.Up'
 0066F2E8    mov         edx,dword ptr [ebp-4]
 0066F2EB    call        @UStrCat3
 0066F2F0    mov         edx,dword ptr [ebp-48]
 0066F2F3    mov         eax,esi
 0066F2F5    call        005E4F20
 0066F2FA    mov         eax,ebx
 0066F2FC    call        TWiimoteObject.Down
 0066F301    test        al,al
>0066F303    je          0066F31F
 0066F305    lea         eax,[ebp-4C]
 0066F308    mov         ecx,66F5E8;'Wiimote.Down'
 0066F30D    mov         edx,dword ptr [ebp-4]
 0066F310    call        @UStrCat3
 0066F315    mov         edx,dword ptr [ebp-4C]
 0066F318    mov         eax,esi
 0066F31A    call        005E4F20
 0066F31F    mov         eax,ebx
 0066F321    call        TWiimoteObject.Left
 0066F326    test        al,al
>0066F328    je          0066F344
 0066F32A    lea         eax,[ebp-50]
 0066F32D    mov         ecx,66F610;'Wiimote.Left'
 0066F332    mov         edx,dword ptr [ebp-4]
 0066F335    call        @UStrCat3
 0066F33A    mov         edx,dword ptr [ebp-50]
 0066F33D    mov         eax,esi
 0066F33F    call        005E4F20
 0066F344    mov         eax,ebx
 0066F346    call        TWiimoteObject.Right
 0066F34B    test        al,al
>0066F34D    je          0066F369
 0066F34F    lea         eax,[ebp-54]
 0066F352    mov         ecx,66F638;'Wiimote.Right'
 0066F357    mov         edx,dword ptr [ebp-4]
 0066F35A    call        @UStrCat3
 0066F35F    mov         edx,dword ptr [ebp-54]
 0066F362    mov         eax,esi
 0066F364    call        005E4F20
 0066F369    mov         eax,ebx
 0066F36B    call        TWiimoteObject.Plus
 0066F370    test        al,al
>0066F372    je          0066F38E
 0066F374    lea         eax,[ebp-58]
 0066F377    mov         ecx,66F660;'WiimotePlus'
 0066F37C    mov         edx,dword ptr [ebp-4]
 0066F37F    call        @UStrCat3
 0066F384    mov         edx,dword ptr [ebp-58]
 0066F387    mov         eax,esi
 0066F389    call        005E4F20
 0066F38E    mov         eax,ebx
 0066F390    call        TWiimoteObject.Minus
 0066F395    test        al,al
>0066F397    je          0066F3B3
 0066F399    lea         eax,[ebp-5C]
 0066F39C    mov         ecx,66F684;'WiimoteMinus'
 0066F3A1    mov         edx,dword ptr [ebp-4]
 0066F3A4    call        @UStrCat3
 0066F3A9    mov         edx,dword ptr [ebp-5C]
 0066F3AC    mov         eax,esi
 0066F3AE    call        005E4F20
 0066F3B3    inc         dword ptr [ebp-8]
 0066F3B6    dec         dword ptr [ebp-0C]
>0066F3B9    jne         0066F09B
 0066F3BF    mov         eax,esi
 0066F3C1    call        005E509C
 0066F3C6    xor         eax,eax
 0066F3C8    pop         edx
 0066F3C9    pop         ecx
 0066F3CA    pop         ecx
 0066F3CB    mov         dword ptr fs:[eax],edx
 0066F3CE    push        66F3F0
 0066F3D3    lea         eax,[ebp-5C]
 0066F3D6    mov         edx,14
 0066F3DB    call        @UStrArrayClr
 0066F3E0    lea         eax,[ebp-4]
 0066F3E3    call        @UStrClr
 0066F3E8    ret
>0066F3E9    jmp         @HandleFinally
>0066F3EE    jmp         0066F3D3
 0066F3F0    pop         edi
 0066F3F1    pop         esi
 0066F3F2    pop         ebx
 0066F3F3    mov         esp,ebp
 0066F3F5    pop         ebp
 0066F3F6    ret
*}
end;

//0066F6A0
procedure TModuleTurntable.PrepareForGUI;
begin
{*
 0066F6A0    ret
*}
end;

//0066F6A4
procedure TModuleTurntable.PrepareForMonitoring;
begin
{*
 0066F6A4    ret
*}
end;

//0066F6A8
function TModuleTurntable.Read:Boolean;
begin
{*
 0066F6A8    push        ebx
 0066F6A9    cmp         byte ptr ds:[81ECBC],0;gvar_0081ECBC
>0066F6B0    jne         0066F6C7
 0066F6B2    mov         bl,1
 0066F6B4    call        0074BF10
 0066F6B9    call        TWiimoteManager.ReadWiimotes
 0066F6BE    mov         byte ptr ds:[81ECBC],1;gvar_0081ECBC
>0066F6C5    jmp         0066F6C9
 0066F6C7    mov         bl,1
 0066F6C9    mov         eax,ebx
 0066F6CB    pop         ebx
 0066F6CC    ret
*}
end;

//0066F6D0
procedure TModuleTurntable.StartCompiletime;
begin
{*
 0066F6D0    call        TPieModule.StartCompiletime
 0066F6D5    cmp         byte ptr ds:[81ECBD],0;gvar_0081ECBD
>0066F6DC    jne         0066F6EF
 0066F6DE    mov         byte ptr ds:[81ECBD],1;gvar_0081ECBD
 0066F6E5    call        0074BF10
 0066F6EA    call        TWiimoteManager.StartCompileTime
 0066F6EF    ret
*}
end;

//0066F6F0
procedure TModuleTurntable.StartGUI;
begin
{*
 0066F6F0    call        0074BF10
 0066F6F5    call        TWiimoteManager.StartGUI
 0066F6FA    ret
*}
end;

//0066F6FC
procedure TModuleTurntable.StartMonitoring;
begin
{*
 0066F6FC    push        ebx
 0066F6FD    mov         ebx,eax
 0066F6FF    mov         byte ptr [ebx+28],1;TModuleTurntable.Monitoring:Boolean
 0066F703    mov         eax,dword ptr [ebx+30];TModuleTurntable.OldButtonsDown:TStringList
 0066F706    mov         edx,dword ptr [eax]
 0066F708    call        dword ptr [edx+44];TStringList.Clear
 0066F70B    mov         eax,dword ptr [ebx+2C];TModuleTurntable.ButtonsDown:TStringList
 0066F70E    mov         edx,dword ptr [eax]
 0066F710    call        dword ptr [edx+44];TStringList.Clear
 0066F713    pop         ebx
 0066F714    ret
*}
end;

//0066F718
procedure TModuleTurntable.StartRuntime;
begin
{*
 0066F718    call        TPieModule.StartRuntime
 0066F71D    call        0074BF10
 0066F722    call        TWiimoteManager.StartRuntime
 0066F727    ret
*}
end;

//0066F728
procedure TModuleTurntable.StopCompiletime;
begin
{*
 0066F728    mov         byte ptr ds:[81ECBD],0;gvar_0081ECBD
 0066F72F    call        TPieModule.StopCompiletime
 0066F734    ret
*}
end;

//0066F738
procedure TModuleTurntable.StopGUI;
begin
{*
 0066F738    call        0074BF10
 0066F73D    call        TWiimoteManager.StopGUI
 0066F742    ret
*}
end;

//0066F744
procedure TModuleTurntable.StopMonitoring;
begin
{*
 0066F744    mov         byte ptr [eax+28],0;TModuleTurntable.Monitoring:Boolean
 0066F748    ret
*}
end;

//0066F74C
procedure TModuleTurntable.StopRuntime;
begin
{*
 0066F74C    push        ebx
 0066F74D    mov         ebx,eax
 0066F74F    call        0074BF10
 0066F754    call        TWiimoteManager.StopRuntime
 0066F759    mov         eax,ebx
 0066F75B    call        TPieModule.StopRuntime
 0066F760    pop         ebx
 0066F761    ret
*}
end;

//0066F764
procedure TModuleBalanceBoard.ClearRead;
begin
{*
 0066F764    call        TPieModule.ClearRead
 0066F769    mov         byte ptr ds:[81ECBC],0;gvar_0081ECBC
 0066F770    ret
*}
end;

//0066F774
constructor TModuleBalanceBoard.Create;
begin
{*
 0066F774    push        ebx
 0066F775    push        esi
 0066F776    test        dl,dl
>0066F778    je          0066F782
 0066F77A    add         esp,0FFFFFFF0
 0066F77D    call        @ClassCreate
 0066F782    mov         ebx,edx
 0066F784    mov         esi,eax
 0066F786    push        66F7CC;'Balance'
 0066F78B    push        66F7E8;'WiiFit'
 0066F790    push        66F804;'Fit'
 0066F795    push        0
 0066F797    mov         ecx,66F818;'BalanceBoard'
 0066F79C    xor         edx,edx
 0066F79E    mov         eax,esi
 0066F7A0    call        005E4830
 0066F7A5    mov         eax,esi
 0066F7A7    test        bl,bl
>0066F7A9    je          0066F7BA
 0066F7AB    call        @AfterConstruction
 0066F7B0    pop         dword ptr fs:[0]
 0066F7B7    add         esp,0C
 0066F7BA    mov         eax,esi
 0066F7BC    pop         esi
 0066F7BD    pop         ebx
 0066F7BE    ret
*}
end;

//0066F834
function TModuleBalanceBoard.CreateValue(Identifier:string):TExpression;
begin
{*
 0066F834    push        ebp
 0066F835    mov         ebp,esp
 0066F837    push        ecx
 0066F838    push        ebx
 0066F839    mov         dword ptr [ebp-4],edx
 0066F83C    mov         ebx,eax
 0066F83E    mov         eax,dword ptr [ebp-4]
 0066F841    call        @UStrAddRef
 0066F846    xor         eax,eax
 0066F848    push        ebp
 0066F849    push        66F87E
 0066F84E    push        dword ptr fs:[eax]
 0066F851    mov         dword ptr fs:[eax],esp
 0066F854    mov         edx,dword ptr [ebp-4]
 0066F857    mov         eax,ebx
 0066F859    call        TPieModule.CreateValue
 0066F85E    mov         eax,dword ptr [ebp-4]
 0066F861    call        00654EA8
 0066F866    mov         ebx,eax
 0066F868    xor         eax,eax
 0066F86A    pop         edx
 0066F86B    pop         ecx
 0066F86C    pop         ecx
 0066F86D    mov         dword ptr fs:[eax],edx
 0066F870    push        66F885
 0066F875    lea         eax,[ebp-4]
 0066F878    call        @UStrClr
 0066F87D    ret
>0066F87E    jmp         @HandleFinally
>0066F883    jmp         0066F875
 0066F885    mov         eax,ebx
 0066F887    pop         ebx
 0066F888    pop         ecx
 0066F889    pop         ebp
 0066F88A    ret
*}
end;

//0066F88C
procedure TModuleBalanceBoard.GetFields;
begin
{*
 0066F88C    call        00654A98
 0066F891    ret
*}
end;

//0066F894
procedure TModuleBalanceBoard.GetGoodFields;
begin
{*
 0066F894    call        00654A98
 0066F899    ret
*}
end;

//0066F89C
procedure TModuleBalanceBoard.GetRange(blank:Boolean; min:Integer; max:Integer);
begin
{*
 0066F89C    push        ebp
 0066F89D    mov         ebp,esp
 0066F89F    mov         byte ptr [edx],1
 0066F8A2    mov         dword ptr [ecx],1
 0066F8A8    mov         eax,dword ptr [ebp+8]
 0066F8AB    mov         dword ptr [eax],14
 0066F8B1    pop         ebp
 0066F8B2    ret         4
*}
end;

//0066F8B8
procedure TModuleBalanceBoard.MonitorFrame;
begin
{*
 0066F8B8    push        ebp
 0066F8B9    mov         ebp,esp
 0066F8BB    xor         ecx,ecx
 0066F8BD    push        ecx
 0066F8BE    push        ecx
 0066F8BF    push        ecx
 0066F8C0    push        ecx
 0066F8C1    push        ebx
 0066F8C2    push        esi
 0066F8C3    push        edi
 0066F8C4    mov         dword ptr [ebp-8],eax
 0066F8C7    xor         eax,eax
 0066F8C9    push        ebp
 0066F8CA    push        66F9A5
 0066F8CF    push        dword ptr fs:[eax]
 0066F8D2    mov         dword ptr fs:[eax],esp
 0066F8D5    mov         eax,dword ptr [ebp-8]
 0066F8D8    cmp         byte ptr [eax+28],0;TModuleBalanceBoard.Monitoring:Boolean
>0066F8DC    je          0066F982
 0066F8E2    mov         eax,dword ptr [ebp-8]
 0066F8E5    mov         edx,dword ptr [eax]
 0066F8E7    call        dword ptr [edx+3C];TModuleBalanceBoard.Read
 0066F8EA    test        al,al
>0066F8EC    je          0066F982
 0066F8F2    call        0074BF10
 0066F8F7    mov         eax,dword ptr [eax+50]
 0066F8FA    mov         edi,dword ptr [eax+8]
 0066F8FD    dec         edi
 0066F8FE    test        edi,edi
>0066F900    jl          0066F97A
 0066F902    inc         edi
 0066F903    xor         esi,esi
 0066F905    call        0074BF10
 0066F90A    lea         edx,[esi+1]
 0066F90D    call        TWiimoteManager.GetBalanceBoard
 0066F912    mov         ebx,eax
 0066F914    test        ebx,ebx
>0066F916    je          0066F976
 0066F918    test        esi,esi
>0066F91A    jne         0066F92B
 0066F91C    lea         eax,[ebp-4]
 0066F91F    mov         edx,66F9C0;'Balance.'
 0066F924    call        @UStrLAsg
>0066F929    jmp         0066F950
 0066F92B    push        66F9E0;'Balance'
 0066F930    lea         edx,[ebp-0C]
 0066F933    lea         eax,[esi+1]
 0066F936    call        IntToStr
 0066F93B    push        dword ptr [ebp-0C]
 0066F93E    push        66F9FC;'.'
 0066F943    lea         eax,[ebp-4]
 0066F946    mov         edx,3
 0066F94B    call        @UStrCatN
 0066F950    mov         eax,ebx
 0066F952    call        TWiimoteObject.A
 0066F957    test        al,al
>0066F959    je          0066F976
 0066F95B    lea         eax,[ebp-10]
 0066F95E    mov         ecx,66FA0C;'Button'
 0066F963    mov         edx,dword ptr [ebp-4]
 0066F966    call        @UStrCat3
 0066F96B    mov         edx,dword ptr [ebp-10]
 0066F96E    mov         eax,dword ptr [ebp-8]
 0066F971    call        005E4F20
 0066F976    inc         esi
 0066F977    dec         edi
>0066F978    jne         0066F905
 0066F97A    mov         eax,dword ptr [ebp-8]
 0066F97D    call        005E509C
 0066F982    xor         eax,eax
 0066F984    pop         edx
 0066F985    pop         ecx
 0066F986    pop         ecx
 0066F987    mov         dword ptr fs:[eax],edx
 0066F98A    push        66F9AC
 0066F98F    lea         eax,[ebp-10]
 0066F992    mov         edx,2
 0066F997    call        @UStrArrayClr
 0066F99C    lea         eax,[ebp-4]
 0066F99F    call        @UStrClr
 0066F9A4    ret
>0066F9A5    jmp         @HandleFinally
>0066F9AA    jmp         0066F98F
 0066F9AC    pop         edi
 0066F9AD    pop         esi
 0066F9AE    pop         ebx
 0066F9AF    mov         esp,ebp
 0066F9B1    pop         ebp
 0066F9B2    ret
*}
end;

//0066FA1C
procedure TModuleBalanceBoard.PrepareForGUI;
begin
{*
 0066FA1C    ret
*}
end;

//0066FA20
procedure TModuleBalanceBoard.PrepareForMonitoring;
begin
{*
 0066FA20    ret
*}
end;

//0066FA24
function TModuleBalanceBoard.Read:Boolean;
begin
{*
 0066FA24    push        ebx
 0066FA25    cmp         byte ptr ds:[81ECBC],0;gvar_0081ECBC
>0066FA2C    jne         0066FA43
 0066FA2E    mov         bl,1
 0066FA30    call        0074BF10
 0066FA35    call        TWiimoteManager.ReadWiimotes
 0066FA3A    mov         byte ptr ds:[81ECBC],1;gvar_0081ECBC
>0066FA41    jmp         0066FA45
 0066FA43    mov         bl,1
 0066FA45    mov         eax,ebx
 0066FA47    pop         ebx
 0066FA48    ret
*}
end;

//0066FA4C
procedure TModuleBalanceBoard.StartCompiletime;
begin
{*
 0066FA4C    call        TPieModule.StartCompiletime
 0066FA51    cmp         byte ptr ds:[81ECBD],0;gvar_0081ECBD
>0066FA58    jne         0066FA6B
 0066FA5A    mov         byte ptr ds:[81ECBD],1;gvar_0081ECBD
 0066FA61    call        0074BF10
 0066FA66    call        TWiimoteManager.StartCompileTime
 0066FA6B    ret
*}
end;

//0066FA6C
procedure TModuleBalanceBoard.StartGUI;
begin
{*
 0066FA6C    call        0074BF10
 0066FA71    call        TWiimoteManager.StartGUI
 0066FA76    ret
*}
end;

//0066FA78
procedure TModuleBalanceBoard.StartMonitoring;
begin
{*
 0066FA78    push        ebx
 0066FA79    mov         ebx,eax
 0066FA7B    mov         byte ptr [ebx+28],1;TModuleBalanceBoard.Monitoring:Boolean
 0066FA7F    mov         eax,dword ptr [ebx+30];TModuleBalanceBoard.OldButtonsDown:TStringList
 0066FA82    mov         edx,dword ptr [eax]
 0066FA84    call        dword ptr [edx+44];TStringList.Clear
 0066FA87    mov         eax,dword ptr [ebx+2C];TModuleBalanceBoard.ButtonsDown:TStringList
 0066FA8A    mov         edx,dword ptr [eax]
 0066FA8C    call        dword ptr [edx+44];TStringList.Clear
 0066FA8F    pop         ebx
 0066FA90    ret
*}
end;

//0066FA94
procedure TModuleBalanceBoard.StartRuntime;
begin
{*
 0066FA94    call        TPieModule.StartRuntime
 0066FA99    call        0074BF10
 0066FA9E    call        TWiimoteManager.StartRuntime
 0066FAA3    ret
*}
end;

//0066FAA4
procedure TModuleBalanceBoard.StopCompiletime;
begin
{*
 0066FAA4    mov         byte ptr ds:[81ECBD],0;gvar_0081ECBD
 0066FAAB    call        TPieModule.StopCompiletime
 0066FAB0    ret
*}
end;

//0066FAB4
procedure TModuleBalanceBoard.StopGUI;
begin
{*
 0066FAB4    call        0074BF10
 0066FAB9    call        TWiimoteManager.StopGUI
 0066FABE    ret
*}
end;

//0066FAC0
procedure TModuleBalanceBoard.StopMonitoring;
begin
{*
 0066FAC0    mov         byte ptr [eax+28],0;TModuleBalanceBoard.Monitoring:Boolean
 0066FAC4    ret
*}
end;

//0066FAC8
procedure TModuleBalanceBoard.StopRuntime;
begin
{*
 0066FAC8    push        ebx
 0066FAC9    mov         ebx,eax
 0066FACB    call        0074BF10
 0066FAD0    call        TWiimoteManager.StopRuntime
 0066FAD5    mov         eax,ebx
 0066FAD7    call        TPieModule.StopRuntime
 0066FADC    pop         ebx
 0066FADD    ret
*}
end;

Initialization
//00781DC0
{*
 00781DC0    push        ebx
 00781DC1    push        esi
 00781DC2    push        edi
 00781DC3    sub         dword ptr ds:[81ECB8],1
>00781DCA    jae         00781E7B
 00781DD0    mov         dl,1
 00781DD2    mov         eax,[0064F980];TModuleWiimote
 00781DD7    call        TModuleWiimote.Create;TModuleWiimote.Create
 00781DDC    mov         [0081ECC0],eax;gvar_0081ECC0:TModuleWiimote
 00781DE1    mov         dl,1
 00781DE3    mov         eax,[0064FE60];TModuleNunchuk
 00781DE8    call        TModuleNunchuk.Create;TModuleNunchuk.Create
 00781DED    mov         ebx,eax
 00781DEF    mov         dl,1
 00781DF1    mov         eax,[00650340];TModuleClassic
 00781DF6    call        TModuleClassic.Create;TModuleClassic.Create
 00781DFB    mov         esi,eax
 00781DFD    mov         dl,1
 00781DFF    mov         eax,[00650820];TModuleGuitar
 00781E04    call        TModuleGuitar.Create;TModuleGuitar.Create
 00781E09    mov         edi,eax
 00781E0B    mov         dl,1
 00781E0D    mov         eax,[00650D00];TModuleDrums
 00781E12    call        TModuleDrums.Create;TModuleDrums.Create
 00781E17    mov         [0081ECC4],eax;gvar_0081ECC4:TModuleDrums
 00781E1C    mov         dl,1
 00781E1E    mov         eax,[006511E0];TModuleTurntable
 00781E23    call        TModuleTurntable.Create;TModuleTurntable.Create
 00781E28    mov         [0081ECC8],eax;gvar_0081ECC8:TModuleTurntable
 00781E2D    mov         dl,1
 00781E2F    mov         eax,[006516C8];TModuleBalanceBoard
 00781E34    call        TModuleBalanceBoard.Create;TModuleBalanceBoard.Create
 00781E39    mov         [0081ECCC],eax;gvar_0081ECCC:TModuleBalanceBoard
 00781E3E    mov         eax,[0081ECC0];gvar_0081ECC0:TModuleWiimote
 00781E43    call        005E31AC
 00781E48    mov         eax,ebx
 00781E4A    call        005E31AC
 00781E4F    mov         eax,esi
 00781E51    call        005E31AC
 00781E56    mov         eax,edi
 00781E58    call        005E31AC
 00781E5D    mov         eax,[0081ECC4];gvar_0081ECC4:TModuleDrums
 00781E62    call        005E31AC
 00781E67    mov         eax,[0081ECC8];gvar_0081ECC8:TModuleTurntable
 00781E6C    call        005E31AC
 00781E71    mov         eax,[0081ECCC];gvar_0081ECCC:TModuleBalanceBoard
 00781E76    call        005E31AC
 00781E7B    pop         edi
 00781E7C    pop         esi
 00781E7D    pop         ebx
 00781E7E    ret
*}
Finalization
end.